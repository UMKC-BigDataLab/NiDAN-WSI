Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/31 22:09:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 22:09:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 22:09:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 22:09:36 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/31 22:09:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 22:09:49 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170531220938-0718).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.392743428 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (37 + 78) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.977934635 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.757639276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (44 + 69) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:===========================>                           (56 + 57) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.890279275 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.750228625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:========================================>              (83 + 30) / 113][Stage 4:============================================>          (91 + 22) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:===============================================>       (99 + 15) / 114][Stage 5:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.630672665 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.656877693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:================================>                      (66 + 47) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:=============================================>         (93 + 20) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:==================================>                    (71 + 43) / 114][Stage 7:======================================>                (79 + 35) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.720977953 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.610352939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:==================================>                    (70 + 43) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:===============================================>       (98 + 15) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:=============================>                         (62 + 52) / 114][Stage 9:=================================>                     (70 + 44) / 114][Stage 9:======================================>                (80 + 34) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.487553845 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58414604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:===========================>                          (58 + 55) / 113][Stage 10:================================>                     (67 + 46) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:=====================================================>(111 + 2) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:==============================>                       (64 + 50) / 114][Stage 11:===================================>                  (75 + 39) / 114][Stage 11:========================================>             (85 + 29) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:==================================================>   (106 + 8) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.327022918 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515729548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:=================================>                    (71 + 42) / 113][Stage 12:=======================================>              (82 + 31) / 113][Stage 12:==============================================>       (97 + 16) / 113][Stage 12:==================================================>   (105 + 8) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:===============================>                      (66 + 48) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:==================================================>   (106 + 8) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.628329247 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566697536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:>                                                       (0 + 0) / 113][Stage 14:===========================>                          (57 + 56) / 113][Stage 14:============================>                         (60 + 53) / 113][Stage 14:=================================>                    (70 + 43) / 113][Stage 14:=========================================>            (86 + 27) / 113][Stage 14:==============================================>      (100 + 13) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:=============================>                        (62 + 52) / 114][Stage 15:================================>                     (69 + 45) / 114][Stage 15:========================================>             (85 + 29) / 114][Stage 15:===============================================>     (103 + 11) / 114][Stage 15:==================================================>   (107 + 7) / 114][Stage 15:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.355266525 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507998619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:==============================================>       (98 + 15) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:==================================>                   (73 + 41) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.16218848 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 1.276180421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:===============================>                      (66 + 47) / 113][Stage 18:=======================================>              (83 + 30) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:============================>                         (61 + 53) / 114][Stage 19:====================================>                 (76 + 38) / 114][Stage 19:===========================================>          (92 + 22) / 114][Stage 19:=================================================>    (105 + 9) / 114][Stage 19:=====================================================>(112 + 2) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.451545697 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511468746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:===============================>                      (66 + 47) / 113][Stage 20:===========================================>          (91 + 22) / 113][Stage 20:==================================================>   (106 + 7) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:================================>                     (68 + 46) / 114][Stage 21:===========================================>          (92 + 22) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.590338967 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529395298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:=============================>                        (61 + 52) / 113][Stage 22:===================================>                  (75 + 38) / 113][Stage 22:===========================================>          (91 + 22) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:=============================>                        (62 + 52) / 114][Stage 23:===================================>                  (74 + 40) / 114][Stage 23:=============================================>        (95 + 19) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.725551073 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 1.429581686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (60 + 53) / 113][Stage 24:===============================>                      (65 + 48) / 113][Stage 24:=========================================>            (87 + 26) / 113][Stage 24:==================================================>   (105 + 8) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:===============================>                      (67 + 47) / 114][Stage 25:====================================>                 (78 + 36) / 114][Stage 25:===========================================>          (91 + 23) / 114][Stage 25:==============================================>       (99 + 15) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.821394518 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489688352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:==============================>                       (63 + 50) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:===================================================>  (108 + 5) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:==============================>                       (64 + 50) / 114][Stage 27:========================================>             (85 + 29) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (111 + 3) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.504417151 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476167806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (60 + 53) / 113][Stage 28:==================================>                   (72 + 41) / 113][Stage 28:=========================================>            (86 + 27) / 113][Stage 28:===============================================>     (101 + 12) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:==============================>                       (64 + 50) / 114][Stage 29:===========================================>          (91 + 23) / 114][Stage 29:==============================================>      (100 + 14) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.094191395 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489566947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:=============================>                        (61 + 52) / 113][Stage 30:===================================>                  (75 + 38) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:============================>                         (61 + 53) / 114][Stage 31:==================================>                   (73 + 41) / 114][Stage 31:==============================================>      (100 + 14) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.364560922 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468151432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:======================================>               (80 + 33) / 113][Stage 32:===============================================>      (99 + 14) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:================================>                     (68 + 46) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:====================================================> (111 + 3) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.104202133 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479663178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:==============================>                       (64 + 49) / 113][Stage 34:=======================================>              (82 + 31) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:================================>                     (68 + 46) / 114][Stage 35:=======================================>              (83 + 31) / 114][Stage 35:==============================================>      (101 + 13) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.345130011 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505682936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=================================>                    (71 + 42) / 113][Stage 36:=========================================>            (86 + 27) / 113][Stage 36:===================================================>  (108 + 5) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:====================================>                 (76 + 38) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:==================================================>   (107 + 7) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.598963962 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476906254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:=================================>                    (70 + 43) / 113][Stage 38:=========================================>            (86 + 27) / 113][Stage 38:===================================================>  (108 + 5) / 113]                                                                                [Stage 39:============================>                         (61 + 53) / 114][Stage 39:===================================>                  (75 + 39) / 114][Stage 39:=============================================>        (96 + 18) / 114][Stage 39:====================================================> (111 + 3) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.577723692 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484588586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (60 + 53) / 113][Stage 40:=================================>                    (71 + 42) / 113][Stage 40:=========================================>            (87 + 26) / 113][Stage 40:==================================================>   (105 + 8) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:==================================>                   (72 + 42) / 114][Stage 41:========================================>             (85 + 29) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:=====================================================>(112 + 2) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.12649762 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=248", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=248,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469737778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:==============================>                       (63 + 50) / 113][Stage 42:========================================>             (85 + 28) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:===============================>                      (67 + 47) / 114][Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.442408372 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442747491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:===============================>                      (65 + 48) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:=================================================>    (104 + 9) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:=================================>                    (71 + 43) / 114][Stage 45:==============================================>       (98 + 16) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.128881533 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455872696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:===============================>                      (65 + 48) / 113][Stage 46:=======================================>              (82 + 31) / 113][Stage 46:==================================================>   (106 + 7) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:============================>                         (61 + 53) / 114][Stage 47:==================================>                   (72 + 42) / 114][Stage 47:===========================================>          (92 + 22) / 114][Stage 47:==================================================>   (106 + 8) / 114][Stage 47:===================================================>  (108 + 6) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.684559919 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466983222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:==============================>                       (63 + 50) / 113][Stage 48:=======================================>              (82 + 31) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:================================>                     (69 + 45) / 114][Stage 49:======================================>               (81 + 33) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.292161002 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443836748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=============================>                        (62 + 51) / 113][Stage 50:================================>                     (69 + 44) / 113][Stage 50:==========================================>           (88 + 25) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:==========================================>           (89 + 25) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:====================================================> (111 + 3) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.963639402 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 1.273631338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (60 + 53) / 113][Stage 52:=================================>                    (71 + 42) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:===================================================>  (108 + 5) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:===============================>                      (66 + 48) / 114][Stage 53:=====================================>                (80 + 34) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.192040546 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454201862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:=============================>                        (61 + 52) / 113][Stage 54:==================================>                   (73 + 40) / 113][Stage 54:==========================================>           (88 + 25) / 113][Stage 54:==================================================>   (106 + 7) / 113]                                                                                [Stage 55:=============================>                        (63 + 51) / 114][Stage 55:====================================>                 (77 + 37) / 114][Stage 55:=============================================>        (95 + 19) / 114][Stage 55:==================================================>   (107 + 7) / 114][Stage 55:=====================================================>(112 + 2) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.340966584 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431857125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:===============================>                      (65 + 48) / 113][Stage 56:=======================================>              (82 + 31) / 113][Stage 56:=============================================>        (96 + 17) / 113][Stage 56:====================================================> (110 + 3) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:===============================>                      (67 + 47) / 114][Stage 57:====================================>                 (77 + 37) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.078459799 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=249", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=249,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448046222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (60 + 53) / 113][Stage 58:===============================>                      (66 + 47) / 113][Stage 58:=======================================>              (83 + 30) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:====================================================> (110 + 3) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===================================>                  (74 + 40) / 114][Stage 59:=============================================>        (96 + 18) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.885989389 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449844724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:==========================================>           (88 + 25) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:====================================================> (110 + 3) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:===============================>                      (67 + 47) / 114][Stage 61:========================================>             (86 + 28) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:====================================================> (111 + 3) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.903351892 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438979828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (64 + 49) / 113][Stage 62:=======================================>              (83 + 30) / 113][Stage 62:===============================================>     (101 + 12) / 113][Stage 62:=====================================================>(111 + 2) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:===============================>                      (67 + 47) / 114][Stage 63:======================================>               (81 + 33) / 114][Stage 63:==============================================>      (100 + 14) / 114][Stage 63:===================================================>  (109 + 5) / 114][Stage 63:=====================================================>(112 + 2) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.691500966 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460003419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:=============================>                        (62 + 51) / 113][Stage 64:==================================>                   (72 + 41) / 113][Stage 64:============================================>         (94 + 19) / 113][Stage 64:===================================================>  (108 + 5) / 113]                                                                                [Stage 65:============================>                         (61 + 53) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:==================================================>   (106 + 8) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.66649781 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454006733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:===============================>                      (65 + 48) / 113][Stage 66:========================================>             (84 + 29) / 113][Stage 66:==============================================>       (98 + 15) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:===============================>                      (67 + 47) / 114][Stage 67:======================================>               (82 + 32) / 114][Stage 67:==============================================>      (100 + 14) / 114][Stage 67:===================================================>  (109 + 5) / 114][Stage 67:=====================================================>(112 + 2) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.676522312 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431801057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:==================================>                   (72 + 41) / 113][Stage 68:============================================>         (94 + 19) / 113][Stage 68:===================================================>  (107 + 6) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:=============================>                        (62 + 52) / 114][Stage 69:====================================>                 (76 + 38) / 114][Stage 69:=============================================>        (97 + 17) / 114][Stage 69:===============================================>     (103 + 11) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.97980938 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410846836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (60 + 53) / 113][Stage 70:================================>                     (69 + 44) / 113][Stage 70:=========================================>            (87 + 26) / 113][Stage 70:==================================================>   (105 + 8) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:================================>                     (69 + 45) / 114][Stage 71:==========================================>           (89 + 25) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:=====================================================>(112 + 2) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.995880313 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414997455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:============================>                         (60 + 53) / 113][Stage 72:================================>                     (69 + 44) / 113][Stage 72:===========================================>          (90 + 23) / 113][Stage 72:=================================================>    (104 + 9) / 113][Stage 72:===================================================>  (107 + 6) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:================================>                     (69 + 45) / 114][Stage 73:===========================================>          (92 + 22) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:====================================================> (110 + 4) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.53067753 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414218342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:===============================>                      (66 + 47) / 113][Stage 74:====================================>                 (77 + 36) / 113][Stage 74:===============================================>      (99 + 14) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:===============================>                      (67 + 47) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:===============================================>     (103 + 11) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.144101273 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423134572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (63 + 50) / 113][Stage 76:================================>                     (67 + 46) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:===================================================>  (108 + 5) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=============================>                        (63 + 51) / 114][Stage 77:=========================================>            (88 + 26) / 114][Stage 77:==============================================>      (101 + 13) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.754475558 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417359806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:===============================>                      (65 + 48) / 113][Stage 78:====================================>                 (76 + 37) / 113][Stage 78:===============================================>      (99 + 14) / 113][Stage 78:====================================================> (109 + 4) / 113]                                                                                [Stage 79:============================>                         (61 + 53) / 114][Stage 79:==================================>                   (72 + 42) / 114][Stage 79:=======================================>              (83 + 31) / 114][Stage 79:===============================================>     (103 + 11) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.282443132 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434178587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:====================================>                 (77 + 36) / 113][Stage 80:==============================================>       (98 + 15) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:=============================>                        (63 + 51) / 114][Stage 81:====================================>                 (77 + 37) / 114][Stage 81:==============================================>       (99 + 15) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.359028751 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411481349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:===============================>                      (65 + 48) / 113][Stage 82:=======================================>              (82 + 31) / 113][Stage 82:==================================================>   (106 + 7) / 113]                                                                                [Stage 83:=============================>                        (62 + 52) / 114][Stage 83:==================================>                   (73 + 41) / 114][Stage 83:==========================================>           (89 + 25) / 114][Stage 83:================================================>    (104 + 10) / 114][Stage 83:====================================================> (111 + 3) / 114][Stage 83:=====================================================>(112 + 2) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.144243277 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.873039912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:============================>                         (59 + 54) / 113][Stage 84:=================================>                    (70 + 43) / 113][Stage 84:=======================================>              (82 + 31) / 113][Stage 84:===============================================>     (102 + 11) / 113]                                                                                [Stage 85:===========================>                          (58 + 56) / 114][Stage 85:============================>                         (60 + 54) / 114][Stage 85:===============================>                      (66 + 48) / 114][Stage 85:=======================================>              (83 + 31) / 114][Stage 85:===============================================>     (103 + 11) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.564276297 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41129534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:==================================>                   (72 + 41) / 113][Stage 86:========================================>             (84 + 29) / 113][Stage 86:===============================================>     (102 + 11) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:==============================>                       (65 + 49) / 114][Stage 87:=====================================>                (80 + 34) / 114][Stage 87:===============================================>     (102 + 12) / 114][Stage 87:===================================================>  (108 + 6) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.226979692 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403849316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (62 + 51) / 113][Stage 88:==================================>                   (73 + 40) / 113][Stage 88:============================================>         (94 + 19) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:==================================>                   (72 + 42) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:================================================>    (104 + 10) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.795499054 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390198321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==============================>                       (63 + 50) / 113][Stage 90:===================================>                  (74 + 39) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:====================================================> (110 + 3) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:================================>                     (68 + 46) / 114][Stage 91:=====================================>                (80 + 34) / 114][Stage 91:================================================>    (104 + 10) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.780497629 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402329027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:=================================>                    (70 + 43) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:================================>                     (68 + 46) / 114][Stage 93:=======================================>              (83 + 31) / 114][Stage 93:===============================================>     (102 + 12) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.951941296 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448841343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:=================================>                    (70 + 43) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:==============================>                       (64 + 50) / 114][Stage 95:===================================>                  (74 + 40) / 114][Stage 95:============================================>         (94 + 20) / 114][Stage 95:==================================================>   (107 + 7) / 114][Stage 95:====================================================> (111 + 3) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.492589918 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408219228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (60 + 53) / 113][Stage 96:===============================>                      (65 + 48) / 113][Stage 96:========================================>             (85 + 28) / 113][Stage 96:====================================================> (109 + 4) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:==============================>                       (65 + 49) / 114][Stage 97:======================================>               (82 + 32) / 114][Stage 97:=================================================>    (105 + 9) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(112 + 2) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.184438334 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393421374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:================================>                     (68 + 45) / 113][Stage 98:=====================================>                (79 + 34) / 113][Stage 98:===============================================>     (101 + 12) / 113][Stage 98:====================================================> (109 + 4) / 113]                                                                                [Stage 99:=============================>                        (62 + 52) / 114][Stage 99:====================================>                 (76 + 38) / 114][Stage 99:=================================================>    (105 + 9) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(112 + 2) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.616356909 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395131177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:=============================>                       (62 + 51) / 113][Stage 100:==================================>                  (74 + 39) / 113][Stage 100:==============================================>      (99 + 14) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:==============================>                      (66 + 48) / 114][Stage 101:=====================================>               (80 + 34) / 114][Stage 101:=============================================>      (100 + 14) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(112 + 2) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.353154796 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399358376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:==============================>                      (64 + 49) / 113][Stage 102:==================================>                  (73 + 40) / 113][Stage 102:============================================>        (95 + 18) / 113][Stage 102:================================================>    (104 + 9) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:==================================>                  (74 + 40) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:==================================================>  (108 + 6) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.841235102 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384474761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:==============================>                      (64 + 49) / 113][Stage 104:====================================>                (77 + 36) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:================================>                    (70 + 44) / 114][Stage 105:=======================================>             (86 + 28) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.390013488 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.915200669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:============================>                        (61 + 52) / 113][Stage 106:=====================================>               (79 + 34) / 113][Stage 106:============================================>        (94 + 19) / 113][Stage 106:=================================================>   (106 + 7) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:============================>                        (61 + 53) / 114][Stage 107:=====================================>               (80 + 34) / 114][Stage 107:============================================>        (96 + 18) / 114][Stage 107:==================================================>  (108 + 6) / 114][Stage 107:====================================================>(112 + 2) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.361878112 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392493241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:==============================>                      (64 + 49) / 113][Stage 108:========================================>            (87 + 26) / 113][Stage 108:=================================================>   (106 + 7) / 113]                                                                                [Stage 109:=============================>                       (64 + 50) / 114][Stage 109:===================================>                 (77 + 37) / 114][Stage 109:==============================================>      (99 + 15) / 114][Stage 109:==================================================>  (109 + 5) / 114][Stage 109:====================================================>(112 + 2) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.024719707 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383558336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:=================================>                   (71 + 42) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:===================================================> (109 + 4) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:===============================>                     (68 + 46) / 114][Stage 111:====================================>                (78 + 36) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:===================================================> (111 + 3) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.037315911 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388872314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:================================>                    (69 + 44) / 113][Stage 112:=======================================>             (84 + 29) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:============================>                        (61 + 53) / 114][Stage 113:================================>                    (69 + 45) / 114][Stage 113:=========================================>           (89 + 25) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:===================================================> (111 + 3) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.421522396 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=73", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=73,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386274961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:==========================================>          (91 + 22) / 113][Stage 114:=================================================>   (106 + 7) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:=================================>                   (72 + 42) / 114][Stage 115:==========================================>          (91 + 23) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:===================================================> (110 + 4) / 114][Stage 115:====================================================>(112 + 2) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.593074135 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399461789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (60 + 53) / 113][Stage 116:===================================>                 (75 + 38) / 113][Stage 116:============================================>        (94 + 19) / 113][Stage 116:==================================================>  (108 + 5) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:============================>                        (62 + 52) / 114][Stage 117:==================================>                  (74 + 40) / 114][Stage 117:=========================================>           (90 + 24) / 114][Stage 117:================================================>    (105 + 9) / 114][Stage 117:===================================================> (110 + 4) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.88574952 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398402058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:==============================>                      (65 + 48) / 113][Stage 118:=====================================>               (80 + 33) / 113][Stage 118:==============================================>     (101 + 12) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:===============================>                     (67 + 47) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:==================================================>  (108 + 6) / 114][Stage 119:===================================================> (111 + 3) / 114][Stage 119:====================================================>(112 + 2) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.516656365 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395351926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:============================>                        (61 + 52) / 113][Stage 120:===================================>                 (76 + 37) / 113][Stage 120:==============================================>     (102 + 11) / 113]                                                                                [Stage 121:============================>                        (62 + 52) / 114][Stage 121:==================================>                  (74 + 40) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:==================================================>  (108 + 6) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.615529418 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38776384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:=================================>                   (71 + 42) / 113][Stage 122:============================================>        (94 + 19) / 113][Stage 122:===================================================> (110 + 3) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:================================>                    (69 + 45) / 114][Stage 123:=======================================>             (85 + 29) / 114][Stage 123:==============================================>     (102 + 12) / 114][Stage 123:===================================================> (110 + 4) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.740638451 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394517816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:===============================>                     (68 + 45) / 113][Stage 124:========================================>            (86 + 27) / 113][Stage 124:=================================================>   (106 + 7) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:==============================>                      (66 + 48) / 114][Stage 125:=======================================>             (86 + 28) / 114][Stage 125:==================================================>  (108 + 6) / 114][Stage 125:===================================================> (111 + 3) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.491060329 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.731371135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:=============================>                       (62 + 51) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:==================================================>  (108 + 5) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:=============================>                       (64 + 50) / 114][Stage 127:=======================================>             (84 + 30) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.120584806 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385689058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:==============================>                      (65 + 48) / 113][Stage 128:========================================>            (87 + 26) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:===================================>                 (76 + 38) / 114][Stage 129:========================================>            (88 + 26) / 114][Stage 129:===============================================>    (104 + 10) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.2754923 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386339721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:======================================>              (83 + 30) / 113][Stage 130:=============================================>       (98 + 15) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:================================>                    (70 + 44) / 114][Stage 131:=========================================>           (90 + 24) / 114][Stage 131:===============================================>    (104 + 10) / 114][Stage 131:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.540294499 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382324791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===============================>                     (68 + 45) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:==============================================>     (101 + 12) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:=============================>                       (63 + 51) / 114][Stage 133:=====================================>               (81 + 33) / 114][Stage 133:==============================================>     (101 + 13) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.505669153 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388084069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:===============================>                     (68 + 45) / 113][Stage 134:========================================>            (86 + 27) / 113][Stage 134:=================================================>   (106 + 7) / 113]                                                                                [Stage 135:============================>                        (62 + 52) / 114][Stage 135:===================================>                 (76 + 38) / 114][Stage 135:===========================================>         (94 + 20) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.131451306 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386748155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:=============================>                       (63 + 50) / 113][Stage 136:====================================>                (78 + 35) / 113][Stage 136:==============================================>     (101 + 12) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:==================================>                  (74 + 40) / 114][Stage 137:===========================================>         (93 + 21) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:===================================================> (111 + 3) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.817955048 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399675164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:===============================>                     (68 + 45) / 113][Stage 138:=======================================>             (84 + 29) / 113][Stage 138:=================================================>   (106 + 7) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:========================================>            (87 + 27) / 114][Stage 139:=============================================>       (98 + 16) / 114][Stage 139:================================================>    (105 + 9) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.590595334 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388512161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=============================>                       (63 + 50) / 113][Stage 140:===================================>                 (76 + 37) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:==============================>                      (65 + 49) / 114][Stage 141:======================================>              (83 + 31) / 114][Stage 141:===========================================>         (94 + 20) / 114][Stage 141:==============================================>     (101 + 13) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.500364555 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388370989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:========================================>            (87 + 26) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:===========================================>         (94 + 20) / 114][Stage 143:==================================================>  (109 + 5) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:====================================================>(112 + 2) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.632719997 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386342896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:============================>                        (61 + 52) / 113][Stage 144:================================>                    (69 + 44) / 113][Stage 144:==========================================>          (91 + 22) / 113][Stage 144:================================================>    (104 + 9) / 113][Stage 144:===================================================> (110 + 3) / 113]                                                                                [Stage 145:============================>                        (62 + 52) / 114][Stage 145:===================================>                 (76 + 38) / 114][Stage 145:============================================>        (96 + 18) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.325021302 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386149099 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (61 + 52) / 113][Stage 146:================================>                    (69 + 44) / 113][Stage 146:============================================>        (94 + 19) / 113][Stage 146:==================================================>  (107 + 6) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:==============================>                      (66 + 48) / 114][Stage 147:=====================================>               (81 + 33) / 114][Stage 147:==============================================>      (99 + 15) / 114][Stage 147:==================================================>  (109 + 5) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.424151076 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385499024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=============================>                       (63 + 50) / 113][Stage 148:=================================>                   (72 + 41) / 113][Stage 148:============================================>        (94 + 19) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:==============================>                      (66 + 48) / 114][Stage 149:====================================>                (78 + 36) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.937740647 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382167632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:=================================>                   (71 + 42) / 113][Stage 150:===========================================>         (92 + 21) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:============================>                        (62 + 52) / 114][Stage 151:=================================>                   (73 + 41) / 114][Stage 151:=======================================>             (86 + 28) / 114][Stage 151:==============================================>     (103 + 11) / 114][Stage 151:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.6259142 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390885707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:============================>                        (61 + 52) / 113][Stage 152:======================================>              (82 + 31) / 113][Stage 152:================================================>    (104 + 9) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:===============================>                     (67 + 47) / 114][Stage 153:==========================================>          (92 + 22) / 114][Stage 153:===============================================>    (104 + 10) / 114][Stage 153:===================================================> (110 + 4) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.474018044 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389220252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:==============================>                      (66 + 47) / 113][Stage 154:========================================>            (86 + 27) / 113][Stage 154:=================================================>   (106 + 7) / 113]                                                                                [Stage 155:============================>                        (61 + 53) / 114][Stage 155:==============================>                      (66 + 48) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:=============================================>      (100 + 14) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.100709137 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387558639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:==============================>                      (66 + 47) / 113][Stage 156:=======================================>             (84 + 29) / 113][Stage 156:==============================================>     (101 + 12) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:==============================>                      (66 + 48) / 114][Stage 157:====================================>                (79 + 35) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.128284649 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392922017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:================================>                    (70 + 43) / 113][Stage 158:========================================>            (87 + 26) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:===================================================> (110 + 3) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:===============================>                     (67 + 47) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:=================================================>   (107 + 7) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.015592816 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405088749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:=================================>                   (71 + 42) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:==================================================>  (108 + 5) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:=================================>                   (71 + 43) / 114][Stage 161:===========================================>         (93 + 21) / 114][Stage 161:==================================================>  (108 + 6) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.884916849 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39076143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (60 + 53) / 113][Stage 162:==============================>                      (66 + 47) / 113][Stage 162:=====================================>               (81 + 32) / 113][Stage 162:==============================================>     (100 + 13) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:===============================>                     (68 + 46) / 114][Stage 163:=======================================>             (85 + 29) / 114][Stage 163:===============================================>    (104 + 10) / 114][Stage 163:===================================================> (110 + 4) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.886059249 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370267195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:=================================>                   (72 + 41) / 113][Stage 164:=======================================>             (85 + 28) / 113][Stage 164:================================================>    (104 + 9) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:==========================================>          (91 + 23) / 114][Stage 165:=================================================>   (106 + 8) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.41343711 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386060582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:============================>                        (60 + 53) / 113][Stage 166:==============================>                      (66 + 47) / 113][Stage 166:========================================>            (87 + 26) / 113][Stage 166:==================================================>  (108 + 5) / 113]                                                                                [Stage 167:============================>                        (62 + 52) / 114][Stage 167:==================================>                  (75 + 39) / 114][Stage 167:==============================================>      (99 + 15) / 114][Stage 167:====================================================>(112 + 2) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.098221521 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407672104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:=============================>                       (62 + 51) / 113][Stage 168:===================================>                 (76 + 37) / 113][Stage 168:============================================>        (94 + 19) / 113][Stage 168:===================================================> (109 + 4) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (59 + 55) / 114][Stage 169:=============================>                       (64 + 50) / 114][Stage 169:=====================================>               (81 + 33) / 114][Stage 169:==============================================>     (101 + 13) / 114][Stage 169:===================================================> (110 + 4) / 114][Stage 169:====================================================>(112 + 2) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.785003868 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390706526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (65 + 48) / 113][Stage 170:======================================>              (82 + 31) / 113][Stage 170:=============================================>       (97 + 16) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:================================>                    (69 + 45) / 114][Stage 171:=======================================>             (84 + 30) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.614236594 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378744703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=============================>                       (62 + 51) / 113][Stage 172:================================>                    (70 + 43) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:===================================================> (110 + 3) / 113]                                                                                [Stage 173:=============================>                       (63 + 51) / 114][Stage 173:====================================>                (78 + 36) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:===================================================> (110 + 4) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.072177926 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382387983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:================================>                    (69 + 44) / 113][Stage 174:===========================================>         (93 + 20) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:===============================>                     (68 + 46) / 114][Stage 175:====================================>                (78 + 36) / 114][Stage 175:=============================================>      (100 + 14) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:==================================================>  (108 + 6) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.075718621 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38302079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:==============================>                      (66 + 47) / 113][Stage 176:=====================================>               (81 + 32) / 113][Stage 176:==============================================>     (101 + 12) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:===============================>                     (68 + 46) / 114][Stage 177:=====================================>               (80 + 34) / 114][Stage 177:=============================================>       (97 + 17) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.194557365 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389063248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:==============================>                      (66 + 47) / 113][Stage 178:======================================>              (83 + 30) / 113][Stage 178:==============================================>      (99 + 14) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:=============================>                       (64 + 50) / 114][Stage 179:====================================>                (78 + 36) / 114][Stage 179:=============================================>       (98 + 16) / 114][Stage 179:==================================================>  (108 + 6) / 114][Stage 179:===================================================> (111 + 3) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.44502145 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40192626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:============================>                        (61 + 52) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:==============================================>      (99 + 14) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:=============================>                       (63 + 51) / 114][Stage 181:=================================>                   (73 + 41) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:=================================================>   (106 + 8) / 114][Stage 181:====================================================>(112 + 2) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.730623093 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414636992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (60 + 53) / 113][Stage 182:==================================>                  (73 + 40) / 113][Stage 182:==========================================>          (90 + 23) / 113][Stage 182:==================================================>  (107 + 6) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:================================>                    (69 + 45) / 114][Stage 183:=======================================>             (85 + 29) / 114][Stage 183:=================================================>   (106 + 8) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.579297448 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396259154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:==============================>                      (64 + 49) / 113][Stage 184:====================================>                (78 + 35) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:================================>                    (69 + 45) / 114][Stage 185:=========================================>           (89 + 25) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:=================================================>   (107 + 7) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.826866265 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379181913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:=================================>                   (71 + 42) / 113][Stage 186:==========================================>          (90 + 23) / 113][Stage 186:===================================================> (109 + 4) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:================================>                    (70 + 44) / 114][Stage 187:========================================>            (88 + 26) / 114][Stage 187:===============================================>    (104 + 10) / 114][Stage 187:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.504385455 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=250", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=250,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383890933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:============================>                        (60 + 53) / 113][Stage 188:=================================================>   (106 + 7) / 113]                                                                                [Stage 189:==============================>                      (65 + 49) / 114][Stage 189:=====================================>               (80 + 34) / 114][Stage 189:=============================================>       (97 + 17) / 114][Stage 189:===================================================> (110 + 4) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.268635001 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382050359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:==============================>                      (64 + 49) / 113][Stage 190:=====================================>               (79 + 34) / 113][Stage 190:==============================================>     (100 + 13) / 113][Stage 190:==================================================>  (107 + 6) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:================================>                    (70 + 44) / 114][Stage 191:==========================================>          (92 + 22) / 114][Stage 191:=================================================>   (107 + 7) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(112 + 2) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.234005726 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379895245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:==============================>                      (65 + 48) / 113][Stage 192:====================================>                (77 + 36) / 113][Stage 192:===========================================>         (92 + 21) / 113][Stage 192:=================================================>   (106 + 7) / 113]                                                                                [Stage 193:============================>                        (61 + 53) / 114][Stage 193:==================================>                  (75 + 39) / 114][Stage 193:============================================>        (96 + 18) / 114][Stage 193:==================================================>  (108 + 6) / 114][Stage 193:===================================================> (111 + 3) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.270772958 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405784326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=============================>                       (63 + 50) / 113][Stage 194:=======================================>             (85 + 28) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:==============================>                      (65 + 49) / 114][Stage 195:=================================>                   (73 + 41) / 114][Stage 195:===========================================>         (94 + 20) / 114][Stage 195:==================================================>  (108 + 6) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.545060484 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390478164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:================================>                    (70 + 43) / 113][Stage 196:=========================================>           (88 + 25) / 113][Stage 196:=================================================>   (105 + 8) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:==============================>                      (66 + 48) / 114][Stage 197:=====================================>               (80 + 34) / 114][Stage 197:=============================================>      (100 + 14) / 114][Stage 197:==================================================>  (108 + 6) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.161956653 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411697631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:==============================>                      (66 + 47) / 113][Stage 198:=====================================>               (81 + 32) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:=============================>                       (63 + 51) / 114][Stage 199:==================================>                  (74 + 40) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.506406982 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384261698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (59 + 54) / 113][Stage 200:=================================>                   (71 + 42) / 113][Stage 200:========================================>            (87 + 26) / 113][Stage 200:=================================================>   (105 + 8) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:============================>                        (62 + 52) / 114][Stage 201:=================================>                   (72 + 42) / 114][Stage 201:========================================>            (88 + 26) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:====================================================>(112 + 2) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.577026636 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/31 22:22:20 ERROR scheduler.LiveListenerBus: SparkListenerBus has already stopped! Dropping event SparkListenerExecutorMetricsUpdate(6,WrappedArray())

real	13m2.415s
user	12m35.544s
sys	4m15.748s
