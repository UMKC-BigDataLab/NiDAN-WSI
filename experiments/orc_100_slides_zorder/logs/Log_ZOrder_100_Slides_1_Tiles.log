Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/06/01 04:40:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 04:40:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 04:40:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 04:40:30 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/06/01 04:40:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 04:40:42 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170601044031-0755).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.411206913 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:================>                                      (34 + 81) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.457087696 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=252", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=252,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.769838653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================>                                     (36 + 77) / 113][Stage 2:===================>                                   (41 + 72) / 113][Stage 2:======================>                                (47 + 66) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:===================================================>   (106 + 7) / 113]                                                                                [Stage 3:============================>                          (59 + 55) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:============================================>          (93 + 21) / 114][Stage 3:==================================================>    (105 + 9) / 114]                                                                                Time elapsed: 4.587950637 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596361536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:====================================>                  (77 + 38) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:========================================>              (85 + 30) / 115][Stage 4:===========================================>           (90 + 25) / 115][Stage 4:===============================================>      (101 + 14) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:======================================>                (81 + 35) / 116][Stage 5:========================================>              (85 + 31) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:=============================================>         (95 + 21) / 116][Stage 5:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.720296094 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.631301899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===============================>                       (68 + 50) / 118][Stage 6:=================================>                     (71 + 47) / 118][Stage 6:==================================>                    (75 + 43) / 118][Stage 6:======================================>                (83 + 35) / 118][Stage 6:=========================================>             (90 + 28) / 118][Stage 6:===========================================>           (94 + 24) / 118][Stage 6:===============================================>      (103 + 15) / 118][Stage 6:=====================================================> (115 + 3) / 118]                                                                                [Stage 7:==================================>                    (74 + 45) / 119][Stage 7:====================================>                  (78 + 41) / 119][Stage 7:=======================================>               (85 + 34) / 119][Stage 7:==========================================>            (92 + 27) / 119][Stage 7:=============================================>        (100 + 19) / 119][Stage 7:=================================================>    (109 + 10) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.431587158 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.629248413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:========================>                              (54 + 66) / 120][Stage 8:===========================>                           (60 + 60) / 120][Stage 8:=============================>                         (64 + 56) / 120][Stage 8:=====================================>                 (81 + 39) / 120][Stage 8:============================================>          (97 + 23) / 120][Stage 8:====================================================>  (115 + 5) / 120]                                                                                [Stage 9:============================>                          (62 + 59) / 121][Stage 9:================================>                      (72 + 49) / 121][Stage 9:=======================================>               (87 + 34) / 121][Stage 9:============================================>          (98 + 23) / 121][Stage 9:===================================================>   (113 + 8) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.692927376 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492507862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:==================================>                   (73 + 40) / 113][Stage 10:=====================================>                (78 + 35) / 113][Stage 10:===========================================>          (91 + 22) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:===================================================>  (107 + 6) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:==========================================>           (90 + 24) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.617970744 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566254257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:===================================>                  (77 + 41) / 118][Stage 12:=========================================>            (91 + 27) / 118][Stage 12:============================================>        (100 + 18) / 118][Stage 12:=================================================>    (109 + 9) / 118][Stage 12:====================================================> (114 + 4) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:===================================>                  (79 + 40) / 119][Stage 13:============================================>         (98 + 21) / 119][Stage 13:====================================================> (115 + 4) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.570962589 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564803473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:============================>                         (63 + 57) / 120][Stage 14:=================================>                    (75 + 45) / 120][Stage 14:=========================================>            (92 + 28) / 120][Stage 14:================================================>    (110 + 10) / 120][Stage 14:====================================================> (116 + 4) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:=============================>                        (66 + 55) / 121][Stage 15:===================================>                  (79 + 42) / 121][Stage 15:===========================================>         (100 + 21) / 121][Stage 15:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.65597333 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496305238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===================================>                  (74 + 39) / 113][Stage 16:========================================>             (85 + 28) / 113][Stage 16:===========================================>          (91 + 22) / 113][Stage 16:===============================================>     (102 + 11) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:======================================>               (82 + 32) / 114][Stage 17:===========================================>          (91 + 23) / 114][Stage 17:===============================================>     (102 + 12) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.531817287 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533388307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:================================>                     (73 + 48) / 121][Stage 18:=====================================>                (84 + 37) / 121][Stage 18:==============================================>      (107 + 14) / 121][Stage 18:=====================================================>(120 + 1) / 121]                                                                                [Stage 19:============================>                         (64 + 58) / 122][Stage 19:==================================>                   (77 + 45) / 122][Stage 19:===========================================>          (99 + 23) / 122][Stage 19:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.557455402 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=253", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=253,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546598454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (65 + 50) / 115][Stage 20:===================================>                  (75 + 40) / 115][Stage 20:============================================>         (95 + 20) / 115][Stage 20:===============================================>     (103 + 12) / 115][Stage 20:==================================================>   (108 + 7) / 115][Stage 20:====================================================> (111 + 4) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:===============================>                      (68 + 48) / 116][Stage 21:======================================>               (83 + 33) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:===================================================>  (110 + 6) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.916487733 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467806422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (74 + 44) / 118][Stage 22:=====================================>                (81 + 37) / 118][Stage 22:==========================================>           (92 + 26) / 118][Stage 22:=============================================>       (102 + 16) / 118][Stage 22:===================================================>  (113 + 5) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:================================>                     (72 + 47) / 119][Stage 23:==================================>                   (75 + 44) / 119][Stage 23:=======================================>              (87 + 32) / 119][Stage 23:===========================================>          (95 + 24) / 119][Stage 23:============================================>         (99 + 20) / 119][Stage 23:=================================================>    (110 + 9) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.893607782 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457362707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=======================================>              (83 + 30) / 113][Stage 24:============================================>         (94 + 19) / 113][Stage 24:==================================================>   (105 + 8) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:======================================>               (82 + 32) / 114][Stage 25:============================================>         (94 + 20) / 114][Stage 25:===============================================>     (102 + 12) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.153881622 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430086272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (79 + 36) / 115][Stage 26:=======================================>              (84 + 31) / 115][Stage 26:===========================================>          (92 + 23) / 115][Stage 26:==============================================>      (101 + 14) / 115][Stage 26:==================================================>   (108 + 7) / 115][Stage 26:====================================================> (111 + 4) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:=====================================>                (81 + 35) / 116][Stage 27:=======================================>              (84 + 32) / 116][Stage 27:===========================================>          (94 + 22) / 116][Stage 27:===============================================>     (104 + 12) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.607342802 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404352863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (82 + 33) / 115][Stage 28:=========================================>            (89 + 26) / 115][Stage 28:===============================================>     (104 + 11) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:======================================>               (83 + 33) / 116][Stage 29:==========================================>           (92 + 24) / 116][Stage 29:===============================================>     (105 + 11) / 116][Stage 29:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.064072901 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505919277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:===========================>                          (61 + 59) / 120][Stage 30:===============================>                      (70 + 50) / 120][Stage 30:=======================================>              (88 + 32) / 120][Stage 30:===============================================>     (107 + 13) / 120][Stage 30:====================================================> (116 + 4) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:================================>                     (73 + 48) / 121][Stage 31:=========================================>            (93 + 28) / 121][Stage 31:================================================>    (111 + 10) / 121][Stage 31:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.40486745 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427531986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==================================>                   (72 + 41) / 113][Stage 32:========================================>             (84 + 29) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:===================================================>  (108 + 5) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:=========================================>            (87 + 27) / 114][Stage 33:=============================================>        (96 + 18) / 114][Stage 33:===================================================>  (108 + 6) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.047881155 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531146727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==============================>                       (64 + 51) / 115][Stage 34:==================================>                   (73 + 42) / 115][Stage 34:========================================>             (87 + 28) / 115][Stage 34:===============================================>     (102 + 13) / 115][Stage 34:==================================================>   (108 + 7) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:================================>                     (70 + 46) / 116][Stage 35:=====================================>                (80 + 36) / 116][Stage 35:==========================================>           (91 + 25) / 116][Stage 35:==============================================>       (99 + 17) / 116][Stage 35:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.480982047 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497707731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===============================>                      (69 + 51) / 120][Stage 36:===========================================>          (96 + 24) / 120][Stage 36:====================================================> (117 + 3) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:=============================>                        (66 + 55) / 121][Stage 37:===================================>                  (79 + 42) / 121][Stage 37:============================================>        (101 + 20) / 121][Stage 37:================================================>    (110 + 11) / 121][Stage 37:==================================================>   (113 + 8) / 121][Stage 37:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.443987343 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460083361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=====================================>                (78 + 35) / 113][Stage 38:========================================>             (85 + 28) / 113][Stage 38:=============================================>        (96 + 17) / 113][Stage 38:=================================================>    (104 + 9) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:====================================>                 (78 + 36) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.727310176 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405935933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (82 + 33) / 115][Stage 40:==========================================>           (91 + 24) / 115][Stage 40:================================================>    (105 + 10) / 115][Stage 40:===================================================>  (110 + 5) / 115][Stage 40:====================================================> (112 + 3) / 115]                                                                                [Stage 41:=====================================>                (81 + 35) / 116][Stage 41:========================================>             (88 + 28) / 116][Stage 41:==============================================>       (99 + 17) / 116][Stage 41:================================================>    (106 + 10) / 116][Stage 41:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.101812244 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480434793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (73 + 45) / 118][Stage 42:==================================>                   (76 + 42) / 118][Stage 42:=======================================>              (87 + 31) / 118][Stage 42:=============================================>       (101 + 17) / 118][Stage 42:====================================================> (115 + 3) / 118]                                                                                [Stage 43:================================>                     (71 + 48) / 119][Stage 43:==================================>                   (75 + 44) / 119][Stage 43:=====================================>                (82 + 37) / 119][Stage 43:============================================>         (97 + 22) / 119][Stage 43:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.351513598 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396390502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (83 + 32) / 115][Stage 44:============================================>         (94 + 21) / 115][Stage 44:==================================================>   (108 + 7) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:============================================>         (95 + 21) / 116][Stage 45:===================================================>  (111 + 5) / 116][Stage 45:=====================================================>(114 + 2) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.881696766 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42133823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:====================================>                 (77 + 36) / 113][Stage 46:=========================================>            (87 + 26) / 113][Stage 46:===============================================>     (102 + 11) / 113][Stage 46:====================================================> (109 + 4) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:=====================================>                (80 + 34) / 114][Stage 47:============================================>         (94 + 20) / 114][Stage 47:================================================>    (104 + 10) / 114][Stage 47:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.168137429 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476834743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:=============================>                        (66 + 54) / 120][Stage 48:====================================>                 (81 + 39) / 120][Stage 48:============================================>        (100 + 20) / 120][Stage 48:=====================================================>(118 + 2) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:===========================>                          (62 + 59) / 121][Stage 49:===================================>                  (79 + 42) / 121][Stage 49:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.917394019 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.56719296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:==============================>                       (64 + 49) / 113][Stage 50:=====================================>                (79 + 34) / 113][Stage 50:===========================================>          (92 + 21) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:==============================>                       (64 + 50) / 114][Stage 51:===================================>                  (75 + 39) / 114][Stage 51:===========================================>          (91 + 23) / 114][Stage 51:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.117363262 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390556204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (83 + 32) / 115][Stage 52:============================================>         (95 + 20) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:=====================================================>(113 + 2) / 115]                                                                                [Stage 53:=======================================>              (84 + 32) / 116][Stage 53:=========================================>            (90 + 26) / 116][Stage 53:===============================================>     (104 + 12) / 116][Stage 53:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.758754594 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42361912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:====================================>                 (76 + 37) / 113][Stage 54:=========================================>            (86 + 27) / 113][Stage 54:==============================================>       (98 + 15) / 113][Stage 54:===================================================>  (107 + 6) / 113][Stage 54:====================================================> (109 + 4) / 113][Stage 54:====================================================> (110 + 3) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:==================================>                   (72 + 42) / 114][Stage 55:=========================================>            (88 + 26) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:====================================================> (110 + 4) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.905896747 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411269397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:====================================>                 (77 + 36) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:============================================>         (94 + 19) / 113][Stage 56:===============================================>     (102 + 11) / 113][Stage 56:===================================================>  (108 + 5) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:====================================>                 (78 + 36) / 114][Stage 57:=========================================>            (88 + 26) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.366227407 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472662892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (61 + 60) / 121][Stage 58:==============================>                       (68 + 53) / 121][Stage 58:========================================>             (90 + 31) / 121][Stage 58:==============================================>      (106 + 15) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:==============================>                       (69 + 53) / 122][Stage 59:====================================>                 (83 + 39) / 122][Stage 59:==============================================>      (107 + 15) / 122][Stage 59:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.187640548 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455193033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:=============================>                        (65 + 55) / 120][Stage 60:======================================>               (85 + 35) / 120][Stage 60:==================================================>   (113 + 7) / 120][Stage 60:=====================================================>(118 + 2) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:==============================>                       (68 + 53) / 121][Stage 61:===================================>                  (80 + 41) / 121][Stage 61:============================================>        (101 + 20) / 121][Stage 61:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.213800205 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459087526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:=============================>                        (62 + 51) / 113][Stage 62:========================================>             (84 + 29) / 113][Stage 62:==============================================>       (98 + 15) / 113][Stage 62:====================================================> (109 + 4) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:==================================>                   (73 + 41) / 114][Stage 63:=============================================>        (96 + 18) / 114][Stage 63:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.154319801 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367998568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:======================================>               (81 + 34) / 115][Stage 64:======================================>               (83 + 32) / 115][Stage 64:=============================================>        (97 + 18) / 115][Stage 64:===============================================>     (104 + 11) / 115][Stage 64:==================================================>   (107 + 8) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:=====================================>                (81 + 35) / 116][Stage 65:=========================================>            (90 + 26) / 116][Stage 65:============================================>         (96 + 20) / 116][Stage 65:===============================================>     (104 + 12) / 116][Stage 65:====================================================> (113 + 3) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.608258916 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390201787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (80 + 35) / 115][Stage 66:=======================================>              (85 + 30) / 115][Stage 66:============================================>         (94 + 21) / 115][Stage 66:===================================================>  (109 + 6) / 115]                                                                                [Stage 67:========================================>             (86 + 30) / 116][Stage 67:===========================================>          (93 + 23) / 116][Stage 67:================================================>    (106 + 10) / 116][Stage 67:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.949821194 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441578248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:=================================>                    (71 + 42) / 113][Stage 68:=========================================>            (86 + 27) / 113][Stage 68:===================================================>  (107 + 6) / 113]                                                                                [Stage 69:==============================>                       (64 + 50) / 114][Stage 69:====================================>                 (77 + 37) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.842731583 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447489949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:=============================>                        (61 + 52) / 113][Stage 70:======================================>               (80 + 33) / 113][Stage 70:==============================================>      (100 + 13) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:============================>                         (61 + 53) / 114][Stage 71:===================================>                  (75 + 39) / 114][Stage 71:============================================>         (93 + 21) / 114][Stage 71:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.11708367 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445520483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (61 + 59) / 120][Stage 72:=================================>                    (75 + 45) / 120][Stage 72:==========================================>           (94 + 26) / 120][Stage 72:===================================================>  (114 + 6) / 120]                                                                                [Stage 73:============================>                         (64 + 57) / 121][Stage 73:================================>                     (72 + 49) / 121][Stage 73:=========================================>            (94 + 27) / 121][Stage 73:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.031163353 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447045608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=============================>                        (61 + 52) / 113][Stage 74:=====================================>                (78 + 35) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:===================================================>  (107 + 6) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:================================>                     (68 + 46) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.012531052 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390933273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (81 + 32) / 113][Stage 76:===========================================>          (90 + 23) / 113][Stage 76:===============================================>     (102 + 11) / 113][Stage 76:===================================================>  (107 + 6) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:===================================>                  (75 + 39) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:==============================================>      (101 + 13) / 114][Stage 77:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.161055278 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413061091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:==============================>                       (63 + 50) / 113][Stage 78:======================================>               (81 + 32) / 113][Stage 78:================================================>    (103 + 10) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:================================>                     (68 + 46) / 114][Stage 79:========================================>             (85 + 29) / 114][Stage 79:==============================================>       (99 + 15) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.99790251 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365140203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=================================>                    (71 + 42) / 113][Stage 80:=====================================>                (79 + 34) / 113][Stage 80:===========================================>          (92 + 21) / 113][Stage 80:===============================================>     (102 + 11) / 113][Stage 80:===================================================>  (108 + 5) / 113]                                                                                [Stage 81:===================================>                  (75 + 39) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:==================================================>   (106 + 8) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.292280069 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38978587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:=================================>                    (73 + 45) / 118][Stage 82:===================================>                  (78 + 40) / 118][Stage 82:===========================================>          (95 + 23) / 118][Stage 82:==================================================>   (110 + 8) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:==================================>                   (77 + 42) / 119][Stage 83:======================================>               (85 + 34) / 119][Stage 83:=========================================>            (92 + 27) / 119][Stage 83:==================================================>   (111 + 8) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.426819786 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528704479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:============================>                         (60 + 53) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:==============================>                       (64 + 50) / 114][Stage 85:=====================================>                (79 + 35) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.205292813 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373969536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=====================================>                (79 + 34) / 113][Stage 86:===========================================>          (92 + 21) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:====================================================> (110 + 3) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:=========================================>            (87 + 27) / 114][Stage 87:=============================================>        (95 + 19) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.023423438 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401125911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:=================================>                    (74 + 44) / 118][Stage 88:========================================>             (89 + 29) / 118][Stage 88:=============================================>       (102 + 16) / 118][Stage 88:==================================================>   (111 + 7) / 118]                                                                                [Stage 89:==================================>                   (75 + 44) / 119][Stage 89:======================================>               (84 + 35) / 119][Stage 89:==============================================>      (105 + 14) / 119][Stage 89:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.031874032 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372292451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===================================>                  (74 + 39) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:===============================================>     (101 + 12) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:========================================>             (86 + 28) / 114][Stage 91:===========================================>          (91 + 23) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.048120914 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412054811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:================================>                     (72 + 48) / 120][Stage 92:============================================>         (98 + 22) / 120][Stage 92:====================================================> (116 + 4) / 120][Stage 92:=====================================================>(119 + 1) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:==============================>                       (69 + 52) / 121][Stage 93:=======================================>              (89 + 32) / 121][Stage 93:==============================================>      (107 + 14) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.068665371 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417647451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==============================>                       (65 + 50) / 115][Stage 94:==================================>                   (74 + 41) / 115][Stage 94:==========================================>           (90 + 25) / 115][Stage 94:===============================================>     (103 + 12) / 115][Stage 94:==================================================>   (107 + 8) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:==================================>                   (75 + 41) / 116][Stage 95:========================================>             (88 + 28) / 116][Stage 95:============================================>         (96 + 20) / 116][Stage 95:================================================>    (106 + 10) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.381143696 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide21;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (69 + 46) / 115][Stage 96:====================================>                 (77 + 38) / 115][Stage 96:============================================>         (94 + 21) / 115][Stage 96:================================================>    (105 + 10) / 115][Stage 96:====================================================> (112 + 3) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:===============================>                      (67 + 49) / 116][Stage 97:====================================>                 (78 + 38) / 116][Stage 97:========================================>             (88 + 28) / 116][Stage 97:=============================================>       (100 + 16) / 116][Stage 97:==================================================>   (108 + 8) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.406678071 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421312126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:=================================>                    (70 + 43) / 113][Stage 98:===========================================>          (92 + 21) / 113][Stage 98:===================================================>  (108 + 5) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:==============================>                       (65 + 49) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:==============================================>       (98 + 16) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.101062899 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416068388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===============================>                     (71 + 49) / 120][Stage 100:===========================================>         (99 + 21) / 120][Stage 100:===================================================> (116 + 4) / 120][Stage 100:====================================================>(119 + 1) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:==============================>                      (69 + 52) / 121][Stage 101:=======================================>             (90 + 31) / 121][Stage 101:===============================================>    (111 + 10) / 121][Stage 101:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.150905659 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360159271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (76 + 37) / 113][Stage 102:======================================>              (83 + 30) / 113][Stage 102:============================================>        (94 + 19) / 113][Stage 102:=================================================>   (105 + 8) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:==================================>                  (75 + 39) / 114][Stage 103:=======================================>             (84 + 30) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.929411262 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408919844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:==========================>                          (61 + 59) / 120][Stage 104:==================================>                  (77 + 43) / 120][Stage 104:==============================================>     (107 + 13) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:===============================>                     (72 + 49) / 121][Stage 105:=====================================>               (86 + 35) / 121][Stage 105:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 2.930133589 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412074496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (74 + 41) / 115][Stage 106:============================================>        (96 + 19) / 115][Stage 106:==================================================>  (110 + 5) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==============================>                      (67 + 49) / 116][Stage 107:==================================>                  (76 + 40) / 116][Stage 107:==========================================>          (94 + 22) / 116][Stage 107:=================================================>   (109 + 7) / 116][Stage 107:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.843181545 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415089447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==================================>                  (74 + 41) / 115][Stage 108:========================================>            (88 + 27) / 115][Stage 108:============================================>        (96 + 19) / 115][Stage 108:==============================================>     (103 + 12) / 115][Stage 108:===================================================> (112 + 3) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:===================================>                 (77 + 39) / 116][Stage 109:========================================>            (88 + 28) / 116][Stage 109:============================================>        (98 + 18) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:==================================================>  (110 + 6) / 116][Stage 109:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.893719684 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide21;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===============================>                     (69 + 46) / 115][Stage 110:=====================================>               (81 + 34) / 115][Stage 110:=========================================>           (91 + 24) / 115][Stage 110:===============================================>    (105 + 10) / 115][Stage 110:==================================================>  (109 + 6) / 115][Stage 110:==================================================>  (110 + 5) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:===============================>                     (68 + 48) / 116][Stage 111:=======================================>             (86 + 30) / 116][Stage 111:===========================================>         (95 + 21) / 116][Stage 111:=================================================>   (108 + 8) / 116][Stage 111:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.56598705 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423659178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:============================>                        (60 + 53) / 113][Stage 112:=================================>                   (72 + 41) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:==================================================>  (107 + 6) / 113]                                                                                [Stage 113:=============================>                       (63 + 51) / 114][Stage 113:====================================>                (78 + 36) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.961103836 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483777492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (81 + 34) / 115][Stage 114:=======================================>             (85 + 30) / 115][Stage 114:==============================================>     (102 + 13) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:======================================>              (85 + 31) / 116][Stage 115:============================================>        (97 + 19) / 116][Stage 115:===============================================>    (105 + 11) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.850361268 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425914787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (61 + 59) / 120][Stage 116:==============================>                      (68 + 52) / 120][Stage 116:======================================>              (88 + 32) / 120][Stage 116:=================================================>   (111 + 9) / 120]                                                                                [Stage 117:============================>                        (64 + 57) / 121][Stage 117:===============================>                     (73 + 48) / 121][Stage 117:=======================================>             (90 + 31) / 121][Stage 117:=================================================>   (114 + 7) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.136902087 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399151174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:==============================>                      (66 + 47) / 113][Stage 118:=======================================>             (84 + 29) / 113][Stage 118:===============================================>    (103 + 10) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:==================================>                  (74 + 40) / 114][Stage 119:==========================================>          (91 + 23) / 114][Stage 119:=================================================>   (106 + 8) / 114][Stage 119:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.067510745 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351871347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (81 + 32) / 113][Stage 120:===========================================>         (92 + 21) / 113][Stage 120:==============================================>     (101 + 12) / 113][Stage 120:=================================================>   (106 + 7) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:==================================>                  (75 + 39) / 114][Stage 121:=========================================>           (89 + 25) / 114][Stage 121:=============================================>       (98 + 16) / 114][Stage 121:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.970194445 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide77;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (71 + 42) / 113][Stage 122:=====================================>               (80 + 33) / 113][Stage 122:==========================================>          (90 + 23) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:==================================================>  (108 + 5) / 113]                                                                                [Stage 123:====================================>                (79 + 35) / 114][Stage 123:==========================================>          (92 + 22) / 114][Stage 123:=============================================>      (100 + 14) / 114][Stage 123:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.037135986 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374494307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:==================================>                  (74 + 41) / 115][Stage 124:==========================================>          (93 + 22) / 115][Stage 124:===============================================>    (105 + 10) / 115][Stage 124:===================================================> (111 + 4) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:================================>                    (71 + 45) / 116][Stage 125:=======================================>             (87 + 29) / 116][Stage 125:=============================================>      (101 + 15) / 116][Stage 125:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.998654454 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351688127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:======================================>              (82 + 31) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:==============================================>      (99 + 14) / 113][Stage 126:==================================================>  (107 + 6) / 113]                                                                                [Stage 127:====================================>                (78 + 36) / 114][Stage 127:=======================================>             (85 + 29) / 114][Stage 127:==============================================>      (99 + 15) / 114][Stage 127:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.108386327 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350610644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (71 + 42) / 113][Stage 128:======================================>              (83 + 30) / 113][Stage 128:============================================>        (95 + 18) / 113][Stage 128:==================================================>  (107 + 6) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===================================>                 (77 + 37) / 114][Stage 129:==========================================>          (91 + 23) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:==================================================>  (108 + 6) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.204921195 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide84;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (70 + 43) / 113][Stage 130:====================================>                (78 + 35) / 113][Stage 130:===========================================>         (92 + 21) / 113][Stage 130:================================================>    (104 + 9) / 113][Stage 130:====================================================>(111 + 2) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===================================>                 (76 + 38) / 114][Stage 131:=====================================>               (81 + 33) / 114][Stage 131:=============================================>       (98 + 16) / 114][Stage 131:==================================================>  (109 + 5) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.530036154 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide42;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==================================>                  (73 + 40) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:==========================================>          (90 + 23) / 113][Stage 132:===============================================>    (103 + 10) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:=====================================>               (80 + 34) / 114][Stage 133:=======================================>             (84 + 30) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:==================================================>  (109 + 5) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.772754541 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349386162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===================================>                 (76 + 37) / 113][Stage 134:========================================>            (87 + 26) / 113][Stage 134:=============================================>       (96 + 17) / 113][Stage 134:==================================================>  (107 + 6) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:==================================>                  (74 + 40) / 114][Stage 135:========================================>            (88 + 26) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.959636618 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367923607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:===================================>                 (80 + 38) / 118][Stage 136:===========================================>         (97 + 21) / 118][Stage 136:===================================================> (114 + 4) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:=================================>                   (76 + 43) / 119][Stage 137:==========================================>          (96 + 23) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.88320649 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371912593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:==================================>                  (76 + 42) / 118][Stage 138:======================================>              (85 + 33) / 118][Stage 138:===========================================>         (97 + 21) / 118][Stage 138:=================================================>   (111 + 7) / 118][Stage 138:====================================================>(117 + 1) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:===================================>                 (79 + 40) / 119][Stage 139:========================================>            (91 + 28) / 119][Stage 139:==============================================>     (107 + 12) / 119][Stage 139:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.428883876 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394875053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:============================>                        (64 + 56) / 120][Stage 140:=====================================>               (84 + 36) / 120][Stage 140:=============================================>      (104 + 16) / 120]                                                                                [Stage 141:===========================>                         (62 + 59) / 121][Stage 141:===============================>                     (73 + 48) / 121][Stage 141:=======================================>             (90 + 31) / 121][Stage 141:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.954952972 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393231894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:=================================>                   (71 + 42) / 113][Stage 142:========================================>            (86 + 27) / 113][Stage 142:==================================================>  (108 + 5) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.992881644 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368098496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (79 + 34) / 113][Stage 144:=========================================>           (88 + 25) / 113][Stage 144:=============================================>       (96 + 17) / 113][Stage 144:==================================================>  (108 + 5) / 113]                                                                                [Stage 145:====================================>                (78 + 36) / 114][Stage 145:========================================>            (87 + 27) / 114][Stage 145:============================================>        (95 + 19) / 114][Stage 145:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.007199154 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391053037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 59) / 120][Stage 146:===============================>                     (71 + 49) / 120][Stage 146:======================================>              (88 + 32) / 120][Stage 146:==============================================>     (107 + 13) / 120]                                                                                [Stage 147:===========================>                         (63 + 58) / 121][Stage 147:===============================>                     (73 + 48) / 121][Stage 147:=======================================>             (91 + 30) / 121][Stage 147:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.941230606 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335967918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=======================================>             (85 + 30) / 115][Stage 148:============================================>        (97 + 18) / 115][Stage 148:==================================================>  (110 + 5) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:=====================================>               (82 + 34) / 116][Stage 149:==========================================>          (92 + 24) / 116][Stage 149:================================================>    (107 + 9) / 116][Stage 149:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.734524456 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3925859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:==============================>                      (70 + 50) / 120][Stage 150:=====================================>               (86 + 34) / 120][Stage 150:=================================================>   (111 + 9) / 120][Stage 150:====================================================>(119 + 1) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:===============================>                     (72 + 49) / 121][Stage 151:=======================================>             (91 + 30) / 121][Stage 151:=================================================>   (113 + 8) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.134774207 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333371241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:===========================================>         (95 + 20) / 115][Stage 152:=================================================>   (107 + 8) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:=====================================>               (82 + 34) / 116][Stage 153:=========================================>           (91 + 25) / 116][Stage 153:============================================>       (100 + 16) / 116][Stage 153:=================================================>   (108 + 8) / 116][Stage 153:===================================================> (112 + 4) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.281137379 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347516183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (81 + 32) / 113][Stage 154:===========================================>         (92 + 21) / 113][Stage 154:===============================================>    (103 + 10) / 113][Stage 154:===================================================> (109 + 4) / 113]                                                                                [Stage 155:======================================>              (83 + 31) / 114][Stage 155:========================================>            (88 + 26) / 114][Stage 155:==============================================>      (99 + 15) / 114][Stage 155:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.058450829 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333937924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:======================================>              (84 + 31) / 115][Stage 156:==========================================>          (93 + 22) / 115][Stage 156:=================================================>   (107 + 8) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:=====================================>               (83 + 33) / 116][Stage 157:=========================================>           (91 + 25) / 116][Stage 157:============================================>       (100 + 16) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.658875195 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333784465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:====================================>                (80 + 35) / 115][Stage 158:========================================>            (87 + 28) / 115][Stage 158:=============================================>       (98 + 17) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:=======================================>             (86 + 30) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:==================================================>  (110 + 6) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.012960031 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394957468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (62 + 58) / 120][Stage 160:=================================>                   (75 + 45) / 120][Stage 160:======================================>              (88 + 32) / 120][Stage 160:===============================================>    (109 + 11) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:=================================>                   (77 + 44) / 121][Stage 161:==========================================>         (100 + 21) / 121][Stage 161:===================================================> (118 + 3) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.186818646 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396317129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:===============================>                     (72 + 48) / 120][Stage 162:===========================================>         (98 + 22) / 120][Stage 162:==================================================>  (115 + 5) / 120][Stage 162:====================================================>(119 + 1) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:===============================>                     (72 + 49) / 121][Stage 163:==========================================>          (97 + 24) / 121][Stage 163:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.967302091 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38089609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:================================>                    (69 + 44) / 113][Stage 164:==========================================>          (91 + 22) / 113][Stage 164:==================================================>  (107 + 6) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:==============================>                      (66 + 48) / 114][Stage 165:=======================================>             (84 + 30) / 114][Stage 165:==============================================>     (103 + 11) / 114][Stage 165:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.146091208 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396542272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:===================================>                 (80 + 38) / 118][Stage 166:===========================================>         (96 + 22) / 118][Stage 166:==================================================>  (112 + 6) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:=================================>                   (76 + 43) / 119][Stage 167:========================================>            (90 + 29) / 119][Stage 167:===============================================>    (108 + 11) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.995484175 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354180732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===================================>                 (76 + 37) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:===========================================>         (93 + 20) / 113][Stage 168:=================================================>   (105 + 8) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:===================================>                 (77 + 37) / 114][Stage 169:=======================================>             (86 + 28) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:=================================================>   (107 + 7) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.275840156 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331614493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (81 + 34) / 115][Stage 170:=======================================>             (85 + 30) / 115][Stage 170:==============================================>     (102 + 13) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:=====================================>               (83 + 33) / 116][Stage 171:=========================================>           (91 + 25) / 116][Stage 171:===============================================>    (106 + 10) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.630000642 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4902803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:==================================>                  (76 + 42) / 118][Stage 172:======================================>              (86 + 32) / 118][Stage 172:=========================================>           (93 + 25) / 118][Stage 172:=============================================>      (104 + 14) / 118][Stage 172:===================================================> (114 + 4) / 118]                                                                                [Stage 173:================================>                    (74 + 45) / 119][Stage 173:=================================>                   (75 + 44) / 119][Stage 173:===================================>                 (79 + 40) / 119][Stage 173:========================================>            (90 + 29) / 119][Stage 173:=============================================>      (104 + 15) / 119][Stage 173:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.690542237 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393020398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:===========================>                         (62 + 58) / 120][Stage 174:===================================>                 (80 + 40) / 120][Stage 174:==============================================>     (108 + 12) / 120][Stage 174:====================================================>(119 + 1) / 120]                                                                                [Stage 175:===========================>                         (62 + 59) / 121][Stage 175:===============================>                     (73 + 48) / 121][Stage 175:==========================================>          (96 + 25) / 121][Stage 175:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.025998641 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401378379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (61 + 59) / 120][Stage 176:==============================>                      (69 + 51) / 120][Stage 176:======================================>              (88 + 32) / 120][Stage 176:==================================================>  (115 + 5) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:===============================>                     (71 + 50) / 121][Stage 177:=====================================>               (85 + 36) / 121][Stage 177:==================================================>  (116 + 5) / 121][Stage 177:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.992917189 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362327459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:================================>                    (73 + 45) / 118][Stage 178:==================================>                  (77 + 41) / 118][Stage 178:======================================>              (85 + 33) / 118][Stage 178:==========================================>          (95 + 23) / 118][Stage 178:==================================================>  (112 + 6) / 118]                                                                                [Stage 179:================================>                    (74 + 45) / 119][Stage 179:==================================>                  (77 + 42) / 119][Stage 179:==================================>                  (78 + 41) / 119][Stage 179:======================================>              (86 + 33) / 119][Stage 179:=============================================>      (104 + 15) / 119][Stage 179:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.635428976 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329649219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (80 + 35) / 115][Stage 180:=======================================>             (85 + 30) / 115][Stage 180:=============================================>      (101 + 14) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:=====================================>               (83 + 33) / 116][Stage 181:============================================>        (98 + 18) / 116][Stage 181:==============================================>     (104 + 12) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.685297055 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512152191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (74 + 44) / 118][Stage 182:====================================>                (81 + 37) / 118][Stage 182:==========================================>          (95 + 23) / 118][Stage 182:=================================================>   (110 + 8) / 118]                                                                                [Stage 183:=================================>                   (75 + 44) / 119][Stage 183:==================================>                  (78 + 41) / 119][Stage 183:=========================================>           (94 + 25) / 119][Stage 183:=============================================>      (104 + 15) / 119][Stage 183:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.159644493 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347301502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (80 + 33) / 113][Stage 184:==========================================>          (91 + 22) / 113][Stage 184:=================================================>   (106 + 7) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===================================>                 (76 + 38) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:============================================>        (95 + 19) / 114][Stage 185:=================================================>   (106 + 8) / 114][Stage 185:===================================================> (111 + 3) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.198002188 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356481224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===================================>                 (76 + 37) / 113][Stage 186:========================================>            (87 + 26) / 113][Stage 186:=============================================>       (98 + 15) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:======================================>              (83 + 31) / 114][Stage 187:========================================>            (88 + 26) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.847436915 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397783408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:===========================>                         (63 + 57) / 120][Stage 188:===================================>                 (80 + 40) / 120][Stage 188:==============================================>     (107 + 13) / 120][Stage 188:====================================================>(118 + 2) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (68 + 53) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 2.919659791 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386293948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:================================>                    (69 + 44) / 113][Stage 190:======================================>              (83 + 30) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:=============================>                       (64 + 50) / 114][Stage 191:======================================>              (82 + 32) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.043301449 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470482676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:================================>                    (73 + 45) / 118][Stage 192:=======================================>             (87 + 31) / 118][Stage 192:===============================================>    (107 + 11) / 118][Stage 192:====================================================>(117 + 1) / 118]                                                                                [Stage 193:================================>                    (74 + 45) / 119][Stage 193:========================================>            (90 + 29) / 119][Stage 193:=============================================>      (105 + 14) / 119][Stage 193:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.968894795 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396256312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:============================>                        (65 + 55) / 120][Stage 194:==================================>                  (77 + 43) / 120][Stage 194:=============================================>      (105 + 15) / 120][Stage 194:===================================================> (117 + 3) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:===============================>                     (72 + 49) / 121][Stage 195:==========================================>          (96 + 25) / 121][Stage 195:=================================================>   (112 + 9) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.02435257 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380009212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=================================>                   (73 + 42) / 115][Stage 196:========================================>            (88 + 27) / 115][Stage 196:===============================================>    (104 + 11) / 115][Stage 196:===================================================> (111 + 4) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:================================>                    (72 + 44) / 116][Stage 197:==========================================>          (92 + 24) / 116][Stage 197:==============================================>     (103 + 13) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.025719241 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381943854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:======================================>              (82 + 31) / 113][Stage 198:==========================================>          (90 + 23) / 113][Stage 198:==============================================>     (100 + 13) / 113][Stage 198:===================================================> (110 + 3) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:=================================>                   (71 + 43) / 114][Stage 199:======================================>              (83 + 31) / 114][Stage 199:============================================>        (96 + 18) / 114][Stage 199:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.919284722 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide28;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:>                                                      (0 + 0) / 113][Stage 200:===================================>                 (75 + 38) / 113][Stage 200:======================================>              (82 + 31) / 113][Stage 200:============================================>        (95 + 18) / 113][Stage 200:===================================================> (110 + 3) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:=================================>                   (73 + 41) / 114][Stage 201:=====================================>               (81 + 33) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:==================================================>  (109 + 5) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.983315478 seconds
res203: Int = 0

scala> 

scala> :quit
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:35060) dropped. RpcEnv already stopped.
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:35060) dropped. RpcEnv already stopped.
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:37300) dropped. RpcEnv already stopped.
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:37004) dropped. RpcEnv already stopped.
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:37300) dropped. RpcEnv already stopped.
17/06/01 04:50:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:37004) dropped. RpcEnv already stopped.

real	9m47.834s
user	11m12.316s
sys	0m28.196s
