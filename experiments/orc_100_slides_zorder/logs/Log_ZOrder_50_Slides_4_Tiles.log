Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/06/01 01:30:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 01:30:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 01:30:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 01:30:22 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/06/01 01:30:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/06/01 01:30:35 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170601013024-0737).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.449150232 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (50 + 65) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 13.185445715 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.787767228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (51 + 64) / 115][Stage 2:============================>                          (59 + 56) / 115][Stage 2:==============================>                        (64 + 51) / 115][Stage 2:===============================>                       (66 + 49) / 115][Stage 2:==================================>                    (73 + 42) / 115][Stage 2:========================================>              (85 + 30) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:============================================>          (94 + 21) / 115][Stage 2:===================================================>   (107 + 8) / 115]                                                                                [Stage 3:============================>                          (61 + 55) / 116][Stage 3:================================>                      (69 + 47) / 116][Stage 3:==================================>                    (72 + 44) / 116][Stage 3:=====================================>                 (79 + 37) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:=============================================>         (96 + 20) / 116][Stage 3:===============================================>      (101 + 15) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.085305773 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572369192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:====================================>                  (77 + 38) / 115][Stage 4:======================================>                (81 + 34) / 115][Stage 4:========================================>              (85 + 30) / 115][Stage 4:============================================>          (92 + 23) / 115][Stage 4:=============================================>         (95 + 20) / 115][Stage 4:================================================>     (103 + 12) / 115][Stage 4:====================================================>  (109 + 6) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:=======================================>               (83 + 33) / 116][Stage 5:========================================>              (85 + 31) / 116][Stage 5:==============================================>       (100 + 16) / 116][Stage 5:=================================================>    (106 + 10) / 116][Stage 5:====================================================>  (110 + 6) / 116][Stage 5:====================================================>  (111 + 5) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.435726817 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.595172507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:====================================>                  (74 + 39) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:========================================>              (83 + 30) / 113][Stage 6:============================================>          (92 + 21) / 113][Stage 6:=================================================>    (103 + 10) / 113][Stage 6:====================================================>  (107 + 6) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:=====================================================> (109 + 4) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:=====================================>                 (77 + 37) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:=========================================>             (86 + 28) / 114][Stage 7:============================================>          (92 + 22) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:================================================>     (103 + 11) / 114][Stage 7:====================================================>  (108 + 6) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:======================================================>(112 + 2) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.857693361 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52998507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:====================================>                  (74 + 39) / 113][Stage 8:=======================================>               (81 + 32) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:==============================================>        (96 + 17) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:====================================>                  (75 + 39) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:=========================================>             (87 + 27) / 114][Stage 9:=============================================>         (94 + 20) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.930657876 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529724261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===================================>                  (75 + 38) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:===========================================>          (92 + 21) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:==================================================>   (105 + 8) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:=======================================>              (84 + 30) / 114][Stage 11:============================================>         (93 + 21) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:==================================================>   (106 + 8) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.508296523 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.567525522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (54 + 59) / 113][Stage 12:=============================>                        (62 + 51) / 113][Stage 12:================================>                     (68 + 45) / 113][Stage 12:========================================>             (84 + 29) / 113][Stage 12:==============================================>       (98 + 15) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:===========================>                          (59 + 55) / 114][Stage 13:=============================>                        (63 + 51) / 114][Stage 13:===============================>                      (67 + 47) / 114][Stage 13:====================================>                 (77 + 37) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:==============================================>      (101 + 13) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.40197864 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460415208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (79 + 36) / 115][Stage 14:=======================================>              (84 + 31) / 115][Stage 14:===============================================>     (103 + 12) / 115][Stage 14:====================================================> (111 + 4) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:========================================>             (88 + 28) / 116][Stage 15:===============================================>     (104 + 12) / 116][Stage 15:====================================================> (112 + 4) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.198380206 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495207499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===============================>                      (68 + 50) / 118][Stage 16:================================>                     (71 + 47) / 118][Stage 16:===================================>                  (77 + 41) / 118][Stage 16:========================================>             (89 + 29) / 118][Stage 16:============================================>         (97 + 21) / 118][Stage 16:==================================================>   (111 + 7) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:====================================>                 (80 + 39) / 119][Stage 17:=======================================>              (88 + 31) / 119][Stage 17:============================================>        (101 + 18) / 119][Stage 17:=================================================>    (110 + 9) / 119][Stage 17:===================================================>  (114 + 5) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.964117659 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462004703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:=========================================>            (89 + 26) / 115][Stage 18:==============================================>      (100 + 15) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:=======================================>              (84 + 32) / 116][Stage 19:============================================>         (95 + 21) / 116][Stage 19:===============================================>     (105 + 11) / 116][Stage 19:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.152854053 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443404373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:======================================>               (82 + 33) / 115][Stage 20:=========================================>            (88 + 27) / 115][Stage 20:===============================================>     (102 + 13) / 115][Stage 20:=====================================================>(113 + 2) / 115]                                                                                [Stage 21:=======================================>              (85 + 31) / 116][Stage 21:==========================================>           (91 + 25) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.122887839 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503879719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==============================>                       (64 + 51) / 115][Stage 22:===================================>                  (75 + 40) / 115][Stage 22:=========================================>            (89 + 26) / 115][Stage 22:==============================================>      (101 + 14) / 115][Stage 22:=================================================>    (106 + 9) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:==================================>                   (75 + 41) / 116][Stage 23:=========================================>            (89 + 27) / 116][Stage 23:=============================================>       (100 + 16) / 116][Stage 23:===================================================>  (111 + 5) / 116][Stage 23:====================================================> (113 + 3) / 116][Stage 23:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.828028795 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518493657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:==============================>                       (63 + 50) / 113][Stage 24:===================================>                  (74 + 39) / 113][Stage 24:============================================>         (93 + 20) / 113][Stage 24:===================================================>  (107 + 6) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:=============================>                        (63 + 51) / 114][Stage 25:====================================>                 (76 + 38) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:================================================>    (104 + 10) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:====================================================> (111 + 3) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.363934791 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518208348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:==============================>                       (67 + 53) / 120][Stage 26:======================================>               (85 + 35) / 120][Stage 26:===============================================>     (108 + 12) / 120][Stage 26:====================================================> (116 + 4) / 120][Stage 26:=====================================================>(119 + 1) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:==============================>                       (69 + 52) / 121][Stage 27:====================================>                 (81 + 40) / 121][Stage 27:==============================================>      (106 + 15) / 121][Stage 27:====================================================> (118 + 3) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.619036316 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499240277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (66 + 54) / 120][Stage 28:========================================>             (89 + 31) / 120][Stage 28:===============================================>     (108 + 12) / 120][Stage 28:====================================================> (116 + 4) / 120]                                                                                [Stage 29:===========================>                          (62 + 59) / 121][Stage 29:================================>                     (72 + 49) / 121][Stage 29:======================================>               (86 + 35) / 121][Stage 29:=============================================>       (104 + 17) / 121][Stage 29:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.522254159 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433899181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===================================>                  (75 + 38) / 113][Stage 30:========================================>             (85 + 28) / 113][Stage 30:=============================================>        (95 + 18) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:====================================>                 (76 + 38) / 114][Stage 31:========================================>             (86 + 28) / 114][Stage 31:=============================================>        (96 + 18) / 114][Stage 31:===================================================>  (108 + 6) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.247956502 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45518835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==============================>                       (64 + 51) / 115][Stage 32:==================================>                   (73 + 42) / 115][Stage 32:===========================================>          (92 + 23) / 115][Stage 32:=================================================>    (106 + 9) / 115]                                                                                [Stage 33:===============================>                      (68 + 48) / 116][Stage 33:======================================>               (83 + 33) / 116][Stage 33:================================================>    (106 + 10) / 116][Stage 33:====================================================> (113 + 3) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.015461339 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51096899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:=====================================>                (78 + 35) / 113][Stage 34:==========================================>           (89 + 24) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:==============================>                       (64 + 50) / 114][Stage 35:===================================>                  (74 + 40) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:===============================================>     (103 + 11) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.045820911 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480957072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:================================>                     (67 + 46) / 113][Stage 36:=====================================>                (78 + 35) / 113][Stage 36:===============================================>     (101 + 12) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:===============================>                      (66 + 48) / 114][Stage 37:=====================================>                (79 + 35) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.210671877 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477026488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:=========================================>            (91 + 27) / 118][Stage 38:===============================================>     (106 + 12) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:===================================>                  (78 + 41) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:=================================================>    (110 + 9) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.295579349 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508956182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===================================>                  (74 + 39) / 113][Stage 40:========================================>             (84 + 29) / 113][Stage 40:==============================================>       (98 + 15) / 113][Stage 40:==================================================>   (105 + 8) / 113][Stage 40:====================================================> (109 + 4) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:=========================================>            (88 + 26) / 114][Stage 41:==============================================>       (98 + 16) / 114][Stage 41:==================================================>   (107 + 7) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.498853914 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495764258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===============================>                      (71 + 49) / 120][Stage 42:=======================================>              (88 + 32) / 120][Stage 42:===============================================>     (107 + 13) / 120][Stage 42:=====================================================>(118 + 2) / 120]                                                                                [Stage 43:============================>                         (63 + 58) / 121][Stage 43:=================================>                    (74 + 47) / 121][Stage 43:=========================================>            (93 + 28) / 121][Stage 43:===================================================>  (115 + 6) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.824171782 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410536462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (81 + 34) / 115][Stage 44:=========================================>            (88 + 27) / 115][Stage 44:==============================================>      (101 + 14) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:=====================================>                (81 + 35) / 116][Stage 45:========================================>             (88 + 28) / 116][Stage 45:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.43359785 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452783901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:============================>                         (60 + 53) / 113][Stage 46:==================================>                   (72 + 41) / 113][Stage 46:==========================================>           (88 + 25) / 113][Stage 46:================================================>    (103 + 10) / 113]                                                                                [Stage 47:============================>                         (61 + 53) / 114][Stage 47:=================================>                    (71 + 43) / 114][Stage 47:=============================================>        (97 + 17) / 114][Stage 47:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.29532963 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.575237544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:============================>                         (64 + 56) / 120][Stage 48:====================================>                 (80 + 40) / 120][Stage 48:===============================================>     (108 + 12) / 120][Stage 48:====================================================> (117 + 3) / 120]                                                                                [Stage 49:===========================>                          (62 + 59) / 121][Stage 49:=================================>                    (75 + 46) / 121][Stage 49:========================================>             (91 + 30) / 121][Stage 49:================================================>    (110 + 11) / 121][Stage 49:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.587600369 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446793603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:==============================>                       (68 + 52) / 120][Stage 50:=======================================>              (88 + 32) / 120][Stage 50:=================================================>    (111 + 9) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:====================================>                 (82 + 39) / 121][Stage 51:==============================================>      (107 + 14) / 121][Stage 51:===================================================>  (116 + 5) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.745647561 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443397122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 40) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:==============================================>       (98 + 15) / 113][Stage 52:==================================================>   (106 + 7) / 113]                                                                                [Stage 53:====================================>                 (76 + 38) / 114][Stage 53:==========================================>           (90 + 24) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.857334889 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38073385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (80 + 35) / 115][Stage 54:=========================================>            (88 + 27) / 115][Stage 54:=================================================>    (106 + 9) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:=======================================>              (84 + 32) / 116][Stage 55:===========================================>          (94 + 22) / 116][Stage 55:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.790685793 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406409275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===================================>                  (75 + 38) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:===============================================>     (101 + 12) / 113][Stage 56:=================================================>    (104 + 9) / 113]                                                                                [Stage 57:======================================>               (81 + 33) / 114][Stage 57:===========================================>          (92 + 22) / 114][Stage 57:===============================================>     (102 + 12) / 114][Stage 57:===================================================>  (109 + 5) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.982615823 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452175786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:=================================>                    (75 + 45) / 120][Stage 58:==========================================>           (95 + 25) / 120][Stage 58:===================================================>  (114 + 6) / 120][Stage 58:=====================================================>(118 + 2) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:================================>                     (72 + 49) / 121][Stage 59:========================================>             (90 + 31) / 121][Stage 59:==============================================>      (106 + 15) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.435784736 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377178163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (84 + 31) / 115][Stage 60:==============================================>      (100 + 15) / 115][Stage 60:==================================================>   (108 + 7) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:===========================================>          (94 + 22) / 116][Stage 61:==================================================>   (109 + 7) / 116][Stage 61:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.729482082 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43411422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (70 + 43) / 113][Stage 62:======================================>               (80 + 33) / 113][Stage 62:===========================================>          (91 + 22) / 113][Stage 62:==================================================>   (106 + 7) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:====================================>                 (77 + 37) / 114][Stage 63:============================================>         (94 + 20) / 114][Stage 63:===============================================>     (103 + 11) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(112 + 2) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.95947054 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425671358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (65 + 50) / 115][Stage 64:==================================>                   (73 + 42) / 115][Stage 64:=======================================>              (84 + 31) / 115][Stage 64:================================================>    (105 + 10) / 115]                                                                                [Stage 65:=================================>                    (71 + 45) / 116][Stage 65:=======================================>              (84 + 32) / 116][Stage 65:===========================================>          (93 + 23) / 116][Stage 65:===================================================>  (110 + 6) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.908930029 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38215597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=======================================>              (84 + 31) / 115][Stage 66:===========================================>          (93 + 22) / 115][Stage 66:==================================================>   (108 + 7) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:========================================>             (88 + 28) / 116][Stage 67:==============================================>      (101 + 15) / 116][Stage 67:===================================================>  (110 + 6) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.787920074 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42404158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:===============================>                      (65 + 48) / 113][Stage 68:======================================>               (80 + 33) / 113][Stage 68:===============================================>      (99 + 14) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:==============================>                       (64 + 50) / 114][Stage 69:=====================================>                (79 + 35) / 114][Stage 69:==================================================>   (106 + 8) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.480773019 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462621317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:=============================>                        (66 + 54) / 120][Stage 70:===================================>                  (78 + 42) / 120][Stage 70:=============================================>       (103 + 17) / 120][Stage 70:====================================================> (116 + 4) / 120][Stage 70:=====================================================>(119 + 1) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (69 + 52) / 121][Stage 71:=====================================>                (85 + 36) / 121][Stage 71:=============================================>       (104 + 17) / 121][Stage 71:==================================================>   (114 + 7) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.615457601 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421957602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:=============================>                        (61 + 52) / 113][Stage 72:=====================================>                (79 + 34) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:====================================>                 (78 + 36) / 114][Stage 73:=============================================>        (96 + 18) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.484050671 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426180435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==================================>                   (73 + 40) / 113][Stage 74:===========================================>          (91 + 22) / 113][Stage 74:==============================================>      (100 + 13) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:=============================>                        (63 + 51) / 114][Stage 75:====================================>                 (78 + 36) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.24339653 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385547761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (81 + 34) / 115][Stage 76:==============================================>       (99 + 16) / 115][Stage 76:==================================================>   (107 + 8) / 115]                                                                                [Stage 77:=======================================>              (84 + 32) / 116][Stage 77:============================================>         (96 + 20) / 116][Stage 77:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.554037037 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413025131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:======================================>               (85 + 33) / 118][Stage 78:============================================>         (97 + 21) / 118][Stage 78:===================================================>  (113 + 5) / 118][Stage 78:=====================================================>(117 + 1) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:===================================>                  (79 + 40) / 119][Stage 79:============================================>         (98 + 21) / 119][Stage 79:================================================>    (109 + 10) / 119][Stage 79:=====================================================>(117 + 2) / 119][Stage 79:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.542922083 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367057717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:====================================>                 (76 + 37) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:==============================================>      (100 + 13) / 113][Stage 80:===================================================>  (107 + 6) / 113]                                                                                [Stage 81:=======================================>              (84 + 30) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:===============================================>     (103 + 11) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.249534717 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4079936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:============================>                         (60 + 53) / 113][Stage 82:=================================>                    (70 + 43) / 113][Stage 82:===========================================>          (91 + 22) / 113][Stage 82:==================================================>   (106 + 7) / 113][Stage 82:====================================================> (110 + 3) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:===============================>                      (67 + 47) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:================================================>    (104 + 10) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.678210565 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350432919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=====================================>                (80 + 35) / 115][Stage 84:=======================================>              (84 + 31) / 115][Stage 84:============================================>         (94 + 21) / 115][Stage 84:===================================================>  (109 + 6) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:========================================>             (86 + 30) / 116][Stage 85:==============================================>       (99 + 17) / 116][Stage 85:================================================>    (106 + 10) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.965319501 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38830841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (70 + 45) / 115][Stage 86:=======================================>              (85 + 30) / 115][Stage 86:==============================================>       (98 + 17) / 115][Stage 86:==================================================>   (108 + 7) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:=================================>                    (72 + 44) / 116][Stage 87:=======================================>              (84 + 32) / 116][Stage 87:==============================================>      (101 + 15) / 116][Stage 87:==================================================>   (108 + 8) / 116][Stage 87:===================================================>  (111 + 5) / 116][Stage 87:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.106352879 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404110589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==================================>                   (74 + 41) / 115][Stage 88:==========================================>           (91 + 24) / 115][Stage 88:===============================================>     (102 + 13) / 115][Stage 88:====================================================> (112 + 3) / 115]                                                                                [Stage 89:=================================>                    (73 + 43) / 116][Stage 89:=============================================>        (97 + 19) / 116][Stage 89:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.789548091 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=252", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=252,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353514619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=====================================>                (79 + 36) / 115][Stage 90:=========================================>            (88 + 27) / 115][Stage 90:================================================>    (105 + 10) / 115][Stage 90:===================================================>  (110 + 5) / 115]                                                                                [Stage 91:=======================================>              (84 + 32) / 116][Stage 91:=============================================>        (97 + 19) / 116][Stage 91:===================================================>  (110 + 6) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.726105706 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386968532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (74 + 44) / 118][Stage 92:======================================>               (85 + 33) / 118][Stage 92:============================================>        (100 + 18) / 118][Stage 92:====================================================> (115 + 3) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:=======================================>              (86 + 33) / 119][Stage 93:===============================================>     (106 + 13) / 119][Stage 93:====================================================> (116 + 3) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.35246422 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=249", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=249,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348574972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (82 + 33) / 115][Stage 94:========================================>             (87 + 28) / 115][Stage 94:===============================================>     (104 + 11) / 115][Stage 94:=====================================================>(113 + 2) / 115]                                                                                [Stage 95:========================================>             (86 + 30) / 116][Stage 95:==============================================>      (102 + 14) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.726379332 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422482228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (62 + 58) / 120][Stage 96:===============================>                      (70 + 50) / 120][Stage 96:=======================================>              (87 + 33) / 120][Stage 96:================================================>    (109 + 11) / 120]                                                                                [Stage 97:============================>                         (64 + 57) / 121][Stage 97:=================================>                    (74 + 47) / 121][Stage 97:==========================================>           (95 + 26) / 121][Stage 97:====================================================> (117 + 4) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.273072071 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381824779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (74 + 44) / 118][Stage 98:=====================================>                (83 + 35) / 118][Stage 98:============================================>        (100 + 18) / 118][Stage 98:=====================================================>(116 + 2) / 118]                                                                                [Stage 99:==================================>                   (75 + 44) / 119][Stage 99:======================================>               (84 + 35) / 119][Stage 99:=============================================>       (102 + 17) / 119][Stage 99:=================================================>    (110 + 9) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.321097469 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide14;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:=================================>                   (75 + 43) / 118][Stage 100:========================================>            (91 + 27) / 118][Stage 100:=============================================>      (103 + 15) / 118][Stage 100:====================================================>(116 + 2) / 118]                                                                                [Stage 101:=================================>                   (75 + 44) / 119][Stage 101:=====================================>               (85 + 34) / 119][Stage 101:=============================================>      (105 + 14) / 119][Stage 101:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.219250685 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363063796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (76 + 37) / 113][Stage 102:=======================================>             (84 + 29) / 113][Stage 102:=============================================>       (98 + 15) / 113][Stage 102:==================================================>  (107 + 6) / 113]                                                                                [Stage 103:=====================================>               (81 + 33) / 114][Stage 103:===========================================>         (94 + 20) / 114][Stage 103:===============================================>    (104 + 10) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.87381673 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376006444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:===================================>                 (78 + 40) / 118][Stage 104:=======================================>             (89 + 29) / 118][Stage 104:============================================>       (100 + 18) / 118][Stage 104:==================================================>  (113 + 5) / 118]                                                                                [Stage 105:================================>                    (74 + 45) / 119][Stage 105:===================================>                 (80 + 39) / 119][Stage 105:========================================>            (92 + 27) / 119][Stage 105:==============================================>     (107 + 12) / 119][Stage 105:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.453381635 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34353195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (81 + 34) / 115][Stage 106:========================================>            (87 + 28) / 115][Stage 106:==============================================>     (103 + 12) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:======================================>              (84 + 32) / 116][Stage 107:=========================================>           (91 + 25) / 116][Stage 107:=================================================>   (109 + 7) / 116][Stage 107:===================================================> (113 + 3) / 116][Stage 107:====================================================>(114 + 2) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.94417251 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394920291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 41) / 113][Stage 108:=======================================>             (84 + 29) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:==============================================>     (102 + 11) / 113][Stage 108:==================================================>  (107 + 6) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===================================>                 (76 + 38) / 114][Stage 109:=========================================>           (89 + 25) / 114][Stage 109:=============================================>       (98 + 16) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:==================================================>  (108 + 6) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.458887757 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36555483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===================================>                 (76 + 37) / 113][Stage 110:========================================>            (86 + 27) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=======================================>             (86 + 28) / 114][Stage 111:============================================>        (96 + 18) / 114][Stage 111:===============================================>    (104 + 10) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.786553939 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367321434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (71 + 42) / 113][Stage 112:======================================>              (83 + 30) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:=================================================>   (105 + 8) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:===================================>                 (77 + 37) / 114][Stage 113:=======================================>             (86 + 28) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:================================================>    (105 + 9) / 114][Stage 113:===================================================> (111 + 3) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.682841299 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401411163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=============================>                       (64 + 51) / 115][Stage 114:====================================>                (79 + 36) / 115][Stage 114:===========================================>         (94 + 21) / 115][Stage 114:================================================>    (106 + 9) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:===============================>                     (68 + 48) / 116][Stage 115:=======================================>             (87 + 29) / 116][Stage 115:=============================================>      (102 + 14) / 116][Stage 115:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.805364891 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409541011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:===========================>                         (63 + 57) / 120][Stage 116:==================================>                  (79 + 41) / 120][Stage 116:==============================================>     (107 + 13) / 120][Stage 116:====================================================>(119 + 1) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:=============================>                       (68 + 53) / 121][Stage 117:====================================>                (83 + 38) / 121][Stage 117:=============================================>      (107 + 14) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.393491173 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381471797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (79 + 36) / 115][Stage 118:==========================================>          (93 + 22) / 115][Stage 118:=================================================>   (107 + 8) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:==================================>                  (75 + 41) / 116][Stage 119:=========================================>           (91 + 25) / 116][Stage 119:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.801142938 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385337209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:=============================>                       (63 + 50) / 113][Stage 120:====================================>                (78 + 35) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:================================>                    (70 + 44) / 114][Stage 121:======================================>              (83 + 31) / 114][Stage 121:==============================================>      (99 + 15) / 114][Stage 121:===================================================> (111 + 3) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.473355598 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333967584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (82 + 33) / 115][Stage 122:========================================>            (88 + 27) / 115][Stage 122:==================================================>  (109 + 6) / 115]                                                                                [Stage 123:=======================================>             (86 + 30) / 116][Stage 123:============================================>        (97 + 19) / 116][Stage 123:=================================================>   (108 + 8) / 116][Stage 123:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.684362207 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379473257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:=============================>                       (63 + 50) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:============================================>        (94 + 19) / 113][Stage 124:==================================================>  (107 + 6) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:================================>                    (70 + 44) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:=================================================>   (106 + 8) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.464858496 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392206023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:============================>                        (64 + 56) / 120][Stage 126:=====================================>               (86 + 34) / 120][Stage 126:=================================================>   (112 + 8) / 120][Stage 126:====================================================>(118 + 2) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:===============================>                     (71 + 50) / 121][Stage 127:=====================================>               (85 + 36) / 121][Stage 127:=============================================>      (105 + 16) / 121][Stage 127:==================================================>  (115 + 6) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.674575793 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386028955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:================================>                    (69 + 44) / 113][Stage 128:======================================>              (82 + 31) / 113][Stage 128:==================================================>  (107 + 6) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (65 + 49) / 114][Stage 129:=====================================>               (81 + 33) / 114][Stage 129:=============================================>       (97 + 17) / 114][Stage 129:==================================================>  (109 + 5) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.344671878 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=248", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=248,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392043415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:=============================>                       (67 + 53) / 120][Stage 130:=====================================>               (86 + 34) / 120][Stage 130:===============================================>    (110 + 10) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:============================>                        (64 + 57) / 121][Stage 131:===================================>                 (80 + 41) / 121][Stage 131:==========================================>          (98 + 23) / 121][Stage 131:=================================================>   (113 + 8) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.444248827 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348098641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:====================================>                (77 + 36) / 113][Stage 132:============================================>        (94 + 19) / 113][Stage 132:==============================================>     (102 + 11) / 113][Stage 132:====================================================>(111 + 2) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:=================================>                   (73 + 41) / 114][Stage 133:=======================================>             (86 + 28) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:===============================================>    (104 + 10) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.163870054 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370236243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==============================>                      (66 + 49) / 115][Stage 134:===================================>                 (78 + 37) / 115][Stage 134:========================================>            (88 + 27) / 115][Stage 134:=============================================>      (101 + 14) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:=================================>                   (73 + 43) / 116][Stage 135:=======================================>             (87 + 29) / 116][Stage 135:==============================================>     (104 + 12) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.949059519 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401961021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:==============================>                      (64 + 49) / 113][Stage 136:=====================================>               (79 + 34) / 113][Stage 136:============================================>        (95 + 18) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (59 + 55) / 114][Stage 137:=============================>                       (63 + 51) / 114][Stage 137:====================================>                (78 + 36) / 114][Stage 137:===============================================>    (104 + 10) / 114][Stage 137:====================================================>(112 + 2) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.388269311 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390055671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==============================>                      (64 + 49) / 113][Stage 138:=====================================>               (81 + 32) / 113][Stage 138:==============================================>     (102 + 11) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:=================================>                   (71 + 43) / 114][Stage 139:=======================================>             (85 + 29) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.137058298 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348433588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (77 + 36) / 113][Stage 140:=========================================>           (89 + 24) / 113][Stage 140:=============================================>       (96 + 17) / 113][Stage 140:==================================================>  (107 + 6) / 113]                                                                                [Stage 141:=====================================>               (80 + 34) / 114][Stage 141:=========================================>           (90 + 24) / 114][Stage 141:=============================================>      (100 + 14) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.90619091 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357852281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (80 + 33) / 113][Stage 142:=========================================>           (89 + 24) / 113][Stage 142:=============================================>       (98 + 15) / 113][Stage 142:==================================================>  (107 + 6) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:======================================>              (83 + 31) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:=================================================>   (106 + 8) / 114][Stage 143:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.145871913 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334409049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=========================================>           (91 + 24) / 115][Stage 144:=============================================>      (101 + 14) / 115][Stage 144:===================================================> (112 + 3) / 115]                                                                                [Stage 145:=======================================>             (87 + 29) / 116][Stage 145:============================================>        (98 + 18) / 116][Stage 145:==================================================>  (110 + 6) / 116][Stage 145:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.888029006 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395389116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:===============================>                     (68 + 45) / 113][Stage 146:======================================>              (83 + 30) / 113][Stage 146:==============================================>     (102 + 11) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:=============================>                       (64 + 50) / 114][Stage 147:========================================>            (87 + 27) / 114][Stage 147:===============================================>    (104 + 10) / 114][Stage 147:===================================================> (111 + 3) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.460294881 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373222969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (74 + 41) / 115][Stage 148:==========================================>          (93 + 22) / 115][Stage 148:================================================>    (106 + 9) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:===============================>                     (68 + 48) / 116][Stage 149:====================================>                (80 + 36) / 116][Stage 149:============================================>        (98 + 18) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.70025425 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376754318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:==================================>                  (77 + 41) / 118][Stage 150:========================================>            (91 + 27) / 118][Stage 150:=============================================>      (104 + 14) / 118][Stage 150:==================================================>  (113 + 5) / 118]                                                                                [Stage 151:=================================>                   (75 + 44) / 119][Stage 151:======================================>              (86 + 33) / 119][Stage 151:==========================================>          (96 + 23) / 119][Stage 151:=================================================>   (112 + 7) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.505641799 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39165233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:============================>                        (61 + 52) / 113][Stage 152:====================================>                (78 + 35) / 113][Stage 152:=============================================>       (98 + 15) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:==============================>                      (65 + 49) / 114][Stage 153:=========================================>           (90 + 24) / 114][Stage 153:=============================================>      (100 + 14) / 114][Stage 153:===================================================> (111 + 3) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.349191417 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36308404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:==================================>                  (76 + 42) / 118][Stage 154:======================================>              (86 + 32) / 118][Stage 154:============================================>       (101 + 17) / 118][Stage 154:=================================================>   (110 + 8) / 118]                                                                                [Stage 155:=================================>                   (76 + 43) / 119][Stage 155:====================================>                (81 + 38) / 119][Stage 155:==============================================>     (106 + 13) / 119][Stage 155:====================================================>(117 + 2) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.319665033 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide42;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:===================================>                 (79 + 39) / 118][Stage 156:==========================================>          (95 + 23) / 118][Stage 156:===============================================>    (107 + 11) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (72 + 47) / 119][Stage 157:==================================>                  (77 + 42) / 119][Stage 157:========================================>            (90 + 29) / 119][Stage 157:==============================================>     (106 + 13) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.238115898 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33286378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:====================================>                (79 + 36) / 115][Stage 158:=======================================>             (85 + 30) / 115][Stage 158:===============================================>    (105 + 10) / 115]                                                                                [Stage 159:====================================>                (80 + 36) / 116][Stage 159:======================================>              (84 + 32) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.40799 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335937608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (81 + 34) / 115][Stage 160:=========================================>           (91 + 24) / 115][Stage 160:==============================================>     (102 + 13) / 115][Stage 160:===================================================> (111 + 4) / 115]                                                                                [Stage 161:=====================================>               (82 + 34) / 116][Stage 161:==========================================>          (94 + 22) / 116][Stage 161:=================================================>   (108 + 8) / 116][Stage 161:===================================================> (113 + 3) / 116][Stage 161:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.617242667 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354787435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===================================>                 (76 + 37) / 113][Stage 162:========================================>            (86 + 27) / 113][Stage 162:============================================>        (94 + 19) / 113][Stage 162:==============================================>     (101 + 12) / 113]                                                                                [Stage 163:====================================>                (79 + 35) / 114][Stage 163:==========================================>          (91 + 23) / 114][Stage 163:=============================================>       (98 + 16) / 114][Stage 163:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.97937117 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344533314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (83 + 32) / 115][Stage 164:==========================================>          (93 + 22) / 115][Stage 164:=================================================>   (108 + 7) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:=====================================>               (83 + 33) / 116][Stage 165:===========================================>         (95 + 21) / 116][Stage 165:================================================>    (107 + 9) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.602252511 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369402923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=============================>                       (65 + 50) / 115][Stage 166:===================================>                 (78 + 37) / 115][Stage 166:==========================================>          (93 + 22) / 115][Stage 166:=================================================>   (107 + 8) / 115]                                                                                [Stage 167:================================>                    (72 + 44) / 116][Stage 167:====================================>                (80 + 36) / 116][Stage 167:==========================================>          (94 + 22) / 116][Stage 167:=================================================>   (109 + 7) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.910229143 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382804529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=============================>                       (64 + 51) / 115][Stage 168:==================================>                  (74 + 41) / 115][Stage 168:=========================================>           (90 + 25) / 115][Stage 168:=================================================>   (108 + 7) / 115]                                                                                [Stage 169:=================================>                   (73 + 43) / 116][Stage 169:========================================>            (89 + 27) / 116][Stage 169:===============================================>    (105 + 11) / 116][Stage 169:====================================================>(114 + 2) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.496925944 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373004528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (70 + 45) / 115][Stage 170:======================================>              (84 + 31) / 115][Stage 170:=============================================>       (98 + 17) / 115][Stage 170:==================================================>  (110 + 5) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:=====================================>               (83 + 33) / 116][Stage 171:=============================================>       (99 + 17) / 116][Stage 171:=================================================>   (109 + 7) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.992444763 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374812591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (58 + 55) / 113][Stage 172:==============================>                      (64 + 49) / 113][Stage 172:=====================================>               (80 + 33) / 113][Stage 172:=============================================>       (96 + 17) / 113][Stage 172:===================================================> (109 + 4) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:============================>                        (61 + 53) / 114][Stage 173:=================================>                   (71 + 43) / 114][Stage 173:=======================================>             (85 + 29) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:===================================================> (111 + 3) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.812570711 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
org.apache.spark.sql.AnalysisException: Path does not exist: hdfs://ctl:9000/nidan/orc/individualORC/slide28;
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:382)
  at org.apache.spark.sql.execution.datasources.DataSource$$anonfun$14.apply(DataSource.scala:370)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
  at scala.collection.immutable.List.foreach(List.scala:381)
  at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
  at scala.collection.immutable.List.flatMap(List.scala:344)
  at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:370)
  at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:152)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:464)
  at org.apache.spark.sql.DataFrameReader.orc(DataFrameReader.scala:453)
  at $anonfun$1.apply$mcV$sp(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at $anonfun$1.apply(<console>:36)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:=============================>                       (62 + 51) / 113][Stage 174:======================================>              (83 + 30) / 113][Stage 174:=============================================>       (97 + 16) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:=============================>                       (64 + 50) / 114][Stage 175:===================================>                 (76 + 38) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.236741755 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371973934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (72 + 43) / 115][Stage 176:========================================>            (88 + 27) / 115][Stage 176:=================================================>   (107 + 8) / 115]                                                                                [Stage 177:==============================>                      (67 + 49) / 116][Stage 177:===================================>                 (77 + 39) / 116][Stage 177:==========================================>          (93 + 23) / 116][Stage 177:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.523971915 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359704526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:===================================>                 (80 + 38) / 118][Stage 178:============================================>       (100 + 18) / 118][Stage 178:===================================================> (114 + 4) / 118][Stage 178:====================================================>(117 + 1) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:=================================>                   (76 + 43) / 119][Stage 179:======================================>              (87 + 32) / 119][Stage 179:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.113784511 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335016794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=======================================>             (86 + 29) / 115][Stage 180:============================================>        (96 + 19) / 115][Stage 180:=================================================>   (107 + 8) / 115]                                                                                [Stage 181:========================================>            (88 + 28) / 116][Stage 181:=============================================>       (99 + 17) / 116][Stage 181:==================================================>  (110 + 6) / 116][Stage 181:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.627189724 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370282138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==============================>                      (67 + 48) / 115][Stage 182:===================================>                 (76 + 39) / 115][Stage 182:===========================================>         (94 + 21) / 115][Stage 182:===============================================>    (105 + 10) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:===============================>                     (69 + 47) / 116][Stage 183:========================================>            (88 + 28) / 116][Stage 183:=============================================>      (101 + 15) / 116][Stage 183:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.796395353 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=255", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=255,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396315869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:==============================>                      (66 + 47) / 113][Stage 184:=====================================>               (81 + 32) / 113][Stage 184:==============================================>     (101 + 12) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:=================================>                   (73 + 41) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.04969938 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352687508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=====================================>               (81 + 32) / 113][Stage 186:===========================================>         (92 + 21) / 113][Stage 186:=============================================>       (98 + 15) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:=====================================>               (81 + 33) / 114][Stage 187:============================================>        (95 + 19) / 114][Stage 187:===============================================>    (104 + 10) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.800181637 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361182156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:================================>                    (73 + 45) / 118][Stage 188:=======================================>             (87 + 31) / 118][Stage 188:===========================================>         (97 + 21) / 118][Stage 188:=================================================>   (110 + 8) / 118][Stage 188:====================================================>(116 + 2) / 118]                                                                                [Stage 189:=================================>                   (75 + 44) / 119][Stage 189:=====================================>               (84 + 35) / 119][Stage 189:===========================================>         (98 + 21) / 119][Stage 189:==============================================>     (107 + 12) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.499406017 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367379955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=================================>                   (74 + 44) / 118][Stage 190:====================================>                (81 + 37) / 118][Stage 190:========================================>            (90 + 28) / 118][Stage 190:=================================================>   (110 + 8) / 118][Stage 190:====================================================>(116 + 2) / 118]                                                                                [Stage 191:================================>                    (74 + 45) / 119][Stage 191:======================================>              (87 + 32) / 119][Stage 191:==========================================>          (95 + 24) / 119][Stage 191:==================================================>  (113 + 6) / 119][Stage 191:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.749233354 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365605704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (73 + 45) / 118][Stage 192:==================================>                  (76 + 42) / 118][Stage 192:=========================================>           (92 + 26) / 118][Stage 192:===============================================>    (107 + 11) / 118][Stage 192:====================================================>(116 + 2) / 118]                                                                                [Stage 193:=================================>                   (75 + 44) / 119][Stage 193:=================================>                   (76 + 43) / 119][Stage 193:========================================>            (92 + 27) / 119][Stage 193:=============================================>      (104 + 15) / 119][Stage 193:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.930007459 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356106006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (71 + 42) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:=============================================>       (97 + 16) / 113][Stage 194:==================================================>  (107 + 6) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:====================================>                (79 + 35) / 114][Stage 195:========================================>            (88 + 26) / 114][Stage 195:============================================>        (96 + 18) / 114][Stage 195:==============================================>     (102 + 12) / 114][Stage 195:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.767538729 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349448939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:>                                                      (0 + 0) / 113][Stage 196:====================================>                (77 + 36) / 113][Stage 196:=======================================>             (85 + 28) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:===================================================> (110 + 3) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===================================>                 (77 + 37) / 114][Stage 197:========================================>            (87 + 27) / 114][Stage 197:=============================================>       (98 + 16) / 114][Stage 197:=================================================>   (106 + 8) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.055703339 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382101711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (73 + 45) / 118][Stage 198:=====================================>               (83 + 35) / 118][Stage 198:============================================>       (100 + 18) / 118][Stage 198:=================================================>   (111 + 7) / 118]                                                                                [Stage 199:================================>                    (74 + 45) / 119][Stage 199:=====================================>               (85 + 34) / 119][Stage 199:============================================>        (99 + 20) / 119][Stage 199:==================================================>  (113 + 6) / 119][Stage 199:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.347641822 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374623281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:============================>                        (61 + 52) / 113][Stage 200:===================================>                 (76 + 37) / 113][Stage 200:==========================================>          (91 + 22) / 113][Stage 200:=================================================>   (105 + 8) / 113]                                                                                [Stage 201:============================>                        (61 + 53) / 114][Stage 201:=================================>                   (73 + 41) / 114][Stage 201:=========================================>           (90 + 24) / 114][Stage 201:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.08028649 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m22.285s
user	11m49.716s
sys	0m51.396s
