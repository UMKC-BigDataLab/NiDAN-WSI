Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/31 21:48:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:49:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:49:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:49:12 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/31 21:49:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:49:25 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170531214914-0716).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.446344989 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (36 + 79) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:========================>                              (51 + 65) / 116][Stage 1:============================>                          (61 + 55) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.920168171 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.761713104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (43 + 70) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:=========================================>             (86 + 27) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:============================>                          (60 + 54) / 114][Stage 3:=============================>                         (62 + 52) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:======================================>                (79 + 35) / 114][Stage 3:===============================================>       (98 + 16) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.624533519 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.741108248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (55 + 58) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:==============================>                        (62 + 51) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:============================>                          (59 + 55) / 114][Stage 5:==============================>                        (63 + 51) / 114][Stage 5:==================================>                    (72 + 42) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:================================================>     (103 + 11) / 114]                                                                                Time elapsed: 4.110670907 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.615530074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:================================>                      (66 + 47) / 113][Stage 6:====================================>                  (76 + 37) / 113][Stage 6:=============================================>         (94 + 19) / 113][Stage 6:====================================================>  (107 + 6) / 113][Stage 6:=====================================================> (110 + 3) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=================================>                     (69 + 45) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:===============================================>      (101 + 13) / 114]                                                                                Time elapsed: 4.223136848 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=254", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=254,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.608770599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 54) / 113][Stage 8:=============================>                         (61 + 52) / 113][Stage 8:=====================================>                 (77 + 36) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:==================================================>    (104 + 9) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:===========================>                           (58 + 56) / 114][Stage 9:===============================>                       (65 + 49) / 114][Stage 9:====================================>                  (76 + 38) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(112 + 2) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.147857025 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.584420024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:=================================================>    (104 + 9) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:====================================>                 (77 + 37) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.752811118 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554095762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:============================>                         (60 + 53) / 113][Stage 12:===================================>                  (74 + 39) / 113][Stage 12:===========================================>          (91 + 22) / 113][Stage 12:===================================================>  (107 + 6) / 113][Stage 12:===================================================>  (108 + 5) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===========================>                          (59 + 55) / 114][Stage 13:=============================>                        (62 + 52) / 114][Stage 13:===================================>                  (74 + 40) / 114][Stage 13:===========================================>          (92 + 22) / 114][Stage 13:====================================================> (111 + 3) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.717591707 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.599497705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:===============================>                      (65 + 48) / 113][Stage 14:=====================================>                (78 + 35) / 113][Stage 14:===============================================>     (102 + 11) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=================================>                    (70 + 44) / 114][Stage 15:=======================================>              (83 + 31) / 114][Stage 15:==============================================>       (98 + 16) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.915603743 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.626223852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:=================================>                    (71 + 42) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:=============================>                        (62 + 52) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:=======================================>              (83 + 31) / 114][Stage 17:=============================================>        (95 + 19) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.788158844 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541139553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (59 + 54) / 113][Stage 18:==================================>                   (72 + 41) / 113][Stage 18:=========================================>            (87 + 26) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:=====================================>                (80 + 34) / 114][Stage 19:==============================================>       (98 + 16) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.452629849 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511304207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:=============================>                        (62 + 51) / 113][Stage 20:=================================>                    (71 + 42) / 113][Stage 20:========================================>             (85 + 28) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:==============================>                       (64 + 50) / 114][Stage 21:======================================>               (82 + 32) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.646474995 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503012891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=============================================>        (95 + 18) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:================================>                     (69 + 45) / 114][Stage 23:=========================================>            (88 + 26) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.218120656 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494412776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (67 + 46) / 113][Stage 24:=========================================>            (86 + 27) / 113][Stage 24:===============================================>     (102 + 11) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:================================>                     (69 + 45) / 114][Stage 25:=========================================>            (87 + 27) / 114][Stage 25:================================================>    (104 + 10) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.137309152 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605637515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:==============================>                       (64 + 49) / 113][Stage 26:=====================================>                (79 + 34) / 113][Stage 26:==============================================>      (100 + 13) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:============================>                         (61 + 53) / 114][Stage 27:===================================>                  (75 + 39) / 114][Stage 27:===========================================>          (91 + 23) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (110 + 4) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.602996416 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486546085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:===============================>                      (65 + 48) / 113][Stage 28:========================================>             (85 + 28) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:================================>                     (68 + 46) / 114][Stage 29:==========================================>           (89 + 25) / 114][Stage 29:===================================================>  (108 + 6) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.322311356 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488906065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:=============================>                        (62 + 51) / 113][Stage 30:=========================================>            (86 + 27) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:===================================================>  (107 + 6) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (64 + 50) / 114][Stage 31:======================================>               (81 + 33) / 114][Stage 31:==============================================>      (101 + 13) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.846162046 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481920967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:=============================>                        (61 + 52) / 113][Stage 32:==================================>                   (72 + 41) / 113][Stage 32:============================================>         (93 + 20) / 113][Stage 32:====================================================> (109 + 4) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:==================================>                   (72 + 42) / 114][Stage 33:=============================================>        (95 + 19) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.103838109 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541499102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=============================>                        (61 + 52) / 113][Stage 34:===============================>                      (66 + 47) / 113][Stage 34:==========================================>           (88 + 25) / 113][Stage 34:===================================================>  (107 + 6) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:===================================>                  (75 + 39) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.119098709 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540956269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:===============================>                      (65 + 48) / 113][Stage 36:=====================================>                (79 + 34) / 113][Stage 36:==============================================>       (98 + 15) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:=================================>                    (70 + 44) / 114][Stage 37:===========================================>          (92 + 22) / 114][Stage 37:=================================================>    (105 + 9) / 114][Stage 37:===================================================>  (109 + 5) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.604872476 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473370481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:==============================>                       (64 + 49) / 113][Stage 38:=======================================>              (83 + 30) / 113][Stage 38:==============================================>       (98 + 15) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:===============================>                      (66 + 48) / 114][Stage 39:====================================>                 (77 + 37) / 114][Stage 39:============================================>         (94 + 20) / 114][Stage 39:==================================================>   (107 + 7) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.380455279 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499063911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (61 + 52) / 113][Stage 40:==================================>                   (73 + 40) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:====================================================> (109 + 4) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:==============================>                       (65 + 49) / 114][Stage 41:=====================================>                (79 + 35) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.218749221 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47349393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:================================>                     (69 + 44) / 113][Stage 42:==========================================>           (89 + 24) / 113][Stage 42:==================================================>   (106 + 7) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:======================================>               (82 + 32) / 114][Stage 43:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.114421478 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451644383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:================================>                     (68 + 45) / 113][Stage 44:=======================================>              (83 + 30) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:==============================>                       (64 + 50) / 114][Stage 45:=======================================>              (83 + 31) / 114][Stage 45:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.077235069 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488265489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:=============================>                        (61 + 52) / 113][Stage 46:====================================>                 (76 + 37) / 113][Stage 46:=============================================>        (95 + 18) / 113][Stage 46:===================================================>  (108 + 5) / 113]                                                                                [Stage 47:=============================>                        (63 + 51) / 114][Stage 47:====================================>                 (78 + 36) / 114][Stage 47:============================================>         (93 + 21) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.555446115 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461543951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (60 + 53) / 113][Stage 48:===============================>                      (65 + 48) / 113][Stage 48:========================================>             (85 + 28) / 113][Stage 48:===================================================>  (108 + 5) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:================================>                     (69 + 45) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.06050067 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448382024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:==============================>                       (63 + 50) / 113][Stage 50:====================================>                 (76 + 37) / 113][Stage 50:===============================================>     (102 + 11) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:=========================================>            (87 + 27) / 114][Stage 51:================================================>    (104 + 10) / 114][Stage 51:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.331891956 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440937803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:==============================>                       (63 + 50) / 113][Stage 52:===================================>                  (74 + 39) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:==============================>                       (64 + 50) / 114][Stage 53:===================================>                  (74 + 40) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.131951226 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=250", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=250,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46400706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:============================>                         (60 + 53) / 113][Stage 54:===================================>                  (74 + 39) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:=====================================================>(111 + 2) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:============================>                         (61 + 53) / 114][Stage 55:===================================>                  (75 + 39) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.186763784 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438174139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:================================>                     (68 + 45) / 113][Stage 56:=========================================>            (87 + 26) / 113][Stage 56:==================================================>   (105 + 8) / 113][Stage 56:====================================================> (109 + 4) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:=============================>                        (62 + 52) / 114][Stage 57:====================================>                 (78 + 36) / 114][Stage 57:============================================>         (93 + 21) / 114][Stage 57:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.539518443 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452459416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:================================>                     (68 + 45) / 113][Stage 58:=======================================>              (83 + 30) / 113][Stage 58:==============================================>      (100 + 13) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:================================>                     (68 + 46) / 114][Stage 59:============================================>         (94 + 20) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.092211673 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523052016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:=============================>                        (61 + 52) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:===========================================>          (90 + 23) / 113][Stage 60:===================================================>  (107 + 6) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:===============================>                      (67 + 47) / 114][Stage 61:==========================================>           (90 + 24) / 114][Stage 61:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.18360246 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434244141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:>                                                       (0 + 0) / 113][Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (64 + 49) / 113][Stage 62:=========================================>            (87 + 26) / 113][Stage 62:==================================================>   (105 + 8) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:==================================>                   (73 + 41) / 114][Stage 63:=============================================>        (95 + 19) / 114][Stage 63:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.328367101 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443270787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (61 + 52) / 113][Stage 64:===================================>                  (74 + 39) / 113][Stage 64:=============================================>        (96 + 17) / 113][Stage 64:===================================================>  (107 + 6) / 113][Stage 64:===================================================>  (108 + 5) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:==============================>                       (65 + 49) / 114][Stage 65:====================================>                 (78 + 36) / 114][Stage 65:=================================================>    (105 + 9) / 114][Stage 65:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.312736207 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44931492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:=============================>                        (62 + 51) / 113][Stage 66:======================================>               (80 + 33) / 113][Stage 66:===============================================>     (101 + 12) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:=================================>                    (71 + 43) / 114][Stage 67:=========================================>            (88 + 26) / 114][Stage 67:===============================================>     (102 + 12) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.094177418 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425667671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (63 + 50) / 113][Stage 68:==================================>                   (72 + 41) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:====================================================> (110 + 3) / 113]                                                                                [Stage 69:==============================>                       (65 + 49) / 114][Stage 69:==================================>                   (73 + 41) / 114][Stage 69:============================================>         (94 + 20) / 114]                                                                                Time elapsed: 2.885182503 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548237893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:=============================>                        (62 + 51) / 113][Stage 70:=====================================>                (78 + 35) / 113][Stage 70:==============================================>       (97 + 16) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:==============================>                       (64 + 50) / 114][Stage 71:==================================>                   (72 + 42) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==================================================>   (107 + 7) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.225358 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421405489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:=============================>                        (62 + 51) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:===============================================>     (102 + 11) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:================================>                     (69 + 45) / 114][Stage 73:======================================>               (81 + 33) / 114][Stage 73:==================================================>   (106 + 8) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.13987082 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424589807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:>                                                       (0 + 0) / 113][Stage 74:===========================>                          (58 + 55) / 113][Stage 74:===============================>                      (65 + 48) / 113][Stage 74:=======================================>              (83 + 30) / 113][Stage 74:===================================================>  (108 + 5) / 113][Stage 74:======================================================(113 + 0) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:================================>                     (68 + 46) / 114][Stage 75:============================================>         (93 + 21) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.187913757 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418892061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:=====================================>                (79 + 34) / 113][Stage 76:==============================================>      (100 + 13) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:================================>                     (69 + 45) / 114][Stage 77:==========================================>           (89 + 25) / 114][Stage 77:==================================================>   (107 + 7) / 114][Stage 77:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.118987583 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425559493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:===================================>                  (75 + 38) / 113][Stage 78:==========================================>           (88 + 25) / 113][Stage 78:================================================>    (103 + 10) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:============================================>         (93 + 21) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.144309366 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417998212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:==============================>                       (64 + 49) / 113][Stage 80:========================================>             (84 + 29) / 113][Stage 80:================================================>    (103 + 10) / 113][Stage 80:====================================================> (109 + 4) / 113]                                                                                [Stage 81:=============================>                        (62 + 52) / 114][Stage 81:==================================>                   (73 + 41) / 114][Stage 81:=========================================>            (87 + 27) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.269909054 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41629818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:==============================>                       (64 + 49) / 113][Stage 82:===================================>                  (75 + 38) / 113][Stage 82:============================================>         (93 + 20) / 113][Stage 82:==================================================>   (106 + 7) / 113]                                                                                [Stage 83:=============================>                        (62 + 52) / 114][Stage 83:==================================>                   (73 + 41) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.144708467 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=38", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=38,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41827032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:==============================>                       (63 + 50) / 113][Stage 84:====================================>                 (76 + 37) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:==============================>                       (64 + 50) / 114][Stage 85:====================================>                 (78 + 36) / 114][Stage 85:==============================================>      (101 + 13) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.208602037 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42052936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=============================>                        (61 + 52) / 113][Stage 86:=====================================>                (78 + 35) / 113][Stage 86:===================================================>  (108 + 5) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:=============================>                        (62 + 52) / 114][Stage 87:=====================================>                (79 + 35) / 114][Stage 87:==============================================>       (99 + 15) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.133944271 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430787924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (60 + 53) / 113][Stage 88:===============================>                      (65 + 48) / 113][Stage 88:========================================>             (84 + 29) / 113][Stage 88:==================================================>   (106 + 7) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===============================>                      (66 + 48) / 114][Stage 89:========================================>             (86 + 28) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.433288598 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405728117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:================================>                     (67 + 46) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:================================================>    (103 + 10) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:=============================>                        (63 + 51) / 114][Stage 91:=====================================>                (80 + 34) / 114][Stage 91:==============================================>       (98 + 16) / 114][Stage 91:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.124684412 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413841346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:==============================>                       (64 + 49) / 113][Stage 92:=======================================>              (83 + 30) / 113][Stage 92:================================================>    (103 + 10) / 113]                                                                                [Stage 93:============================>                         (61 + 53) / 114][Stage 93:====================================>                 (78 + 36) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.016357425 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419308779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:================================>                     (69 + 44) / 113][Stage 94:==========================================>           (89 + 24) / 113][Stage 94:===============================================>     (102 + 11) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:==============================>                       (64 + 50) / 114][Stage 95:=====================================>                (79 + 35) / 114][Stage 95:==============================================>      (100 + 14) / 114]                                                                                Time elapsed: 2.965050649 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406294467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=============================>                        (61 + 52) / 113][Stage 96:==================================>                   (72 + 41) / 113][Stage 96:==========================================>           (89 + 24) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:===============================>                      (66 + 48) / 114][Stage 97:=========================================>            (88 + 26) / 114][Stage 97:==================================================>   (106 + 8) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.330510922 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414232137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:================================>                     (67 + 46) / 113][Stage 98:========================================>             (85 + 28) / 113][Stage 98:=================================================>    (104 + 9) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:===========================>                          (59 + 55) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:=======================================>              (83 + 31) / 114][Stage 99:=================================================>    (105 + 9) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.14821617 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406982134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:===================================>                 (75 + 38) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:===========================>                         (59 + 55) / 114][Stage 101:=============================>                       (63 + 51) / 114][Stage 101:====================================>                (78 + 36) / 114][Stage 101:=============================================>      (100 + 14) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.390371658 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406984198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:==============================>                      (66 + 47) / 113][Stage 102:========================================>            (87 + 26) / 113][Stage 102:==============================================>     (101 + 12) / 113][Stage 102:===================================================> (109 + 4) / 113]                                                                                [Stage 103:=============================>                       (64 + 50) / 114][Stage 103:===================================>                 (77 + 37) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:=================================================>   (107 + 7) / 114][Stage 103:====================================================>(112 + 2) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.494481763 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392716148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:==============================>                      (65 + 48) / 113][Stage 104:======================================>              (83 + 30) / 113][Stage 104:===============================================>    (103 + 10) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:==================================>                  (74 + 40) / 114][Stage 105:============================================>        (96 + 18) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.075151096 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416615028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:============================>                        (60 + 53) / 113][Stage 106:==================================>                  (74 + 39) / 113][Stage 106:===========================================>         (92 + 21) / 113][Stage 106:==================================================>  (108 + 5) / 113]                                                                                [Stage 107:=============================>                       (64 + 50) / 114][Stage 107:===================================>                 (76 + 38) / 114][Stage 107:============================================>        (96 + 18) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.087738423 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393684794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:==============================>                      (64 + 49) / 113][Stage 108:=====================================>               (79 + 34) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:=============================>                       (64 + 50) / 114][Stage 109:======================================>              (82 + 32) / 114][Stage 109:==============================================>     (101 + 13) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.198928213 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393450818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:=============================>                       (63 + 50) / 113][Stage 110:===================================>                 (76 + 37) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:================================>                    (70 + 44) / 114][Stage 111:============================================>        (95 + 19) / 114][Stage 111:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.057849055 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396706675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:==============================>                      (66 + 47) / 113][Stage 112:=====================================>               (80 + 33) / 113][Stage 112:==============================================>      (99 + 14) / 113][Stage 112:==================================================>  (108 + 5) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:==================================>                  (74 + 40) / 114][Stage 113:=============================================>       (97 + 17) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.247721787 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386982777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==============================>                      (64 + 49) / 113][Stage 114:=========================================>           (88 + 25) / 113][Stage 114:==============================================>     (101 + 12) / 113][Stage 114:==================================================>  (108 + 5) / 113]                                                                                [Stage 115:=============================>                       (63 + 51) / 114][Stage 115:=================================>                   (72 + 42) / 114][Stage 115:=============================================>       (97 + 17) / 114][Stage 115:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.123243979 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395726965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:=============================>                       (63 + 50) / 113][Stage 116:======================================>              (82 + 31) / 113][Stage 116:==============================================>     (102 + 11) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:=================================>                   (71 + 43) / 114][Stage 117:========================================>            (87 + 27) / 114][Stage 117:=================================================>   (106 + 8) / 114][Stage 117:===================================================> (110 + 4) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.599175836 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401794378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:========================================>            (87 + 26) / 113][Stage 118:===================================================> (109 + 4) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:==============================>                      (66 + 48) / 114][Stage 119:=======================================>             (84 + 30) / 114][Stage 119:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.997872458 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401928242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:============================>                        (61 + 52) / 113][Stage 120:===================================>                 (75 + 38) / 113][Stage 120:==============================================>     (100 + 13) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:=================================>                   (71 + 43) / 114][Stage 121:=======================================>             (86 + 28) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.971968051 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390716645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (61 + 52) / 113][Stage 122:================================>                    (69 + 44) / 113][Stage 122:===========================================>         (92 + 21) / 113][Stage 122:===================================================> (109 + 4) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:===============================>                     (67 + 47) / 114][Stage 123:======================================>              (82 + 32) / 114][Stage 123:===============================================>    (104 + 10) / 114][Stage 123:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.416608753 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479044917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:=================================>                   (72 + 41) / 113][Stage 124:=========================================>           (88 + 25) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:=============================>                       (63 + 51) / 114][Stage 125:====================================>                (78 + 36) / 114][Stage 125:============================================>        (96 + 18) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.094914738 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400136096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:==================================>                  (73 + 40) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:=============================>                       (63 + 51) / 114][Stage 127:==================================>                  (75 + 39) / 114][Stage 127:=============================================>       (97 + 17) / 114][Stage 127:==================================================>  (108 + 6) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.22198179 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388992979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=============================>                       (63 + 50) / 113][Stage 128:==================================>                  (74 + 39) / 113][Stage 128:===========================================>         (93 + 20) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:=============================>                       (64 + 50) / 114][Stage 129:==================================>                  (75 + 39) / 114][Stage 129:=============================================>       (98 + 16) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.344714654 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392580997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (61 + 52) / 113][Stage 130:================================>                    (69 + 44) / 113][Stage 130:=====================================>               (81 + 32) / 113][Stage 130:==============================================>     (102 + 11) / 113]                                                                                [Stage 131:=============================>                       (63 + 51) / 114][Stage 131:====================================>                (79 + 35) / 114][Stage 131:============================================>        (95 + 19) / 114][Stage 131:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.036837864 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391685402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=============================>                       (63 + 50) / 113][Stage 132:==================================>                  (73 + 40) / 113][Stage 132:=============================================>       (97 + 16) / 113][Stage 132:====================================================>(111 + 2) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===========================>                         (59 + 55) / 114][Stage 133:=============================>                       (64 + 50) / 114][Stage 133:========================================>            (87 + 27) / 114][Stage 133:=================================================>   (107 + 7) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.185356244 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=253", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=252 AND partitionZIndex<=253,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388396631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:==============================>                      (66 + 47) / 113][Stage 134:========================================>            (87 + 26) / 113][Stage 134:=================================================>   (105 + 8) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:============================>                        (62 + 52) / 114][Stage 135:======================================>              (83 + 31) / 114][Stage 135:=============================================>       (98 + 16) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.186076713 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386874757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:==============================>                      (65 + 48) / 113][Stage 136:====================================>                (78 + 35) / 113][Stage 136:================================================>    (104 + 9) / 113][Stage 136:====================================================>(111 + 2) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:====================================>                (79 + 35) / 114][Stage 137:=============================================>       (98 + 16) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.469356334 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395079247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:===============================>                     (67 + 46) / 113][Stage 138:======================================>              (83 + 30) / 113][Stage 138:==============================================>     (101 + 12) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:=================================>                   (73 + 41) / 114][Stage 139:==============================================>      (99 + 15) / 114][Stage 139:==================================================>  (108 + 6) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.108282322 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39597263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:===============================>                     (67 + 46) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:==============================================>     (102 + 11) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:=============================>                       (64 + 50) / 114][Stage 141:====================================>                (78 + 36) / 114][Stage 141:===========================================>         (94 + 20) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.229601253 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387284168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:=========================================>           (88 + 25) / 113][Stage 142:===================================================> (109 + 4) / 113]                                                                                [Stage 143:============================>                        (61 + 53) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:===========================================>         (93 + 21) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.055589126 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388947189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:============================>                        (61 + 52) / 113][Stage 144:=================================>                   (72 + 41) / 113][Stage 144:============================================>        (95 + 18) / 113][Stage 144:===================================================> (109 + 4) / 113]                                                                                [Stage 145:==============================>                      (66 + 48) / 114][Stage 145:===================================>                 (77 + 37) / 114][Stage 145:=============================================>      (100 + 14) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.053548098 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386545336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:=============================>                       (62 + 51) / 113][Stage 146:====================================>                (78 + 35) / 113][Stage 146:=============================================>       (98 + 15) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:=============================>                       (63 + 51) / 114][Stage 147:====================================>                (79 + 35) / 114][Stage 147:===============================================>    (104 + 10) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.207234019 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391242673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:==============================>                      (65 + 48) / 113][Stage 148:=====================================>               (79 + 34) / 113][Stage 148:==============================================>     (100 + 13) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:=============================>                       (64 + 50) / 114][Stage 149:====================================>                (78 + 36) / 114][Stage 149:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.013282459 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390500577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:===============================>                     (68 + 45) / 113][Stage 150:===========================================>         (93 + 20) / 113][Stage 150:==================================================>  (107 + 6) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:=================================>                   (73 + 41) / 114][Stage 151:===========================================>         (93 + 21) / 114][Stage 151:==================================================>  (109 + 5) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.069604376 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392122078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (61 + 52) / 113][Stage 152:=================================>                   (72 + 41) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:==================================================>  (107 + 6) / 113]                                                                                [Stage 153:=============================>                       (63 + 51) / 114][Stage 153:====================================>                (78 + 36) / 114][Stage 153:=============================================>       (98 + 16) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.911522474 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390203545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:================================>                    (69 + 44) / 113][Stage 154:======================================>              (83 + 30) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:============================>                        (61 + 53) / 114][Stage 155:===============================>                     (67 + 47) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.117522357 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=254 AND partitionZIndex<=255", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=254 AND partitionZIndex<=255,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40150397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:=================================>                   (72 + 41) / 113][Stage 156:========================================>            (87 + 26) / 113][Stage 156:==================================================>  (108 + 5) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:===============================>                     (67 + 47) / 114][Stage 157:==================================>                  (74 + 40) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.078842606 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385713259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=============================>                       (63 + 50) / 113][Stage 158:====================================>                (78 + 35) / 113][Stage 158:==============================================>     (101 + 12) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:==================================>                  (74 + 40) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.225647747 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400932779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:==============================>                      (64 + 49) / 113][Stage 160:======================================>              (83 + 30) / 113][Stage 160:==============================================>     (100 + 13) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:============================>                        (61 + 53) / 114][Stage 161:===============================>                     (68 + 46) / 114][Stage 161:======================================>              (83 + 31) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.091086585 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399795865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:==============================>                      (64 + 49) / 113][Stage 162:====================================>                (78 + 35) / 113][Stage 162:=============================================>       (97 + 16) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:============================>                        (62 + 52) / 114][Stage 163:=====================================>               (81 + 33) / 114][Stage 163:================================================>    (105 + 9) / 114][Stage 163:===================================================> (110 + 4) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.251740047 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381553236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (60 + 53) / 113][Stage 164:==============================>                      (64 + 49) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:==================================================>  (108 + 5) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:===============================>                     (67 + 47) / 114][Stage 165:=====================================>               (81 + 33) / 114][Stage 165:============================================>        (95 + 19) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.846996914 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39434804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:===============================>                     (67 + 46) / 113][Stage 166:=====================================>               (79 + 34) / 113][Stage 166:===============================================>    (103 + 10) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:============================>                        (61 + 53) / 114][Stage 167:=====================================>               (81 + 33) / 114][Stage 167:=============================================>       (98 + 16) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.148610123 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384248019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:=============================>                       (62 + 51) / 113][Stage 168:===================================>                 (75 + 38) / 113][Stage 168:==============================================>     (100 + 13) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==============================>                      (66 + 48) / 114][Stage 169:====================================>                (78 + 36) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.124043589 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=250 AND partitionZIndex<=251", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=250 AND partitionZIndex<=251,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392104051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:===============================>                     (67 + 46) / 113][Stage 170:=====================================>               (81 + 32) / 113][Stage 170:=============================================>       (96 + 17) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:=============================>                       (64 + 50) / 114][Stage 171:====================================>                (78 + 36) / 114][Stage 171:===========================================>         (93 + 21) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.212478766 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385173445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (61 + 52) / 113][Stage 172:=================================>                   (71 + 42) / 113][Stage 172:=========================================>           (88 + 25) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:============================>                        (61 + 53) / 114][Stage 173:=================================>                   (72 + 42) / 114][Stage 173:======================================>              (82 + 32) / 114][Stage 173:===============================================>    (104 + 10) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.163276808 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490853151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:==============================>                      (65 + 48) / 113][Stage 174:====================================>                (77 + 36) / 113][Stage 174:=============================================>       (98 + 15) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:=============================>                       (63 + 51) / 114][Stage 175:==================================>                  (75 + 39) / 114][Stage 175:===========================================>         (94 + 20) / 114][Stage 175:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.123593796 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384839532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:=============================>                       (62 + 51) / 113][Stage 176:=====================================>               (80 + 33) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:===============================>                     (67 + 47) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.07932261 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395003101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:==============================>                      (65 + 48) / 113][Stage 178:=====================================>               (81 + 32) / 113][Stage 178:===============================================>    (103 + 10) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:============================>                        (62 + 52) / 114][Stage 179:===================================>                 (76 + 38) / 114][Stage 179:============================================>        (96 + 18) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.075300564 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393802906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:============================>                        (60 + 53) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:============================================>        (95 + 18) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:======================================>              (82 + 32) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.001687898 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424272866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (60 + 53) / 113][Stage 182:===================================>                 (75 + 38) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:=================================================>   (105 + 8) / 113]                                                                                [Stage 183:============================>                        (61 + 53) / 114][Stage 183:=====================================>               (80 + 34) / 114][Stage 183:==============================================>     (101 + 13) / 114][Stage 183:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.267428523 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408515692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:===============================>                     (67 + 46) / 113][Stage 184:===========================================>         (92 + 21) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:==============================>                      (65 + 49) / 114][Stage 185:==================================>                  (75 + 39) / 114][Stage 185:============================================>        (96 + 18) / 114][Stage 185:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.090545407 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38492545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (60 + 53) / 113][Stage 186:===============================>                     (67 + 46) / 113][Stage 186:===========================================>         (93 + 20) / 113][Stage 186:=================================================>   (106 + 7) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:==============================>                      (66 + 48) / 114][Stage 187:======================================>              (83 + 31) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.111265205 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397013456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:================================>                    (69 + 44) / 113][Stage 188:=============================================>       (96 + 17) / 113][Stage 188:===================================================> (109 + 4) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:==============================>                      (65 + 49) / 114][Stage 189:======================================>              (82 + 32) / 114][Stage 189:==============================================>     (102 + 12) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.931436247 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=248", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=248,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389172551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:================================>                    (70 + 43) / 113][Stage 190:======================================>              (83 + 30) / 113][Stage 190:==============================================>     (101 + 12) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===============================>                     (67 + 47) / 114][Stage 191:========================================>            (87 + 27) / 114][Stage 191:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.985530197 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387437617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:=================================>                   (72 + 41) / 113][Stage 192:=========================================>           (89 + 24) / 113][Stage 192:==================================================>  (108 + 5) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:===================================>                 (77 + 37) / 114][Stage 193:============================================>        (96 + 18) / 114][Stage 193:==================================================>  (108 + 6) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.194525812 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=252", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=252,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389508857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:=================================>                   (71 + 42) / 113][Stage 194:===========================================>         (92 + 21) / 113][Stage 194:==================================================>  (107 + 6) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:===============================>                     (68 + 46) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:===============================================>    (104 + 10) / 114][Stage 195:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.185145955 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403888401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:===============================>                     (68 + 45) / 113][Stage 196:=======================================>             (84 + 29) / 113][Stage 196:===============================================>    (103 + 10) / 113][Stage 196:==================================================>  (108 + 5) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:=====================================>               (80 + 34) / 114][Stage 197:=============================================>       (98 + 16) / 114][Stage 197:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.137184569 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403039206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:==============================>                      (64 + 49) / 113][Stage 198:===================================>                 (76 + 37) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:==============================>                      (65 + 49) / 114][Stage 199:=====================================>               (81 + 33) / 114][Stage 199:=============================================>       (97 + 17) / 114][Stage 199:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.076183601 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=144", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=144,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392076644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:=================================>                   (71 + 42) / 113][Stage 200:========================================>            (87 + 26) / 113][Stage 200:=================================================>   (106 + 7) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:==============================>                      (66 + 48) / 114][Stage 201:=====================================>               (80 + 34) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.172843578 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m3.100s
user	11m42.800s
sys	0m40.648s
