Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/31 21:59:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:59:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:59:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:59:16 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/31 21:59:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:59:28 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170531215917-0717).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.383190539 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======>                                              (15 + 100) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.546931791 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.798566838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (43 + 70) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:=================================>                     (69 + 44) / 113][Stage 2:======================================>                (79 + 34) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:============================>                          (59 + 55) / 114][Stage 3:==============================>                        (63 + 51) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:===================================>                   (74 + 40) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.209941878 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.664274025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (56 + 57) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:===================================>                   (72 + 41) / 113][Stage 4:===========================================>           (89 + 24) / 113][Stage 4:===============================================>       (98 + 15) / 113][Stage 4:=====================================================> (109 + 4) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:===============================>                       (65 + 49) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:=========================================>             (87 + 27) / 114][Stage 5:===============================================>       (99 + 15) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(112 + 2) / 114][Stage 5:=======================================================(114 + 0) / 114]                                                                                Time elapsed: 4.598410309 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.665203634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:==================================>                    (71 + 42) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:==================================================>    (104 + 9) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:==================================>                    (71 + 43) / 114][Stage 7:=========================================>             (87 + 27) / 114][Stage 7:===============================================>      (100 + 14) / 114][Stage 7:===================================================>   (107 + 7) / 114][Stage 7:=====================================================> (111 + 3) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.267494811 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60928043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (54 + 59) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:===============================>                       (64 + 49) / 113][Stage 8:======================================>                (79 + 34) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:===================================================>   (106 + 7) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:===============================>                       (66 + 48) / 114][Stage 9:====================================>                  (76 + 38) / 114][Stage 9:=============================================>         (94 + 20) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.893412622 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.593843912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (66 + 47) / 113][Stage 10:====================================>                 (76 + 37) / 113][Stage 10:===========================================>          (90 + 23) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===========================>                          (57 + 57) / 114][Stage 11:=============================>                        (62 + 52) / 114][Stage 11:====================================>                 (78 + 36) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.170849986 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53352404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:===============================>                      (65 + 48) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:===================================================>  (107 + 6) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:================================>                     (69 + 45) / 114][Stage 13:====================================>                 (77 + 37) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.677312533 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562815591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:===============================>                      (65 + 48) / 113][Stage 14:======================================>               (80 + 33) / 113][Stage 14:==============================================>      (100 + 13) / 113][Stage 14:=================================================>    (104 + 9) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:===============================>                      (66 + 48) / 114][Stage 15:====================================>                 (76 + 38) / 114][Stage 15:=============================================>        (96 + 18) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.740141058 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51975492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:===========================================>          (91 + 22) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:===================================================>  (108 + 5) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.944449704 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554805593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:=============================================>        (96 + 17) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (109 + 4) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:=================================>                    (70 + 44) / 114][Stage 19:==========================================>           (90 + 24) / 114][Stage 19:=================================================>    (105 + 9) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.792209395 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499750939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:================================>                     (67 + 46) / 113][Stage 20:=========================================>            (86 + 27) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:==================================>                   (72 + 42) / 114][Stage 21:===========================================>          (91 + 23) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.726475439 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50160938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:===============================>                      (65 + 48) / 113][Stage 22:======================================>               (80 + 33) / 113][Stage 22:===============================================>     (101 + 12) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===========================>                          (58 + 56) / 114][Stage 23:==============================>                       (64 + 50) / 114][Stage 23:======================================>               (81 + 33) / 114][Stage 23:==============================================>      (101 + 13) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.405765184 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486368556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (67 + 46) / 113][Stage 24:=============================================>        (95 + 18) / 113][Stage 24:===================================================>  (108 + 5) / 113]                                                                                [Stage 25:============================>                         (61 + 53) / 114][Stage 25:==================================>                   (72 + 42) / 114][Stage 25:===========================================>          (92 + 22) / 114][Stage 25:================================================>    (104 + 10) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.349430387 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47744513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:=============================>                        (62 + 51) / 113][Stage 26:==================================>                   (72 + 41) / 113][Stage 26:==========================================>           (88 + 25) / 113][Stage 26:==================================================>   (105 + 8) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:===========================>                          (58 + 56) / 114][Stage 27:=============================>                        (63 + 51) / 114][Stage 27:======================================>               (82 + 32) / 114][Stage 27:==============================================>       (98 + 16) / 114][Stage 27:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.519655144 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=254", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=254,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484655173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:>                                                       (0 + 0) / 113][Stage 28:===========================>                          (58 + 55) / 113][Stage 28:===============================>                      (66 + 47) / 113][Stage 28:=====================================>                (79 + 34) / 113][Stage 28:==============================================>       (97 + 16) / 113][Stage 28:==================================================>   (106 + 7) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:===============================>                      (67 + 47) / 114][Stage 29:=====================================>                (80 + 34) / 114][Stage 29:===============================================>     (102 + 12) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.747708363 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474723631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:=================================>                    (70 + 43) / 113][Stage 30:==========================================>           (88 + 25) / 113][Stage 30:====================================================> (109 + 4) / 113]                                                                                [Stage 31:============================>                         (61 + 53) / 114][Stage 31:=================================>                    (71 + 43) / 114][Stage 31:=============================================>        (96 + 18) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.257709285 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480636338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:==============================>                       (63 + 50) / 113][Stage 32:===================================>                  (74 + 39) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:=================================>                    (71 + 43) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.412301476 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501245059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:============================>                         (60 + 53) / 113][Stage 34:====================================>                 (76 + 37) / 113][Stage 34:=============================================>        (95 + 18) / 113][Stage 34:===================================================>  (107 + 6) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (61 + 53) / 114][Stage 35:================================>                     (68 + 46) / 114][Stage 35:=======================================>              (84 + 30) / 114][Stage 35:==============================================>      (100 + 14) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.75178841 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544853308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:==============================>                       (63 + 50) / 113][Stage 36:==================================>                   (73 + 40) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:====================================================> (109 + 4) / 113]                                                                                [Stage 37:==============================>                       (64 + 50) / 114][Stage 37:=====================================>                (80 + 34) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.296333446 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492701739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:================================>                     (68 + 45) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===================================================>  (107 + 6) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:===============================>                      (67 + 47) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:===============================================>     (102 + 12) / 114][Stage 39:===================================================>  (108 + 6) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.475593506 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469764576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:=================================>                    (71 + 42) / 113][Stage 40:========================================>             (85 + 28) / 113][Stage 40:===============================================>      (99 + 14) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:=================================>                    (70 + 44) / 114][Stage 41:=============================================>        (95 + 19) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:===================================================>  (109 + 5) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.93571122 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463863201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:==============================>                       (64 + 49) / 113][Stage 42:===================================>                  (75 + 38) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:============================>                         (61 + 53) / 114][Stage 43:=================================>                    (71 + 43) / 114][Stage 43:===========================================>          (92 + 22) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.519221001 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455512172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==============================>                       (63 + 50) / 113][Stage 44:==================================>                   (72 + 41) / 113][Stage 44:============================================>         (94 + 19) / 113][Stage 44:===============================================>     (101 + 12) / 113][Stage 44:===================================================>  (107 + 6) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:==============================>                       (64 + 50) / 114][Stage 45:=====================================>                (80 + 34) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:====================================================> (110 + 4) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.902305725 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=248 AND partitionZIndex<=251", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=248 AND partitionZIndex<=251,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450658614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=============================>                        (62 + 51) / 113][Stage 46:===================================>                  (75 + 38) / 113][Stage 46:===========================================>          (91 + 22) / 113][Stage 46:====================================================> (110 + 3) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:=============================>                        (62 + 52) / 114][Stage 47:==================================>                   (73 + 41) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:==================================================>   (106 + 8) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.409721007 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45981697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:================================>                     (67 + 46) / 113][Stage 48:======================================>               (80 + 33) / 113][Stage 48:===============================================>      (99 + 14) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:==============================>                       (64 + 50) / 114][Stage 49:====================================>                 (76 + 38) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:==================================================>   (106 + 8) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.36307181 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426664357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:===============================>                      (65 + 48) / 113][Stage 50:=====================================>                (78 + 35) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:===========================>                          (59 + 55) / 114][Stage 51:=============================>                        (63 + 51) / 114][Stage 51:=======================================>              (83 + 31) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.224088932 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423166592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===============================>                      (66 + 47) / 113][Stage 52:===========================================>          (90 + 23) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:==================================>                   (73 + 41) / 114][Stage 53:==========================================>           (89 + 25) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.165498475 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433740167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:===============================>                      (66 + 47) / 113][Stage 54:======================================>               (81 + 32) / 113][Stage 54:==============================================>       (97 + 16) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:================================>                     (68 + 46) / 114][Stage 55:========================================>             (86 + 28) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.324016391 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423063423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:================================>                     (68 + 45) / 113][Stage 56:=========================================>            (87 + 26) / 113][Stage 56:===============================================>     (101 + 12) / 113][Stage 56:====================================================> (109 + 4) / 113]                                                                                [Stage 57:============================>                         (61 + 53) / 114][Stage 57:====================================>                 (78 + 36) / 114][Stage 57:=============================================>        (96 + 18) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.572415603 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450829485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:=================================>                    (70 + 43) / 113][Stage 58:===========================================>          (92 + 21) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:=============================>                        (62 + 52) / 114][Stage 59:=================================>                    (71 + 43) / 114][Stage 59:===========================================>          (92 + 22) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.262954914 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421401338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:===============================>                      (65 + 48) / 113][Stage 60:=========================================>            (86 + 27) / 113][Stage 60:==================================================>   (105 + 8) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:================================>                     (69 + 45) / 114][Stage 61:========================================>             (86 + 28) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.237807986 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487039228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:=============================>                        (62 + 51) / 113][Stage 62:====================================>                 (77 + 36) / 113][Stage 62:===============================================>     (101 + 12) / 113][Stage 62:====================================================> (109 + 4) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:==============================>                       (65 + 49) / 114][Stage 63:======================================>               (82 + 32) / 114][Stage 63:===============================================>     (102 + 12) / 114][Stage 63:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.694750385 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459215837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:================================>                     (67 + 46) / 113][Stage 64:=====================================>                (79 + 34) / 113][Stage 64:==============================================>      (100 + 13) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:==============================>                       (65 + 49) / 114][Stage 65:=====================================>                (80 + 34) / 114][Stage 65:=============================================>        (97 + 17) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.330475289 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495390155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:===============================>                      (66 + 47) / 113][Stage 66:======================================>               (81 + 32) / 113][Stage 66:==============================================>      (100 + 13) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:================================>                     (69 + 45) / 114][Stage 67:========================================>             (85 + 29) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:=====================================================>(112 + 2) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.378633006 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423276173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:================================>                     (69 + 44) / 113][Stage 68:====================================>                 (77 + 36) / 113][Stage 68:==============================================>      (100 + 13) / 113]                                                                                [Stage 69:============================>                         (61 + 53) / 114][Stage 69:=================================>                    (70 + 44) / 114][Stage 69:=======================================>              (84 + 30) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.358194524 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414914662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:=================================>                    (70 + 43) / 113][Stage 70:=========================================>            (87 + 26) / 113][Stage 70:===================================================>  (107 + 6) / 113]                                                                                [Stage 71:============================>                         (61 + 53) / 114][Stage 71:================================>                     (68 + 46) / 114][Stage 71:========================================>             (85 + 29) / 114][Stage 71:==============================================>      (100 + 14) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.493458867 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415399486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===============================>                      (66 + 47) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (63 + 51) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:=============================================>        (96 + 18) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.608362453 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410551725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:================================>                     (68 + 45) / 113][Stage 74:====================================>                 (77 + 36) / 113][Stage 74:==============================================>       (97 + 16) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:================================>                     (68 + 46) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.553248217 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452299411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:================================>                     (67 + 46) / 113][Stage 76:========================================>             (84 + 29) / 113][Stage 76:==================================================>   (105 + 8) / 113]                                                                                [Stage 77:=============================>                        (62 + 52) / 114][Stage 77:===================================>                  (74 + 40) / 114][Stage 77:===========================================>          (92 + 22) / 114][Stage 77:================================================>    (104 + 10) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.231064743 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423656299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (61 + 52) / 113][Stage 78:=======================================>              (82 + 31) / 113][Stage 78:==============================================>       (97 + 16) / 113][Stage 78:====================================================> (109 + 4) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:===================================>                  (74 + 40) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:==================================================>   (106 + 8) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.854668654 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418877838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:==============================>                       (63 + 50) / 113][Stage 80:=====================================>                (78 + 35) / 113][Stage 80:=============================================>        (96 + 17) / 113]                                                                                [Stage 81:=============================>                        (62 + 52) / 114][Stage 81:===============================>                      (67 + 47) / 114][Stage 81:=========================================>            (88 + 26) / 114][Stage 81:===================================================>  (108 + 6) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263221995 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403887766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:================================>                     (67 + 46) / 113][Stage 82:===========================================>          (92 + 21) / 113][Stage 82:==================================================>   (105 + 8) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:===============================>                      (67 + 47) / 114][Stage 83:========================================>             (85 + 29) / 114][Stage 83:==================================================>   (107 + 7) / 114][Stage 83:=====================================================>(112 + 2) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.705203472 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401337238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:==============================>                       (64 + 49) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:===============================================>      (99 + 14) / 113][Stage 84:===================================================>  (108 + 5) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:====================================>                 (76 + 38) / 114][Stage 85:==============================================>       (98 + 16) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.218443217 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409575999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:===============================>                      (65 + 48) / 113][Stage 86:=====================================>                (78 + 35) / 113][Stage 86:==============================================>       (98 + 15) / 113][Stage 86:====================================================> (109 + 4) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:=================================>                    (70 + 44) / 114][Stage 87:===========================================>          (92 + 22) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.741588613 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414750289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (60 + 53) / 113][Stage 88:===================================>                  (74 + 39) / 113][Stage 88:=============================================>        (96 + 17) / 113][Stage 88:===================================================>  (107 + 6) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===================================>                  (74 + 40) / 114][Stage 89:=============================================>        (97 + 17) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.453545689 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404071824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:============================>                         (59 + 54) / 113][Stage 90:====================================>                 (76 + 37) / 113][Stage 90:=============================================>        (95 + 18) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:===============================>                      (66 + 48) / 114][Stage 91:======================================>               (81 + 33) / 114][Stage 91:==============================================>       (98 + 16) / 114][Stage 91:====================================================> (110 + 4) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.505155225 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405566105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (60 + 53) / 113][Stage 92:================================>                     (69 + 44) / 113][Stage 92:===========================================>          (91 + 22) / 113][Stage 92:===================================================>  (107 + 6) / 113]                                                                                [Stage 93:=============================>                        (63 + 51) / 114][Stage 93:===================================>                  (74 + 40) / 114][Stage 93:==============================================>      (101 + 13) / 114][Stage 93:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.214186065 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401059183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:=============================>                        (62 + 51) / 113][Stage 94:====================================>                 (76 + 37) / 113][Stage 94:==============================================>      (100 + 13) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:=============================>                        (62 + 52) / 114][Stage 95:=====================================>                (80 + 34) / 114][Stage 95:=============================================>        (96 + 18) / 114][Stage 95:====================================================> (111 + 3) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.520574628 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410349081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (60 + 53) / 113][Stage 96:===================================>                  (74 + 39) / 113][Stage 96:============================================>         (93 + 20) / 113][Stage 96:===================================================>  (107 + 6) / 113]                                                                                [Stage 97:============================>                         (61 + 53) / 114][Stage 97:================================>                     (69 + 45) / 114][Stage 97:==========================================>           (89 + 25) / 114][Stage 97:===============================================>     (103 + 11) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.267802888 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395516307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=============================>                        (62 + 51) / 113][Stage 98:==================================>                   (73 + 40) / 113][Stage 98:=========================================>            (87 + 26) / 113][Stage 98:==================================================>   (105 + 8) / 113]                                                                                [Stage 99:==============================>                       (65 + 49) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:==============================================>      (101 + 13) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.464767881 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488870834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:================================>                    (69 + 44) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:============================>                        (62 + 52) / 114][Stage 101:=================================>                   (73 + 41) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.211185936 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397750649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:==================================>                  (74 + 39) / 113][Stage 102:=============================================>       (96 + 17) / 113][Stage 102:===================================================> (109 + 4) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:===============================>                     (67 + 47) / 114][Stage 103:=====================================>               (81 + 33) / 114][Stage 103:==============================================>      (99 + 15) / 114][Stage 103:==================================================>  (109 + 5) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31734192 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381593657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (61 + 52) / 113][Stage 104:===================================>                 (75 + 38) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:=================================>                   (71 + 43) / 114][Stage 105:========================================>            (87 + 27) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.342487908 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387696205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:=======================================>             (84 + 29) / 113][Stage 106:================================================>    (104 + 9) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:============================>                        (62 + 52) / 114][Stage 107:===================================>                 (76 + 38) / 114][Stage 107:===========================================>         (93 + 21) / 114][Stage 107:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.301323776 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39871258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:===============================>                     (68 + 45) / 113][Stage 108:=========================================>           (89 + 24) / 113][Stage 108:==================================================>  (108 + 5) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:=============================>                       (63 + 51) / 114][Stage 109:====================================>                (78 + 36) / 114][Stage 109:============================================>        (96 + 18) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.345058694 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399654601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:=============================>                       (62 + 51) / 113][Stage 110:===================================>                 (76 + 37) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:===============================>                     (68 + 46) / 114][Stage 111:=======================================>             (84 + 30) / 114][Stage 111:==============================================>     (102 + 12) / 114][Stage 111:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.160675687 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387654458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:============================>                        (60 + 53) / 113][Stage 112:=================================>                   (71 + 42) / 113][Stage 112:=============================================>       (96 + 17) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:==============================>                      (65 + 49) / 114][Stage 113:========================================>            (87 + 27) / 114][Stage 113:=============================================>      (100 + 14) / 114][Stage 113:==================================================>  (109 + 5) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.439726171 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385491488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==============================>                      (65 + 48) / 113][Stage 114:======================================>              (83 + 30) / 113][Stage 114:==============================================>     (101 + 12) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:==============================>                      (66 + 48) / 114][Stage 115:=========================================>           (89 + 25) / 114][Stage 115:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.038971599 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389159342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:==============================>                      (64 + 49) / 113][Stage 116:======================================>              (83 + 30) / 113][Stage 116:==============================================>     (101 + 12) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:============================>                        (61 + 53) / 114][Stage 117:======================================>              (82 + 32) / 114][Stage 117:=============================================>      (100 + 14) / 114][Stage 117:==================================================>  (108 + 6) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.330488435 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400440177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:=============================>                       (63 + 50) / 113][Stage 118:=====================================>               (79 + 34) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:==============================>                      (66 + 48) / 114][Stage 119:=======================================>             (85 + 29) / 114][Stage 119:===============================================>    (104 + 10) / 114][Stage 119:====================================================>(112 + 2) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.298225738 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403993072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:===================================>                 (75 + 38) / 113][Stage 120:===============================================>    (103 + 10) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:================================>                    (70 + 44) / 114][Stage 121:======================================>              (82 + 32) / 114][Stage 121:==============================================>     (102 + 12) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.752288975 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378613463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:=================================>                   (72 + 41) / 113][Stage 122:=========================================>           (89 + 24) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:================================>                    (69 + 45) / 114][Stage 123:=======================================>             (84 + 30) / 114][Stage 123:=================================================>   (106 + 8) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.227753436 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383706254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:====================================>                (77 + 36) / 113][Stage 124:=============================================>       (96 + 17) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:================================>                    (70 + 44) / 114][Stage 125:=========================================>           (90 + 24) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.123453303 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39068178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (60 + 53) / 113][Stage 126:================================>                    (69 + 44) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:==================================================>  (107 + 6) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:=============================>                       (63 + 51) / 114][Stage 127:====================================>                (79 + 35) / 114][Stage 127:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.121813159 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474884904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:===============================>                     (67 + 46) / 113][Stage 128:=====================================>               (79 + 34) / 113][Stage 128:==============================================>      (99 + 14) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:=================================>                   (72 + 42) / 114][Stage 129:========================================>            (87 + 27) / 114][Stage 129:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.037505391 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379709396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (61 + 52) / 113][Stage 130:=================================>                   (71 + 42) / 113][Stage 130:===========================================>         (92 + 21) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:===================================>                 (77 + 37) / 114][Stage 131:=============================================>       (98 + 16) / 114][Stage 131:===================================================> (111 + 3) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.231798619 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395392619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:=============================>                       (62 + 51) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:=============================================>       (96 + 17) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:=================================>                   (71 + 43) / 114][Stage 133:=============================================>       (98 + 16) / 114][Stage 133:==================================================>  (109 + 5) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.332844133 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379783403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:==============================>                      (65 + 48) / 113][Stage 134:=========================================>           (89 + 24) / 113][Stage 134:==================================================>  (107 + 6) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:================================>                    (70 + 44) / 114][Stage 135:=====================================>               (81 + 33) / 114][Stage 135:==============================================>     (103 + 11) / 114][Stage 135:==================================================>  (109 + 5) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.626940316 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383961058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:==============================>                      (64 + 49) / 113][Stage 136:=====================================>               (80 + 33) / 113][Stage 136:================================================>    (104 + 9) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:=================================>                   (73 + 41) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.44545468 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383231763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==============================>                      (66 + 47) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:==================================================>  (107 + 6) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==============================>                      (65 + 49) / 114][Stage 139:=======================================>             (86 + 28) / 114][Stage 139:================================================>    (105 + 9) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.262786761 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387680496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:=================================>                   (71 + 42) / 113][Stage 140:==========================================>          (91 + 22) / 113][Stage 140:===================================================> (109 + 4) / 113]                                                                                [Stage 141:=============================>                       (63 + 51) / 114][Stage 141:====================================>                (78 + 36) / 114][Stage 141:============================================>        (96 + 18) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.235412724 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390488713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:==============================>                      (65 + 48) / 113][Stage 142:=====================================>               (81 + 32) / 113][Stage 142:===============================================>    (103 + 10) / 113][Stage 142:===================================================> (109 + 4) / 113]                                                                                [Stage 143:=============================>                       (64 + 50) / 114][Stage 143:=======================================>             (85 + 29) / 114][Stage 143:==============================================>     (102 + 12) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.15125217 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383594014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=============================>                       (63 + 50) / 113][Stage 144:==================================>                  (73 + 40) / 113][Stage 144:============================================>        (95 + 18) / 113][Stage 144:==================================================>  (107 + 6) / 113]                                                                                [Stage 145:==============================>                      (65 + 49) / 114][Stage 145:===================================>                 (76 + 38) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.179348792 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382906301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:==============================>                      (66 + 47) / 113][Stage 146:=======================================>             (84 + 29) / 113][Stage 146:=================================================>   (106 + 7) / 113]                                                                                [Stage 147:============================>                        (62 + 52) / 114][Stage 147:================================>                    (69 + 45) / 114][Stage 147:======================================>              (83 + 31) / 114][Stage 147:================================================>    (105 + 9) / 114][Stage 147:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.147700544 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38055899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:==============================>                      (65 + 48) / 113][Stage 148:=====================================>               (81 + 32) / 113][Stage 148:=================================================>   (106 + 7) / 113]                                                                                [Stage 149:============================>                        (61 + 53) / 114][Stage 149:=================================>                   (72 + 42) / 114][Stage 149:===========================================>         (93 + 21) / 114][Stage 149:===================================================> (111 + 3) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.167319207 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381870811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:=============================>                       (63 + 50) / 113][Stage 150:=====================================>               (81 + 32) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:=================================>                   (73 + 41) / 114][Stage 151:=======================================>             (85 + 29) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.351124704 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384368969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (60 + 53) / 113][Stage 152:================================>                    (70 + 43) / 113][Stage 152:===========================================>         (93 + 20) / 113][Stage 152:===================================================> (110 + 3) / 113]                                                                                [Stage 153:============================>                        (62 + 52) / 114][Stage 153:=================================>                   (71 + 43) / 114][Stage 153:========================================>            (88 + 26) / 114][Stage 153:==================================================>  (109 + 5) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.37107255 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396519582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:>                                                      (0 + 0) / 113][Stage 154:===========================>                         (59 + 54) / 113][Stage 154:==============================>                      (66 + 47) / 113][Stage 154:=======================================>             (84 + 29) / 113][Stage 154:==================================================>  (107 + 6) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:==============================>                      (66 + 48) / 114][Stage 155:=======================================>             (85 + 29) / 114][Stage 155:================================================>    (105 + 9) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.957821722 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378343651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:=============================>                       (63 + 50) / 113][Stage 156:===================================>                 (76 + 37) / 113][Stage 156:==============================================>     (100 + 13) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:============================>                        (61 + 53) / 114][Stage 157:===================================>                 (77 + 37) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263004603 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381856366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:============================>                        (60 + 53) / 113][Stage 158:=================================>                   (71 + 42) / 113][Stage 158:=========================================>           (88 + 25) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:=============================>                       (64 + 50) / 114][Stage 159:====================================>                (79 + 35) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.383531903 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386400079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:==============================>                      (66 + 47) / 113][Stage 160:=====================================>               (80 + 33) / 113][Stage 160:================================================>    (104 + 9) / 113]                                                                                [Stage 161:=============================>                       (63 + 51) / 114][Stage 161:===============================>                     (68 + 46) / 114][Stage 161:========================================>            (87 + 27) / 114][Stage 161:=================================================>   (106 + 8) / 114][Stage 161:====================================================>(112 + 2) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.4078631 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390597894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=============================>                       (62 + 51) / 113][Stage 162:=================================>                   (72 + 41) / 113][Stage 162:===========================================>         (93 + 20) / 113][Stage 162:===================================================> (110 + 3) / 113]                                                                                [Stage 163:=============================>                       (63 + 51) / 114][Stage 163:====================================>                (78 + 36) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.001072959 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376006872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (61 + 52) / 113][Stage 164:=================================>                   (72 + 41) / 113][Stage 164:===========================================>         (92 + 21) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:================================>                    (69 + 45) / 114][Stage 165:======================================>              (83 + 31) / 114][Stage 165:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.20442638 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380260326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:===============================>                     (68 + 45) / 113][Stage 166:====================================>                (78 + 35) / 113][Stage 166:==============================================>     (100 + 13) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:=============================>                       (63 + 51) / 114][Stage 167:===================================>                 (77 + 37) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.325705802 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394229876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:==============================>                      (65 + 48) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:==============================================>     (100 + 13) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:===================================>                 (77 + 37) / 114][Stage 169:=============================================>       (97 + 17) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.571123252 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385867521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:====================================>                (78 + 35) / 113][Stage 170:===========================================>         (93 + 20) / 113][Stage 170:====================================================>(111 + 2) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:===============================>                     (67 + 47) / 114][Stage 171:========================================>            (88 + 26) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.104912558 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38380155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:==============================>                      (64 + 49) / 113][Stage 172:====================================>                (77 + 36) / 113][Stage 172:==============================================>      (99 + 14) / 113]                                                                                [Stage 173:============================>                        (61 + 53) / 114][Stage 173:===============================>                     (68 + 46) / 114][Stage 173:======================================>              (82 + 32) / 114][Stage 173:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 3.038767945 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=250 AND partitionZIndex<=253", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=250 AND partitionZIndex<=253,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37656755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:==================================>                  (74 + 39) / 113][Stage 174:========================================>            (86 + 27) / 113][Stage 174:=================================================>   (105 + 8) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:=================================>                   (71 + 43) / 114][Stage 175:===========================================>         (93 + 21) / 114][Stage 175:==================================================>  (108 + 6) / 114][Stage 175:====================================================>(112 + 2) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.32522042 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375719497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:==============================>                      (66 + 47) / 113][Stage 176:=========================================>           (88 + 25) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:===============================>                     (67 + 47) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:==============================================>      (99 + 15) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.369928709 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381423667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:===============================>                     (68 + 45) / 113][Stage 178:=======================================>             (85 + 28) / 113][Stage 178:==============================================>     (102 + 11) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:===============================>                     (67 + 47) / 114][Stage 179:======================================>              (82 + 32) / 114][Stage 179:==============================================>     (102 + 12) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.347764517 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=249", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=249,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385167942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=============================>                       (62 + 51) / 113][Stage 180:================================>                    (70 + 43) / 113][Stage 180:=========================================>           (89 + 24) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:============================>                        (61 + 53) / 114][Stage 181:=================================>                   (72 + 42) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:==================================================>  (108 + 6) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.198349219 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408282932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:==============================>                      (66 + 47) / 113][Stage 182:====================================>                (78 + 35) / 113][Stage 182:==============================================>      (99 + 14) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:===============================>                     (67 + 47) / 114][Stage 183:======================================>              (82 + 32) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.294934148 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390434198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:=============================>                       (62 + 51) / 113][Stage 184:===================================>                 (76 + 37) / 113][Stage 184:==============================================>     (100 + 13) / 113][Stage 184:===================================================> (109 + 4) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:============================>                        (61 + 53) / 114][Stage 185:===============================>                     (68 + 46) / 114][Stage 185:==========================================>          (92 + 22) / 114][Stage 185:==================================================>  (109 + 5) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.292980126 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385074854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:=================================>                   (71 + 42) / 113][Stage 186:=========================================>           (88 + 25) / 113][Stage 186:=============================================>       (96 + 17) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:=============================>                       (64 + 50) / 114][Stage 187:=======================================>             (85 + 29) / 114][Stage 187:=============================================>      (100 + 14) / 114][Stage 187:===================================================> (111 + 3) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.33272339 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389978167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:=============================>                       (62 + 51) / 113][Stage 188:========================================>            (86 + 27) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=============================>                       (64 + 50) / 114][Stage 189:=====================================>               (81 + 33) / 114][Stage 189:================================================>    (105 + 9) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.54902963 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390060711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:=============================>                       (63 + 50) / 113][Stage 190:=====================================>               (79 + 34) / 113][Stage 190:=============================================>       (96 + 17) / 113][Stage 190:===================================================> (109 + 4) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:================================>                    (69 + 45) / 114][Stage 191:========================================>            (87 + 27) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.419005764 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37471445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (61 + 52) / 113][Stage 192:==================================>                  (73 + 40) / 113][Stage 192:============================================>        (94 + 19) / 113][Stage 192:=================================================>   (106 + 7) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:================================>                    (70 + 44) / 114][Stage 193:=======================================>             (84 + 30) / 114][Stage 193:===============================================>    (104 + 10) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.320165983 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410000374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=================================>                   (72 + 41) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:==============================>                      (65 + 49) / 114][Stage 195:======================================>              (82 + 32) / 114][Stage 195:==============================================>      (99 + 15) / 114][Stage 195:===================================================> (110 + 4) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.407337481 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446595076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:===============================>                     (67 + 46) / 113][Stage 196:=======================================>             (84 + 29) / 113][Stage 196:================================================>    (104 + 9) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:==============================>                      (65 + 49) / 114][Stage 197:======================================>              (82 + 32) / 114][Stage 197:===============================================>    (104 + 10) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.366512607 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399765906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (61 + 52) / 113][Stage 198:==================================>                  (73 + 40) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:================================>                    (70 + 44) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.641908828 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384966362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:===============================>                     (68 + 45) / 113][Stage 200:========================================>            (86 + 27) / 113][Stage 200:==============================================>      (99 + 14) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:============================>                        (62 + 52) / 114][Stage 201:==================================>                  (75 + 39) / 114][Stage 201:============================================>        (95 + 19) / 114][Stage 201:===================================================> (110 + 4) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.498366046 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m21.133s
user	11m33.240s
sys	0m59.172s
