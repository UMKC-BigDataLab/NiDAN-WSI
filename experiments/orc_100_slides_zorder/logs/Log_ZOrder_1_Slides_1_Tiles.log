Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/31 21:39:08 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:39:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:39:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:39:23 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/31 21:39:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/31 21:39:36 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170531213925-0715).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.392521084 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:====>                                                 (10 + 105) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.835896074 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.78868283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (46 + 67) / 113][Stage 2:===========================>                           (56 + 57) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:================================>                      (67 + 46) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:=============================================>         (93 + 20) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:=============================================>         (94 + 20) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.895350384 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.701612417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:============================================>          (92 + 21) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:=====================================================> (110 + 3) / 113]                                                                                [Stage 5:=============================>                         (61 + 53) / 114][Stage 5:================================>                      (67 + 47) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.300612354 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.684704129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (55 + 58) / 113][Stage 6:===========================>                           (57 + 56) / 113][Stage 6:===============================>                       (64 + 49) / 113][Stage 6:=====================================>                 (78 + 35) / 113][Stage 6:===========================================>           (89 + 24) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:===================================>                   (73 + 41) / 114][Stage 7:========================================>              (83 + 31) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.053693372 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591832558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (57 + 56) / 113][Stage 8:============================>                          (58 + 55) / 113][Stage 8:=================================>                     (68 + 45) / 113][Stage 8:=====================================>                 (77 + 36) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:==================================================>    (104 + 9) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:=====================================================> (110 + 3) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:=================================>                     (69 + 45) / 114][Stage 9:=========================================>             (87 + 27) / 114][Stage 9:===============================================>       (99 + 15) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.025953799 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587933191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:================================>                     (69 + 44) / 113][Stage 10:==========================================>           (89 + 24) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:=================================================>    (104 + 9) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:===============================>                      (66 + 48) / 114][Stage 11:=======================================>              (83 + 31) / 114][Stage 11:==============================================>      (101 + 13) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.695343868 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547765088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (55 + 58) / 113][Stage 12:===========================>                          (58 + 55) / 113][Stage 12:=============================>                        (62 + 51) / 113][Stage 12:==================================>                   (72 + 41) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:=============================>                        (62 + 52) / 114][Stage 13:====================================>                 (77 + 37) / 114][Stage 13:===========================================>          (91 + 23) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:===================================================>  (108 + 6) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.824248868 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590588001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:==============================>                       (63 + 50) / 113][Stage 14:====================================>                 (76 + 37) / 113][Stage 14:============================================>         (94 + 19) / 113][Stage 14:====================================================> (109 + 4) / 113]                                                                                [Stage 15:==============================>                       (64 + 50) / 114][Stage 15:=================================>                    (71 + 43) / 114][Stage 15:=======================================>              (84 + 30) / 114][Stage 15:=============================================>        (97 + 17) / 114][Stage 15:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.422627072 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515069561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:==================================>                   (73 + 40) / 113][Stage 16:========================================>             (85 + 28) / 113][Stage 16:===============================================>     (102 + 11) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:=============================>                        (63 + 51) / 114][Stage 17:======================================>               (81 + 33) / 114][Stage 17:==============================================>      (100 + 14) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.338076173 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524601194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:============================>                         (60 + 53) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:========================================>             (85 + 28) / 113][Stage 18:==============================================>       (97 + 16) / 113][Stage 18:====================================================> (109 + 4) / 113]                                                                                [Stage 19:=============================>                        (62 + 52) / 114][Stage 19:===================================>                  (75 + 39) / 114][Stage 19:============================================>         (93 + 21) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.705118759 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493692858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (64 + 49) / 113][Stage 20:==========================================>           (89 + 24) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:===================================>                  (75 + 39) / 114][Stage 21:========================================>             (86 + 28) / 114][Stage 21:===============================================>     (103 + 11) / 114][Stage 21:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.491404058 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499064416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:==================================>                   (72 + 41) / 113][Stage 22:===========================================>          (92 + 21) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:=====================================>                (80 + 34) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.71116621 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491638531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (69 + 44) / 113][Stage 24:========================================>             (85 + 28) / 113][Stage 24:================================================>    (103 + 10) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:============================>                         (61 + 53) / 114][Stage 25:===================================>                  (75 + 39) / 114][Stage 25:=============================================>        (97 + 17) / 114][Stage 25:====================================================> (111 + 3) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.420859577 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479251031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:==============================>                       (64 + 49) / 113][Stage 26:=====================================>                (79 + 34) / 113][Stage 26:=============================================>        (95 + 18) / 113][Stage 26:==================================================>   (106 + 7) / 113]                                                                                [Stage 27:============================>                         (61 + 53) / 114][Stage 27:==================================>                   (72 + 42) / 114][Stage 27:=======================================>              (84 + 30) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.274093144 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4758838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (63 + 50) / 113][Stage 28:========================================>             (84 + 29) / 113][Stage 28:==============================================>      (100 + 13) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:=============================>                        (63 + 51) / 114][Stage 29:===================================>                  (75 + 39) / 114][Stage 29:==============================================>      (100 + 14) / 114][Stage 29:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.123073753 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517992754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:=============================>                        (62 + 51) / 113][Stage 30:===================================>                  (74 + 39) / 113][Stage 30:===============================================>      (99 + 14) / 113][Stage 30:====================================================> (110 + 3) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (64 + 50) / 114][Stage 31:=====================================>                (79 + 35) / 114][Stage 31:============================================>         (94 + 20) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.159509001 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475289169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (60 + 53) / 113][Stage 32:=================================>                    (71 + 42) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:==================================>                   (73 + 41) / 114][Stage 33:=============================================>        (95 + 19) / 114][Stage 33:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.254378011 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513723635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:======================================>               (81 + 32) / 113][Stage 34:=============================================>        (96 + 17) / 113][Stage 34:==================================================>   (106 + 7) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:=============================>                        (63 + 51) / 114][Stage 35:===================================>                  (75 + 39) / 114][Stage 35:=============================================>        (96 + 18) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.21515571 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525785579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:===============================>                      (65 + 48) / 113][Stage 36:==========================================>           (88 + 25) / 113][Stage 36:===============================================>      (99 + 14) / 113][Stage 36:====================================================> (109 + 4) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:===================================>                  (74 + 40) / 114][Stage 37:==============================================>       (99 + 15) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.30837847 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466074569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:==============================>                       (64 + 49) / 113][Stage 38:=======================================>              (83 + 30) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:============================>                         (61 + 53) / 114][Stage 39:====================================>                 (77 + 37) / 114][Stage 39:==============================================>      (100 + 14) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.986284186 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460685593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:==============================>                       (63 + 50) / 113][Stage 40:====================================>                 (77 + 36) / 113][Stage 40:=============================================>        (95 + 18) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:=============================>                        (63 + 51) / 114][Stage 41:======================================>               (81 + 33) / 114][Stage 41:==============================================>       (99 + 15) / 114]                                                                                Time elapsed: 2.906008313 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=249", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=249 AND partitionZIndex<=249,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468086554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:===============================>                      (66 + 47) / 113][Stage 42:=====================================>                (78 + 35) / 113][Stage 42:===============================================>     (101 + 12) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:=============================>                        (62 + 52) / 114][Stage 43:=================================>                    (71 + 43) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:================================================>    (104 + 10) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.26307758 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458662551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:===============================>                      (65 + 48) / 113][Stage 44:======================================>               (80 + 33) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:==============================>                       (65 + 49) / 114][Stage 45:==================================>                   (73 + 41) / 114][Stage 45:===========================================>          (92 + 22) / 114][Stage 45:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.09995007 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454211031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:================================>                     (69 + 44) / 113][Stage 46:============================================>         (94 + 19) / 113][Stage 46:==================================================>   (106 + 7) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==============================>                       (65 + 49) / 114][Stage 47:========================================>             (86 + 28) / 114][Stage 47:==================================================>   (106 + 8) / 114][Stage 47:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.163223094 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465976358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:=================================>                    (70 + 43) / 113][Stage 48:==========================================>           (89 + 24) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:=============================>                        (63 + 51) / 114][Stage 49:===================================>                  (74 + 40) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:===================================================>  (108 + 6) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.315936842 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466648321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:================================>                     (67 + 46) / 113][Stage 50:============================================>         (94 + 19) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:==============================>                       (64 + 50) / 114][Stage 51:=====================================>                (79 + 35) / 114][Stage 51:==============================================>      (100 + 14) / 114][Stage 51:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.025021212 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420808179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:=============================>                        (62 + 51) / 113][Stage 52:==================================>                   (73 + 40) / 113][Stage 52:===============================================>      (99 + 14) / 113][Stage 52:====================================================> (109 + 4) / 113]                                                                                [Stage 53:============================>                         (61 + 53) / 114][Stage 53:====================================>                 (76 + 38) / 114][Stage 53:=============================================>        (95 + 19) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.99705928 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441519615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:================================>                     (68 + 45) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:=================================================>    (104 + 9) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:==============================>                       (65 + 49) / 114][Stage 55:======================================>               (82 + 32) / 114][Stage 55:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.023311347 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543911302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:=============================>                        (62 + 51) / 113][Stage 56:==================================>                   (72 + 41) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:==================================================>   (106 + 7) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:==============================>                       (64 + 50) / 114][Stage 57:=========================================>            (87 + 27) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.301810124 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450139277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:==================================>                   (73 + 40) / 113][Stage 58:============================================>         (93 + 20) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:================================>                     (68 + 46) / 114][Stage 59:======================================>               (82 + 32) / 114][Stage 59:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.910049992 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428318014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (63 + 50) / 113][Stage 60:======================================>               (80 + 33) / 113][Stage 60:===============================================>     (102 + 11) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:===================================>                  (74 + 40) / 114][Stage 61:==============================================>       (98 + 16) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.059286975 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42496579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:===============================>                      (65 + 48) / 113][Stage 62:=======================================>              (83 + 30) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:============================>                         (61 + 53) / 114][Stage 63:=======================================>              (84 + 30) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.137656015 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542555871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=================================>                    (70 + 43) / 113][Stage 64:===========================================>          (91 + 22) / 113][Stage 64:==================================================>   (106 + 7) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:===================================>                  (74 + 40) / 114][Stage 65:==========================================>           (90 + 24) / 114][Stage 65:==================================================>   (106 + 8) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.121154846 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435102827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:==============================>                       (64 + 49) / 113][Stage 66:========================================>             (85 + 28) / 113][Stage 66:==================================================>   (106 + 7) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:==============================>                       (65 + 49) / 114][Stage 67:====================================>                 (78 + 36) / 114][Stage 67:==============================================>       (99 + 15) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.154024996 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416615212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:=============================>                        (61 + 52) / 113][Stage 68:==================================>                   (73 + 40) / 113][Stage 68:===============================================>     (102 + 11) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:=============================>                        (63 + 51) / 114][Stage 69:=======================================>              (83 + 31) / 114][Stage 69:==============================================>       (99 + 15) / 114][Stage 69:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.079320574 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429753695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==================================>                   (73 + 40) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:==================================================>   (105 + 8) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:=============================>                        (62 + 52) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.054760789 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514849266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:=============================>                        (62 + 51) / 113][Stage 72:==================================>                   (72 + 41) / 113][Stage 72:===============================================>      (99 + 14) / 113][Stage 72:===================================================>  (108 + 5) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:=================================>                    (70 + 44) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.164449752 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413945915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=============================>                        (61 + 52) / 113][Stage 74:==================================>                   (72 + 41) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:=================================================>    (104 + 9) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:================================>                     (69 + 45) / 114][Stage 75:=======================================>              (84 + 30) / 114][Stage 75:==================================================>   (107 + 7) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.175674232 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=254 AND partitionZIndex<=254", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=254 AND partitionZIndex<=254,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417395069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (63 + 50) / 113][Stage 76:==================================>                   (73 + 40) / 113][Stage 76:===========================================>          (92 + 21) / 113][Stage 76:===================================================>  (107 + 6) / 113]                                                                                [Stage 77:=============================>                        (62 + 52) / 114][Stage 77:====================================>                 (77 + 37) / 114][Stage 77:=============================================>        (97 + 17) / 114][Stage 77:====================================================> (111 + 3) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.065724039 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426216286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:==================================>                   (72 + 41) / 113][Stage 78:===========================================>          (91 + 22) / 113][Stage 78:================================================>    (103 + 10) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:==============================>                       (64 + 50) / 114][Stage 79:====================================>                 (77 + 37) / 114][Stage 79:=============================================>        (97 + 17) / 114][Stage 79:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.158680939 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=253", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=253 AND partitionZIndex<=253,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406533153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:================================>                     (67 + 46) / 113][Stage 80:========================================>             (84 + 29) / 113][Stage 80:===================================================>  (107 + 6) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:===============================>                      (67 + 47) / 114][Stage 81:====================================>                 (76 + 38) / 114][Stage 81:===================================================>  (108 + 6) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.249477528 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4060403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (60 + 53) / 113][Stage 82:==============================>                       (64 + 49) / 113][Stage 82:======================================>               (81 + 32) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:=============================>                        (62 + 52) / 114][Stage 83:====================================>                 (77 + 37) / 114][Stage 83:===============================================>     (102 + 12) / 114][Stage 83:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.062218536 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40062262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (60 + 53) / 113][Stage 84:==================================>                   (72 + 41) / 113][Stage 84:===========================================>          (92 + 21) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=============================>                        (63 + 51) / 114][Stage 85:===================================>                  (74 + 40) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.072455117 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415940377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=================================>                    (70 + 43) / 113][Stage 86:========================================>             (84 + 29) / 113][Stage 86:=================================================>    (104 + 9) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:=============================>                        (62 + 52) / 114][Stage 87:==================================>                   (72 + 42) / 114][Stage 87:=============================================>        (95 + 19) / 114][Stage 87:===================================================>  (109 + 5) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.313210459 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421692724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:==============================>                       (64 + 49) / 113][Stage 88:======================================>               (81 + 32) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:=================================>                    (71 + 43) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.078423788 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51768319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=============================>                        (62 + 51) / 113][Stage 90:=================================>                    (70 + 43) / 113][Stage 90:===========================================>          (90 + 23) / 113][Stage 90:==================================================>   (106 + 7) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:===================================>                  (74 + 40) / 114][Stage 91:=============================================>        (95 + 19) / 114][Stage 91:===================================================>  (108 + 6) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.07337128 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401267737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=============================>                        (61 + 52) / 113][Stage 92:===================================>                  (74 + 39) / 113][Stage 92:=============================================>        (95 + 18) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:============================>                         (61 + 53) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.01648053 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406421285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:==============================>                       (63 + 50) / 113][Stage 94:===================================>                  (75 + 38) / 113][Stage 94:==============================================>       (98 + 15) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:==============================>                       (65 + 49) / 114][Stage 95:===================================>                  (75 + 39) / 114][Stage 95:==============================================>       (99 + 15) / 114][Stage 95:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.080539725 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403906578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (58 + 55) / 113][Stage 96:==============================>                       (63 + 50) / 113][Stage 96:===================================>                  (75 + 38) / 113][Stage 96:==============================================>       (98 + 15) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:=====================================>                (79 + 35) / 114][Stage 97:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 2.856297327 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405485257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:==============================>                       (64 + 49) / 113][Stage 98:======================================>               (81 + 32) / 113][Stage 98:==============================================>      (100 + 13) / 113]                                                                                [Stage 99:=============================>                        (62 + 52) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:======================================>               (82 + 32) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.855764399 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400078598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:==============================>                      (66 + 47) / 113][Stage 100:=========================================>           (89 + 24) / 113][Stage 100:==================================================>  (108 + 5) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:===================================>                 (76 + 38) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.975773724 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392464565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:============================>                        (61 + 52) / 113][Stage 102:===================================>                 (75 + 38) / 113][Stage 102:==============================================>      (99 + 14) / 113][Stage 102:===================================================> (109 + 4) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:===================================>                 (76 + 38) / 114][Stage 103:=============================================>       (97 + 17) / 114][Stage 103:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.103576867 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382189161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:==============================>                      (64 + 49) / 113][Stage 104:=================================>                   (72 + 41) / 113][Stage 104:=============================================>       (97 + 16) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:============================>                        (62 + 52) / 114][Stage 105:================================>                    (69 + 45) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.143482041 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387937368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:============================>                        (61 + 52) / 113][Stage 106:===================================>                 (75 + 38) / 113][Stage 106:============================================>        (95 + 18) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:==============================>                      (65 + 49) / 114][Stage 107:====================================>                (78 + 36) / 114][Stage 107:=============================================>       (97 + 17) / 114][Stage 107:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.001589443 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384682302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:====================================>                (77 + 36) / 113][Stage 108:=============================================>       (98 + 15) / 113][Stage 108:===================================================> (109 + 4) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:=================================>                   (73 + 41) / 114][Stage 109:=========================================>           (89 + 25) / 114][Stage 109:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.137168828 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388515994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:==============================>                      (66 + 47) / 113][Stage 110:======================================>              (82 + 31) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:=============================>                       (64 + 50) / 114][Stage 111:=====================================>               (80 + 34) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.067221052 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383846672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:===============================>                     (68 + 45) / 113][Stage 112:========================================>            (87 + 26) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:=================================>                   (71 + 43) / 114][Stage 113:===========================================>         (93 + 21) / 114][Stage 113:================================================>    (105 + 9) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.269224323 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=27,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37972299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:=================================>                   (72 + 41) / 113][Stage 114:==========================================>          (90 + 23) / 113][Stage 114:================================================>    (104 + 9) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:================================>                    (69 + 45) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.040593958 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393890831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:=============================>                       (62 + 51) / 113][Stage 116:===================================>                 (76 + 37) / 113][Stage 116:==============================================>     (102 + 11) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:=============================>                       (63 + 51) / 114][Stage 117:======================================>              (82 + 32) / 114][Stage 117:==============================================>      (99 + 15) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.051998038 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556328195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:====================================>                (78 + 35) / 113][Stage 118:============================================>        (94 + 19) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:====================================>                (78 + 36) / 114][Stage 119:============================================>        (95 + 19) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.28995375 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391873026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (61 + 52) / 113][Stage 120:===================================>                 (76 + 37) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==============================>                      (66 + 48) / 114][Stage 121:====================================>                (78 + 36) / 114][Stage 121:==============================================>     (102 + 12) / 114][Stage 121:==================================================>  (108 + 6) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.188001206 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383733934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:========================================>            (86 + 27) / 113][Stage 122:==============================================>     (100 + 13) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:=============================>                       (63 + 51) / 114][Stage 123:==================================>                  (74 + 40) / 114][Stage 123:============================================>        (96 + 18) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.137441209 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393507929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:=============================>                       (63 + 50) / 113][Stage 124:====================================>                (77 + 36) / 113][Stage 124:==============================================>     (100 + 13) / 113][Stage 124:===================================================> (109 + 4) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:===================================>                 (77 + 37) / 114][Stage 125:============================================>        (95 + 19) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.154001955 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400903612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:==============================>                      (64 + 49) / 113][Stage 126:==================================>                  (73 + 40) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:=================================>                   (72 + 42) / 114][Stage 127:=======================================>             (86 + 28) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.08158206 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38608322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (60 + 53) / 113][Stage 128:===============================>                     (68 + 45) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:==================================================>  (107 + 6) / 113]                                                                                [Stage 129:===============================>                     (67 + 47) / 114][Stage 129:=====================================>               (81 + 33) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.864389301 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=251", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=251 AND partitionZIndex<=251,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382352575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (61 + 52) / 113][Stage 130:===================================>                 (75 + 38) / 113][Stage 130:=============================================>       (96 + 17) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:================================>                    (69 + 45) / 114][Stage 131:========================================>            (88 + 26) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.877037474 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378878729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:=============================>                       (62 + 51) / 113][Stage 132:====================================>                (77 + 36) / 113][Stage 132:==============================================>     (102 + 11) / 113]                                                                                [Stage 133:============================>                        (61 + 53) / 114][Stage 133:=================================>                   (71 + 43) / 114][Stage 133:==========================================>          (91 + 23) / 114][Stage 133:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.795619798 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379881769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (61 + 52) / 113][Stage 134:=================================>                   (72 + 41) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:=================================================>   (105 + 8) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:==============================>                      (65 + 49) / 114][Stage 135:=======================================>             (85 + 29) / 114][Stage 135:==============================================>     (102 + 12) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.0838129 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383905421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:=================================>                   (72 + 41) / 113][Stage 136:============================================>        (94 + 19) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:===========================>                         (59 + 55) / 114][Stage 137:==============================>                      (65 + 49) / 114][Stage 137:=======================================>             (85 + 29) / 114][Stage 137:=============================================>      (100 + 14) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.907894595 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399373442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==============================>                      (66 + 47) / 113][Stage 138:====================================>                (77 + 36) / 113][Stage 138:=============================================>       (96 + 17) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==============================>                      (65 + 49) / 114][Stage 139:=======================================>             (85 + 29) / 114][Stage 139:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.801722627 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385836564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (63 + 50) / 113][Stage 140:==================================>                  (73 + 40) / 113][Stage 140:==========================================>          (90 + 23) / 113][Stage 140:================================================>    (104 + 9) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:============================>                        (61 + 53) / 114][Stage 141:===============================>                     (68 + 46) / 114][Stage 141:=======================================>             (86 + 28) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.910602447 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381122742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (60 + 53) / 113][Stage 142:================================>                    (69 + 44) / 113][Stage 142:============================================>        (95 + 18) / 113][Stage 142:===================================================> (109 + 4) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:=============================>                       (64 + 50) / 114][Stage 143:=====================================>               (80 + 34) / 114][Stage 143:==============================================>     (103 + 11) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.042800804 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385233394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:=============================>                       (63 + 50) / 113][Stage 144:====================================>                (78 + 35) / 113][Stage 144:=============================================>       (98 + 15) / 113]                                                                                [Stage 145:=============================>                       (64 + 50) / 114][Stage 145:===================================>                 (76 + 38) / 114][Stage 145:============================================>        (96 + 18) / 114][Stage 145:=================================================>   (106 + 8) / 114][Stage 145:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.003988305 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383001464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:================================>                    (69 + 44) / 113][Stage 146:=========================================>           (88 + 25) / 113][Stage 146:================================================>    (104 + 9) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:==============================>                      (66 + 48) / 114][Stage 147:======================================>              (82 + 32) / 114][Stage 147:=================================================>   (106 + 8) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.305200153 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496258312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:==============================>                      (66 + 47) / 113][Stage 148:=====================================>               (80 + 33) / 113][Stage 148:===============================================>    (103 + 10) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:==================================>                  (74 + 40) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.10790546 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3803645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:================================>                    (69 + 44) / 113][Stage 150:=====================================>               (81 + 32) / 113][Stage 150:==============================================>     (102 + 11) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:===============================>                     (67 + 47) / 114][Stage 151:=====================================>               (80 + 34) / 114][Stage 151:=============================================>      (100 + 14) / 114][Stage 151:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.126627502 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388632521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:=============================>                       (62 + 51) / 113][Stage 152:===================================>                 (75 + 38) / 113][Stage 152:===========================================>         (92 + 21) / 113][Stage 152:==================================================>  (108 + 5) / 113]                                                                                [Stage 153:==============================>                      (65 + 49) / 114][Stage 153:===================================>                 (77 + 37) / 114][Stage 153:==============================================>     (102 + 12) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.148978273 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381928064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:=============================>                       (63 + 50) / 113][Stage 154:====================================>                (77 + 36) / 113][Stage 154:=============================================>       (96 + 17) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:============================>                        (62 + 52) / 114][Stage 155:==================================>                  (74 + 40) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.066180995 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39932806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (61 + 52) / 113][Stage 156:================================>                    (70 + 43) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:=============================>                       (64 + 50) / 114][Stage 157:=================================>                   (72 + 42) / 114][Stage 157:==============================================>      (99 + 15) / 114][Stage 157:==================================================>  (109 + 5) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.161572666 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383586207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:=============================>                       (63 + 50) / 113][Stage 158:======================================>              (82 + 31) / 113][Stage 158:==============================================>      (99 + 14) / 113][Stage 158:===================================================> (110 + 3) / 113]                                                                                [Stage 159:==============================>                      (66 + 48) / 114][Stage 159:=======================================>             (84 + 30) / 114][Stage 159:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.819878514 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393547703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:===============================>                     (68 + 45) / 113][Stage 160:======================================>              (83 + 30) / 113][Stage 160:===============================================>    (103 + 10) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:================================>                    (69 + 45) / 114][Stage 161:=======================================>             (85 + 29) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.117294191 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387548345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:================================>                    (70 + 43) / 113][Stage 162:==========================================>          (91 + 22) / 113][Stage 162:=================================================>   (105 + 8) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:==================================>                  (74 + 40) / 114][Stage 163:========================================>            (88 + 26) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.079253547 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377251956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=============================>                       (62 + 51) / 113][Stage 164:====================================>                (77 + 36) / 113][Stage 164:==============================================>     (100 + 13) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:==========================================>          (91 + 23) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.999952114 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381107249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:==============================>                      (66 + 47) / 113][Stage 166:==========================================>          (91 + 22) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:=============================>                       (63 + 51) / 114][Stage 167:=====================================>               (80 + 34) / 114][Stage 167:============================================>        (95 + 19) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.844088186 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380915374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==============================>                      (64 + 49) / 113][Stage 168:====================================>                (77 + 36) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:============================>                        (61 + 53) / 114][Stage 169:===================================>                 (76 + 38) / 114][Stage 169:===========================================>         (94 + 20) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.157204153 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393392544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==================================>                  (73 + 40) / 113][Stage 170:=============================================>       (98 + 15) / 113][Stage 170:==================================================>  (108 + 5) / 113]                                                                                [Stage 171:============================>                        (62 + 52) / 114][Stage 171:================================>                    (70 + 44) / 114][Stage 171:========================================>            (88 + 26) / 114][Stage 171:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.156274649 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378400269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:==============================>                      (66 + 47) / 113][Stage 172:========================================>            (86 + 27) / 113][Stage 172:===============================================>    (103 + 10) / 113]                                                                                [Stage 173:=============================>                       (63 + 51) / 114][Stage 173:======================================>              (83 + 31) / 114][Stage 173:================================================>    (105 + 9) / 114][Stage 173:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.208269264 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376338638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:===============================>                     (68 + 45) / 113][Stage 174:======================================>              (83 + 30) / 113][Stage 174:==============================================>     (100 + 13) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:=============================>                       (63 + 51) / 114][Stage 175:==================================>                  (75 + 39) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.994531085 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383042385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:==============================>                      (65 + 48) / 113][Stage 176:=======================================>             (85 + 28) / 113][Stage 176:==============================================>     (102 + 11) / 113][Stage 176:====================================================>(111 + 2) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:===================================>                 (76 + 38) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.055605215 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377452423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (61 + 52) / 113][Stage 178:====================================>                (77 + 36) / 113][Stage 178:============================================>        (95 + 18) / 113][Stage 178:=================================================>   (106 + 7) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:=================================>                   (71 + 43) / 114][Stage 179:===========================================>         (93 + 21) / 114][Stage 179:=================================================>   (107 + 7) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.117183904 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391151831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (60 + 53) / 113][Stage 180:=================================>                   (72 + 41) / 113][Stage 180:=========================================>           (88 + 25) / 113][Stage 180:=================================================>   (105 + 8) / 113]                                                                                [Stage 181:===========================>                         (59 + 55) / 114][Stage 181:===============================>                     (67 + 47) / 114][Stage 181:========================================>            (87 + 27) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.105437888 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418697303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=================================>                   (71 + 42) / 113][Stage 182:==========================================>          (91 + 22) / 113][Stage 182:=================================================>   (106 + 7) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:==============================>                      (65 + 49) / 114][Stage 183:===================================>                 (76 + 38) / 114][Stage 183:=============================================>       (97 + 17) / 114][Stage 183:==================================================>  (108 + 6) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.2586324 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394056472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:==============================>                      (66 + 47) / 113][Stage 184:========================================>            (87 + 26) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:===============================>                     (67 + 47) / 114][Stage 185:=======================================>             (86 + 28) / 114][Stage 185:=================================================>   (106 + 8) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.061464528 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385328299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:===============================>                     (68 + 45) / 113][Stage 186:=========================================>           (89 + 24) / 113][Stage 186:=================================================>   (106 + 7) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:=================================>                   (72 + 42) / 114][Stage 187:=========================================>           (90 + 24) / 114][Stage 187:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.217007877 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391471727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:===============================>                     (68 + 45) / 113][Stage 188:========================================>            (87 + 26) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:==============================>                      (65 + 49) / 114][Stage 189:=====================================>               (81 + 33) / 114][Stage 189:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.972627702 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391410091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:==============================>                      (64 + 49) / 113][Stage 190:===================================>                 (76 + 37) / 113][Stage 190:=============================================>       (97 + 16) / 113][Stage 190:=================================================>   (106 + 7) / 113]                                                                                [Stage 191:=============================>                       (64 + 50) / 114][Stage 191:====================================>                (78 + 36) / 114][Stage 191:=============================================>       (97 + 17) / 114][Stage 191:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.019122912 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376442433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (61 + 52) / 113][Stage 192:==================================>                  (73 + 40) / 113][Stage 192:=============================================>       (96 + 17) / 113][Stage 192:===================================================> (110 + 3) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:===================================>                 (77 + 37) / 114][Stage 193:==============================================>     (103 + 11) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.998665635 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393408834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (60 + 53) / 113][Stage 194:==================================>                  (74 + 39) / 113][Stage 194:==========================================>          (91 + 22) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:=================================>                   (72 + 42) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.913223083 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400083161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:============================>                        (60 + 53) / 113][Stage 196:================================>                    (70 + 43) / 113][Stage 196:==========================================>          (91 + 22) / 113][Stage 196:==================================================>  (107 + 6) / 113][Stage 196:=====================================================(113 + 0) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:===============================>                     (68 + 46) / 114][Stage 197:======================================>              (83 + 31) / 114][Stage 197:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.994237907 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421170911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:=================================>                   (71 + 42) / 113][Stage 198:=============================================>       (96 + 17) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:================================>                    (70 + 44) / 114][Stage 199:=======================================>             (86 + 28) / 114][Stage 199:==============================================>     (102 + 12) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.098362074 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382618633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:============================>                        (60 + 53) / 113][Stage 200:==================================>                  (74 + 39) / 113][Stage 200:=============================================>       (97 + 16) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:===========================>                         (59 + 55) / 114][Stage 201:==============================>                      (65 + 49) / 114][Stage 201:=======================================>             (84 + 30) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.014515777 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m48.528s
user	11m16.832s
sys	0m29.936s
