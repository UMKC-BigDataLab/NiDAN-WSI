Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 06:45:08 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:45:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:45:22 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:45:23 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 06:45:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:45:36 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522064525-0426).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.335795359 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:============>                                          (27 + 88) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.517384642 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.703912761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (60 + 58) / 118][Stage 2:=============================>                         (63 + 55) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:======================================>                (82 + 36) / 118][Stage 2:=======================================>               (85 + 33) / 118][Stage 2:=============================================>         (98 + 20) / 118][Stage 2:================================================>     (105 + 13) / 118][Stage 2:===================================================>   (110 + 8) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:========================================>              (88 + 31) / 119][Stage 3:============================================>          (97 + 22) / 119][Stage 3:==============================================>       (102 + 17) / 119][Stage 3:===================================================>   (112 + 7) / 119][Stage 3:=====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.713186691 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.743496535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (56 + 65) / 121][Stage 4:===========================>                           (60 + 61) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:===================================>                   (79 + 42) / 121][Stage 4:==========================================>            (94 + 27) / 121][Stage 4:==============================================>       (105 + 16) / 121][Stage 4:===================================================>   (113 + 8) / 121]                                                                                [Stage 5:===========================>                           (60 + 62) / 122][Stage 5:============================>                          (63 + 59) / 122][Stage 5:================================>                      (73 + 49) / 122][Stage 5:=======================================>               (88 + 34) / 122][Stage 5:============================================>          (99 + 23) / 122][Stage 5:================================================>     (110 + 12) / 122][Stage 5:===================================================>   (114 + 8) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.717391447 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.719229133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:===========================>                           (61 + 60) / 121][Stage 6:===============================>                       (69 + 52) / 121][Stage 6:====================================>                  (80 + 41) / 121][Stage 6:===========================================>           (95 + 26) / 121][Stage 6:====================================================>  (115 + 6) / 121][Stage 6:======================================================>(119 + 2) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (64 + 58) / 122][Stage 7:================================>                      (73 + 49) / 122][Stage 7:=======================================>               (87 + 35) / 122][Stage 7:============================================>          (98 + 24) / 122][Stage 7:=============================================>        (103 + 19) / 122][Stage 7:====================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.383144568 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.621076964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (57 + 63) / 120][Stage 8:===========================>                           (60 + 60) / 120][Stage 8:==============================>                        (67 + 53) / 120][Stage 8:===================================>                   (78 + 42) / 120][Stage 8:=============================================>        (102 + 18) / 120][Stage 8:=====================================================> (116 + 4) / 120]                                                                                [Stage 9:============================>                          (62 + 59) / 121][Stage 9:===============================>                       (69 + 52) / 121][Stage 9:=====================================>                 (83 + 38) / 121][Stage 9:=============================================>        (102 + 19) / 121][Stage 9:=================================================>    (110 + 11) / 121][Stage 9:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.848623495 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.633338905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:===============================>                      (69 + 51) / 120][Stage 10:======================================>               (85 + 35) / 120][Stage 10:============================================>        (100 + 20) / 120][Stage 10:===================================================>  (114 + 6) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:============================>                         (64 + 57) / 121][Stage 11:=================================>                    (75 + 46) / 121][Stage 11:===========================================>          (98 + 23) / 121][Stage 11:=============================================>       (103 + 18) / 121][Stage 11:==================================================>   (113 + 8) / 121][Stage 11:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.279352423 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.567791245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:===========================>                          (61 + 60) / 121][Stage 12:===============================>                      (71 + 50) / 121][Stage 12:=======================================>              (88 + 33) / 121][Stage 12:==============================================>      (107 + 14) / 121][Stage 12:===================================================>  (116 + 5) / 121][Stage 12:=====================================================>(119 + 2) / 121]                                                                                [Stage 13:==========================>                           (60 + 62) / 122][Stage 13:============================>                         (64 + 58) / 122][Stage 13:==================================>                   (78 + 44) / 122][Stage 13:========================================>             (92 + 30) / 122][Stage 13:==============================================>      (106 + 16) / 122][Stage 13:==================================================>   (115 + 7) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.495834712 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556556888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:================================>                     (67 + 46) / 113][Stage 14:=======================================>              (83 + 30) / 113][Stage 14:===========================================>          (91 + 22) / 113][Stage 14:===============================================>     (102 + 11) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=============================>                        (63 + 51) / 114][Stage 15:====================================>                 (77 + 37) / 114][Stage 15:=============================================>        (95 + 19) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.942434695 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511598377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:=============================>                        (62 + 51) / 113][Stage 16:====================================>                 (77 + 36) / 113][Stage 16:============================================>         (93 + 20) / 113][Stage 16:===================================================>  (107 + 6) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:=============================>                        (62 + 52) / 114][Stage 17:===============================>                      (67 + 47) / 114][Stage 17:=====================================>                (79 + 35) / 114][Stage 17:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 3.544818822 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546717135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:===============================>                      (66 + 47) / 113][Stage 18:======================================>               (80 + 33) / 113][Stage 18:===============================================>     (101 + 12) / 113][Stage 18:====================================================> (110 + 3) / 113]                                                                                [Stage 19:=============================>                        (62 + 52) / 114][Stage 19:=================================>                    (71 + 43) / 114][Stage 19:=======================================>              (83 + 31) / 114][Stage 19:==============================================>       (98 + 16) / 114][Stage 19:=================================================>    (105 + 9) / 114][Stage 19:====================================================> (110 + 4) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.35382738 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531533045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:===================================>                  (78 + 42) / 120][Stage 20:===============================================>     (107 + 13) / 120][Stage 20:=====================================================>(118 + 2) / 120][Stage 20:=====================================================>(119 + 1) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:=============================>                        (66 + 55) / 121][Stage 21:==================================>                   (78 + 43) / 121][Stage 21:============================================>         (99 + 22) / 121][Stage 21:====================================================> (117 + 4) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.018642736 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538865309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (73 + 45) / 118][Stage 22:====================================>                 (79 + 39) / 118][Stage 22:============================================>         (98 + 20) / 118][Stage 22:====================================================> (115 + 3) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (76 + 43) / 119][Stage 23:==========================================>           (94 + 25) / 119][Stage 23:==================================================>   (112 + 7) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.364728041 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489800546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (64 + 51) / 115][Stage 24:===================================>                  (75 + 40) / 115][Stage 24:=========================================>            (88 + 27) / 115][Stage 24:=============================================>        (96 + 19) / 115][Stage 24:===============================================>     (104 + 11) / 115][Stage 24:====================================================> (111 + 4) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:===============================>                      (68 + 48) / 116][Stage 25:=======================================>              (84 + 32) / 116][Stage 25:=============================================>       (100 + 16) / 116][Stage 25:===================================================>  (110 + 6) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.884817828 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456618554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:====================================>                 (80 + 38) / 118][Stage 26:===========================================>          (95 + 23) / 118][Stage 26:===============================================>     (106 + 12) / 118][Stage 26:==================================================>   (110 + 8) / 118][Stage 26:===================================================>  (112 + 6) / 118][Stage 26:=====================================================>(116 + 2) / 118]                                                                                [Stage 27:=================================>                    (74 + 45) / 119][Stage 27:=======================================>              (88 + 31) / 119][Stage 27:=============================================>       (102 + 17) / 119][Stage 27:==================================================>   (111 + 8) / 119][Stage 27:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.026998088 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463779978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=================================>                    (73 + 45) / 118][Stage 28:====================================>                 (80 + 38) / 118][Stage 28:=======================================>              (87 + 31) / 118][Stage 28:=============================================>       (101 + 17) / 118][Stage 28:==================================================>   (110 + 8) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:==================================>                   (76 + 43) / 119][Stage 29:=======================================>              (86 + 33) / 119][Stage 29:============================================>         (98 + 21) / 119][Stage 29:================================================>    (109 + 10) / 119][Stage 29:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.855785615 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410026038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (80 + 35) / 115][Stage 30:=======================================>              (85 + 30) / 115][Stage 30:=============================================>        (96 + 19) / 115][Stage 30:===================================================>  (109 + 6) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:=======================================>              (84 + 32) / 116][Stage 31:=============================================>        (97 + 19) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.112933499 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518189081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:===========================>                          (61 + 60) / 121][Stage 32:================================>                     (72 + 49) / 121][Stage 32:===========================================>          (97 + 24) / 121][Stage 32:=================================================>    (112 + 9) / 121][Stage 32:===================================================>  (116 + 5) / 121][Stage 32:====================================================> (118 + 3) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:===========================>                          (63 + 59) / 122][Stage 33:===================================>                  (81 + 41) / 122][Stage 33:===========================================>          (98 + 24) / 122][Stage 33:==================================================>   (114 + 8) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.750995485 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476910882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (80 + 35) / 115][Stage 34:========================================>             (87 + 28) / 115][Stage 34:=============================================>        (97 + 18) / 115][Stage 34:===================================================>  (109 + 6) / 115][Stage 34:====================================================> (111 + 4) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:========================================>             (87 + 29) / 116][Stage 35:==============================================>       (99 + 17) / 116][Stage 35:====================================================> (112 + 4) / 116][Stage 35:====================================================> (113 + 3) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.726047002 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409798438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=====================================>                (80 + 35) / 115][Stage 36:======================================>               (83 + 32) / 115][Stage 36:==============================================>      (100 + 15) / 115][Stage 36:===================================================>  (110 + 5) / 115][Stage 36:=====================================================>(114 + 1) / 115]                                                                                [Stage 37:======================================>               (83 + 33) / 116][Stage 37:=========================================>            (89 + 27) / 116][Stage 37:===============================================>     (104 + 12) / 116][Stage 37:===================================================>  (111 + 5) / 116][Stage 37:====================================================> (112 + 4) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.172710444 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457272857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==============================>                       (66 + 49) / 115][Stage 38:==================================>                   (73 + 42) / 115][Stage 38:===========================================>          (92 + 23) / 115][Stage 38:==============================================>       (99 + 16) / 115][Stage 38:==================================================>   (108 + 7) / 115][Stage 38:===================================================>  (110 + 5) / 115][Stage 38:=====================================================>(113 + 2) / 115]                                                                                [Stage 39:==============================>                       (66 + 50) / 116][Stage 39:====================================>                 (78 + 38) / 116][Stage 39:==============================================>      (101 + 15) / 116][Stage 39:===================================================>  (111 + 5) / 116][Stage 39:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.437553395 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49974234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:===========================>                          (62 + 59) / 121][Stage 40:=================================>                    (76 + 45) / 121][Stage 40:==========================================>           (95 + 26) / 121][Stage 40:==================================================>   (113 + 8) / 121]                                                                                [Stage 41:============================>                         (64 + 58) / 122][Stage 41:==================================>                   (79 + 43) / 122][Stage 41:============================================>        (103 + 19) / 122][Stage 41:==================================================>   (113 + 9) / 122][Stage 41:===================================================>  (117 + 5) / 122][Stage 41:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.645059934 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464980403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==============================>                       (66 + 49) / 115][Stage 42:=====================================>                (80 + 35) / 115][Stage 42:==============================================>      (101 + 14) / 115][Stage 42:===================================================>  (110 + 5) / 115][Stage 42:====================================================> (112 + 3) / 115]                                                                                [Stage 43:==================================>                   (75 + 41) / 116][Stage 43:==========================================>           (92 + 24) / 116][Stage 43:==================================================>   (108 + 8) / 116][Stage 43:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.160502186 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448556028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:================================>                     (67 + 46) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:==============================================>       (98 + 15) / 113][Stage 44:===================================================>  (108 + 5) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:=================================>                    (70 + 44) / 114][Stage 45:=========================================>            (87 + 27) / 114][Stage 45:=============================================>        (96 + 18) / 114][Stage 45:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.584347132 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455354891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:============================>                         (64 + 56) / 120][Stage 46:====================================>                 (80 + 40) / 120][Stage 46:=============================================>       (104 + 16) / 120][Stage 46:====================================================> (117 + 3) / 120]                                                                                [Stage 47:=============================>                        (67 + 54) / 121][Stage 47:====================================>                 (82 + 39) / 121][Stage 47:=================================================>    (112 + 9) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.355905465 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469972001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 42) / 115][Stage 48:===========================================>          (93 + 22) / 115][Stage 48:===============================================>     (103 + 12) / 115][Stage 48:====================================================> (112 + 3) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:==================================>                   (74 + 42) / 116][Stage 49:==========================================>           (91 + 25) / 116][Stage 49:==============================================>       (99 + 17) / 116][Stage 49:===============================================>     (103 + 13) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:===================================================>  (111 + 5) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.722503319 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475407739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:==============================>                       (69 + 52) / 121][Stage 50:=====================================>                (85 + 36) / 121][Stage 50:=============================================>       (103 + 18) / 121]                                                                                [Stage 51:===========================>                          (62 + 60) / 122][Stage 51:===============================>                      (72 + 50) / 122][Stage 51:=======================================>              (89 + 33) / 122][Stage 51:===============================================>     (109 + 13) / 122][Stage 51:====================================================> (119 + 3) / 122][Stage 51:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.413670961 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518358923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:================================>                     (68 + 45) / 113][Stage 52:=======================================>              (83 + 30) / 113][Stage 52:================================================>    (103 + 10) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:==============================>                       (65 + 49) / 114][Stage 53:===================================>                  (75 + 39) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:==================================================>   (107 + 7) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.599185446 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451917981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:===========================>                          (62 + 58) / 120][Stage 54:================================>                     (72 + 48) / 120][Stage 54:=========================================>            (93 + 27) / 120][Stage 54:================================================>    (110 + 10) / 120][Stage 54:=====================================================>(118 + 2) / 120]                                                                                [Stage 55:===========================>                          (62 + 59) / 121][Stage 55:===================================>                  (80 + 41) / 121][Stage 55:===========================================>          (98 + 23) / 121][Stage 55:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.284543509 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429561125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:=============================>                        (61 + 52) / 113][Stage 56:==================================>                   (73 + 40) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:===================================================>  (107 + 6) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:===============================>                      (67 + 47) / 114][Stage 57:======================================>               (81 + 33) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.480912931 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444044994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:============================>                         (64 + 57) / 121][Stage 58:==================================>                   (77 + 44) / 121][Stage 58:===========================================>         (100 + 21) / 121][Stage 58:==================================================>   (113 + 8) / 121]                                                                                [Stage 59:===========================>                          (62 + 60) / 122][Stage 59:=================================>                    (76 + 46) / 122][Stage 59:===========================================>          (99 + 23) / 122][Stage 59:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.165832992 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455714974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (69 + 46) / 115][Stage 60:=====================================>                (80 + 35) / 115][Stage 60:=============================================>        (97 + 18) / 115][Stage 60:===================================================>  (110 + 5) / 115]                                                                                [Stage 61:====================================>                 (79 + 37) / 116][Stage 61:============================================>         (96 + 20) / 116][Stage 61:==================================================>   (108 + 8) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.858618619 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518865106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:============================================>         (94 + 21) / 115][Stage 62:===================================================>  (109 + 6) / 115]                                                                                [Stage 63:=======================================>              (84 + 32) / 116][Stage 63:=============================================>        (98 + 18) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:=====================================================>(114 + 2) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.886589219 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371725251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=====================================>                (80 + 35) / 115][Stage 64:=========================================>            (88 + 27) / 115][Stage 64:==============================================>      (100 + 15) / 115][Stage 64:===================================================>  (109 + 6) / 115]                                                                                [Stage 65:========================================>             (87 + 29) / 116][Stage 65:=============================================>       (100 + 16) / 116][Stage 65:===================================================>  (110 + 6) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.898472595 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461292272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (80 + 35) / 115][Stage 66:=======================================>              (84 + 31) / 115][Stage 66:==============================================>       (99 + 16) / 115][Stage 66:==================================================>   (108 + 7) / 115][Stage 66:===================================================>  (110 + 5) / 115]                                                                                [Stage 67:========================================>             (86 + 30) / 116][Stage 67:============================================>         (96 + 20) / 116][Stage 67:====================================================> (112 + 4) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.985115567 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449030992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:=============================>                        (67 + 54) / 121][Stage 68:===========================================>          (97 + 24) / 121][Stage 68:====================================================> (118 + 3) / 121]                                                                                [Stage 69:===========================>                          (63 + 59) / 122][Stage 69:=================================>                    (75 + 47) / 122][Stage 69:=========================================>            (93 + 29) / 122][Stage 69:===============================================>     (110 + 12) / 122][Stage 69:=====================================================>(120 + 2) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.710055989 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412077747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:====================================>                 (76 + 37) / 113][Stage 70:===========================================>          (90 + 23) / 113][Stage 70:=============================================>        (96 + 17) / 113][Stage 70:====================================================> (109 + 4) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:====================================>                 (76 + 38) / 114][Stage 71:========================================>             (85 + 29) / 114][Stage 71:==============================================>       (98 + 16) / 114][Stage 71:=================================================>    (105 + 9) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(112 + 2) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.469021444 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433529419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:================================>                     (67 + 46) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:==============================================>       (97 + 16) / 113][Stage 72:===================================================>  (108 + 5) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:==================================>                   (72 + 42) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.169879759 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381897026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (76 + 42) / 118][Stage 74:=====================================>                (82 + 36) / 118][Stage 74:===========================================>          (95 + 23) / 118][Stage 74:===================================================>  (113 + 5) / 118]                                                                                [Stage 75:==================================>                   (77 + 42) / 119][Stage 75:=======================================>              (86 + 33) / 119][Stage 75:==========================================>           (94 + 25) / 119][Stage 75:==================================================>   (112 + 7) / 119][Stage 75:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.796720263 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376597348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=====================================>                (79 + 34) / 113][Stage 76:===========================================>          (92 + 21) / 113][Stage 76:=================================================>    (104 + 9) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:====================================>                 (78 + 36) / 114][Stage 77:==========================================>           (90 + 24) / 114][Stage 77:==============================================>       (99 + 15) / 114][Stage 77:==================================================>   (106 + 8) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.002622271 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402468736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:====================================>                 (77 + 38) / 115][Stage 78:============================================>         (94 + 21) / 115][Stage 78:==================================================>   (107 + 8) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:================================>                     (69 + 47) / 116][Stage 79:======================================>               (83 + 33) / 116][Stage 79:============================================>         (96 + 20) / 116][Stage 79:=================================================>    (107 + 9) / 116][Stage 79:=====================================================>(114 + 2) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.042208885 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352117166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=====================================>                (80 + 35) / 115][Stage 80:=======================================>              (84 + 31) / 115][Stage 80:==============================================>      (100 + 15) / 115][Stage 80:====================================================> (112 + 3) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:=======================================>              (85 + 31) / 116][Stage 81:==========================================>           (92 + 24) / 116][Stage 81:===============================================>     (104 + 12) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.787144387 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354752114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=======================================>              (85 + 30) / 115][Stage 82:==============================================>       (98 + 17) / 115][Stage 82:====================================================> (112 + 3) / 115]                                                                                [Stage 83:========================================>             (86 + 30) / 116][Stage 83:===============================================>     (103 + 13) / 116][Stage 83:===================================================>  (111 + 5) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.652733095 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385400898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:=================================>                    (74 + 44) / 118][Stage 84:========================================>             (88 + 30) / 118][Stage 84:===============================================>     (105 + 13) / 118][Stage 84:====================================================> (115 + 3) / 118]                                                                                [Stage 85:==================================>                   (77 + 42) / 119][Stage 85:=======================================>              (86 + 33) / 119][Stage 85:===============================================>     (106 + 13) / 119][Stage 85:=====================================================>(117 + 2) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.465749554 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432561157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (64 + 57) / 121][Stage 86:=====================================>                (83 + 38) / 121][Stage 86:============================================>        (101 + 20) / 121][Stage 86:====================================================> (117 + 4) / 121]                                                                                [Stage 87:===========================>                          (63 + 59) / 122][Stage 87:==================================>                   (78 + 44) / 122][Stage 87:===========================================>          (99 + 23) / 122][Stage 87:================================================>    (111 + 11) / 122][Stage 87:====================================================> (119 + 3) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.763351378 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426434856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (61 + 60) / 121][Stage 88:==============================>                       (69 + 52) / 121][Stage 88:======================================>               (87 + 34) / 121][Stage 88:===============================================>     (109 + 12) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:============================>                         (65 + 57) / 122][Stage 89:====================================>                 (83 + 39) / 122][Stage 89:==============================================>      (106 + 16) / 122][Stage 89:===================================================>  (117 + 5) / 122][Stage 89:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.672087651 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390844477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (70 + 45) / 115][Stage 90:=======================================>              (85 + 30) / 115][Stage 90:============================================>         (95 + 20) / 115][Stage 90:===================================================>  (110 + 5) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:================================>                     (70 + 46) / 116][Stage 91:=======================================>              (84 + 32) / 116][Stage 91:==============================================>      (102 + 14) / 116][Stage 91:===================================================>  (111 + 5) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.264100158 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453040666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (78 + 40) / 118][Stage 92:==========================================>           (92 + 26) / 118][Stage 92:=============================================>       (102 + 16) / 118][Stage 92:====================================================> (114 + 4) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:===================================>                  (79 + 40) / 119][Stage 93:=========================================>            (92 + 27) / 119][Stage 93:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.364890359 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38573294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==============================>                       (65 + 50) / 115][Stage 94:====================================>                 (77 + 38) / 115][Stage 94:============================================>         (95 + 20) / 115][Stage 94:=================================================>    (106 + 9) / 115][Stage 94:===================================================>  (110 + 5) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=================================>                    (72 + 44) / 116][Stage 95:========================================>             (87 + 29) / 116][Stage 95:===============================================>     (103 + 13) / 116][Stage 95:==================================================>   (108 + 8) / 116][Stage 95:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.188931726 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355740699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=====================================>                (78 + 35) / 113][Stage 96:===========================================>          (90 + 23) / 113][Stage 96:===============================================>     (101 + 12) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:======================================>               (82 + 32) / 114][Stage 97:===========================================>          (91 + 23) / 114][Stage 97:===============================================>     (103 + 11) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.132352436 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365285412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:====================================>                 (77 + 36) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:=============================================>        (96 + 17) / 113][Stage 98:==================================================>   (105 + 8) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:=========================================>            (87 + 27) / 114][Stage 99:=============================================>        (95 + 19) / 114][Stage 99:================================================>    (104 + 10) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(112 + 2) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.096974379 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352858309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:======================================>              (83 + 32) / 115][Stage 100:=========================================>           (90 + 25) / 115][Stage 100:============================================>        (96 + 19) / 115][Stage 100:=================================================>   (107 + 8) / 115][Stage 100:====================================================>(114 + 1) / 115]                                                                                [Stage 101:=======================================>             (86 + 30) / 116][Stage 101:===========================================>         (96 + 20) / 116][Stage 101:==============================================>     (103 + 13) / 116][Stage 101:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.162614961 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394811931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==============================>                      (67 + 48) / 115][Stage 102:======================================>              (83 + 32) / 115][Stage 102:============================================>        (96 + 19) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:==================================>                  (75 + 41) / 116][Stage 103:==========================================>          (93 + 23) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.714760652 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342731015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:======================================>              (83 + 32) / 115][Stage 104:=======================================>             (86 + 29) / 115][Stage 104:============================================>        (96 + 19) / 115][Stage 104:==================================================>  (110 + 5) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:======================================>              (84 + 32) / 116][Stage 105:===========================================>         (95 + 21) / 116][Stage 105:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.844732331 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443471335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:============================>                        (65 + 56) / 121][Stage 106:==================================>                  (78 + 43) / 121][Stage 106:============================================>       (103 + 18) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:============================>                        (65 + 57) / 122][Stage 107:===================================>                 (81 + 41) / 122][Stage 107:===========================================>        (103 + 19) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.212850053 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411916749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==============================>                      (67 + 48) / 115][Stage 108:====================================>                (80 + 35) / 115][Stage 108:=========================================>           (90 + 25) / 115][Stage 108:===============================================>    (104 + 11) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:==============================>                      (67 + 49) / 116][Stage 109:====================================>                (79 + 37) / 116][Stage 109:=========================================>           (91 + 25) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.958187594 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389976315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (60 + 53) / 113][Stage 110:==================================>                  (73 + 40) / 113][Stage 110:=======================================>             (85 + 28) / 113][Stage 110:==============================================>      (99 + 14) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:=============================>                       (64 + 50) / 114][Stage 111:=====================================>               (80 + 34) / 114][Stage 111:=============================================>       (97 + 17) / 114][Stage 111:==================================================>  (108 + 6) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.536027564 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355031157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (81 + 32) / 113][Stage 112:===========================================>         (93 + 20) / 113][Stage 112:=============================================>       (97 + 16) / 113][Stage 112:===============================================>    (103 + 10) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:=====================================>               (81 + 33) / 114][Stage 113:============================================>        (96 + 18) / 114][Stage 113:==============================================>     (103 + 11) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.314814459 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381332966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (71 + 44) / 115][Stage 114:========================================>            (88 + 27) / 115][Stage 114:=============================================>       (98 + 17) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:====================================>                (80 + 36) / 116][Stage 115:========================================>            (89 + 27) / 116][Stage 115:============================================>        (98 + 18) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.971795244 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41803591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (65 + 55) / 120][Stage 116:=====================================>               (85 + 35) / 120][Stage 116:==============================================>     (108 + 12) / 120][Stage 116:===================================================> (117 + 3) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:===========================>                         (63 + 58) / 121][Stage 117:======================================>              (87 + 34) / 121][Stage 117:============================================>       (104 + 17) / 121][Stage 117:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.330480433 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401568995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (61 + 60) / 121][Stage 118:===============================>                     (71 + 50) / 121][Stage 118:=======================================>             (90 + 31) / 121][Stage 118:==================================================>  (116 + 5) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:==============================>                      (70 + 52) / 122][Stage 119:===================================>                 (82 + 40) / 122][Stage 119:=============================================>      (107 + 15) / 122][Stage 119:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.472783154 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338206921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (82 + 33) / 115][Stage 120:========================================>            (88 + 27) / 115][Stage 120:=============================================>      (101 + 14) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=======================================>             (87 + 29) / 116][Stage 121:=============================================>      (102 + 14) / 116][Stage 121:=================================================>   (109 + 7) / 116][Stage 121:===================================================> (113 + 3) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.681208219 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346152468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (81 + 34) / 115][Stage 122:=========================================>           (90 + 25) / 115][Stage 122:===============================================>    (104 + 11) / 115][Stage 122:===================================================> (111 + 4) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:======================================>              (84 + 32) / 116][Stage 123:===========================================>         (95 + 21) / 116][Stage 123:==================================================>  (110 + 6) / 116][Stage 123:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.193098433 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335306652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (82 + 33) / 115][Stage 124:=======================================>             (86 + 29) / 115][Stage 124:=============================================>      (100 + 15) / 115][Stage 124:===================================================> (111 + 4) / 115]                                                                                [Stage 125:========================================>            (89 + 27) / 116][Stage 125:=============================================>      (101 + 15) / 116][Stage 125:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.561953264 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407661736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:===============================>                     (73 + 48) / 121][Stage 126:========================================>            (93 + 28) / 121][Stage 126:===============================================>    (111 + 10) / 121][Stage 126:====================================================>(119 + 2) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:=============================>                       (67 + 55) / 122][Stage 127:======================================>              (89 + 33) / 122][Stage 127:==============================================>     (110 + 12) / 122][Stage 127:===================================================> (119 + 3) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.506802873 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364917472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (81 + 32) / 113][Stage 128:==========================================>          (90 + 23) / 113][Stage 128:==============================================>      (99 + 14) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:=======================================>             (84 + 30) / 114][Stage 129:===========================================>         (94 + 20) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.996634612 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495161771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (62 + 59) / 121][Stage 130:===============================>                     (73 + 48) / 121][Stage 130:=========================================>           (94 + 27) / 121][Stage 130:=================================================>   (114 + 7) / 121][Stage 130:====================================================>(120 + 1) / 121]                                                                                [Stage 131:==========================>                          (62 + 60) / 122][Stage 131:====================================>                (83 + 39) / 122][Stage 131:============================================>       (104 + 18) / 122][Stage 131:==================================================>  (117 + 5) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.530526595 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339861427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:====================================>                (80 + 35) / 115][Stage 132:======================================>              (84 + 31) / 115][Stage 132:=============================================>       (98 + 17) / 115][Stage 132:=================================================>   (107 + 8) / 115][Stage 132:====================================================>(113 + 2) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:=======================================>             (86 + 30) / 116][Stage 133:============================================>        (97 + 19) / 116][Stage 133:=================================================>   (108 + 8) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.874010201 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368322243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:==================================>                  (77 + 41) / 118][Stage 134:=========================================>           (93 + 25) / 118][Stage 134:==============================================>     (106 + 12) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:===================================>                 (80 + 39) / 119][Stage 135:===========================================>         (98 + 21) / 119][Stage 135:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.039016338 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380716485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:================================>                    (69 + 44) / 113][Stage 136:=======================================>             (85 + 28) / 113][Stage 136:=================================================>   (105 + 8) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:=====================================>               (80 + 34) / 114][Stage 137:==============================================>     (101 + 13) / 114][Stage 137:===================================================> (111 + 3) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.598270227 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380838925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:>                                                      (0 + 0) / 115][Stage 138:================================>                    (71 + 44) / 115][Stage 138:===================================>                 (78 + 37) / 115][Stage 138:=========================================>           (89 + 26) / 115][Stage 138:==============================================>     (103 + 12) / 115][Stage 138:==================================================>  (110 + 5) / 115]                                                                                [Stage 139:===================================>                 (78 + 38) / 116][Stage 139:============================================>        (97 + 19) / 116][Stage 139:================================================>    (107 + 9) / 116][Stage 139:=================================================>   (109 + 7) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.262192673 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397673582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 58) / 120][Stage 140:==============================>                      (69 + 51) / 120][Stage 140:=======================================>             (89 + 31) / 120][Stage 140:==================================================>  (115 + 5) / 120]                                                                                [Stage 141:============================>                        (66 + 55) / 121][Stage 141:=================================>                   (77 + 44) / 121][Stage 141:=============================================>      (106 + 15) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.442971704 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408193558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:=============================>                       (66 + 54) / 120][Stage 142:======================================>              (88 + 32) / 120][Stage 142:==============================================>     (108 + 12) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:=================================>                   (76 + 45) / 121][Stage 143:==========================================>         (100 + 21) / 121][Stage 143:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.131638834 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367866902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===============================>                     (68 + 47) / 115][Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:===================================================> (111 + 4) / 115][Stage 144:====================================================>(113 + 2) / 115]                                                                                [Stage 145:===============================>                     (68 + 48) / 116][Stage 145:=====================================>               (81 + 35) / 116][Stage 145:==========================================>          (93 + 23) / 116][Stage 145:================================================>    (107 + 9) / 116][Stage 145:==================================================>  (110 + 6) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.183010002 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39979601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (60 + 53) / 113][Stage 146:====================================>                (78 + 35) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:===============================>                     (68 + 46) / 114][Stage 147:=====================================>               (80 + 34) / 114][Stage 147:==============================================>      (99 + 15) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.193883907 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350553284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=======================================>             (86 + 29) / 115][Stage 148:==============================================>     (102 + 13) / 115][Stage 148:===================================================> (112 + 3) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:======================================>              (84 + 32) / 116][Stage 149:===========================================>         (96 + 20) / 116][Stage 149:=================================================>   (108 + 8) / 116][Stage 149:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.636407564 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371801695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==============================>                      (67 + 48) / 115][Stage 150:===================================>                 (77 + 38) / 115][Stage 150:==========================================>          (92 + 23) / 115][Stage 150:==================================================>  (110 + 5) / 115]                                                                                [Stage 151:=================================>                   (74 + 42) / 116][Stage 151:=========================================>           (91 + 25) / 116][Stage 151:==============================================>     (103 + 13) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.713026144 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372831599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (78 + 40) / 118][Stage 152:========================================>            (91 + 27) / 118][Stage 152:===============================================>    (107 + 11) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:=====================================>               (85 + 34) / 119][Stage 153:=============================================>      (104 + 15) / 119][Stage 153:==================================================>  (114 + 5) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.446576822 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397098982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (61 + 59) / 120][Stage 154:===============================>                     (72 + 48) / 120][Stage 154:=========================================>           (93 + 27) / 120][Stage 154:===============================================>    (110 + 10) / 120]                                                                                [Stage 155:===========================>                         (63 + 58) / 121][Stage 155:==============================>                      (69 + 52) / 121][Stage 155:==========================================>          (96 + 25) / 121][Stage 155:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.161066059 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38181951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:==============================>                      (64 + 49) / 113][Stage 156:=====================================>               (79 + 34) / 113][Stage 156:===========================================>         (93 + 20) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (70 + 44) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:=================================================>   (106 + 8) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.521135716 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393106128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:============================>                        (66 + 55) / 121][Stage 158:======================================>              (87 + 34) / 121][Stage 158:===========================================>        (102 + 19) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:===========================>                         (64 + 58) / 122][Stage 159:====================================>                (84 + 38) / 122][Stage 159:==============================================>     (110 + 12) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.484881214 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378143677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=================================>                   (72 + 43) / 115][Stage 160:======================================>              (83 + 32) / 115][Stage 160:============================================>        (96 + 19) / 115][Stage 160:==================================================>  (109 + 6) / 115]                                                                                [Stage 161:==================================>                  (75 + 41) / 116][Stage 161:========================================>            (88 + 28) / 116][Stage 161:============================================>       (100 + 16) / 116][Stage 161:====================================================>(114 + 2) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.016640894 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370903833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (75 + 43) / 118][Stage 162:=======================================>             (89 + 29) / 118][Stage 162:==============================================>     (105 + 13) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:========================================>            (91 + 28) / 119][Stage 163:=================================================>   (112 + 7) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.025198503 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478355957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:==============================>                      (69 + 51) / 120][Stage 164:=======================================>             (90 + 30) / 120][Stage 164:=================================================>   (111 + 9) / 120]                                                                                [Stage 165:==========================>                          (61 + 60) / 121][Stage 165:===============================>                     (73 + 48) / 121][Stage 165:=========================================>           (94 + 27) / 121][Stage 165:===================================================> (117 + 4) / 121][Stage 165:===================================================> (118 + 3) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.445300283 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359102373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (73 + 45) / 118][Stage 166:====================================>                (82 + 36) / 118][Stage 166:=========================================>           (92 + 26) / 118][Stage 166:=================================================>   (111 + 7) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:=================================>                   (75 + 44) / 119][Stage 167:====================================>                (82 + 37) / 119][Stage 167:===========================================>         (98 + 21) / 119][Stage 167:==================================================>  (113 + 6) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.615942461 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359975777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (74 + 39) / 113][Stage 168:========================================>            (87 + 26) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:==================================>                  (75 + 39) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:==============================================>      (99 + 15) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.194090017 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405939513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (64 + 57) / 121][Stage 170:=======================================>             (91 + 30) / 121][Stage 170:=============================================>      (106 + 15) / 121][Stage 170:===================================================> (118 + 3) / 121]                                                                                [Stage 171:==========================>                          (62 + 60) / 122][Stage 171:================================>                    (74 + 48) / 122][Stage 171:========================================>            (94 + 28) / 122][Stage 171:==================================================>  (117 + 5) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.721798702 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377462356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=============================>                       (65 + 50) / 115][Stage 172:====================================>                (80 + 35) / 115][Stage 172:==========================================>          (93 + 22) / 115][Stage 172:==============================================>     (102 + 13) / 115][Stage 172:==================================================>  (110 + 5) / 115]                                                                                [Stage 173:==================================>                  (76 + 40) / 116][Stage 173:=======================================>             (87 + 29) / 116][Stage 173:===========================================>         (96 + 20) / 116][Stage 173:==============================================>     (104 + 12) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.821025799 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377698017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:===================================>                 (80 + 38) / 118][Stage 174:==============================================>     (106 + 12) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (78 + 41) / 119][Stage 175:========================================>            (91 + 28) / 119][Stage 175:==============================================>     (107 + 12) / 119][Stage 175:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.139046613 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355554262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (76 + 42) / 118][Stage 176:=======================================>             (89 + 29) / 118][Stage 176:==============================================>     (105 + 13) / 118][Stage 176:====================================================>(116 + 2) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:==================================>                  (78 + 41) / 119][Stage 177:==========================================>          (95 + 24) / 119][Stage 177:==============================================>     (107 + 12) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.023172442 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39031412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:===============================>                     (73 + 48) / 121][Stage 178:=========================================>           (94 + 27) / 121][Stage 178:=================================================>   (114 + 7) / 121]                                                                                [Stage 179:===========================>                         (63 + 59) / 122][Stage 179:=============================>                       (68 + 54) / 122][Stage 179:=========================================>           (96 + 26) / 122][Stage 179:===============================================>    (112 + 10) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.243032267 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342627339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (82 + 33) / 115][Stage 180:=========================================>           (89 + 26) / 115][Stage 180:==============================================>     (102 + 13) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:=======================================>             (87 + 29) / 116][Stage 181:============================================>       (100 + 16) / 116][Stage 181:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.677730235 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383909439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (80 + 35) / 115][Stage 182:=========================================>           (90 + 25) / 115][Stage 182:=============================================>      (101 + 14) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:=======================================>             (87 + 29) / 116][Stage 183:=============================================>       (99 + 17) / 116][Stage 183:=================================================>   (109 + 7) / 116][Stage 183:====================================================>(114 + 2) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.957648585 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409258464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:=============================>                       (63 + 50) / 113][Stage 184:=====================================>               (81 + 32) / 113][Stage 184:==============================================>     (101 + 12) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:============================>                        (61 + 53) / 114][Stage 185:=================================>                   (73 + 41) / 114][Stage 185:============================================>        (96 + 18) / 114][Stage 185:=================================================>   (107 + 7) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.631541963 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389976119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===========================>                         (62 + 58) / 120][Stage 186:==================================>                  (77 + 43) / 120][Stage 186:=========================================>           (93 + 27) / 120][Stage 186:=================================================>   (113 + 7) / 120]                                                                                [Stage 187:============================>                        (65 + 56) / 121][Stage 187:===================================>                 (81 + 40) / 121][Stage 187:=======================================>             (91 + 30) / 121][Stage 187:=================================================>   (112 + 9) / 121][Stage 187:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.365062983 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375605371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (78 + 35) / 113][Stage 188:==========================================>          (90 + 23) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:==================================================>  (108 + 5) / 113][Stage 188:===================================================> (109 + 4) / 113]                                                                                [Stage 189:=======================================>             (84 + 30) / 114][Stage 189:============================================>        (95 + 19) / 114][Stage 189:=================================================>   (106 + 8) / 114][Stage 189:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.167303435 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401125657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:===============================>                     (71 + 49) / 120][Stage 190:=========================================>           (93 + 27) / 120][Stage 190:==============================================>     (108 + 12) / 120][Stage 190:====================================================>(119 + 1) / 120]                                                                                [Stage 191:===========================>                         (62 + 59) / 121][Stage 191:=================================>                   (77 + 44) / 121][Stage 191:=========================================>           (94 + 27) / 121][Stage 191:=================================================>   (112 + 9) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.419320909 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365882358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (70 + 45) / 115][Stage 192:===================================>                 (78 + 37) / 115][Stage 192:=========================================>           (90 + 25) / 115][Stage 192:==================================================>  (109 + 6) / 115][Stage 192:===================================================> (112 + 3) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:==============================>                      (67 + 49) / 116][Stage 193:====================================>                (80 + 36) / 116][Stage 193:=========================================>           (90 + 26) / 116][Stage 193:=================================================>   (108 + 8) / 116][Stage 193:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.121493181 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377553437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=============================>                       (63 + 50) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:===============================================>    (103 + 10) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:===============================>                     (68 + 46) / 114][Stage 195:=====================================>               (81 + 33) / 114][Stage 195:============================================>        (95 + 19) / 114][Stage 195:===================================================> (110 + 4) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.470928044 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369031768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (72 + 46) / 118][Stage 196:==================================>                  (77 + 41) / 118][Stage 196:========================================>            (90 + 28) / 118][Stage 196:=============================================>      (103 + 15) / 118][Stage 196:=================================================>   (111 + 7) / 118]                                                                                [Stage 197:=================================>                   (76 + 43) / 119][Stage 197:====================================>                (83 + 36) / 119][Stage 197:==========================================>          (96 + 23) / 119][Stage 197:===============================================>    (109 + 10) / 119][Stage 197:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.411975366 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437577461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (82 + 33) / 115][Stage 198:=========================================>           (89 + 26) / 115][Stage 198:==============================================>     (102 + 13) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:=====================================>               (81 + 35) / 116][Stage 199:=========================================>           (90 + 26) / 116][Stage 199:==============================================>     (104 + 12) / 116][Stage 199:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.531405387 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378256321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:==============================>                      (65 + 48) / 113][Stage 200:========================================>            (86 + 27) / 113][Stage 200:==============================================>     (100 + 13) / 113]                                                                                [Stage 201:=============================>                       (63 + 51) / 114][Stage 201:==================================>                  (75 + 39) / 114][Stage 201:=============================================>       (98 + 16) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.228484227 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 06:55:27 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.41:33524) dropped. RpcEnv already stopped.
17/05/22 06:55:27 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:38486) dropped. RpcEnv already stopped.
17/05/22 06:55:27 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.41:33524) dropped. RpcEnv already stopped.
17/05/22 06:55:27 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:38486) dropped. RpcEnv already stopped.

real	10m22.120s
user	11m52.340s
sys	0m49.888s
