Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 09:03:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:03:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:03:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:03:42 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 09:03:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:03:54 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522090343-0439).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.388281155 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========>                                            (22 + 93) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:==================================================>    (106 + 9) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.929942165 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.793194519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============================>                       (68 + 50) / 118][Stage 2:=================================>                     (71 + 47) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:==================================>                    (75 + 43) / 118][Stage 2:====================================>                  (78 + 40) / 118][Stage 2:======================================>                (82 + 36) / 118][Stage 2:==========================================>            (92 + 26) / 118][Stage 2:=================================================>    (108 + 10) / 118][Stage 2:====================================================>  (113 + 5) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:================================>                      (71 + 48) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:=======================================>               (85 + 34) / 119][Stage 3:========================================>              (88 + 31) / 119][Stage 3:==========================================>            (93 + 26) / 119][Stage 3:=============================================>        (100 + 19) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:=====================================================> (116 + 3) / 119]                                                                                Time elapsed: 5.817658917 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606474338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:===========================================>           (90 + 25) / 115][Stage 4:=============================================>         (96 + 19) / 115][Stage 4:==============================================>        (97 + 18) / 115][Stage 4:===============================================>      (102 + 13) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:=======================================>               (83 + 33) / 116][Stage 5:==========================================>            (90 + 26) / 116][Stage 5:===============================================>      (101 + 15) / 116][Stage 5:==================================================>    (107 + 9) / 116][Stage 5:=====================================================> (113 + 3) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.45528949 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.688811396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:========================>                              (53 + 68) / 121][Stage 6:=========================>                             (57 + 64) / 121][Stage 6:============================>                          (63 + 58) / 121][Stage 6:==================================>                    (76 + 45) / 121][Stage 6:=========================================>             (91 + 30) / 121][Stage 6:=============================================>        (101 + 20) / 121][Stage 6:==================================================>    (112 + 9) / 121][Stage 6:=====================================================> (118 + 3) / 121][Stage 6:======================================================>(120 + 1) / 121]                                                                                [Stage 7:===========================>                           (60 + 62) / 122][Stage 7:===========================>                           (62 + 60) / 122][Stage 7:==============================>                        (67 + 55) / 122][Stage 7:=================================>                     (75 + 47) / 122][Stage 7:=========================================>             (91 + 31) / 122][Stage 7:=================================================>    (112 + 10) / 122][Stage 7:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.463073593 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611050871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (58 + 62) / 120][Stage 8:==============================>                        (67 + 53) / 120][Stage 8:=================================>                     (74 + 46) / 120][Stage 8:=========================================>             (91 + 29) / 120][Stage 8:================================================>     (107 + 13) / 120][Stage 8:======================================================>(118 + 2) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:===============================>                       (70 + 51) / 121][Stage 9:========================================>              (89 + 32) / 121][Stage 9:============================================>         (100 + 21) / 121][Stage 9:===================================================>   (113 + 8) / 121][Stage 9:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.126482138 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590239171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:============================>                         (63 + 58) / 121][Stage 10:=================================>                    (75 + 46) / 121][Stage 10:===========================================>          (98 + 23) / 121][Stage 10:==================================================>   (113 + 8) / 121][Stage 10:=====================================================>(119 + 2) / 121]                                                                                [Stage 11:===========================>                          (62 + 60) / 122][Stage 11:==============================>                       (68 + 54) / 122][Stage 11:===================================>                  (81 + 41) / 122][Stage 11:==============================================>      (107 + 15) / 122][Stage 11:====================================================> (118 + 4) / 122][Stage 11:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.902859931 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533774127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:====================================>                 (76 + 37) / 113][Stage 12:=========================================>            (86 + 27) / 113][Stage 12:============================================>         (93 + 20) / 113][Stage 12:===============================================>     (101 + 12) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:===================================================>  (108 + 5) / 113][Stage 12:======================================================(113 + 0) / 113]                                                                                [Stage 13:===================================>                  (74 + 40) / 114][Stage 13:=========================================>            (88 + 26) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.518725037 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562887852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (56 + 57) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:==================================>                   (72 + 41) / 113][Stage 14:==========================================>           (88 + 25) / 113][Stage 14:===================================================>  (107 + 6) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=================================>                    (71 + 43) / 114][Stage 15:========================================>             (85 + 29) / 114][Stage 15:===============================================>     (102 + 12) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.333902342 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551585039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:===============================>                      (66 + 47) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:===============================================>     (102 + 11) / 113][Stage 16:==================================================>   (105 + 8) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=================================>                    (71 + 43) / 114][Stage 17:=============================================>        (96 + 18) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.754978522 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4970053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (71 + 47) / 118][Stage 18:====================================>                 (80 + 38) / 118][Stage 18:============================================>         (97 + 21) / 118][Stage 18:===================================================>  (112 + 6) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:====================================>                 (81 + 38) / 119][Stage 19:============================================>         (99 + 20) / 119][Stage 19:==================================================>   (111 + 8) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.354868583 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528995534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (65 + 50) / 115][Stage 20:===================================>                  (76 + 39) / 115][Stage 20:========================================>             (87 + 28) / 115][Stage 20:==============================================>      (101 + 14) / 115][Stage 20:===================================================>  (110 + 5) / 115][Stage 20:=====================================================>(113 + 2) / 115]                                                                                [Stage 21:=====================================>                (80 + 36) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:================================================>    (106 + 10) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.397549487 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514937133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:=============================>                        (65 + 56) / 121][Stage 22:===================================>                  (79 + 42) / 121][Stage 22:================================================>    (110 + 11) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:========================>                             (56 + 66) / 122][Stage 23:===========================>                          (63 + 59) / 122][Stage 23:================================>                     (74 + 48) / 122][Stage 23:==========================================>           (95 + 27) / 122][Stage 23:================================================>    (112 + 10) / 122][Stage 23:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.347954063 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420159218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=====================================>                (79 + 36) / 115][Stage 24:=======================================>              (84 + 31) / 115][Stage 24:===========================================>          (93 + 22) / 115][Stage 24:===================================================>  (110 + 5) / 115]                                                                                [Stage 25:=======================================>              (85 + 31) / 116][Stage 25:=============================================>       (100 + 16) / 116][Stage 25:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.845857588 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440515317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (70 + 43) / 113][Stage 26:=====================================>                (79 + 34) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:=============================================>        (95 + 18) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:====================================================> (109 + 4) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:=======================================>              (83 + 31) / 114][Stage 27:============================================>         (93 + 21) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:====================================================> (110 + 4) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.125610798 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442595623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (73 + 45) / 118][Stage 28:==================================>                   (76 + 42) / 118][Stage 28:=====================================>                (83 + 35) / 118][Stage 28:============================================>         (98 + 20) / 118][Stage 28:================================================>    (108 + 10) / 118][Stage 28:===================================================>  (113 + 5) / 118][Stage 28:====================================================> (114 + 4) / 118]                                                                                [Stage 29:=================================>                    (74 + 45) / 119][Stage 29:==================================>                   (75 + 44) / 119][Stage 29:=====================================>                (83 + 36) / 119][Stage 29:============================================>         (97 + 22) / 119][Stage 29:===================================================>  (114 + 5) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.895927212 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499277487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (67 + 54) / 121][Stage 30:=====================================>                (84 + 37) / 121][Stage 30:============================================>        (102 + 19) / 121][Stage 30:==================================================>   (113 + 8) / 121]                                                                                [Stage 31:===========================>                          (63 + 59) / 122][Stage 31:===============================>                      (71 + 51) / 122][Stage 31:===========================================>          (99 + 23) / 122][Stage 31:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.357847173 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470278503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:==============================>                       (63 + 50) / 113][Stage 32:==========================================>           (88 + 25) / 113][Stage 32:==================================================>   (106 + 7) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:===============================>                      (67 + 47) / 114][Stage 33:=======================================>              (83 + 31) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.203630466 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474515996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (70 + 45) / 115][Stage 34:=====================================>                (79 + 36) / 115][Stage 34:============================================>         (94 + 21) / 115][Stage 34:==================================================>   (108 + 7) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:===================================>                  (77 + 39) / 116][Stage 35:=========================================>            (90 + 26) / 116][Stage 35:==============================================>      (101 + 15) / 116][Stage 35:===============================================>     (105 + 11) / 116][Stage 35:==================================================>   (108 + 8) / 116][Stage 35:===================================================>  (111 + 5) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.776879828 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412717977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (83 + 32) / 115][Stage 36:============================================>         (95 + 20) / 115][Stage 36:==================================================>   (107 + 8) / 115][Stage 36:=====================================================>(113 + 2) / 115]                                                                                [Stage 37:=====================================>                (80 + 36) / 116][Stage 37:=======================================>              (84 + 32) / 116][Stage 37:=========================================>            (90 + 26) / 116][Stage 37:==============================================>      (101 + 15) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.051255525 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465118088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (75 + 43) / 118][Stage 38:=========================================>            (91 + 27) / 118][Stage 38:===============================================>     (106 + 12) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:===================================>                  (79 + 40) / 119][Stage 39:=========================================>            (92 + 27) / 119][Stage 39:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 2.942131508 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47244697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==================================>                   (73 + 42) / 115][Stage 40:==========================================>           (90 + 25) / 115][Stage 40:==============================================>      (101 + 14) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:===================================>                  (76 + 40) / 116][Stage 41:==============================================>      (101 + 15) / 116][Stage 41:===============================================>     (105 + 11) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.065346566 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497313661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:==============================>                       (67 + 53) / 120][Stage 42:====================================>                 (80 + 40) / 120][Stage 42:===============================================>     (107 + 13) / 120][Stage 42:================================================>    (110 + 10) / 120][Stage 42:===================================================>  (114 + 6) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:=============================>                        (67 + 54) / 121][Stage 43:========================================>             (90 + 31) / 121][Stage 43:=================================================>    (112 + 9) / 121][Stage 43:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.664769904 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545438721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (69 + 46) / 115][Stage 44:=======================================>              (85 + 30) / 115][Stage 44:==============================================>      (100 + 15) / 115][Stage 44:====================================================> (111 + 4) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:===============================>                      (67 + 49) / 116][Stage 45:=====================================>                (80 + 36) / 116][Stage 45:==============================================>       (99 + 17) / 116][Stage 45:==================================================>   (109 + 7) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.499884566 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452599412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:===============================>                      (66 + 47) / 113][Stage 46:==============================================>       (97 + 16) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===========================>                          (59 + 55) / 114][Stage 47:==============================>                       (64 + 50) / 114][Stage 47:===================================>                  (75 + 39) / 114][Stage 47:==============================================>       (98 + 16) / 114][Stage 47:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.891949363 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454718298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (60 + 53) / 113][Stage 48:================================>                     (67 + 46) / 113][Stage 48:========================================>             (84 + 29) / 113][Stage 48:===============================================>     (102 + 11) / 113]                                                                                [Stage 49:=============================>                        (62 + 52) / 114][Stage 49:=================================>                    (70 + 44) / 114][Stage 49:========================================>             (86 + 28) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.158916298 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424939392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:====================================>                 (77 + 36) / 113][Stage 50:==========================================>           (88 + 25) / 113][Stage 50:==============================================>       (98 + 15) / 113][Stage 50:===================================================>  (107 + 6) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:=====================================>                (80 + 34) / 114][Stage 51:==========================================>           (89 + 25) / 114][Stage 51:==============================================>      (101 + 13) / 114][Stage 51:====================================================> (110 + 4) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.096457637 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385667858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (80 + 35) / 115][Stage 52:======================================>               (82 + 33) / 115][Stage 52:==============================================>       (99 + 16) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:========================================>             (86 + 30) / 116][Stage 53:==============================================>       (99 + 17) / 116][Stage 53:===================================================>  (111 + 5) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.889796438 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448178319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:===============================>                      (66 + 47) / 113][Stage 54:=====================================>                (78 + 35) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:====================================================> (109 + 4) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:================================>                     (68 + 46) / 114][Stage 55:============================================>         (94 + 20) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.303396977 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556156633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:================================>                     (72 + 49) / 121][Stage 56:=========================================>            (92 + 29) / 121][Stage 56:===================================================>  (115 + 6) / 121][Stage 56:=====================================================>(119 + 2) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=============================>                        (66 + 56) / 122][Stage 57:==================================>                   (79 + 43) / 122][Stage 57:==========================================>           (96 + 26) / 122][Stage 57:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.281950435 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37260618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (82 + 33) / 115][Stage 58:=========================================>            (88 + 27) / 115][Stage 58:==============================================>      (101 + 14) / 115][Stage 58:====================================================> (111 + 4) / 115]                                                                                [Stage 59:========================================>             (87 + 29) / 116][Stage 59:=============================================>        (97 + 19) / 116][Stage 59:=================================================>    (107 + 9) / 116][Stage 59:====================================================> (112 + 4) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.034518798 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401044583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:====================================>                 (77 + 36) / 113][Stage 60:=========================================>            (87 + 26) / 113][Stage 60:===============================================>     (101 + 12) / 113][Stage 60:====================================================> (109 + 4) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:======================================>               (82 + 32) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:================================================>    (104 + 10) / 114][Stage 61:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.223839447 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420324639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:================================>                     (67 + 46) / 113][Stage 62:==========================================>           (88 + 25) / 113][Stage 62:=================================================>    (104 + 9) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:============================>                         (60 + 54) / 114][Stage 63:================================>                     (68 + 46) / 114][Stage 63:=============================================>        (95 + 19) / 114][Stage 63:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.961068765 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403344429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:====================================>                 (76 + 37) / 113][Stage 64:========================================>             (85 + 28) / 113][Stage 64:==============================================>      (100 + 13) / 113][Stage 64:===================================================>  (108 + 5) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:======================================>               (82 + 32) / 114][Stage 65:=============================================>        (97 + 17) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.058061227 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466421673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:============================>                         (63 + 58) / 121][Stage 66:==================================>                   (78 + 43) / 121][Stage 66:============================================>        (102 + 19) / 121][Stage 66:=====================================================>(119 + 2) / 121]                                                                                [Stage 67:============================>                         (64 + 58) / 122][Stage 67:================================>                     (73 + 49) / 122][Stage 67:======================================>               (87 + 35) / 122][Stage 67:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.146067483 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41386196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:===============================>                      (66 + 47) / 113][Stage 68:=======================================>              (82 + 31) / 113][Stage 68:==============================================>       (97 + 16) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:==================================>                   (72 + 42) / 114][Stage 69:=========================================>            (87 + 27) / 114][Stage 69:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.008891865 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.563538194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (71 + 44) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:==================================================>   (108 + 7) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:=================================>                    (72 + 44) / 116][Stage 71:=========================================>            (89 + 27) / 116][Stage 71:==================================================>   (108 + 8) / 116][Stage 71:====================================================> (113 + 3) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.98327543 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426009795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==============================>                       (64 + 51) / 115][Stage 72:================================>                     (69 + 46) / 115][Stage 72:=======================================>              (85 + 30) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:===================================================>  (110 + 5) / 115]                                                                                [Stage 73:==================================>                   (74 + 42) / 116][Stage 73:========================================>             (88 + 28) / 116][Stage 73:===============================================>     (105 + 11) / 116][Stage 73:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.022448104 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364682497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (82 + 33) / 115][Stage 74:===========================================>          (93 + 22) / 115][Stage 74:==================================================>   (107 + 8) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=====================================>                (81 + 35) / 116][Stage 75:========================================>             (87 + 29) / 116][Stage 75:==============================================>      (102 + 14) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.57968798 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406670159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (74 + 41) / 115][Stage 76:========================================>             (86 + 29) / 115][Stage 76:=============================================>        (97 + 18) / 115][Stage 76:===================================================>  (110 + 5) / 115]                                                                                [Stage 77:================================>                     (70 + 46) / 116][Stage 77:====================================>                 (79 + 37) / 116][Stage 77:=============================================>       (100 + 16) / 116][Stage 77:===================================================>  (111 + 5) / 116][Stage 77:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.156735653 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418145972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:=============================>                        (62 + 51) / 113][Stage 78:===================================>                  (74 + 39) / 113][Stage 78:============================================>         (94 + 19) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:========================================>             (85 + 29) / 114][Stage 79:===============================================>     (102 + 12) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.958928341 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35497615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=======================================>              (84 + 31) / 115][Stage 80:===========================================>          (93 + 22) / 115][Stage 80:==================================================>   (108 + 7) / 115][Stage 80:=====================================================>(113 + 2) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:======================================>               (83 + 33) / 116][Stage 81:==========================================>           (91 + 25) / 116][Stage 81:=================================================>    (107 + 9) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.053329854 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391657716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (73 + 45) / 118][Stage 82:====================================>                 (79 + 39) / 118][Stage 82:=======================================>              (87 + 31) / 118][Stage 82:============================================>         (97 + 21) / 118][Stage 82:=================================================>    (109 + 9) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:===================================>                  (78 + 41) / 119][Stage 83:=======================================>              (86 + 33) / 119][Stage 83:============================================>         (99 + 20) / 119][Stage 83:==================================================>   (112 + 7) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.585422318 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371524637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:>                                                       (0 + 0) / 113][Stage 84:===================================>                  (75 + 38) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:============================================>         (93 + 20) / 113][Stage 84:===================================================>  (107 + 6) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:===================================>                  (75 + 39) / 114][Stage 85:===========================================>          (91 + 23) / 114][Stage 85:==============================================>      (101 + 13) / 114][Stage 85:====================================================> (110 + 4) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.955462431 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398451336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (79 + 39) / 118][Stage 86:===========================================>          (94 + 24) / 118][Stage 86:===================================================>  (112 + 6) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:=====================================>                (82 + 37) / 119][Stage 87:==============================================>      (104 + 15) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.056860885 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37218528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==================================>                   (73 + 40) / 113][Stage 88:==========================================>           (88 + 25) / 113][Stage 88:==============================================>       (98 + 15) / 113][Stage 88:================================================>    (103 + 10) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:======================================>               (82 + 32) / 114][Stage 89:=============================================>        (96 + 18) / 114][Stage 89:==================================================>   (107 + 7) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.075714879 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411990715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (61 + 59) / 120][Stage 90:===============================>                      (69 + 51) / 120][Stage 90:========================================>             (90 + 30) / 120][Stage 90:===================================================>  (115 + 5) / 120]                                                                                [Stage 91:============================>                         (64 + 57) / 121][Stage 91:===================================>                  (80 + 41) / 121][Stage 91:==========================================>           (96 + 25) / 121][Stage 91:=================================================>    (112 + 9) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.054647699 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431683672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (63 + 58) / 121][Stage 92:===============================>                      (71 + 50) / 121][Stage 92:==========================================>           (95 + 26) / 121][Stage 92:====================================================> (117 + 4) / 121][Stage 92:=====================================================>(119 + 2) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:=============================>                        (67 + 55) / 122][Stage 93:====================================>                 (82 + 40) / 122][Stage 93:==============================================>      (106 + 16) / 122]                                                                                Time elapsed: 3.040257257 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40362789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:================================>                     (68 + 45) / 113][Stage 94:==========================================>           (89 + 24) / 113][Stage 94:====================================================> (109 + 4) / 113]                                                                                [Stage 95:=============================>                        (63 + 51) / 114][Stage 95:================================>                     (69 + 45) / 114][Stage 95:============================================>         (94 + 20) / 114][Stage 95:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.831229671 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411028192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:=================================>                    (74 + 46) / 120][Stage 96:========================================>             (90 + 30) / 120][Stage 96:=================================================>    (111 + 9) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:==============================>                       (69 + 52) / 121][Stage 97:======================================>               (87 + 34) / 121][Stage 97:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.985432359 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395851909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:==============================>                       (63 + 50) / 113][Stage 98:===================================>                  (74 + 39) / 113][Stage 98:===========================================>          (90 + 23) / 113][Stage 98:=================================================>    (104 + 9) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:==============================>                       (64 + 50) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:===========================================>          (91 + 23) / 114][Stage 99:==============================================>      (100 + 14) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.430544869 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387560464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (76 + 39) / 115][Stage 100:===========================================>         (94 + 21) / 115][Stage 100:=============================================>      (101 + 14) / 115][Stage 100:==================================================>  (110 + 5) / 115]                                                                                [Stage 101:====================================>                (79 + 37) / 116][Stage 101:==========================================>          (93 + 23) / 116][Stage 101:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.769215052 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385320898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (75 + 43) / 118][Stage 102:======================================>              (85 + 33) / 118][Stage 102:=============================================>      (104 + 14) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:====================================>                (81 + 38) / 119][Stage 103:=============================================>      (103 + 16) / 119]                                                                                Time elapsed: 2.717164201 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373272483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===================================>                 (75 + 38) / 113][Stage 104:========================================>            (86 + 27) / 113][Stage 104:=============================================>       (97 + 16) / 113][Stage 104:==================================================>  (107 + 6) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===================================>                 (77 + 37) / 114][Stage 105:========================================>            (88 + 26) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.965985543 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366953325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (74 + 39) / 113][Stage 106:======================================>              (83 + 30) / 113][Stage 106:=========================================>           (89 + 24) / 113][Stage 106:==============================================>     (100 + 13) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:==================================>                  (75 + 39) / 114][Stage 107:======================================>              (83 + 31) / 114][Stage 107:===========================================>         (94 + 20) / 114][Stage 107:==============================================>     (101 + 13) / 114][Stage 107:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.982180569 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426530697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:==============================>                      (70 + 50) / 120][Stage 108:=======================================>             (89 + 31) / 120][Stage 108:=============================================>      (106 + 14) / 120][Stage 108:==================================================>  (114 + 6) / 120]                                                                                [Stage 109:============================>                        (65 + 56) / 121][Stage 109:==================================>                  (78 + 43) / 121][Stage 109:==========================================>          (97 + 24) / 121][Stage 109:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.150648938 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405331836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 60) / 121][Stage 110:=============================>                       (68 + 53) / 121][Stage 110:=======================================>             (91 + 30) / 121][Stage 110:=================================================>   (114 + 7) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:================================>                    (74 + 48) / 122][Stage 111:=======================================>             (92 + 30) / 122][Stage 111:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 2.926628048 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405551456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (61 + 59) / 120][Stage 112:==============================>                      (68 + 52) / 120][Stage 112:===========================================>         (99 + 21) / 120][Stage 112:===============================================>    (110 + 10) / 120][Stage 112:====================================================>(119 + 1) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:==============================>                      (70 + 51) / 121][Stage 113:======================================>              (89 + 32) / 121][Stage 113:=================================================>   (112 + 9) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.054884861 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383391932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:==============================>                      (64 + 49) / 113][Stage 114:===================================>                 (75 + 38) / 113][Stage 114:=============================================>       (96 + 17) / 113][Stage 114:==================================================>  (108 + 5) / 113]                                                                                [Stage 115:=============================>                       (64 + 50) / 114][Stage 115:================================>                    (70 + 44) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.087127135 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375105988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===============================>                     (68 + 47) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:=============================================>      (100 + 15) / 115][Stage 116:===================================================> (111 + 4) / 115]                                                                                [Stage 117:=================================>                   (74 + 42) / 116][Stage 117:======================================>              (85 + 31) / 116][Stage 117:===============================================>    (105 + 11) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.800810564 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384990417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:===========================================>         (93 + 20) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:=================================>                   (73 + 41) / 114][Stage 119:========================================>            (87 + 27) / 114][Stage 119:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.080962057 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390436993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:=====================================>               (79 + 34) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:============================>                        (62 + 52) / 114][Stage 121:====================================>                (78 + 36) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.205506838 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374517586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (71 + 44) / 115][Stage 122:========================================>            (88 + 27) / 115][Stage 122:=================================================>   (108 + 7) / 115]                                                                                [Stage 123:=================================>                   (74 + 42) / 116][Stage 123:==========================================>          (92 + 24) / 116][Stage 123:=============================================>      (101 + 15) / 116][Stage 123:=================================================>   (108 + 8) / 116][Stage 123:===================================================> (112 + 4) / 116][Stage 123:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.20940115 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36195431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==================================>                  (73 + 40) / 113][Stage 124:========================================>            (86 + 27) / 113][Stage 124:============================================>        (94 + 19) / 113][Stage 124:=================================================>   (106 + 7) / 113][Stage 124:==================================================>  (108 + 5) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:==================================>                  (75 + 39) / 114][Stage 125:=========================================>           (90 + 24) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:==============================================>     (102 + 12) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.462335744 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410804872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:============================>                        (65 + 55) / 120][Stage 126:===================================>                 (80 + 40) / 120][Stage 126:===========================================>         (98 + 22) / 120][Stage 126:=================================================>   (112 + 8) / 120][Stage 126:===================================================> (117 + 3) / 120]                                                                                [Stage 127:===========================>                         (63 + 58) / 121][Stage 127:=================================>                   (77 + 44) / 121][Stage 127:==========================================>          (97 + 24) / 121][Stage 127:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.354705992 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416327948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 59) / 120][Stage 128:==============================>                      (69 + 51) / 120][Stage 128:===========================================>         (98 + 22) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:=============================>                       (67 + 54) / 121][Stage 129:===================================>                 (81 + 40) / 121][Stage 129:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 2.841150302 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371584198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:=================================>                   (74 + 44) / 118][Stage 130:======================================>              (85 + 33) / 118][Stage 130:==========================================>          (95 + 23) / 118][Stage 130:=================================================>   (111 + 7) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:=================================>                   (75 + 44) / 119][Stage 131:====================================>                (83 + 36) / 119][Stage 131:=======================================>             (89 + 30) / 119][Stage 131:=============================================>      (103 + 16) / 119][Stage 131:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.52945374 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385852299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:==============================>                      (65 + 48) / 113][Stage 132:======================================>              (82 + 31) / 113][Stage 132:==============================================>      (99 + 14) / 113][Stage 132:====================================================>(111 + 2) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:============================>                        (62 + 52) / 114][Stage 133:=====================================>               (81 + 33) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.012993381 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459210313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:==================================>                  (76 + 42) / 118][Stage 134:=======================================>             (89 + 29) / 118][Stage 134:============================================>        (98 + 20) / 118][Stage 134:==============================================>     (106 + 12) / 118]                                                                                [Stage 135:================================>                    (74 + 45) / 119][Stage 135:====================================>                (81 + 38) / 119][Stage 135:========================================>            (90 + 29) / 119][Stage 135:============================================>       (101 + 18) / 119][Stage 135:==================================================>  (113 + 6) / 119][Stage 135:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.531247005 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358121419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:====================================>                (82 + 36) / 118][Stage 136:============================================>       (100 + 18) / 118][Stage 136:====================================================>(117 + 1) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:===================================>                 (80 + 39) / 119][Stage 137:=========================================>           (93 + 26) / 119][Stage 137:===============================================>    (108 + 11) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.880673317 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34493508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (81 + 34) / 115][Stage 138:=========================================>           (89 + 26) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:==================================================>  (109 + 6) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:=====================================>               (83 + 33) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:==================================================>  (110 + 6) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.765207823 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401785045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===============================>                     (72 + 49) / 121][Stage 140:========================================>            (92 + 29) / 121][Stage 140:===============================================>    (110 + 11) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:============================>                        (66 + 56) / 122][Stage 141:=====================================>               (87 + 35) / 122][Stage 141:=============================================>      (107 + 15) / 122][Stage 141:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.159080806 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398781217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:>                                                      (0 + 0) / 121][Stage 142:==========================>                          (60 + 61) / 121][Stage 142:=============================>                       (68 + 53) / 121][Stage 142:======================================>              (88 + 33) / 121][Stage 142:==============================================>     (108 + 13) / 121][Stage 142:===================================================> (118 + 3) / 121]                                                                                [Stage 143:============================>                        (66 + 56) / 122][Stage 143:==================================>                  (79 + 43) / 122][Stage 143:===========================================>         (99 + 23) / 122][Stage 143:==================================================>  (116 + 6) / 122][Stage 143:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.415061609 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352768084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:====================================>                (78 + 35) / 113][Stage 144:=========================================>           (89 + 24) / 113][Stage 144:=============================================>       (97 + 16) / 113][Stage 144:==================================================>  (107 + 6) / 113][Stage 144:====================================================>(111 + 2) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===================================>                 (77 + 37) / 114][Stage 145:========================================>            (88 + 26) / 114][Stage 145:=============================================>       (97 + 17) / 114][Stage 145:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.107038475 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402884889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (62 + 58) / 120][Stage 146:==============================>                      (69 + 51) / 120][Stage 146:========================================>            (92 + 28) / 120][Stage 146:==================================================>  (115 + 5) / 120]                                                                                [Stage 147:===========================>                         (62 + 59) / 121][Stage 147:=============================>                       (68 + 53) / 121][Stage 147:=====================================>               (86 + 35) / 121][Stage 147:==============================================>     (109 + 12) / 121][Stage 147:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.088410581 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360819447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (73 + 45) / 118][Stage 148:==================================>                  (77 + 41) / 118][Stage 148:=======================================>             (87 + 31) / 118][Stage 148:============================================>        (98 + 20) / 118][Stage 148:=================================================>   (110 + 8) / 118]                                                                                [Stage 149:=================================>                   (75 + 44) / 119][Stage 149:====================================>                (83 + 36) / 119][Stage 149:======================================>              (86 + 33) / 119][Stage 149:============================================>       (102 + 17) / 119][Stage 149:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.375352274 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403950592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:===============================>                     (72 + 49) / 121][Stage 150:======================================>              (88 + 33) / 121][Stage 150:==============================================>     (108 + 13) / 121][Stage 150:====================================================>(120 + 1) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:============================>                        (66 + 56) / 122][Stage 151:====================================>                (85 + 37) / 122][Stage 151:==============================================>     (109 + 13) / 122][Stage 151:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.100920177 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34106455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:=========================================>           (89 + 26) / 115][Stage 152:=============================================>      (101 + 14) / 115][Stage 152:=================================================>   (107 + 8) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:=====================================>               (83 + 33) / 116][Stage 153:=========================================>           (90 + 26) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.934415594 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366557004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (73 + 45) / 118][Stage 154:==================================>                  (77 + 41) / 118][Stage 154:=======================================>             (88 + 30) / 118][Stage 154:============================================>       (101 + 17) / 118][Stage 154:===============================================>    (108 + 10) / 118][Stage 154:====================================================>(116 + 2) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (75 + 44) / 119][Stage 155:==================================>                  (78 + 41) / 119][Stage 155:=======================================>             (88 + 31) / 119][Stage 155:============================================>       (102 + 17) / 119][Stage 155:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.628453089 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347672269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (76 + 37) / 113][Stage 156:=========================================>           (88 + 25) / 113][Stage 156:==============================================>      (99 + 14) / 113][Stage 156:================================================>    (104 + 9) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:=====================================>               (80 + 34) / 114][Stage 157:==========================================>          (91 + 23) / 114][Stage 157:=============================================>      (100 + 14) / 114][Stage 157:=================================================>   (107 + 7) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.20862791 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334812232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:======================================>              (83 + 32) / 115][Stage 158:=========================================>           (89 + 26) / 115][Stage 158:===============================================>    (105 + 10) / 115][Stage 158:==================================================>  (109 + 6) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:=======================================>             (86 + 30) / 116][Stage 159:===========================================>         (96 + 20) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.785461522 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399839061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:==========================>                          (61 + 60) / 121][Stage 160:=============================>                       (68 + 53) / 121][Stage 160:==========================================>          (96 + 25) / 121][Stage 160:==================================================>  (116 + 5) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:===============================>                     (72 + 50) / 122][Stage 161:========================================>            (94 + 28) / 122][Stage 161:==================================================>  (116 + 6) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.235174808 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393857143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (61 + 52) / 113][Stage 162:===============================>                     (68 + 45) / 113][Stage 162:=======================================>             (85 + 28) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:==============================>                      (65 + 49) / 114][Stage 163:==================================>                  (74 + 40) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.913106113 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370800636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=============================>                       (64 + 51) / 115][Stage 164:===================================>                 (78 + 37) / 115][Stage 164:=========================================>           (91 + 24) / 115][Stage 164:=============================================>      (100 + 15) / 115][Stage 164:==================================================>  (109 + 6) / 115][Stage 164:====================================================>(113 + 2) / 115]                                                                                [Stage 165:===================================>                 (78 + 38) / 116][Stage 165:=========================================>           (90 + 26) / 116][Stage 165:===============================================>    (105 + 11) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.339705271 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340290828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (81 + 34) / 115][Stage 166:=========================================>           (90 + 25) / 115][Stage 166:================================================>    (106 + 9) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:========================================>            (88 + 28) / 116][Stage 167:=============================================>      (101 + 15) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.725061048 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335247513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:======================================>              (83 + 32) / 115][Stage 168:==========================================>          (93 + 22) / 115][Stage 168:================================================>    (106 + 9) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:======================================>              (84 + 32) / 116][Stage 169:=========================================>           (91 + 25) / 116][Stage 169:===============================================>    (106 + 10) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.816524614 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394551405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:==========================>                          (61 + 60) / 121][Stage 170:===============================>                     (72 + 49) / 121][Stage 170:========================================>            (93 + 28) / 121][Stage 170:=================================================>   (114 + 7) / 121]                                                                                [Stage 171:===========================>                         (64 + 58) / 122][Stage 171:=================================>                   (77 + 45) / 122][Stage 171:========================================>            (93 + 29) / 122][Stage 171:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.068655805 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391739677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:===============================>                     (72 + 48) / 120][Stage 172:==========================================>          (97 + 23) / 120][Stage 172:=================================================>   (111 + 9) / 120][Stage 172:====================================================>(119 + 1) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:============================>                        (66 + 55) / 121][Stage 173:====================================>                (84 + 37) / 121][Stage 173:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.839770881 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400373502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:==============================>                      (70 + 50) / 120][Stage 174:=========================================>           (94 + 26) / 120][Stage 174:==============================================>     (108 + 12) / 120][Stage 174:====================================================>(119 + 1) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:==============================>                      (70 + 51) / 121][Stage 175:=====================================>               (85 + 36) / 121][Stage 175:===========================================>        (102 + 19) / 121][Stage 175:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.110679428 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367170485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=============================>                       (65 + 50) / 115][Stage 176:======================================>              (84 + 31) / 115][Stage 176:=========================================>           (91 + 24) / 115][Stage 176:===============================================>    (104 + 11) / 115][Stage 176:===================================================> (112 + 3) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:===============================>                     (70 + 46) / 116][Stage 177:=====================================>               (83 + 33) / 116][Stage 177:=========================================>           (91 + 25) / 116][Stage 177:===============================================>    (105 + 11) / 116][Stage 177:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.201859732 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389629811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:=============================>                       (62 + 51) / 113][Stage 178:=======================================>             (85 + 28) / 113][Stage 178:==============================================>     (101 + 12) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:=================================>                   (71 + 43) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:=================================================>   (106 + 8) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.034105206 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407032322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:==============================>                      (65 + 48) / 113][Stage 180:=====================================>               (79 + 34) / 113][Stage 180:=============================================>       (98 + 15) / 113][Stage 180:===================================================> (109 + 4) / 113]                                                                                [Stage 181:=============================>                       (63 + 51) / 114][Stage 181:==================================>                  (75 + 39) / 114][Stage 181:===========================================>         (94 + 20) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.111097469 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370493215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:======================================>              (84 + 31) / 115][Stage 182:==========================================>          (92 + 23) / 115][Stage 182:===============================================>    (105 + 10) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:======================================>              (84 + 32) / 116][Stage 183:===========================================>         (95 + 21) / 116][Stage 183:==============================================>     (104 + 12) / 116][Stage 183:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.619221801 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388072706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:==============================>                      (64 + 49) / 113][Stage 184:=================================>                   (72 + 41) / 113][Stage 184:==============================================>      (99 + 14) / 113][Stage 184:===================================================> (109 + 4) / 113]                                                                                [Stage 185:=============================>                       (64 + 50) / 114][Stage 185:=====================================>               (81 + 33) / 114][Stage 185:=============================================>       (97 + 17) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.985518945 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353682566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:=================================>                   (74 + 44) / 118][Stage 186:=======================================>             (89 + 29) / 118][Stage 186:=================================================>   (110 + 8) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:===================================>                 (80 + 39) / 119][Stage 187:==========================================>          (96 + 23) / 119][Stage 187:=================================================>   (111 + 8) / 119][Stage 187:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.898028051 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387900486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (60 + 53) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:=============================================>       (98 + 15) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:=================================>                   (71 + 43) / 114][Stage 189:=========================================>           (90 + 24) / 114][Stage 189:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.867346902 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337921521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:==========================================>          (93 + 22) / 115][Stage 190:===============================================>    (105 + 10) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:============================================>        (98 + 18) / 116][Stage 191:==================================================>  (111 + 5) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.848915949 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381229907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:=====================================>               (80 + 33) / 113][Stage 192:=============================================>       (96 + 17) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (59 + 55) / 114][Stage 193:=============================>                       (64 + 50) / 114][Stage 193:====================================>                (78 + 36) / 114][Stage 193:============================================>        (96 + 18) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.96298674 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379348581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:============================>                        (60 + 53) / 113][Stage 194:=================================>                   (72 + 41) / 113][Stage 194:============================================>        (94 + 19) / 113][Stage 194:====================================================>(111 + 2) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:=============================>                       (63 + 51) / 114][Stage 195:=====================================>               (80 + 34) / 114][Stage 195:=============================================>       (98 + 16) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.218873343 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376561373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=================================>                   (73 + 42) / 115][Stage 196:==========================================>          (93 + 22) / 115][Stage 196:==============================================>     (102 + 13) / 115][Stage 196:====================================================>(113 + 2) / 115]                                                                                [Stage 197:==============================>                      (67 + 49) / 116][Stage 197:=====================================>               (81 + 35) / 116][Stage 197:============================================>       (100 + 16) / 116][Stage 197:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.672997179 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405194876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (61 + 52) / 113][Stage 198:===================================>                 (75 + 38) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:================================>                    (69 + 45) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.435415012 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33403551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (83 + 32) / 115][Stage 200:=========================================>           (89 + 26) / 115][Stage 200:===============================================>    (105 + 10) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:=====================================>               (82 + 34) / 116][Stage 201:========================================>            (89 + 27) / 116][Stage 201:=============================================>      (102 + 14) / 116][Stage 201:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.73878485 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m48.805s
user	11m26.752s
sys	0m28.820s
