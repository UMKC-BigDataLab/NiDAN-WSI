Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 03:03:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:03:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:03:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:03:49 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 03:03:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:04:02 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522030351-0405).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.304137048 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 114) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:=================>                                     (36 + 80) / 116][Stage 1:=========================>                             (53 + 63) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.468424553 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  p artitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex  = 44  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.766155634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================================>                     (70 + 45) / 115][Stage 2:====================================>                  (77 + 38) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:========================================>              (85 + 30) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:===============================================>       (99 + 16) / 115][Stage 2:================================================>     (103 + 12) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:===================================>                   (74 + 42) / 116][Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:=============================================>         (96 + 20) / 116][Stage 3:==============================================>        (99 + 17) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:=====================================================> (113 + 3) / 116][Stage 3:======================================================>(114 + 2) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.564733993 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partition Index = 133  OR  partitionIndex = 147 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574587449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:====================================>                  (77 + 38) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:========================================>              (84 + 31) / 115][Stage 4:===========================================>           (90 + 25) / 115][Stage 4:==============================================>        (97 + 18) / 115][Stage 4:================================================>     (104 + 11) / 115][Stage 4:=====================================================> (111 + 4) / 115][Stage 4:=====================================================> (112 + 3) / 115]                                                                                [Stage 5:======================================>                (82 + 34) / 116][Stage 5:========================================>              (86 + 30) / 116][Stage 5:============================================>          (93 + 23) / 116][Stage 5:==============================================>        (98 + 18) / 116][Stage 5:===================================================>   (108 + 8) / 116][Stage 5:=====================================================> (112 + 4) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.984957328 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partition Index = 166  OR  partitionIndex = 152 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.610532616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (69 + 44) / 113][Stage 6:===================================>                   (72 + 41) / 113][Stage 6:=======================================>               (82 + 31) / 113][Stage 6:========================================>              (84 + 29) / 113][Stage 6:============================================>          (91 + 22) / 113][Stage 6:===============================================>       (98 + 15) / 113][Stage 6:===================================================>   (105 + 8) / 113][Stage 6:====================================================>  (107 + 6) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:====================================>                  (76 + 38) / 114][Stage 7:======================================>                (80 + 34) / 114][Stage 7:=========================================>             (86 + 28) / 114][Stage 7:==============================================>        (96 + 18) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:===================================================>   (107 + 7) / 114][Stage 7:======================================================>(112 + 2) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.114350877 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  p artitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex  = 99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579746824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:=====================================>                 (77 + 36) / 113][Stage 8:==========================================>            (88 + 25) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:================================================>      (99 + 14) / 113][Stage 8:====================================================>  (108 + 5) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:==================================>                    (71 + 43) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:===========================================>           (90 + 24) / 114][Stage 9:===============================================>      (100 + 14) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.17455574 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partition Index = 134  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530194487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (69 + 44) / 113][Stage 10:===================================>                  (74 + 39) / 113][Stage 10:======================================>               (81 + 32) / 113][Stage 10:==========================================>           (89 + 24) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:==================================================>   (105 + 8) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:==================================>                   (73 + 41) / 114][Stage 11:======================================>               (82 + 32) / 114][Stage 11:==========================================>           (90 + 24) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.615833801 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR   partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partition Index = 188  OR  partitionIndex = 189 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606071815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===========================>                          (62 + 58) / 120][Stage 12:===============================>                      (70 + 50) / 120][Stage 12:=======================================>              (87 + 33) / 120][Stage 12:=============================================>       (104 + 16) / 120][Stage 12:==================================================>   (112 + 8) / 120][Stage 12:===================================================>  (115 + 5) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (65 + 56) / 121][Stage 13:==================================>                   (77 + 44) / 121][Stage 13:=========================================>            (92 + 29) / 121][Stage 13:==============================================>      (107 + 14) / 121][Stage 13:=================================================>    (112 + 9) / 121][Stage 13:====================================================> (118 + 3) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.813136947 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  p artitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex =  6  OR  partitionIndex = 7 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58816235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===========================>                          (62 + 58) / 120][Stage 14:===============================>                      (70 + 50) / 120][Stage 14:=====================================>                (84 + 36) / 120][Stage 14:============================================>        (101 + 19) / 120][Stage 14:=================================================>    (111 + 9) / 120][Stage 14:===================================================>  (115 + 5) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:==============================>                       (68 + 53) / 121][Stage 15:====================================>                 (81 + 40) / 121][Stage 15:=========================================>            (92 + 29) / 121][Stage 15:============================================>        (101 + 20) / 121][Stage 15:==================================================>   (113 + 8) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.73964322 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partition Index = 130  OR  partitionIndex = 131 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543581151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:========================================>             (84 + 29) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:=================================>                    (70 + 44) / 114][Stage 17:==========================================>           (89 + 25) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.831580786 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partition Index = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505284974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:=================================>                    (73 + 45) / 118][Stage 18:====================================>                 (79 + 39) / 118][Stage 18:==========================================>           (92 + 26) / 118][Stage 18:================================================>    (108 + 10) / 118][Stage 18:====================================================> (114 + 4) / 118][Stage 18:=====================================================>(117 + 1) / 118]                                                                                [Stage 19:==================================>                   (75 + 44) / 119][Stage 19:======================================>               (85 + 34) / 119][Stage 19:============================================>         (99 + 20) / 119][Stage 19:=====================================================>(117 + 2) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.837560927 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex  = 13  OR  partitionIndex = 27 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520472046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (73 + 42) / 115][Stage 20:=========================================>            (88 + 27) / 115][Stage 20:============================================>         (95 + 20) / 115][Stage 20:===============================================>     (103 + 12) / 115][Stage 20:===================================================>  (110 + 5) / 115][Stage 20:====================================================> (111 + 4) / 115]                                                                                [Stage 21:==================================>                   (75 + 41) / 116][Stage 21:==========================================>           (91 + 25) / 116][Stage 21:==============================================>      (101 + 15) / 116][Stage 21:===============================================>     (103 + 13) / 116][Stage 21:===================================================>  (110 + 6) / 116][Stage 21:====================================================> (113 + 3) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.694143111 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partition Index = 191  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501127176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:====================================>                 (79 + 39) / 118][Stage 22:========================================>             (88 + 30) / 118][Stage 22:===========================================>          (95 + 23) / 118][Stage 22:===============================================>     (106 + 12) / 118][Stage 22:===================================================>  (113 + 5) / 118][Stage 22:=====================================================>(116 + 2) / 118]                                                                                [Stage 23:================================>                     (71 + 48) / 119][Stage 23:===================================>                  (78 + 41) / 119][Stage 23:======================================>               (85 + 34) / 119][Stage 23:============================================>        (100 + 19) / 119][Stage 23:================================================>    (108 + 11) / 119][Stage 23:===================================================>  (113 + 6) / 119][Stage 23:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.548553458 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  p artitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex  = 52  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520693525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:===========================>                          (62 + 58) / 120][Stage 24:===================================>                  (79 + 41) / 120][Stage 24:=========================================>            (92 + 28) / 120][Stage 24:===============================================>     (108 + 12) / 120][Stage 24:====================================================> (116 + 4) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:=============================>                        (66 + 55) / 121][Stage 25:=================================>                    (75 + 46) / 121][Stage 25:==========================================>           (95 + 26) / 121][Stage 25:================================================>    (110 + 11) / 121][Stage 25:====================================================> (118 + 3) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.200808458 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partition Index = 174  OR  partitionIndex = 160 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490560196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==============================>                       (65 + 50) / 115][Stage 26:===================================>                  (75 + 40) / 115][Stage 26:============================================>         (95 + 20) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:==============================>                       (66 + 50) / 116][Stage 27:====================================>                 (79 + 37) / 116][Stage 27:============================================>         (96 + 20) / 116][Stage 27:================================================>    (106 + 10) / 116][Stage 27:====================================================> (112 + 4) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.497008779 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113  OR  partitionIndex = 114  OR   partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partition Index = 72  OR  partitionIndex = 73 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496050215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (61 + 59) / 120][Stage 28:=================================>                    (74 + 46) / 120][Stage 28:=========================================>            (92 + 28) / 120][Stage 28:==============================================>      (106 + 14) / 120][Stage 28:===================================================>  (114 + 6) / 120]                                                                                [Stage 29:============================>                         (63 + 58) / 121][Stage 29:=================================>                    (74 + 47) / 121][Stage 29:========================================>             (90 + 31) / 121][Stage 29:===============================================>     (108 + 13) / 121][Stage 29:====================================================> (118 + 3) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.701349894 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partition Index = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479410676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:=====================================>                (81 + 37) / 118][Stage 30:============================================>         (97 + 21) / 118][Stage 30:================================================>    (108 + 10) / 118][Stage 30:====================================================> (114 + 4) / 118][Stage 30:====================================================> (115 + 3) / 118]                                                                                [Stage 31:=================================>                    (74 + 45) / 119][Stage 31:===================================>                  (79 + 40) / 119][Stage 31:=======================================>              (87 + 32) / 119][Stage 31:============================================>         (99 + 20) / 119][Stage 31:==================================================>   (112 + 7) / 119][Stage 31:====================================================> (116 + 3) / 119][Stage 31:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.382731358 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR   partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partition Index = 205  OR  partitionIndex = 206 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496839216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:==============================>                       (67 + 53) / 120][Stage 32:========================================>             (90 + 30) / 120][Stage 32:==============================================>      (105 + 15) / 120][Stage 32:===================================================>  (115 + 5) / 120][Stage 32:====================================================> (117 + 3) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:================================>                     (72 + 49) / 121][Stage 33:======================================>               (86 + 35) / 121][Stage 33:===============================================>     (109 + 12) / 121][Stage 33:====================================================> (118 + 3) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.856011801 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partition Index = 177  OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476451044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:==================================>                   (76 + 42) / 118][Stage 34:========================================>             (89 + 29) / 118][Stage 34:=================================================>    (109 + 9) / 118][Stage 34:===================================================>  (112 + 6) / 118][Stage 34:====================================================> (114 + 4) / 118]                                                                                [Stage 35:=================================>                    (74 + 45) / 119][Stage 35:===================================>                  (79 + 40) / 119][Stage 35:==========================================>           (93 + 26) / 119][Stage 35:===============================================>     (107 + 12) / 119][Stage 35:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.041674535 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  p artitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex  = 106  OR  partitionIndex = 92 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554571419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:============================>                         (64 + 57) / 121][Stage 36:==================================>                   (77 + 44) / 121][Stage 36:=============================================>       (105 + 16) / 121][Stage 36:===================================================>  (115 + 6) / 121]                                                                                [Stage 37:===========================>                          (63 + 59) / 122][Stage 37:================================>                     (73 + 49) / 122][Stage 37:=======================================>              (90 + 32) / 122][Stage 37:==============================================>      (106 + 16) / 122][Stage 37:==================================================>   (115 + 7) / 122][Stage 37:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.576365556 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partition Index = 156  OR  partitionIndex = 157 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412981758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (81 + 34) / 115][Stage 38:=======================================>              (84 + 31) / 115][Stage 38:==============================================>       (98 + 17) / 115][Stage 38:==================================================>   (108 + 7) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:======================================>               (82 + 34) / 116][Stage 39:========================================>             (86 + 30) / 116][Stage 39:==============================================>      (102 + 14) / 116]                                                                                Time elapsed: 2.717587069 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  p artitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex  = 23  OR  partitionIndex = 24 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44798434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (82 + 33) / 115][Stage 40:=============================================>        (96 + 19) / 115][Stage 40:=================================================>    (106 + 9) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:=====================================>                (81 + 35) / 116][Stage 41:========================================>             (87 + 29) / 116][Stage 41:==============================================>      (102 + 14) / 116][Stage 41:==================================================>   (109 + 7) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.622425196 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partition Index = 194  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53588691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (62 + 58) / 120][Stage 42:===============================>                      (71 + 49) / 120][Stage 42:==========================================>           (94 + 26) / 120][Stage 42:===============================================>     (107 + 13) / 120][Stage 42:====================================================> (117 + 3) / 120]                                                                                [Stage 43:============================>                         (63 + 58) / 121][Stage 43:=================================>                    (74 + 47) / 121][Stage 43:=========================================>            (93 + 28) / 121][Stage 43:==================================================>   (113 + 8) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.748068993 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partition Index = 158  OR  partitionIndex = 159 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438761127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:====================================>                 (76 + 37) / 113][Stage 44:==========================================>           (89 + 24) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:====================================================> (110 + 3) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:=======================================>              (83 + 31) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:=================================================>    (105 + 9) / 114][Stage 45:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.118898709 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  pa rtitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex =  26  OR  partitionIndex = 38 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475648515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:=============================>                        (66 + 55) / 121][Stage 46:==================================>                   (78 + 43) / 121][Stage 46:========================================>             (91 + 30) / 121][Stage 46:==================================================>   (114 + 7) / 121]                                                                                [Stage 47:===========================>                          (62 + 60) / 122][Stage 47:================================>                     (73 + 49) / 122][Stage 47:========================================>             (91 + 31) / 122][Stage 47:==============================================>      (108 + 14) / 122][Stage 47:====================================================> (118 + 4) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.00072575 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  p artitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex =  30  OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464073394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==============================>                       (65 + 50) / 115][Stage 48:===================================>                  (76 + 39) / 115][Stage 48:==========================================>           (90 + 25) / 115][Stage 48:===============================================>     (102 + 13) / 115][Stage 48:===================================================>  (110 + 5) / 115][Stage 48:====================================================> (111 + 4) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:===============================>                      (68 + 48) / 116][Stage 49:======================================>               (82 + 34) / 116][Stage 49:=============================================>        (98 + 18) / 116][Stage 49:==============================================>      (102 + 14) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:====================================================> (112 + 4) / 116][Stage 49:====================================================> (113 + 3) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 11.303323338 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex  = 42  OR  partitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474098088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:=========================================>            (91 + 27) / 118][Stage 50:====================================================> (115 + 3) / 118][Stage 50:=====================================================>(117 + 1) / 118]                                                                                [Stage 51:=================================>                    (73 + 46) / 119][Stage 51:==================================>                   (76 + 43) / 119][Stage 51:==========================================>           (93 + 26) / 119][Stage 51:===============================================>     (107 + 12) / 119][Stage 51:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.760732384 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR   partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionInd ex = 108  OR  partitionIndex = 64 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406369449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (80 + 35) / 115][Stage 52:=======================================>              (84 + 31) / 115][Stage 52:==============================================>       (98 + 17) / 115][Stage 52:=================================================>    (106 + 9) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:========================================>             (88 + 28) / 116][Stage 53:=============================================>        (97 + 19) / 116][Stage 53:====================================================> (113 + 3) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.357675042 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  p artitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionInde x = 96  OR  partitionIndex = 97 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486212408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:===============================>                      (71 + 50) / 121][Stage 54:===========================================>          (98 + 23) / 121][Stage 54:==================================================>   (113 + 8) / 121]                                                                                [Stage 55:===========================>                          (63 + 59) / 122][Stage 55:===============================>                      (71 + 51) / 122][Stage 55:==========================================>           (96 + 26) / 122][Stage 55:================================================>    (111 + 11) / 122][Stage 55:====================================================> (119 + 3) / 122][Stage 55:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.893237339 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partition Index = 204  OR  partitionIndex = 190 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464428052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:============================>                         (63 + 58) / 121][Stage 56:=================================>                    (75 + 46) / 121][Stage 56:=======================================>              (89 + 32) / 121][Stage 56:===============================================>     (108 + 13) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:==============================>                       (68 + 54) / 122][Stage 57:====================================>                 (83 + 39) / 122][Stage 57:==============================================>      (108 + 14) / 122][Stage 57:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.001830193 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partition Index = 183  OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395786329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:====================================>                 (76 + 37) / 113][Stage 58:=========================================>            (87 + 26) / 113][Stage 58:==============================================>       (98 + 15) / 113][Stage 58:==================================================>   (105 + 8) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:==================================>                   (73 + 41) / 114][Stage 59:======================================>               (81 + 33) / 114][Stage 59:=========================================>            (87 + 27) / 114][Stage 59:=================================================>    (105 + 9) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.998017623 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionInde x = 97  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414500495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:====================================>                 (76 + 37) / 113][Stage 60:===========================================>          (92 + 21) / 113][Stage 60:==============================================>       (98 + 15) / 113][Stage 60:====================================================> (109 + 4) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:====================================>                 (77 + 37) / 114][Stage 61:======================================>               (82 + 32) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:==============================================>      (100 + 14) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:===================================================>  (108 + 6) / 114][Stage 61:====================================================> (111 + 3) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.686587654 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  p artitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionInde x = 93  OR  partitionIndex = 107 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380710356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:=======================================>              (85 + 30) / 115][Stage 62:==============================================>      (101 + 14) / 115][Stage 62:====================================================> (111 + 4) / 115]                                                                                [Stage 63:========================================>             (87 + 29) / 116][Stage 63:============================================>         (95 + 21) / 116][Stage 63:==================================================>   (108 + 8) / 116][Stage 63:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.785621149 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  p artitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex  = 58  OR  partitionIndex = 44 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435797768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:============================>                         (59 + 54) / 113][Stage 64:=================================>                    (70 + 43) / 113][Stage 64:==============================================>       (97 + 16) / 113][Stage 64:====================================================> (110 + 3) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:===========================>                          (59 + 55) / 114][Stage 65:================================>                     (69 + 45) / 114][Stage 65:=====================================>                (80 + 34) / 114][Stage 65:==============================================>       (99 + 15) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.903721945 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  p artitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex =  20  OR  partitionIndex = 6 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439580921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===============================>                      (68 + 47) / 115][Stage 66:=======================================>              (84 + 31) / 115][Stage 66:===============================================>     (102 + 13) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:=================================>                    (73 + 43) / 116][Stage 67:=========================================>            (90 + 26) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:==================================================>   (108 + 8) / 116][Stage 67:====================================================> (113 + 3) / 116][Stage 67:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.746462395 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partition Index = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449639155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:=========================================>            (88 + 27) / 115][Stage 68:==============================================>       (98 + 17) / 115][Stage 68:==================================================>   (108 + 7) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:========================================>             (88 + 28) / 116][Stage 69:=============================================>       (100 + 16) / 116][Stage 69:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.857684846 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  p artitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex  = 71  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448742251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:===========================>                          (62 + 58) / 120][Stage 70:===============================>                      (71 + 49) / 120][Stage 70:=========================================>            (92 + 28) / 120][Stage 70:=================================================>    (111 + 9) / 120][Stage 70:=====================================================>(119 + 1) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (68 + 53) / 121][Stage 71:===================================>                  (79 + 42) / 121][Stage 71:===========================================>          (98 + 23) / 121][Stage 71:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.996860587 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partition Index = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421585795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==============================>                       (66 + 49) / 115][Stage 72:====================================>                 (77 + 38) / 115][Stage 72:===============================================>     (104 + 11) / 115][Stage 72:====================================================> (111 + 4) / 115]                                                                                [Stage 73:=================================>                    (73 + 43) / 116][Stage 73:=====================================>                (81 + 35) / 116][Stage 73:================================================>    (106 + 10) / 116][Stage 73:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.836458983 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex  = 60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472058671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:===============================>                      (69 + 51) / 120][Stage 74:=====================================>                (84 + 36) / 120][Stage 74:===============================================>     (107 + 13) / 120][Stage 74:====================================================> (116 + 4) / 120]                                                                                [Stage 75:============================>                         (64 + 57) / 121][Stage 75:===============================>                      (71 + 50) / 121][Stage 75:========================================>             (91 + 30) / 121][Stage 75:================================================>    (111 + 10) / 121][Stage 75:=====================================================>(119 + 2) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.795288651 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  p artitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex  = 95  OR  partitionIndex = 109 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408433568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (69 + 46) / 115][Stage 76:======================================>               (82 + 33) / 115][Stage 76:==============================================>       (98 + 17) / 115][Stage 76:====================================================> (112 + 3) / 115]                                                                                [Stage 77:===================================>                  (76 + 40) / 116][Stage 77:===========================================>          (94 + 22) / 116][Stage 77:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.702832667 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partition Index = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399400375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (71 + 42) / 113][Stage 78:=======================================>              (83 + 30) / 113][Stage 78:===========================================>          (92 + 21) / 113][Stage 78:===============================================>     (102 + 11) / 113][Stage 78:====================================================> (110 + 3) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===================================>                  (75 + 39) / 114][Stage 79:=======================================>              (84 + 30) / 114][Stage 79:=============================================>        (97 + 17) / 114][Stage 79:================================================>    (104 + 10) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.272749255 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR   partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partition Index = 127  OR  partitionIndex = 141 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411239837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:==============================>                       (63 + 50) / 113][Stage 80:=================================>                    (71 + 42) / 113][Stage 80:========================================>             (84 + 29) / 113][Stage 80:==================================================>   (105 + 8) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:===============================>                      (67 + 47) / 114][Stage 81:=====================================>                (80 + 34) / 114][Stage 81:===============================================>     (102 + 12) / 114][Stage 81:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 5.07412592 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partition Index = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399415534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:=================================>                    (74 + 44) / 118][Stage 82:======================================>               (84 + 34) / 118][Stage 82:=============================================>       (102 + 16) / 118][Stage 82:====================================================> (115 + 3) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:=====================================>                (82 + 37) / 119][Stage 83:============================================>         (97 + 22) / 119][Stage 83:================================================>    (109 + 10) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.496018842 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex  = 69  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48718468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:====================================>                 (76 + 37) / 113][Stage 84:==========================================>           (89 + 24) / 113][Stage 84:=============================================>        (96 + 17) / 113][Stage 84:===================================================>  (108 + 5) / 113]                                                                                [Stage 85:======================================>               (82 + 32) / 114][Stage 85:=========================================>            (87 + 27) / 114][Stage 85:==============================================>       (98 + 16) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.326126774 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  p artitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex  = 70  OR  partitionIndex = 71 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42738923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (63 + 58) / 121][Stage 86:==============================>                       (69 + 52) / 121][Stage 86:========================================>             (90 + 31) / 121][Stage 86:====================================================> (117 + 4) / 121]                                                                                [Stage 87:===========================>                          (63 + 59) / 122][Stage 87:==================================>                   (78 + 44) / 122][Stage 87:===========================================>         (101 + 21) / 122][Stage 87:==================================================>   (115 + 7) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.604609489 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex  = 29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400537416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:==================================>                   (75 + 43) / 118][Stage 88:=======================================>              (86 + 32) / 118][Stage 88:=============================================>       (101 + 17) / 118][Stage 88:====================================================> (115 + 3) / 118]                                                                                [Stage 89:==================================>                   (75 + 44) / 119][Stage 89:=====================================>                (82 + 37) / 119][Stage 89:==============================================>      (104 + 15) / 119][Stage 89:===================================================>  (114 + 5) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.652445049 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  p artitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex  = 82  OR  partitionIndex = 94 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363565627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=======================================>              (84 + 31) / 115][Stage 90:=============================================>        (96 + 19) / 115][Stage 90:===================================================>  (109 + 6) / 115][Stage 90:====================================================> (112 + 3) / 115]                                                                                [Stage 91:========================================>             (86 + 30) / 116][Stage 91:==========================================>           (91 + 25) / 116][Stage 91:===============================================>     (104 + 12) / 116][Stage 91:====================================================> (112 + 4) / 116][Stage 91:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.086128732 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partition Index = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353207131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (82 + 33) / 115][Stage 92:============================================>         (95 + 20) / 115][Stage 92:===================================================>  (110 + 5) / 115][Stage 92:=====================================================>(114 + 1) / 115]                                                                                [Stage 93:=======================================>              (84 + 32) / 116][Stage 93:==========================================>           (92 + 24) / 116][Stage 93:==============================================>      (101 + 15) / 116][Stage 93:==================================================>   (109 + 7) / 116][Stage 93:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.90309531 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  p artitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex  = 98  OR  partitionIndex = 99 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400806196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==================================>                   (73 + 42) / 115][Stage 94:=========================================>            (88 + 27) / 115][Stage 94:===================================================>  (110 + 5) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:================================>                     (69 + 47) / 116][Stage 95:===================================>                  (77 + 39) / 116][Stage 95:==============================================>      (102 + 14) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.682747719 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406411795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (58 + 55) / 113][Stage 96:================================>                     (69 + 44) / 113][Stage 96:=========================================>            (87 + 26) / 113][Stage 96:===================================================>  (108 + 5) / 113]                                                                                [Stage 97:=============================>                        (62 + 52) / 114][Stage 97:===================================>                  (74 + 40) / 114][Stage 97:=============================================>        (96 + 18) / 114][Stage 97:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.8450593 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partition Index = 147  OR  partitionIndex = 148 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401490517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (73 + 42) / 115][Stage 98:=======================================>              (85 + 30) / 115][Stage 98:=============================================>        (97 + 18) / 115][Stage 98:===============================================>     (104 + 11) / 115][Stage 98:====================================================> (111 + 4) / 115]                                                                                [Stage 99:=================================>                    (72 + 44) / 116][Stage 99:======================================>               (82 + 34) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:==================================================>   (109 + 7) / 116][Stage 99:====================================================> (113 + 3) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.538787328 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partition Index = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415584445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (62 + 59) / 121][Stage 100:===============================>                     (72 + 49) / 121][Stage 100:=======================================>             (91 + 30) / 121][Stage 100:===============================================>    (110 + 11) / 121]                                                                                [Stage 101:==========================>                          (62 + 60) / 122][Stage 101:=================================>                   (77 + 45) / 122][Stage 101:==========================================>          (98 + 24) / 122][Stage 101:=============================================>      (107 + 15) / 122][Stage 101:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.613287737 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partition Index = 123  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38801092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:================================>                    (73 + 45) / 118][Stage 102:====================================>                (81 + 37) / 118][Stage 102:==========================================>          (95 + 23) / 118][Stage 102:================================================>    (109 + 9) / 118][Stage 102:====================================================>(117 + 1) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:=================================>                   (76 + 43) / 119][Stage 103:======================================>              (86 + 33) / 119][Stage 103:=========================================>           (94 + 25) / 119][Stage 103:===============================================>    (109 + 10) / 119][Stage 103:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 6.530787832 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  p artitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex  = 78  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368998361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===================================>                 (76 + 37) / 113][Stage 104:======================================>              (82 + 31) / 113][Stage 104:===========================================>         (93 + 20) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:======================================>              (82 + 32) / 114][Stage 105:==========================================>          (92 + 22) / 114][Stage 105:=============================================>      (100 + 14) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.617259108 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partition Index = 193  OR  partitionIndex = 207 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4039924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:===================================>                 (76 + 37) / 113][Stage 106:=============================================>       (97 + 16) / 113][Stage 106:===================================================> (109 + 4) / 113]                                                                                [Stage 107:=============================>                       (64 + 50) / 114][Stage 107:====================================>                (78 + 36) / 114][Stage 107:==============================================>     (101 + 13) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.460457892 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  p artitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex =  34  OR  partitionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405003024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==============================>                      (66 + 49) / 115][Stage 108:=====================================>               (81 + 34) / 115][Stage 108:==========================================>          (93 + 22) / 115][Stage 108:================================================>    (106 + 9) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:=================================>                   (74 + 42) / 116][Stage 109:========================================>            (89 + 27) / 116][Stage 109:=============================================>       (99 + 17) / 116][Stage 109:================================================>    (107 + 9) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.029620123 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partition Index = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364451134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (81 + 34) / 115][Stage 110:========================================>            (88 + 27) / 115][Stage 110:===========================================>         (94 + 21) / 115][Stage 110:=================================================>   (108 + 7) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:======================================>              (84 + 32) / 116][Stage 111:===========================================>         (96 + 20) / 116][Stage 111:===============================================>    (106 + 10) / 116][Stage 111:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.004688046 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex  = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394124065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==============================>                      (67 + 48) / 115][Stage 112:====================================>                (80 + 35) / 115][Stage 112:==========================================>          (93 + 22) / 115][Stage 112:=================================================>   (108 + 7) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:================================>                    (72 + 44) / 116][Stage 113:=======================================>             (86 + 30) / 116][Stage 113:=============================================>      (101 + 15) / 116][Stage 113:================================================>    (107 + 9) / 116][Stage 113:=================================================>   (109 + 7) / 116][Stage 113:===================================================> (113 + 3) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.611108212 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex  = 41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373484578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===================================>                 (76 + 37) / 113][Stage 114:=========================================>           (88 + 25) / 113][Stage 114:==============================================>      (99 + 14) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:=================================>                   (73 + 41) / 114][Stage 115:=======================================>             (85 + 29) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:==============================================>     (101 + 13) / 114][Stage 115:=================================================>   (107 + 7) / 114][Stage 115:===================================================> (111 + 3) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.487941011 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex  = 103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409617262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (65 + 55) / 120][Stage 116:===================================>                 (81 + 39) / 120][Stage 116:=============================================>      (104 + 16) / 120][Stage 116:====================================================>(119 + 1) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:============================>                        (64 + 57) / 121][Stage 117:===================================>                 (81 + 40) / 121][Stage 117:========================================>            (92 + 29) / 121][Stage 117:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.992774799 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  p artitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex  = 76  OR  partitionIndex = 62 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402414804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (62 + 59) / 121][Stage 118:================================>                    (75 + 46) / 121][Stage 118:========================================>            (92 + 29) / 121][Stage 118:==================================================>  (115 + 6) / 121][Stage 118:====================================================>(119 + 2) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:============================>                        (66 + 56) / 122][Stage 119:===================================>                 (81 + 41) / 122][Stage 119:============================================>       (105 + 17) / 122][Stage 119:==================================================>  (117 + 5) / 122][Stage 119:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.070404146 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partition Index = 187  OR  partitionIndex = 201 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408749915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:============================>                        (65 + 55) / 120][Stage 120:===================================>                 (81 + 39) / 120][Stage 120:============================================>       (102 + 18) / 120][Stage 120:====================================================>(119 + 1) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:===============================>                     (71 + 50) / 121][Stage 121:=======================================>             (91 + 30) / 121][Stage 121:============================================>       (103 + 18) / 121][Stage 121:=================================================>   (113 + 8) / 121][Stage 121:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.199374616 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex =  5  OR  partitionIndex = 19 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40020049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:===========================>                         (63 + 57) / 120][Stage 122:==================================>                  (78 + 42) / 120][Stage 122:==============================================>     (108 + 12) / 120][Stage 122:====================================================>(119 + 1) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:==============================>                      (69 + 52) / 121][Stage 123:======================================>              (87 + 34) / 121][Stage 123:==============================================>     (108 + 13) / 121][Stage 123:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.716164989 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partition Index = 161  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4024463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:============================>                        (65 + 55) / 120][Stage 124:====================================>                (83 + 37) / 120][Stage 124:==============================================>     (107 + 13) / 120][Stage 124:====================================================>(119 + 1) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:==============================>                      (70 + 51) / 121][Stage 125:=====================================>               (86 + 35) / 121][Stage 125:==============================================>     (109 + 12) / 121][Stage 125:====================================================>(119 + 2) / 121][Stage 125:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.833619221 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex  = 48  OR  partitionIndex = 4 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384365386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (72 + 43) / 115][Stage 126:=========================================>           (91 + 24) / 115][Stage 126:==============================================>     (102 + 13) / 115]                                                                                [Stage 127:================================>                    (72 + 44) / 116][Stage 127:=======================================>             (87 + 29) / 116][Stage 127:===========================================>         (95 + 21) / 116][Stage 127:==============================================>     (104 + 12) / 116][Stage 127:==================================================>  (110 + 6) / 116][Stage 127:===================================================> (113 + 3) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.599393422 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  par titionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21   OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414472379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:==============================>                      (66 + 47) / 113][Stage 128:=======================================>             (84 + 29) / 113][Stage 128:============================================>        (95 + 18) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:================================>                    (70 + 44) / 114][Stage 129:====================================>                (79 + 35) / 114][Stage 129:==========================================>          (91 + 23) / 114][Stage 129:==================================================>  (108 + 6) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.95628681 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex =  45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356803203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==================================>                  (74 + 39) / 113][Stage 130:========================================>            (86 + 27) / 113][Stage 130:==============================================>     (101 + 12) / 113][Stage 130:==================================================>  (107 + 6) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:====================================>                (79 + 35) / 114][Stage 131:=======================================>             (86 + 28) / 114][Stage 131:===========================================>         (94 + 20) / 114][Stage 131:==============================================>     (103 + 11) / 114][Stage 131:=================================================>   (107 + 7) / 114][Stage 131:===================================================> (111 + 3) / 114][Stage 131:====================================================>(112 + 2) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.034037396 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partition Index = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412883807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (61 + 60) / 121][Stage 132:===============================>                     (71 + 50) / 121][Stage 132:========================================>            (92 + 29) / 121][Stage 132:==============================================>     (109 + 12) / 121][Stage 132:===================================================> (118 + 3) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:=================================>                   (78 + 44) / 122][Stage 133:==========================================>         (100 + 22) / 122][Stage 133:===============================================>    (112 + 10) / 122][Stage 133:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.915530462 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partition Index = 213  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362958952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (79 + 34) / 113][Stage 134:=========================================>           (89 + 24) / 113][Stage 134:=============================================>       (98 + 15) / 113][Stage 134:==================================================>  (108 + 5) / 113]                                                                                [Stage 135:====================================>                (79 + 35) / 114][Stage 135:=========================================>           (89 + 25) / 114][Stage 135:==============================================>      (99 + 15) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.130101146 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  p artitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex  = 56  OR  partitionIndex = 12 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349718264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===================================>                 (75 + 38) / 113][Stage 136:=======================================>             (85 + 28) / 113][Stage 136:==========================================>          (91 + 22) / 113][Stage 136:==============================================>      (99 + 14) / 113][Stage 136:===================================================> (110 + 3) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:======================================>              (83 + 31) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:=============================================>       (97 + 17) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:==================================================>  (108 + 6) / 114][Stage 137:==================================================>  (109 + 5) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.613829454 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partition Index = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363459992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:======================================>              (83 + 30) / 113][Stage 138:==========================================>          (90 + 23) / 113][Stage 138:==============================================>      (99 + 14) / 113][Stage 138:==================================================>  (107 + 6) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===================================>                 (77 + 37) / 114][Stage 139:=========================================>           (90 + 24) / 114][Stage 139:=============================================>      (100 + 14) / 114][Stage 139:===================================================> (111 + 3) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.21126972 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partition Index = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373785984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (73 + 42) / 115][Stage 140:=======================================>             (86 + 29) / 115][Stage 140:==============================================>     (103 + 12) / 115][Stage 140:===================================================> (112 + 3) / 115]                                                                                [Stage 141:======================================>              (85 + 31) / 116][Stage 141:=============================================>       (99 + 17) / 116][Stage 141:===================================================> (113 + 3) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.756530718 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partition Index = 192  OR  partitionIndex = 193 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37324202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (70 + 45) / 115][Stage 142:=========================================>           (89 + 26) / 115][Stage 142:=============================================>       (98 + 17) / 115][Stage 142:===================================================> (112 + 3) / 115]                                                                                [Stage 143:===================================>                 (78 + 38) / 116][Stage 143:========================================>            (88 + 28) / 116][Stage 143:==============================================>     (103 + 13) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.778524265 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  p artitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex  = 14  OR  partitionIndex = 15 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396194377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:============================>                        (64 + 57) / 121][Stage 144:================================>                    (75 + 46) / 121][Stage 144:=========================================>           (95 + 26) / 121][Stage 144:===================================================> (117 + 4) / 121][Stage 144:====================================================>(120 + 1) / 121]                                                                                [Stage 145:===========================>                         (63 + 59) / 122][Stage 145:================================>                    (75 + 47) / 122][Stage 145:===========================================>         (99 + 23) / 122][Stage 145:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.913924376 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR   partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex  = 67  OR  partitionIndex = 81 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348767774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:======================================>              (83 + 32) / 115][Stage 146:=============================================>       (99 + 16) / 115][Stage 146:==================================================>  (110 + 5) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:======================================>              (84 + 32) / 116][Stage 147:==========================================>          (94 + 22) / 116][Stage 147:================================================>    (107 + 9) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.916701455 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partition Index = 214  OR  partitionIndex = 215 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398728928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 59) / 120][Stage 148:================================>                    (74 + 46) / 120][Stage 148:==========================================>          (96 + 24) / 120][Stage 148:====================================================>(118 + 2) / 120]                                                                                [Stage 149:==========================>                          (61 + 60) / 121][Stage 149:=============================>                       (67 + 54) / 121][Stage 149:==================================>                  (78 + 43) / 121][Stage 149:===========================================>         (99 + 22) / 121][Stage 149:===================================================> (118 + 3) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.331343899 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex  = 30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403847393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:===========================>                         (62 + 59) / 121][Stage 150:==================================>                  (78 + 43) / 121][Stage 150:===========================================>         (99 + 22) / 121][Stage 150:=================================================>   (114 + 7) / 121][Stage 150:====================================================>(120 + 1) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:=============================>                       (67 + 55) / 122][Stage 151:====================================>                (83 + 39) / 122][Stage 151:=============================================>      (107 + 15) / 122][Stage 151:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.683652298 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  par titionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17   OR  partitionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370706083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (70 + 43) / 113][Stage 152:======================================>              (83 + 30) / 113][Stage 152:=========================================>           (88 + 25) / 113][Stage 152:=============================================>       (97 + 16) / 113][Stage 152:==================================================>  (107 + 6) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:====================================>                (79 + 35) / 114][Stage 153:========================================>            (87 + 27) / 114][Stage 153:===========================================>         (94 + 20) / 114][Stage 153:==============================================>     (102 + 12) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:=================================================>   (107 + 7) / 114][Stage 153:==================================================>  (109 + 5) / 114][Stage 153:===================================================> (111 + 3) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.713378444 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partition Index = 152  OR  partitionIndex = 153 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381944858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (67 + 48) / 115][Stage 154:====================================>                (79 + 36) / 115][Stage 154:=========================================>           (89 + 26) / 115][Stage 154:=================================================>   (107 + 8) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:===============================>                     (69 + 47) / 116][Stage 155:===================================>                 (78 + 38) / 116][Stage 155:==========================================>          (92 + 24) / 116][Stage 155:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.796945433 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionInde x = 74  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384426691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=============================>                       (62 + 51) / 113][Stage 156:=================================>                   (72 + 41) / 113][Stage 156:=========================================>           (89 + 24) / 113][Stage 156:==================================================>  (107 + 6) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:===============================>                     (68 + 46) / 114][Stage 157:=======================================>             (86 + 28) / 114][Stage 157:================================================>    (105 + 9) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.715825248 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partition Index = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387644305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:=============================>                       (63 + 50) / 113][Stage 158:=======================================>             (84 + 29) / 113][Stage 158:==================================================>  (107 + 6) / 113]                                                                                [Stage 159:=============================>                       (63 + 51) / 114][Stage 159:==================================>                  (74 + 40) / 114][Stage 159:==========================================>          (92 + 22) / 114][Stage 159:===============================================>    (104 + 10) / 114][Stage 159:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.474341795 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partition Index = 201  OR  partitionIndex = 202 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344396365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (83 + 32) / 115][Stage 160:==========================================>          (92 + 23) / 115][Stage 160:=============================================>      (101 + 14) / 115][Stage 160:=================================================>   (108 + 7) / 115]                                                                                [Stage 161:======================================>              (84 + 32) / 116][Stage 161:==========================================>          (93 + 23) / 116][Stage 161:==================================================>  (110 + 6) / 116][Stage 161:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.811554768 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  p artitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIn dex = 104  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37296137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:===================================>                 (78 + 40) / 118][Stage 162:========================================>            (91 + 27) / 118][Stage 162:============================================>        (98 + 20) / 118][Stage 162:==================================================>  (113 + 5) / 118]                                                                                [Stage 163:================================>                    (74 + 45) / 119][Stage 163:====================================>                (83 + 36) / 119][Stage 163:========================================>            (91 + 28) / 119][Stage 163:=============================================>      (105 + 14) / 119][Stage 163:==================================================>  (113 + 6) / 119][Stage 163:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.388022388 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partition Index = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403822525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:================================>                    (74 + 47) / 121][Stage 164:==========================================>          (97 + 24) / 121][Stage 164:===============================================>    (110 + 11) / 121][Stage 164:====================================================>(119 + 2) / 121][Stage 164:====================================================>(120 + 1) / 121]                                                                                [Stage 165:============================>                        (65 + 57) / 122][Stage 165:=================================>                   (76 + 46) / 122][Stage 165:==========================================>          (98 + 24) / 122][Stage 165:=================================================>   (113 + 9) / 122][Stage 165:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.843472281 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  p artitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex  = 68  OR  partitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334844595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (80 + 35) / 115][Stage 166:=======================================>             (86 + 29) / 115][Stage 166:===========================================>         (95 + 20) / 115][Stage 166:==================================================>  (110 + 5) / 115]                                                                                [Stage 167:======================================>              (85 + 31) / 116][Stage 167:==========================================>          (94 + 22) / 116][Stage 167:=============================================>      (102 + 14) / 116][Stage 167:==================================================>  (110 + 6) / 116][Stage 167:===================================================> (113 + 3) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.742314854 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  p artitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionInde x = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396898427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (67 + 48) / 115][Stage 168:======================================>              (84 + 31) / 115][Stage 168:==============================================>     (102 + 13) / 115][Stage 168:==================================================>  (109 + 6) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:=================================>                   (73 + 43) / 116][Stage 169:======================================>              (85 + 31) / 116][Stage 169:==============================================>     (104 + 12) / 116][Stage 169:==================================================>  (111 + 5) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.194626375 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partition Index = 141  OR  partitionIndex = 142 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36385488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:==================================>                  (76 + 42) / 118][Stage 170:======================================>              (85 + 33) / 118][Stage 170:===========================================>         (96 + 22) / 118][Stage 170:===============================================>    (108 + 10) / 118][Stage 170:===================================================> (115 + 3) / 118]                                                                                [Stage 171:===============================>                     (70 + 49) / 119][Stage 171:==================================>                  (77 + 42) / 119][Stage 171:======================================>              (87 + 32) / 119][Stage 171:===========================================>         (98 + 21) / 119][Stage 171:=============================================>      (105 + 14) / 119][Stage 171:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.962893171 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partition Index = 144  OR  partitionIndex = 130 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360321201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:=================================>                   (74 + 44) / 118][Stage 172:====================================>                (81 + 37) / 118][Stage 172:=========================================>           (93 + 25) / 118][Stage 172:==============================================>     (105 + 13) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:==================================>                  (78 + 41) / 119][Stage 173:=======================================>             (88 + 31) / 119][Stage 173:=============================================>      (103 + 16) / 119][Stage 173:==================================================>  (113 + 6) / 119][Stage 173:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.79059723 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionInde x = 66  OR  partitionIndex = 67 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403783339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:==============================>                      (68 + 52) / 120][Stage 174:======================================>              (87 + 33) / 120][Stage 174:==============================================>     (108 + 12) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:================================>                    (74 + 47) / 121][Stage 175:======================================>              (88 + 33) / 121][Stage 175:==============================================>     (108 + 13) / 121][Stage 175:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.631366558 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex  = 61  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383115915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:=============================>                       (62 + 51) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:==================================================>  (108 + 5) / 113]                                                                                [Stage 177:=============================>                       (64 + 50) / 114][Stage 177:====================================>                (78 + 36) / 114][Stage 177:===========================================>         (94 + 20) / 114][Stage 177:===============================================>    (104 + 10) / 114][Stage 177:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.860830266 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  p artitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionInde x = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337064861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:======================================>              (83 + 32) / 115][Stage 178:===========================================>         (94 + 21) / 115][Stage 178:===============================================>    (105 + 10) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:=====================================>               (82 + 34) / 116][Stage 179:========================================>            (88 + 28) / 116][Stage 179:=============================================>      (102 + 14) / 116][Stage 179:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.753452191 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIn dex = 64  OR  partitionIndex = 65 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352147556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (80 + 33) / 113][Stage 180:============================================>        (94 + 19) / 113][Stage 180:==============================================>     (100 + 13) / 113][Stage 180:===================================================> (109 + 4) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=======================================>             (85 + 29) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:==================================================>  (109 + 5) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.332093543 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partition Index = 135  OR  partitionIndex = 149 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407095773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===================================>                 (76 + 39) / 115][Stage 182:=========================================>           (89 + 26) / 115][Stage 182:=============================================>      (101 + 14) / 115][Stage 182:===================================================> (111 + 4) / 115]                                                                                [Stage 183:=================================>                   (74 + 42) / 116][Stage 183:==========================================>          (92 + 24) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.847937376 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  p artitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionInde x = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400537758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:============================>                        (64 + 56) / 120][Stage 184:==================================>                  (77 + 43) / 120][Stage 184:=========================================>           (94 + 26) / 120][Stage 184:=================================================>   (113 + 7) / 120][Stage 184:====================================================>(119 + 1) / 120]                                                                                [Stage 185:===========================>                         (62 + 59) / 121][Stage 185:=============================>                       (67 + 54) / 121][Stage 185:===================================>                 (81 + 40) / 121][Stage 185:=============================================>      (106 + 15) / 121][Stage 185:=================================================>   (113 + 8) / 121][Stage 185:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.753490313 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  p artitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex  = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348935578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (73 + 40) / 113][Stage 186:======================================>              (82 + 31) / 113][Stage 186:==========================================>          (90 + 23) / 113][Stage 186:==============================================>     (101 + 12) / 113][Stage 186:===================================================> (109 + 4) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:======================================>              (82 + 32) / 114][Stage 187:========================================>            (88 + 26) / 114][Stage 187:=============================================>       (98 + 16) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:====================================================>(112 + 2) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.21941157 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  par titionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex =  25  OR  partitionIndex = 26 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351764292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:========================================>            (88 + 27) / 115][Stage 188:==========================================>          (92 + 23) / 115][Stage 188:==============================================>     (103 + 12) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:=======================================>             (87 + 29) / 116][Stage 189:============================================>        (98 + 18) / 116][Stage 189:==============================================>     (104 + 12) / 116][Stage 189:=================================================>   (109 + 7) / 116][Stage 189:===================================================> (113 + 3) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.901683485 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partition Index = 196  OR  partitionIndex = 182 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347530828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (80 + 35) / 115][Stage 190:========================================>            (88 + 27) / 115][Stage 190:==============================================>     (103 + 12) / 115][Stage 190:===================================================> (111 + 4) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:============================================>        (98 + 18) / 116][Stage 191:==================================================>  (110 + 6) / 116][Stage 191:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.80674634 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  p artitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex  = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346412922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (71 + 42) / 113][Stage 192:=======================================>             (84 + 29) / 113][Stage 192:==========================================>          (91 + 22) / 113][Stage 192:==============================================>     (101 + 12) / 113][Stage 192:===================================================> (109 + 4) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:=====================================>               (80 + 34) / 114][Stage 193:========================================>            (88 + 26) / 114][Stage 193:==============================================>     (102 + 12) / 114][Stage 193:==================================================>  (109 + 5) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.531341018 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partition Index = 232  OR  partitionIndex = 128 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379784909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==============================>                      (67 + 48) / 115][Stage 194:===================================>                 (76 + 39) / 115][Stage 194:============================================>        (96 + 19) / 115][Stage 194:==================================================>  (110 + 5) / 115][Stage 194:====================================================>(113 + 2) / 115]                                                                                [Stage 195:================================>                    (71 + 45) / 116][Stage 195:======================================>              (85 + 31) / 116][Stage 195:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.829626523 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  p artitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex  = 60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396288171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 59) / 121][Stage 196:=================================>                   (77 + 44) / 121][Stage 196:=========================================>           (95 + 26) / 121][Stage 196:=================================================>   (114 + 7) / 121]                                                                                [Stage 197:==========================>                          (62 + 60) / 122][Stage 197:==============================>                      (70 + 52) / 122][Stage 197:=======================================>             (90 + 32) / 122][Stage 197:===============================================>    (111 + 11) / 122][Stage 197:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.705506779 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partition Index = 170  OR  partitionIndex = 156 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379733727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=================================>                   (71 + 42) / 113][Stage 198:========================================>            (87 + 26) / 113][Stage 198:=============================================>       (96 + 17) / 113][Stage 198:=================================================>   (106 + 7) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:======================================>              (83 + 31) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.972186927 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  p artitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex  = 91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334829821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (83 + 32) / 115][Stage 200:========================================>            (88 + 27) / 115][Stage 200:===============================================>    (104 + 11) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:======================================>              (85 + 31) / 116][Stage 201:=============================================>       (99 + 17) / 116][Stage 201:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.896978244 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 03:15:24 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:56338) dropped. RpcEnv already stopped.
17/05/22 03:15:24 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:56338) dropped. RpcEnv already stopped.
17/05/22 03:15:24 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:35802) dropped. RpcEnv already stopped.
17/05/22 03:15:24 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:35802) dropped. RpcEnv already stopped.

real	11m52.767s
user	12m17.344s
sys	1m35.540s
