Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 09:52:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:52:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:52:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:52:43 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 09:52:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:52:55 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523095244-0551).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.364221508 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.438373141 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 77 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.732774755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (55 + 60) / 115][Stage 2:============================>                          (59 + 56) / 115][Stage 2:================================>                      (67 + 48) / 115][Stage 2:===================================>                   (74 + 41) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:============================================>          (92 + 23) / 115][Stage 2:================================================>     (103 + 12) / 115][Stage 2:==================================================>    (106 + 9) / 115][Stage 2:===================================================>   (108 + 7) / 115]                                                                                [Stage 3:===========================>                           (58 + 58) / 116][Stage 3:==============================>                        (65 + 51) / 116][Stage 3:================================>                      (68 + 48) / 116][Stage 3:===================================>                   (75 + 41) / 116][Stage 3:=======================================>               (83 + 33) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:==============================================>       (100 + 16) / 116][Stage 3:=================================================>    (106 + 10) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.644319198 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  pa rtitionIndex = 6  OR  partitionIndex = 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.641999661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===================>                                   (41 + 74) / 115][Stage 4:===============================>                       (66 + 49) / 115][Stage 4:==================================>                    (72 + 43) / 115][Stage 4:====================================>                  (76 + 39) / 115][Stage 4:=========================================>             (87 + 28) / 115][Stage 4:===============================================>       (99 + 16) / 115][Stage 4:===============================================>      (102 + 13) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:===========================>                           (59 + 57) / 116][Stage 5:==============================>                        (65 + 51) / 116][Stage 5:===================================>                   (74 + 42) / 116][Stage 5:=====================================>                 (80 + 36) / 116][Stage 5:===========================================>           (91 + 25) / 116][Stage 5:===============================================>      (101 + 15) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:=====================================================> (112 + 4) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.556641671 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.765644202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=======================>                               (51 + 70) / 121][Stage 6:===========================>                           (60 + 61) / 121][Stage 6:============================>                          (62 + 59) / 121][Stage 6:==============================>                        (67 + 54) / 121][Stage 6:===================================>                   (78 + 43) / 121][Stage 6:=============================================>         (99 + 22) / 121][Stage 6:====================================================>  (115 + 6) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:================================>                      (73 + 49) / 122][Stage 7:========================================>              (89 + 33) / 122][Stage 7:===========================================>           (97 + 25) / 122][Stage 7:===============================================>      (107 + 15) / 122][Stage 7:====================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.480374902 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.62611197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (58 + 62) / 120][Stage 8:===========================>                           (60 + 60) / 120][Stage 8:==============================>                        (67 + 53) / 120][Stage 8:===================================>                   (78 + 42) / 120][Stage 8:=========================================>             (90 + 30) / 120][Stage 8:=================================================>    (109 + 11) / 120][Stage 8:====================================================>  (114 + 6) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:===============================>                       (69 + 52) / 121][Stage 9:========================================>              (89 + 32) / 121][Stage 9:===============================================>      (107 + 14) / 121][Stage 9:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.937200061 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60476556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:===========================>                          (61 + 60) / 121][Stage 10:=============================>                        (67 + 54) / 121][Stage 10:======================================>               (86 + 35) / 121][Stage 10:=============================================>       (103 + 18) / 121][Stage 10:================================================>    (111 + 10) / 121][Stage 10:=====================================================>(119 + 2) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:============================>                         (64 + 58) / 122][Stage 11:==================================>                   (78 + 44) / 122][Stage 11:=========================================>            (94 + 28) / 122][Stage 11:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.934181651 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637030604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:===========================>                          (61 + 60) / 121][Stage 12:=============================>                        (65 + 56) / 121][Stage 12:==================================>                   (78 + 43) / 121][Stage 12:==========================================>           (96 + 25) / 121][Stage 12:================================================>    (110 + 11) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (65 + 57) / 122][Stage 13:==================================>                   (79 + 43) / 122][Stage 13:=========================================>            (93 + 29) / 122][Stage 13:==============================================>      (107 + 15) / 122][Stage 13:==================================================>   (114 + 8) / 122][Stage 13:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.204420947 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.603011994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:=============================>                        (67 + 54) / 121][Stage 14:===================================>                  (80 + 41) / 121][Stage 14:===========================================>          (97 + 24) / 121][Stage 14:==================================================>   (113 + 8) / 121][Stage 14:=====================================================>(119 + 2) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:=============================>                        (67 + 55) / 122][Stage 15:==================================>                   (78 + 44) / 122][Stage 15:==========================================>           (96 + 26) / 122][Stage 15:==================================================>   (113 + 9) / 122][Stage 15:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.808047002 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495422366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (70 + 48) / 118][Stage 16:=================================>                    (73 + 45) / 118][Stage 16:=====================================>                (83 + 35) / 118][Stage 16:============================================>        (100 + 18) / 118][Stage 16:====================================================> (114 + 4) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:===================================>                  (79 + 40) / 119][Stage 17:============================================>        (100 + 19) / 119][Stage 17:====================================================> (115 + 4) / 119][Stage 17:====================================================> (116 + 3) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.582522211 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  pa rtitionIndex = 15  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513331284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===============================>                      (67 + 48) / 115][Stage 18:=====================================>                (79 + 36) / 115][Stage 18:===========================================>          (93 + 22) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:====================================>                 (79 + 37) / 116][Stage 19:===========================================>          (94 + 22) / 116][Stage 19:=============================================>       (100 + 16) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:==================================================>   (108 + 8) / 116][Stage 19:===================================================>  (110 + 6) / 116][Stage 19:===================================================>  (111 + 5) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.828354649 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471172787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:==================================>                   (76 + 42) / 118][Stage 20:=========================================>            (91 + 27) / 118][Stage 20:============================================>        (100 + 18) / 118][Stage 20:==================================================>   (111 + 7) / 118][Stage 20:===================================================>  (112 + 6) / 118][Stage 20:====================================================> (114 + 4) / 118][Stage 20:=====================================================>(117 + 1) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:==================================>                   (75 + 44) / 119][Stage 21:=======================================>              (86 + 33) / 119][Stage 21:============================================>         (98 + 21) / 119][Stage 21:=================================================>    (110 + 9) / 119][Stage 21:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.525710167 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514347847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:===============================>                      (71 + 49) / 120][Stage 22:========================================>             (90 + 30) / 120][Stage 22:=================================================>    (111 + 9) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:============================>                         (64 + 57) / 121][Stage 23:=====================================>                (85 + 36) / 121][Stage 23:===========================================>         (100 + 21) / 121][Stage 23:==================================================>   (114 + 7) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.549783784 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509365211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:==============================>                       (68 + 52) / 120][Stage 24:====================================>                 (82 + 38) / 120][Stage 24:=============================================>       (103 + 17) / 120][Stage 24:====================================================> (116 + 4) / 120]                                                                                [Stage 25:============================>                         (63 + 58) / 121][Stage 25:================================>                     (72 + 49) / 121][Stage 25:=======================================>              (89 + 32) / 121][Stage 25:==============================================>      (106 + 15) / 121][Stage 25:====================================================> (118 + 3) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.675747732 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50923995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:===========================>                          (62 + 59) / 121][Stage 26:==============================>                       (69 + 52) / 121][Stage 26:=========================================>            (94 + 27) / 121][Stage 26:==================================================>   (114 + 7) / 121][Stage 26:=====================================================>(120 + 1) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:============================>                         (65 + 57) / 122][Stage 27:====================================>                 (83 + 39) / 122][Stage 27:============================================>        (103 + 19) / 122][Stage 27:===================================================>  (116 + 6) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.625226308 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.594132606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (65 + 56) / 121][Stage 28:================================>                     (72 + 49) / 121][Stage 28:===========================================>          (97 + 24) / 121][Stage 28:==================================================>   (114 + 7) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:============================>                         (64 + 58) / 122][Stage 29:=================================>                    (76 + 46) / 122][Stage 29:===========================================>         (101 + 21) / 122][Stage 29:===================================================>  (116 + 6) / 122][Stage 29:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.775276834 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506703442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:============================>                         (60 + 53) / 113][Stage 30:==================================>                   (73 + 40) / 113][Stage 30:=========================================>            (87 + 26) / 113][Stage 30:==============================================>      (100 + 13) / 113][Stage 30:====================================================> (110 + 3) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:==================================>                   (73 + 41) / 114][Stage 31:==========================================>           (90 + 24) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.626679672 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476394344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:====================================>                 (77 + 36) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:==============================>                       (65 + 49) / 114][Stage 33:========================================>             (85 + 29) / 114][Stage 33:==============================================>       (98 + 16) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.749958591 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46904938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (79 + 36) / 115][Stage 34:========================================>             (86 + 29) / 115][Stage 34:===============================================>     (103 + 12) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:========================================>             (86 + 30) / 116][Stage 35:==============================================>      (101 + 15) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:====================================================> (112 + 4) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.922186649 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide92"
dataSource: String = /nidan/orc/individualORC/slide92

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539083587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:===============================>                      (66 + 47) / 113][Stage 36:=========================================>            (87 + 26) / 113][Stage 36:===============================================>      (99 + 14) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:============================>                         (61 + 53) / 114][Stage 37:==================================>                   (73 + 41) / 114][Stage 37:==========================================>           (89 + 25) / 114][Stage 37:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.377870565 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460903953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:============================>                         (60 + 53) / 113][Stage 38:==================================>                   (72 + 41) / 113][Stage 38:=========================================>            (87 + 26) / 113][Stage 38:=================================================>    (104 + 9) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:==============================>                       (65 + 49) / 114][Stage 39:====================================>                 (78 + 36) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.75609441 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481582581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:============================>                         (63 + 57) / 120][Stage 40:===================================>                  (79 + 41) / 120][Stage 40:===============================================>     (107 + 13) / 120][Stage 40:=====================================================>(119 + 1) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:============================>                         (63 + 58) / 121][Stage 41:===================================>                  (79 + 42) / 121][Stage 41:=============================================>       (103 + 18) / 121][Stage 41:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.376016779 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482661984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===============================>                      (67 + 48) / 115][Stage 42:======================================>               (83 + 32) / 115][Stage 42:==============================================>       (99 + 16) / 115][Stage 42:====================================================> (112 + 3) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:==================================>                   (75 + 41) / 116][Stage 43:========================================>             (86 + 30) / 116][Stage 43:==============================================>      (101 + 15) / 116][Stage 43:===================================================>  (111 + 5) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.262115749 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419419339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:===================================>                  (78 + 40) / 118][Stage 44:===========================================>          (94 + 24) / 118][Stage 44:==============================================>      (103 + 15) / 118][Stage 44:====================================================> (115 + 3) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (75 + 44) / 119][Stage 45:=======================================>              (86 + 33) / 119][Stage 45:=============================================>       (103 + 16) / 119][Stage 45:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.334833604 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR   partitionIndex = 195  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431145337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (72 + 41) / 113][Stage 46:========================================>             (85 + 28) / 113][Stage 46:===========================================>          (92 + 21) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:======================================>               (82 + 32) / 114][Stage 47:============================================>         (94 + 20) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.112815965 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441668671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (72 + 41) / 113][Stage 48:=======================================>              (82 + 31) / 113][Stage 48:===========================================>          (90 + 23) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:====================================================> (109 + 4) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:========================================>             (86 + 28) / 114][Stage 49:=============================================>        (95 + 19) / 114][Stage 49:===================================================>  (108 + 6) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.127317312 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457110821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (64 + 56) / 120][Stage 50:================================>                     (72 + 48) / 120][Stage 50:========================================>             (89 + 31) / 120][Stage 50:===============================================>     (108 + 12) / 120][Stage 50:====================================================> (117 + 3) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:===================================>                  (80 + 41) / 121][Stage 51:===============================================>     (109 + 12) / 121][Stage 51:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.684756478 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  pa rtitionIndex = 66  OR  partitionIndex = 67 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408892824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:==================================>                   (76 + 42) / 118][Stage 52:=======================================>              (87 + 31) / 118][Stage 52:============================================>         (98 + 20) / 118][Stage 52:================================================>    (108 + 10) / 118][Stage 52:=====================================================>(116 + 2) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:==================================>                   (75 + 44) / 119][Stage 53:====================================>                 (80 + 39) / 119][Stage 53:=======================================>              (87 + 32) / 119][Stage 53:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.556088341 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430614055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===============================>                      (67 + 48) / 115][Stage 54:=====================================>                (79 + 36) / 115][Stage 54:=============================================>        (97 + 18) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:===============================>                      (68 + 48) / 116][Stage 55:=======================================>              (85 + 31) / 116][Stage 55:==============================================>       (99 + 17) / 116][Stage 55:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.859352623 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR   partitionIndex = 124  OR  partitionIndex = 125 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46318742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (62 + 58) / 120][Stage 56:================================>                     (72 + 48) / 120][Stage 56:=====================================>                (84 + 36) / 120][Stage 56:=============================================>       (104 + 16) / 120][Stage 56:=====================================================>(119 + 1) / 120]                                                                                [Stage 57:===========================>                          (62 + 59) / 121][Stage 57:===============================>                      (70 + 51) / 121][Stage 57:====================================>                 (81 + 40) / 121][Stage 57:==============================================>      (107 + 14) / 121][Stage 57:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.428541627 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.588679007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:==============================>                       (68 + 52) / 120][Stage 58:====================================>                 (82 + 38) / 120][Stage 58:=============================================>       (103 + 17) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:===============================>                      (71 + 50) / 121][Stage 59:==========================================>           (95 + 26) / 121][Stage 59:================================================>    (110 + 11) / 121][Stage 59:=====================================================>(119 + 2) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.796436419 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  pa rtitionIndex = 74  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510973355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (62 + 58) / 120][Stage 60:===============================>                      (71 + 49) / 120][Stage 60:=============================================>       (103 + 17) / 120][Stage 60:===================================================>  (115 + 5) / 120]                                                                                [Stage 61:============================>                         (63 + 58) / 121][Stage 61:=====================================>                (84 + 37) / 121][Stage 61:============================================>        (101 + 20) / 121][Stage 61:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.249369667 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR   partitionIndex = 140  OR  partitionIndex = 126 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414139422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:==================================>                   (76 + 42) / 118][Stage 62:=======================================>              (86 + 32) / 118][Stage 62:===========================================>          (95 + 23) / 118][Stage 62:=================================================>    (109 + 9) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:==================================>                   (77 + 42) / 119][Stage 63:=======================================>              (86 + 33) / 119][Stage 63:==========================================>           (94 + 25) / 119][Stage 63:==============================================>      (104 + 15) / 119][Stage 63:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.813544553 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407795041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==================================>                   (74 + 41) / 115][Stage 64:=========================================>            (89 + 26) / 115][Stage 64:================================================>    (105 + 10) / 115][Stage 64:====================================================> (111 + 4) / 115]                                                                                [Stage 65:=====================================>                (81 + 35) / 116][Stage 65:==========================================>           (91 + 25) / 116][Stage 65:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.779300343 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 59  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449155034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:================================>                     (67 + 46) / 113][Stage 66:=========================================>            (86 + 27) / 113][Stage 66:==============================================>       (98 + 15) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:================================>                     (69 + 45) / 114][Stage 67:===========================================>          (92 + 22) / 114][Stage 67:====================================================> (111 + 3) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263824512 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442698334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:===========================>                          (62 + 58) / 120][Stage 68:================================>                     (73 + 47) / 120][Stage 68:=========================================>            (92 + 28) / 120][Stage 68:================================================>    (110 + 10) / 120][Stage 68:===================================================>  (115 + 5) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:===============================>                      (71 + 50) / 121][Stage 69:==========================================>           (96 + 25) / 121][Stage 69:==============================================>      (107 + 14) / 121][Stage 69:====================================================> (117 + 4) / 121][Stage 69:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.841857905 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  pa rtitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434560687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:============================>                         (64 + 57) / 121][Stage 70:=================================>                    (74 + 47) / 121][Stage 70:=============================================>       (103 + 18) / 121][Stage 70:=====================================================>(119 + 2) / 121]                                                                                [Stage 71:===========================>                          (62 + 60) / 122][Stage 71:===============================>                      (71 + 51) / 122][Stage 71:=======================================>              (89 + 33) / 122][Stage 71:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.317946108 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379115528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (71 + 42) / 113][Stage 72:======================================>               (80 + 33) / 113][Stage 72:===========================================>          (92 + 21) / 113][Stage 72:=================================================>    (104 + 9) / 113][Stage 72:====================================================> (109 + 4) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:======================================>               (82 + 32) / 114][Stage 73:============================================>         (93 + 21) / 114][Stage 73:==============================================>      (101 + 13) / 114][Stage 73:====================================================> (110 + 4) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.412123992 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37952803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (72 + 41) / 113][Stage 74:========================================>             (84 + 29) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:===================================================>  (108 + 5) / 113]                                                                                [Stage 75:======================================>               (81 + 33) / 114][Stage 75:============================================>         (93 + 21) / 114][Stage 75:================================================>    (104 + 10) / 114][Stage 75:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.08429781 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418226035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===========================>                          (62 + 58) / 120][Stage 76:=================================>                    (74 + 46) / 120][Stage 76:===========================================>          (96 + 24) / 120][Stage 76:====================================================> (117 + 3) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=============================>                        (65 + 56) / 121][Stage 77:====================================>                 (81 + 40) / 121][Stage 77:=============================================>       (103 + 18) / 121][Stage 77:=====================================================>(119 + 2) / 121][Stage 77:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.42067288 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434301546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:============================>                         (63 + 58) / 121][Stage 78:================================>                     (73 + 48) / 121][Stage 78:==========================================>           (95 + 26) / 121][Stage 78:===================================================>  (116 + 5) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:============================>                         (64 + 58) / 122][Stage 79:===============================>                      (71 + 51) / 122][Stage 79:=======================================>              (90 + 32) / 122][Stage 79:===============================================>     (110 + 12) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.58448643 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427542305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:===========================>                          (62 + 58) / 120][Stage 80:================================>                     (73 + 47) / 120][Stage 80:=============================================>       (102 + 18) / 120][Stage 80:===================================================>  (115 + 5) / 120]                                                                                [Stage 81:============================>                         (64 + 57) / 121][Stage 81:====================================>                 (82 + 39) / 121][Stage 81:============================================>        (102 + 19) / 121][Stage 81:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.222282477 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386201831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:===================================>                  (77 + 41) / 118][Stage 82:=======================================>              (86 + 32) / 118][Stage 82:=============================================>       (101 + 17) / 118][Stage 82:==================================================>   (110 + 8) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:==================================>                   (77 + 42) / 119][Stage 83:=======================================>              (86 + 33) / 119][Stage 83:============================================>        (100 + 19) / 119][Stage 83:====================================================> (115 + 4) / 119][Stage 83:=====================================================>(117 + 2) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.757312949 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376378799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (75 + 38) / 113][Stage 84:=====================================>                (79 + 34) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:================================================>    (103 + 10) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:======================================>               (81 + 33) / 114][Stage 85:===========================================>          (91 + 23) / 114][Stage 85:===============================================>     (102 + 12) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.273673523 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397595968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:==============================>                       (63 + 50) / 113][Stage 86:=======================================>              (83 + 30) / 113][Stage 86:=================================================>    (104 + 9) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:=================================>                    (70 + 44) / 114][Stage 87:===========================================>          (91 + 23) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.210317498 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433136603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:============================>                         (63 + 58) / 121][Stage 88:==================================>                   (77 + 44) / 121][Stage 88:=========================================>            (94 + 27) / 121][Stage 88:=================================================>    (112 + 9) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:=============================>                        (66 + 56) / 122][Stage 89:=======================================>              (90 + 32) / 122][Stage 89:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.414045057 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  par titionIndex = 5  OR  partitionIndex = 19 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436776435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:===========================>                          (61 + 60) / 121][Stage 90:=================================>                    (76 + 45) / 121][Stage 90:==========================================>           (95 + 26) / 121][Stage 90:==================================================>   (114 + 7) / 121][Stage 90:=====================================================>(120 + 1) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:=================================>                    (75 + 47) / 122][Stage 91:=======================================>              (90 + 32) / 122][Stage 91:================================================>    (112 + 10) / 122][Stage 91:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.418956793 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407227659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:=======================================>              (87 + 33) / 120][Stage 92:============================================>        (101 + 19) / 120][Stage 92:=====================================================>(118 + 2) / 120]                                                                                [Stage 93:=============================>                        (66 + 55) / 121][Stage 93:===================================>                  (80 + 41) / 121][Stage 93:=============================================>       (104 + 17) / 121][Stage 93:====================================================> (118 + 3) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.376727655 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388157597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===================================>                  (75 + 40) / 115][Stage 94:======================================>               (82 + 33) / 115][Stage 94:==============================================>       (98 + 17) / 115][Stage 94:===================================================>  (109 + 6) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:===============================>                      (67 + 49) / 116][Stage 95:======================================>               (82 + 34) / 116][Stage 95:===========================================>          (93 + 23) / 116][Stage 95:==============================================>       (99 + 17) / 116][Stage 95:====================================================> (113 + 3) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.227101391 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392774212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:====================================>                 (79 + 39) / 118][Stage 96:=======================================>              (87 + 31) / 118][Stage 96:==============================================>      (103 + 15) / 118][Stage 96:=====================================================>(117 + 1) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:===================================>                  (79 + 40) / 119][Stage 97:==========================================>           (94 + 25) / 119][Stage 97:==================================================>   (111 + 8) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.127555929 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 143 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400783598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:==============================>                       (63 + 50) / 113][Stage 98:====================================>                 (77 + 36) / 113][Stage 98:============================================>         (94 + 19) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:==============================>                       (65 + 49) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:============================================>         (93 + 21) / 114][Stage 99:====================================================> (110 + 4) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.347040699 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  pa rtitionIndex = 86  OR  partitionIndex = 98 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403855088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:============================>                        (61 + 52) / 113][Stage 100:================================>                    (70 + 43) / 113][Stage 100:===========================================>         (93 + 20) / 113][Stage 100:==================================================>  (107 + 6) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:=============================>                       (64 + 50) / 114][Stage 101:======================================>              (82 + 32) / 114][Stage 101:=============================================>      (100 + 14) / 114][Stage 101:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.552672525 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42013342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:=============================>                       (62 + 51) / 113][Stage 102:=================================>                   (71 + 42) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:=================================================>   (106 + 7) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:=================================>                   (73 + 41) / 114][Stage 103:===========================================>         (94 + 20) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.576895983 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344679196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:======================================>              (84 + 31) / 115][Stage 104:==========================================>          (92 + 23) / 115][Stage 104:==============================================>     (103 + 12) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:=====================================>               (82 + 34) / 116][Stage 105:===========================================>         (96 + 20) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.828724201 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  p artitionIndex = 112  OR  partitionIndex = 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403773827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:===============================>                     (71 + 50) / 121][Stage 106:==========================================>          (97 + 24) / 121][Stage 106:===================================================> (117 + 4) / 121]                                                                                [Stage 107:===========================>                         (64 + 58) / 122][Stage 107:==================================>                  (79 + 43) / 122][Stage 107:==========================================>          (98 + 24) / 122][Stage 107:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.244287725 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356143373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==================================>                  (73 + 40) / 113][Stage 108:======================================>              (83 + 30) / 113][Stage 108:============================================>        (95 + 18) / 113][Stage 108:================================================>    (104 + 9) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:=======================================>             (84 + 30) / 114][Stage 109:===========================================>         (94 + 20) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.085616832 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374073832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==============================>                      (67 + 48) / 115][Stage 110:===================================>                 (76 + 39) / 115][Stage 110:=========================================>           (90 + 25) / 115][Stage 110:===============================================>    (105 + 10) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:==================================>                  (75 + 41) / 116][Stage 111:===========================================>         (96 + 20) / 116][Stage 111:================================================>    (107 + 9) / 116][Stage 111:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.974829513 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403623887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (63 + 57) / 120][Stage 112:=================================>                   (76 + 44) / 120][Stage 112:=========================================>           (95 + 25) / 120][Stage 112:==================================================>  (114 + 6) / 120]                                                                                [Stage 113:============================>                        (64 + 57) / 121][Stage 113:=================================>                   (76 + 45) / 121][Stage 113:===========================================>        (102 + 19) / 121][Stage 113:==================================================>  (115 + 6) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.416951544 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  pa rtitionIndex = 28  OR  partitionIndex = 14 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353762325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (81 + 32) / 113][Stage 114:========================================>            (86 + 27) / 113][Stage 114:==============================================>     (100 + 13) / 113][Stage 114:==================================================>  (107 + 6) / 113]                                                                                [Stage 115:====================================>                (78 + 36) / 114][Stage 115:=======================================>             (86 + 28) / 114][Stage 115:=============================================>       (97 + 17) / 114][Stage 115:================================================>    (105 + 9) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:====================================================>(112 + 2) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.941905582 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385324427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===============================>                     (69 + 46) / 115][Stage 116:======================================>              (83 + 32) / 115][Stage 116:===========================================>         (95 + 20) / 115][Stage 116:==================================================>  (110 + 5) / 115]                                                                                [Stage 117:=================================>                   (73 + 43) / 116][Stage 117:======================================>              (84 + 32) / 116][Stage 117:=============================================>      (102 + 14) / 116][Stage 117:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.903782922 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  pa rtitionIndex = 44  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339112798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:=========================================>           (91 + 24) / 115][Stage 118:==================================================>  (110 + 5) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:=====================================>               (81 + 35) / 116][Stage 119:=======================================>             (87 + 29) / 116][Stage 119:============================================>       (100 + 16) / 116][Stage 119:==================================================>  (110 + 6) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.767730199 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide92"
dataSource: String = /nidan/orc/individualORC/slide92

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 207 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400993238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (60 + 53) / 113][Stage 120:===================================>                 (76 + 37) / 113][Stage 120:============================================>        (94 + 19) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:===================================>                 (77 + 37) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:================================================>    (105 + 9) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.504477187 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37669078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==============================>                      (67 + 48) / 115][Stage 122:=====================================>               (82 + 33) / 115][Stage 122:============================================>        (96 + 19) / 115][Stage 122:=================================================>   (108 + 7) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:===============================>                     (68 + 48) / 116][Stage 123:=====================================>               (83 + 33) / 116][Stage 123:==========================================>          (94 + 22) / 116][Stage 123:===============================================>    (105 + 11) / 116][Stage 123:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.907463833 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR   partitionIndex = 234  OR  partitionIndex = 220 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405635693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:================================>                    (74 + 47) / 121][Stage 124:===========================================>         (99 + 22) / 121][Stage 124:===================================================> (117 + 4) / 121]                                                                                [Stage 125:===========================>                         (64 + 58) / 122][Stage 125:===============================>                     (72 + 50) / 122][Stage 125:=======================================>             (90 + 32) / 122][Stage 125:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.262532183 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387233274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:=============================>                       (63 + 50) / 113][Stage 126:====================================>                (77 + 36) / 113][Stage 126:==============================================>      (99 + 14) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:==============================>                      (66 + 48) / 114][Stage 127:==================================>                  (75 + 39) / 114][Stage 127:==========================================>          (91 + 23) / 114][Stage 127:==================================================>  (108 + 6) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.367577523 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359007722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (71 + 42) / 113][Stage 128:======================================>              (83 + 30) / 113][Stage 128:============================================>        (94 + 19) / 113][Stage 128:===============================================>    (103 + 10) / 113]                                                                                [Stage 129:===================================>                 (77 + 37) / 114][Stage 129:=========================================>           (89 + 25) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:=================================================>   (107 + 7) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.937891591 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403238625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (61 + 60) / 121][Stage 130:===============================>                     (72 + 49) / 121][Stage 130:======================================>              (89 + 32) / 121][Stage 130:===============================================>    (111 + 10) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:=============================>                       (69 + 53) / 122][Stage 131:=====================================>               (86 + 36) / 122][Stage 131:=============================================>      (106 + 16) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.734927552 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  pa rtitionIndex = 88  OR  partitionIndex = 74 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363527277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (73 + 45) / 118][Stage 132:=================================>                   (74 + 44) / 118][Stage 132:===================================>                 (80 + 38) / 118][Stage 132:==========================================>          (95 + 23) / 118][Stage 132:=================================================>   (111 + 7) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:=================================>                   (75 + 44) / 119][Stage 133:===================================>                 (80 + 39) / 119][Stage 133:========================================>            (90 + 29) / 119][Stage 133:=============================================>      (104 + 15) / 119][Stage 133:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.915598637 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34906861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=================================>                   (71 + 42) / 113][Stage 134:=====================================>               (79 + 34) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:==============================================>      (99 + 14) / 113][Stage 134:==================================================>  (108 + 5) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:=====================================>               (80 + 34) / 114][Stage 135:========================================>            (87 + 27) / 114][Stage 135:============================================>        (96 + 18) / 114][Stage 135:================================================>    (105 + 9) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.242683558 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116  OR  partitionIndex = 72 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391214826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:>                                                      (0 + 0) / 121][Stage 136:==========================>                          (61 + 60) / 121][Stage 136:=============================>                       (67 + 54) / 121][Stage 136:=====================================>               (85 + 36) / 121][Stage 136:=============================================>      (107 + 14) / 121][Stage 136:====================================================>(120 + 1) / 121]                                                                                [Stage 137:===========================>                         (63 + 59) / 122][Stage 137:===============================>                     (73 + 49) / 122][Stage 137:==========================================>          (98 + 24) / 122][Stage 137:==============================================>     (108 + 14) / 122][Stage 137:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.710065491 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR   partitionIndex = 194  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352853263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (77 + 36) / 113][Stage 138:==========================================>          (90 + 23) / 113][Stage 138:=============================================>       (97 + 16) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:====================================>                (79 + 35) / 114][Stage 139:==========================================>          (92 + 22) / 114][Stage 139:===============================================>    (104 + 10) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.03627345 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394473617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 58) / 120][Stage 140:=================================>                   (75 + 45) / 120][Stage 140:===========================================>         (99 + 21) / 120][Stage 140:==================================================>  (114 + 6) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:============================>                        (64 + 57) / 121][Stage 141:=================================>                   (76 + 45) / 121][Stage 141:=========================================>           (94 + 27) / 121][Stage 141:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.281661563 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378289964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:==============================>                      (64 + 49) / 113][Stage 142:======================================>              (83 + 30) / 113][Stage 142:==============================================>     (100 + 13) / 113][Stage 142:===================================================> (110 + 3) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==============================>                      (66 + 48) / 114][Stage 143:=====================================>               (81 + 33) / 114][Stage 143:=============================================>      (100 + 14) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.429445002 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372927968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (73 + 45) / 118][Stage 144:=====================================>               (84 + 34) / 118][Stage 144:==============================================>     (105 + 13) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:===================================>                 (80 + 39) / 119][Stage 145:============================================>        (99 + 20) / 119][Stage 145:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.03045039 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  pa rtitionIndex = 67  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360813888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:=================================>                   (74 + 44) / 118][Stage 146:=====================================>               (84 + 34) / 118][Stage 146:========================================>            (90 + 28) / 118][Stage 146:===============================================>    (107 + 11) / 118][Stage 146:====================================================>(116 + 2) / 118]                                                                                [Stage 147:=================================>                   (76 + 43) / 119][Stage 147:======================================>              (87 + 32) / 119][Stage 147:==========================================>          (96 + 23) / 119][Stage 147:===============================================>    (109 + 10) / 119][Stage 147:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.662939557 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351830199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (74 + 39) / 113][Stage 148:========================================>            (87 + 26) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:==================================================>  (108 + 5) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:=====================================>               (80 + 34) / 114][Stage 149:=============================================>       (97 + 17) / 114][Stage 149:=================================================>   (106 + 8) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.002074458 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  pa rtitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349621871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=================================>                   (72 + 41) / 113][Stage 150:========================================>            (87 + 26) / 113][Stage 150:===========================================>         (93 + 20) / 113][Stage 150:===============================================>    (103 + 10) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:======================================>              (83 + 31) / 114][Stage 151:===========================================>         (94 + 20) / 114][Stage 151:==============================================>     (102 + 12) / 114][Stage 151:===================================================> (111 + 3) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.439401151 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375485895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:=================================>                   (75 + 43) / 118][Stage 152:==========================================>          (94 + 24) / 118][Stage 152:=================================================>   (110 + 8) / 118][Stage 152:====================================================>(116 + 2) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:==================================>                  (77 + 42) / 119][Stage 153:========================================>            (92 + 27) / 119][Stage 153:===============================================>    (108 + 11) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.279534076 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383613781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=============================>                       (62 + 51) / 113][Stage 154:=================================>                   (71 + 42) / 113][Stage 154:=========================================>           (89 + 24) / 113][Stage 154:=================================================>   (106 + 7) / 113]                                                                                [Stage 155:============================>                        (61 + 53) / 114][Stage 155:===================================>                 (76 + 38) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.11707149 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376294198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (76 + 39) / 115][Stage 156:==========================================>          (92 + 23) / 115][Stage 156:=================================================>   (107 + 8) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:===============================>                     (68 + 48) / 116][Stage 157:====================================>                (80 + 36) / 116][Stage 157:==========================================>          (93 + 23) / 116][Stage 157:==================================================>  (111 + 5) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.830719363 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  par titionIndex = 7  OR  partitionIndex = 21 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398650811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:============================>                        (65 + 55) / 120][Stage 158:===================================>                 (80 + 40) / 120][Stage 158:============================================>       (102 + 18) / 120]                                                                                [Stage 159:===========================>                         (62 + 59) / 121][Stage 159:================================>                    (75 + 46) / 121][Stage 159:======================================>              (87 + 34) / 121][Stage 159:=================================================>   (114 + 7) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.242929356 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381536055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:============================>                        (60 + 53) / 113][Stage 160:===============================>                     (68 + 45) / 113][Stage 160:==========================================>          (90 + 23) / 113][Stage 160:=================================================>   (105 + 8) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:=================================>                   (73 + 41) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.293844261 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405956554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:==============================>                      (69 + 52) / 121][Stage 162:======================================>              (87 + 34) / 121][Stage 162:===============================================>    (110 + 11) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:=================================>                   (76 + 46) / 122][Stage 163:===========================================>        (101 + 21) / 122][Stage 163:===============================================>    (112 + 10) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.235367332 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397515947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:============================>                        (64 + 57) / 121][Stage 164:=================================>                   (77 + 44) / 121][Stage 164:==========================================>          (98 + 23) / 121][Stage 164:==================================================>  (116 + 5) / 121]                                                                                [Stage 165:===========================>                         (63 + 59) / 122][Stage 165:================================>                    (75 + 47) / 122][Stage 165:==========================================>          (98 + 24) / 122][Stage 165:==================================================>  (116 + 6) / 122][Stage 165:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.465220935 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  par titionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353016642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:==============================================>      (99 + 14) / 113][Stage 166:===============================================>    (103 + 10) / 113][Stage 166:===================================================> (110 + 3) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===================================>                 (77 + 37) / 114][Stage 167:=========================================>           (89 + 25) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:===============================================>    (104 + 10) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.943002038 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400614517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:=============================>                       (68 + 53) / 121][Stage 168:=====================================>               (85 + 36) / 121][Stage 168:===============================================>    (111 + 10) / 121]                                                                                [Stage 169:==========================>                          (62 + 60) / 122][Stage 169:===============================>                     (73 + 49) / 122][Stage 169:=====================================>               (87 + 35) / 122][Stage 169:=============================================>      (107 + 15) / 122][Stage 169:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.325362642 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  pa rtitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377914823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:=============================>                       (63 + 50) / 113][Stage 170:====================================>                (77 + 36) / 113][Stage 170:==============================================>      (99 + 14) / 113][Stage 170:=================================================>   (106 + 7) / 113]                                                                                [Stage 171:============================>                        (61 + 53) / 114][Stage 171:================================>                    (69 + 45) / 114][Stage 171:========================================>            (87 + 27) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.33688256 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  par titionIndex = 24  OR  partitionIndex = 10 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348092667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (75 + 38) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:=============================================>       (96 + 17) / 113][Stage 172:=================================================>   (105 + 8) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:==================================>                  (75 + 39) / 114][Stage 173:=======================================>             (86 + 28) / 114][Stage 173:============================================>        (95 + 19) / 114][Stage 173:===============================================>    (104 + 10) / 114][Stage 173:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.370941226 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362877195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:================================>                    (73 + 45) / 118][Stage 174:===================================>                 (78 + 40) / 118][Stage 174:=======================================>             (88 + 30) / 118][Stage 174:=============================================>      (103 + 15) / 118][Stage 174:==================================================>  (112 + 6) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (74 + 45) / 119][Stage 175:====================================>                (81 + 38) / 119][Stage 175:=====================================>               (84 + 35) / 119][Stage 175:===========================================>         (97 + 22) / 119][Stage 175:===============================================>    (108 + 11) / 119][Stage 175:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.09113998 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391465127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 61) / 121][Stage 176:===========================>                         (62 + 59) / 121][Stage 176:================================>                    (75 + 46) / 121][Stage 176:==========================================>          (96 + 25) / 121][Stage 176:===================================================> (117 + 4) / 121]                                                                                [Stage 177:==========================>                          (61 + 61) / 122][Stage 177:===========================>                         (64 + 58) / 122][Stage 177:=================================>                   (78 + 44) / 122][Stage 177:============================================>       (104 + 18) / 122][Stage 177:==================================================>  (117 + 5) / 122][Stage 177:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.279649394 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357923398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==================================>                  (74 + 39) / 113][Stage 178:=========================================>           (89 + 24) / 113][Stage 178:==============================================>     (100 + 13) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:=====================================>               (81 + 33) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:================================================>    (105 + 9) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.058763259 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56  OR  partitionIndex = 12 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40168712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:==============================>                      (68 + 52) / 120][Stage 180:==================================>                  (79 + 41) / 120][Stage 180:============================================>       (102 + 18) / 120][Stage 180:===================================================> (116 + 4) / 120]                                                                                [Stage 181:==========================>                          (61 + 60) / 121][Stage 181:=============================>                       (68 + 53) / 121][Stage 181:==================================>                  (79 + 42) / 121][Stage 181:===========================================>         (99 + 22) / 121][Stage 181:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.403929815 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  pa rtitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406220874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=============================>                       (65 + 50) / 115][Stage 182:================================>                    (71 + 44) / 115][Stage 182:=========================================>           (91 + 24) / 115][Stage 182:==============================================>     (103 + 12) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:=================================>                   (73 + 43) / 116][Stage 183:========================================>            (89 + 27) / 116][Stage 183:============================================>        (98 + 18) / 116][Stage 183:==============================================>     (103 + 13) / 116][Stage 183:=================================================>   (109 + 7) / 116][Stage 183:===================================================> (112 + 4) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.015805991 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428299166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:============================>                        (65 + 56) / 121][Stage 184:==================================>                  (79 + 42) / 121][Stage 184:===========================================>         (99 + 22) / 121][Stage 184:==================================================>  (116 + 5) / 121]                                                                                [Stage 185:==========================>                          (62 + 60) / 122][Stage 185:================================>                    (74 + 48) / 122][Stage 185:=======================================>             (92 + 30) / 122][Stage 185:=================================================>   (114 + 8) / 122][Stage 185:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.449034961 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362607374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=============================>                       (65 + 50) / 115][Stage 186:=================================>                   (73 + 42) / 115][Stage 186:========================================>            (87 + 28) / 115][Stage 186:=============================================>       (98 + 17) / 115][Stage 186:==================================================>  (110 + 5) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:===============================>                     (69 + 47) / 116][Stage 187:=======================================>             (86 + 30) / 116][Stage 187:============================================>       (100 + 16) / 116][Stage 187:===============================================>    (106 + 10) / 116][Stage 187:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.177321941 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34321905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (81 + 34) / 115][Stage 188:======================================>              (83 + 32) / 115][Stage 188:=============================================>       (99 + 16) / 115][Stage 188:==================================================>  (109 + 6) / 115]                                                                                [Stage 189:=====================================>               (82 + 34) / 116][Stage 189:==========================================>          (94 + 22) / 116][Stage 189:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.638212997 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36790065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:>                                                      (0 + 0) / 118][Stage 190:================================>                    (72 + 46) / 118][Stage 190:===================================>                 (78 + 40) / 118][Stage 190:========================================>            (90 + 28) / 118][Stage 190:=============================================>      (103 + 15) / 118][Stage 190:===================================================> (115 + 3) / 118]                                                                                [Stage 191:=================================>                   (76 + 43) / 119][Stage 191:=====================================>               (85 + 34) / 119][Stage 191:===========================================>        (100 + 19) / 119][Stage 191:==================================================>  (114 + 5) / 119][Stage 191:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.308072305 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374945294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (60 + 53) / 113][Stage 192:=================================>                   (71 + 42) / 113][Stage 192:========================================>            (86 + 27) / 113][Stage 192:================================================>    (104 + 9) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=================================>                   (72 + 42) / 114][Stage 193:=========================================>           (89 + 25) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.332708284 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 152 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384742165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:==================================>                  (74 + 39) / 113][Stage 194:==========================================>          (91 + 22) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:==============================>                      (66 + 48) / 114][Stage 195:=====================================>               (80 + 34) / 114][Stage 195:============================================>        (96 + 18) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.644478473 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  pa rtitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358484119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===================================>                 (76 + 37) / 113][Stage 196:=======================================>             (85 + 28) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:==================================================>  (108 + 5) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:==================================>                  (74 + 40) / 114][Stage 197:======================================>              (82 + 32) / 114][Stage 197:===========================================>         (94 + 20) / 114][Stage 197:===============================================>    (104 + 10) / 114][Stage 197:===================================================> (111 + 3) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.393325435 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415659025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:==============================>                      (70 + 51) / 121][Stage 198:========================================>            (93 + 28) / 121][Stage 198:===============================================>    (110 + 11) / 121]                                                                                [Stage 199:===========================>                         (63 + 59) / 122][Stage 199:=================================>                   (77 + 45) / 122][Stage 199:===========================================>        (102 + 20) / 122][Stage 199:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.367493616 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  pa rtitionIndex = 2  OR  partitionIndex = 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338687516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=======================================>             (85 + 30) / 115][Stage 200:============================================>        (96 + 19) / 115][Stage 200:================================================>    (106 + 9) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:======================================>              (84 + 32) / 116][Stage 201:=========================================>           (91 + 25) / 116][Stage 201:=============================================>      (101 + 15) / 116][Stage 201:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 4.727194255 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m34.602s
user	11m51.928s
sys	0m59.472s
