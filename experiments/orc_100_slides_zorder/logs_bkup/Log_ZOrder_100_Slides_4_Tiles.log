Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 09:41:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:42:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:42:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:42:10 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 09:42:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:42:22 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523094211-0550).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.456408188 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (48 + 67) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 13.045427684 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.667552221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (54 + 59) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:====================================>                  (75 + 38) / 113][Stage 2:========================================>              (83 + 30) / 113][Stage 2:=========================================>             (86 + 27) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:==================================================>    (104 + 9) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:==================================>                    (71 + 43) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:============================================>          (93 + 21) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:================================================>     (103 + 11) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.342978242 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.700656506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (50 + 63) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:==============================================>        (96 + 17) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:============================>                          (59 + 55) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:=================================>                     (69 + 45) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.689143553 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.635828798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (62 + 53) / 115][Stage 6:===============================>                       (66 + 49) / 115][Stage 6:===================================>                   (74 + 41) / 115][Stage 6:====================================>                  (77 + 38) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:=====================================================> (112 + 3) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:==============================>                        (64 + 52) / 116][Stage 7:==================================>                    (73 + 43) / 116][Stage 7:======================================>                (81 + 35) / 116][Stage 7:===========================================>           (91 + 25) / 116][Stage 7:=============================================>         (95 + 21) / 116][Stage 7:================================================>     (104 + 12) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.702854537 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559835235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (71 + 47) / 118][Stage 8:=================================>                     (72 + 46) / 118][Stage 8:===================================>                   (77 + 41) / 118][Stage 8:=======================================>               (84 + 34) / 118][Stage 8:===========================================>           (94 + 24) / 118][Stage 8:===============================================>      (103 + 15) / 118][Stage 8:=====================================================> (115 + 3) / 118]                                                                                [Stage 9:=================================>                     (72 + 47) / 119][Stage 9:====================================>                  (80 + 39) / 119][Stage 9:============================================>          (97 + 22) / 119][Stage 9:=================================================>    (109 + 10) / 119][Stage 9:====================================================>  (113 + 6) / 119]                                                                                Time elapsed: 4.299116183 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497635095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==================================>                   (72 + 41) / 113][Stage 10:=====================================>                (79 + 34) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:=================================================>    (104 + 9) / 113][Stage 10:===================================================>  (107 + 6) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:=======================================>              (84 + 30) / 114][Stage 11:============================================>         (93 + 21) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.620009865 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494489106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:====================================>                 (77 + 38) / 115][Stage 12:======================================>               (81 + 34) / 115][Stage 12:=========================================>            (89 + 26) / 115][Stage 12:==============================================>      (100 + 15) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:======================================>               (83 + 33) / 116][Stage 13:=============================================>        (98 + 18) / 116][Stage 13:================================================>    (106 + 10) / 116][Stage 13:===================================================>  (111 + 5) / 116][Stage 13:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.756199101 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460415036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (82 + 33) / 115][Stage 14:=========================================>            (89 + 26) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:====================================================> (112 + 3) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:========================================>             (87 + 29) / 116][Stage 15:===========================================>          (94 + 22) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.886312759 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573312238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:===========================>                          (62 + 59) / 121][Stage 16:==================================>                   (77 + 44) / 121][Stage 16:============================================>        (102 + 19) / 121][Stage 16:==================================================>   (114 + 7) / 121][Stage 16:=====================================================>(120 + 1) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:============================>                         (65 + 57) / 122][Stage 17:=====================================>                (84 + 38) / 122][Stage 17:==========================================>           (96 + 26) / 122][Stage 17:==============================================>      (106 + 16) / 122][Stage 17:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 4.060092176 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457698907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (70 + 43) / 113][Stage 18:=================================>                    (71 + 42) / 113][Stage 18:========================================>             (85 + 28) / 113][Stage 18:==============================================>       (97 + 16) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:====================================>                 (77 + 37) / 114][Stage 19:=========================================>            (88 + 26) / 114][Stage 19:=============================================>        (97 + 17) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.419501183 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486041819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (72 + 41) / 113][Stage 20:=====================================>                (79 + 34) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:=============================================>        (96 + 17) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:====================================================> (110 + 3) / 113]                                                                                [Stage 21:==================================>                   (72 + 42) / 114][Stage 21:=====================================>                (80 + 34) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.822114993 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542146998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:==========================>                           (55 + 59) / 114][Stage 23:=============================>                        (62 + 52) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:==========================================>           (89 + 25) / 114][Stage 23:================================================>    (104 + 10) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.689353393 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53336471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===============================>                      (66 + 47) / 113][Stage 24:====================================>                 (77 + 36) / 113][Stage 24:=======================================>              (83 + 30) / 113][Stage 24:==============================================>      (100 + 13) / 113][Stage 24:====================================================> (109 + 4) / 113][Stage 24:====================================================> (110 + 3) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:======================================>               (81 + 33) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.701949147 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539433989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:===========================>                          (61 + 59) / 120][Stage 26:==================================>                   (77 + 43) / 120][Stage 26:============================================>        (101 + 19) / 120][Stage 26:===================================================>  (115 + 5) / 120]                                                                                [Stage 27:============================>                         (63 + 58) / 121][Stage 27:==============================>                       (69 + 52) / 121][Stage 27:========================================>             (91 + 30) / 121][Stage 27:=============================================>       (103 + 18) / 121][Stage 27:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.55594008 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500027003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (67 + 54) / 121][Stage 28:======================================>               (86 + 35) / 121][Stage 28:===============================================>     (108 + 13) / 121][Stage 28:===================================================>  (116 + 5) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:===========================>                          (63 + 59) / 122][Stage 29:=================================>                    (76 + 46) / 122][Stage 29:===========================================>         (100 + 22) / 122][Stage 29:==================================================>   (114 + 8) / 122][Stage 29:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.812090821 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51462585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:=============================>                        (62 + 51) / 113][Stage 30:==================================>                   (73 + 40) / 113][Stage 30:============================================>         (93 + 20) / 113][Stage 30:===================================================>  (108 + 5) / 113][Stage 30:====================================================> (109 + 4) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:====================================>                 (76 + 38) / 114][Stage 31:============================================>         (93 + 21) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:====================================================> (111 + 3) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.228276375 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493614263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:===============================>                      (70 + 51) / 121][Stage 32:======================================>               (87 + 34) / 121][Stage 32:==================================================>   (113 + 8) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:===============================>                      (71 + 51) / 122][Stage 33:======================================>               (86 + 36) / 122][Stage 33:===============================================>     (109 + 13) / 122][Stage 33:====================================================> (119 + 3) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.591504694 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409511513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (80 + 35) / 115][Stage 34:========================================>             (86 + 29) / 115][Stage 34:=============================================>        (96 + 19) / 115][Stage 34:===============================================>     (104 + 11) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:========================================>             (87 + 29) / 116][Stage 35:=============================================>        (98 + 18) / 116][Stage 35:===============================================>     (105 + 11) / 116][Stage 35:====================================================> (112 + 4) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.483521919 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417800479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (83 + 32) / 115][Stage 36:============================================>         (94 + 21) / 115][Stage 36:=================================================>    (106 + 9) / 115][Stage 36:====================================================> (111 + 4) / 115]                                                                                [Stage 37:=======================================>              (84 + 32) / 116][Stage 37:==========================================>           (92 + 24) / 116][Stage 37:=================================================>    (107 + 9) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.921206025 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546929313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (61 + 60) / 121][Stage 38:================================>                     (73 + 48) / 121][Stage 38:=========================================>            (92 + 29) / 121][Stage 38:================================================>    (111 + 10) / 121][Stage 38:=====================================================>(119 + 2) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:=============================>                        (66 + 56) / 122][Stage 39:=====================================>                (84 + 38) / 122][Stage 39:==============================================>      (106 + 16) / 122][Stage 39:==================================================>   (114 + 8) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.682454745 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508887591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:============================>                         (64 + 57) / 121][Stage 40:===================================>                  (79 + 42) / 121][Stage 40:============================================>        (101 + 20) / 121][Stage 40:=====================================================>(119 + 2) / 121]                                                                                [Stage 41:============================>                         (64 + 58) / 122][Stage 41:=================================>                    (75 + 47) / 122][Stage 41:========================================>             (92 + 30) / 122][Stage 41:==================================================>   (115 + 7) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.787975383 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464592469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:==================================>                   (76 + 42) / 118][Stage 42:=======================================>              (87 + 31) / 118][Stage 42:===================================================>  (112 + 6) / 118][Stage 42:=====================================================>(116 + 2) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:==================================>                   (76 + 43) / 119][Stage 43:==========================================>           (94 + 25) / 119][Stage 43:================================================>    (109 + 10) / 119][Stage 43:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.355651217 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432392786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===================================>                  (75 + 38) / 113][Stage 44:=========================================>            (87 + 26) / 113][Stage 44:============================================>         (93 + 20) / 113][Stage 44:====================================================> (109 + 4) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:=======================================>              (83 + 31) / 114][Stage 45:============================================>         (94 + 20) / 114][Stage 45:================================================>    (104 + 10) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.148208792 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394670845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 115][Stage 46:======================================>               (81 + 34) / 115][Stage 46:=========================================>            (88 + 27) / 115][Stage 46:===============================================>     (104 + 11) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:======================================>               (82 + 34) / 116][Stage 47:=========================================>            (90 + 26) / 116][Stage 47:=================================================>    (107 + 9) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.659973607 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485445916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (61 + 59) / 120][Stage 48:=============================>                        (65 + 55) / 120][Stage 48:==========================================>           (94 + 26) / 120][Stage 48:====================================================> (116 + 4) / 120]                                                                                [Stage 49:============================>                         (63 + 58) / 121][Stage 49:================================>                     (73 + 48) / 121][Stage 49:============================================>        (101 + 20) / 121][Stage 49:=====================================================>(119 + 2) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.466569052 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385435516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=======================================>              (85 + 30) / 115][Stage 50:==========================================>           (90 + 25) / 115][Stage 50:===============================================>     (102 + 13) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:=======================================>              (85 + 31) / 116][Stage 51:=========================================>            (90 + 26) / 116][Stage 51:==============================================>      (101 + 15) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.129102196 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42121611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===================================>                  (74 + 39) / 113][Stage 52:======================================>               (81 + 32) / 113][Stage 52:============================================>         (93 + 20) / 113][Stage 52:==============================================>      (100 + 13) / 113][Stage 52:==================================================>   (106 + 7) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:======================================>               (81 + 33) / 114][Stage 53:==========================================>           (89 + 25) / 114][Stage 53:==============================================>       (99 + 15) / 114][Stage 53:================================================>    (104 + 10) / 114][Stage 53:==================================================>   (107 + 7) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.474487889 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432816687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:==================================>                   (75 + 43) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:============================================>         (97 + 21) / 118][Stage 54:===================================================>  (113 + 5) / 118]                                                                                [Stage 55:==================================>                   (76 + 43) / 119][Stage 55:========================================>             (90 + 29) / 119][Stage 55:===============================================>     (106 + 13) / 119][Stage 55:===================================================>  (114 + 5) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.333579526 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397052213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (78 + 35) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:===================================================>  (107 + 6) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===================================>                  (74 + 40) / 114][Stage 57:=========================================>            (87 + 27) / 114][Stage 57:==============================================>      (100 + 14) / 114][Stage 57:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.919036937 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451857308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (61 + 60) / 121][Stage 58:=================================>                    (74 + 47) / 121][Stage 58:===========================================>         (100 + 21) / 121][Stage 58:===================================================>  (116 + 5) / 121]                                                                                [Stage 59:===========================>                          (62 + 60) / 122][Stage 59:=================================>                    (76 + 46) / 122][Stage 59:==============================================>      (106 + 16) / 122][Stage 59:====================================================> (119 + 3) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.466751933 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454912398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:============================>                         (63 + 58) / 121][Stage 60:================================>                     (73 + 48) / 121][Stage 60:=========================================>            (94 + 27) / 121][Stage 60:==================================================>   (113 + 8) / 121][Stage 60:===================================================>  (116 + 5) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:============================>                         (65 + 57) / 122][Stage 61:======================================>               (88 + 34) / 122][Stage 61:===============================================>     (110 + 12) / 122][Stage 61:=====================================================>(120 + 2) / 122][Stage 61:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.990982913 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427709491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (61 + 52) / 113][Stage 62:=====================================>                (78 + 35) / 113][Stage 62:=============================================>        (95 + 18) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:=============================>                        (63 + 51) / 114][Stage 63:==================================>                   (72 + 42) / 114][Stage 63:=========================================>            (87 + 27) / 114][Stage 63:=============================================>        (96 + 18) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.423718115 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364061367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:======================================>               (82 + 33) / 115][Stage 64:=========================================>            (88 + 27) / 115][Stage 64:===============================================>     (103 + 12) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:======================================>               (83 + 33) / 116][Stage 65:=============================================>        (98 + 18) / 116][Stage 65:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.703272365 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439315508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (69 + 46) / 115][Stage 66:=====================================>                (80 + 35) / 115][Stage 66:============================================>         (94 + 21) / 115][Stage 66:=================================================>    (106 + 9) / 115][Stage 66:====================================================> (112 + 3) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:=================================>                    (72 + 44) / 116][Stage 67:========================================>             (88 + 28) / 116][Stage 67:==============================================>      (101 + 15) / 116][Stage 67:===================================================>  (110 + 6) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.228162148 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385033174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:====================================>                 (77 + 36) / 113][Stage 68:=========================================>            (86 + 27) / 113][Stage 68:=============================================>        (96 + 17) / 113][Stage 68:================================================>    (103 + 10) / 113][Stage 68:====================================================> (110 + 3) / 113]                                                                                [Stage 69:=====================================>                (80 + 34) / 114][Stage 69:=============================================>        (95 + 19) / 114][Stage 69:===============================================>     (103 + 11) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:====================================================> (110 + 4) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.911698819 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458232989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:===============================>                      (66 + 47) / 113][Stage 70:=====================================>                (79 + 34) / 113][Stage 70:==============================================>      (100 + 13) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:=================================>                    (71 + 43) / 114][Stage 71:=======================================>              (84 + 30) / 114][Stage 71:=============================================>        (96 + 18) / 114][Stage 71:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.399219416 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457039085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:===============================>                      (69 + 51) / 120][Stage 72:=====================================>                (83 + 37) / 120][Stage 72:===============================================>     (108 + 12) / 120][Stage 72:====================================================> (116 + 4) / 120]                                                                                [Stage 73:============================>                         (63 + 58) / 121][Stage 73:=================================>                    (76 + 45) / 121][Stage 73:==========================================>           (95 + 26) / 121][Stage 73:==============================================>      (107 + 14) / 121][Stage 73:====================================================> (117 + 4) / 121][Stage 73:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.75320073 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440740692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==============================>                       (64 + 49) / 113][Stage 74:=======================================>              (82 + 31) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:==============================>                       (65 + 49) / 114][Stage 75:===================================>                  (74 + 40) / 114][Stage 75:=============================================>        (97 + 17) / 114][Stage 75:==================================================>   (107 + 7) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.695694646 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396859452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===================================>                  (75 + 38) / 113][Stage 76:=======================================>              (82 + 31) / 113][Stage 76:=============================================>        (96 + 17) / 113][Stage 76:================================================>    (103 + 10) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:======================================>               (82 + 32) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:================================================>    (104 + 10) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.171622586 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371780732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (82 + 33) / 115][Stage 78:===========================================>          (93 + 22) / 115][Stage 78:==================================================>   (108 + 7) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:========================================>             (86 + 30) / 116][Stage 79:============================================>         (95 + 21) / 116][Stage 79:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.818753735 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424022239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:============================>                         (64 + 57) / 121][Stage 80:================================>                     (72 + 49) / 121][Stage 80:============================================>         (99 + 22) / 121][Stage 80:====================================================> (118 + 3) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:================================>                     (74 + 48) / 122][Stage 81:========================================>             (91 + 31) / 122][Stage 81:===============================================>     (109 + 13) / 122][Stage 81:====================================================> (119 + 3) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.6252419 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411339958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (55 + 58) / 113][Stage 82:==============================>                       (63 + 50) / 113][Stage 82:====================================>                 (76 + 37) / 113][Stage 82:=============================================>        (96 + 17) / 113][Stage 82:==================================================>   (105 + 8) / 113]                                                                                [Stage 83:=============================>                        (63 + 51) / 114][Stage 83:==================================>                   (73 + 41) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.613918424 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423177256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (61 + 60) / 121][Stage 84:============================>                         (63 + 58) / 121][Stage 84:=======================================>              (89 + 32) / 121][Stage 84:================================================>    (111 + 10) / 121][Stage 84:====================================================> (117 + 4) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:=============================>                        (66 + 56) / 122][Stage 85:======================================>               (87 + 35) / 122][Stage 85:==============================================>      (106 + 16) / 122][Stage 85:===================================================>  (117 + 5) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.614674486 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389051787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (67 + 48) / 115][Stage 86:======================================>               (81 + 34) / 115][Stage 86:===============================================>     (103 + 12) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:====================================>                 (79 + 37) / 116][Stage 87:===========================================>          (94 + 22) / 116][Stage 87:===============================================>     (105 + 11) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.793727355 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384597333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=================================>                    (73 + 45) / 118][Stage 88:=====================================>                (82 + 36) / 118][Stage 88:============================================>         (97 + 21) / 118][Stage 88:===================================================>  (113 + 5) / 118]                                                                                [Stage 89:===================================>                  (79 + 40) / 119][Stage 89:=========================================>            (92 + 27) / 119][Stage 89:================================================>    (109 + 10) / 119][Stage 89:=====================================================>(117 + 2) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.381656899 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41160548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (65 + 55) / 120][Stage 90:====================================>                 (82 + 38) / 120][Stage 90:=============================================>       (103 + 17) / 120][Stage 90:===================================================>  (114 + 6) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:==================================>                   (78 + 43) / 121][Stage 91:============================================>        (101 + 20) / 121][Stage 91:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.214995945 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429623657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:==============================>                       (67 + 53) / 120][Stage 92:====================================>                 (81 + 39) / 120][Stage 92:==================================================>   (112 + 8) / 120][Stage 92:=====================================================>(119 + 1) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:================================>                     (72 + 49) / 121][Stage 93:====================================>                 (82 + 39) / 121][Stage 93:==============================================>      (107 + 14) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.496708808 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391859796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==============================>                       (64 + 51) / 115][Stage 94:====================================>                 (77 + 38) / 115][Stage 94:============================================>         (94 + 21) / 115][Stage 94:================================================>    (105 + 10) / 115][Stage 94:====================================================> (111 + 4) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=================================>                    (72 + 44) / 116][Stage 95:=======================================>              (85 + 31) / 116][Stage 95:=============================================>       (100 + 16) / 116][Stage 95:====================================================> (113 + 3) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.114179242 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381952764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (78 + 40) / 118][Stage 96:======================================>               (84 + 34) / 118][Stage 96:=============================================>        (99 + 19) / 118][Stage 96:===================================================>  (113 + 5) / 118]                                                                                [Stage 97:==================================>                   (77 + 42) / 119][Stage 97:======================================>               (84 + 35) / 119][Stage 97:===========================================>          (95 + 24) / 119][Stage 97:===============================================>     (107 + 12) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.479896894 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409987194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:=============================>                        (66 + 54) / 120][Stage 98:==================================>                   (76 + 44) / 120][Stage 98:==========================================>           (95 + 25) / 120][Stage 98:===================================================>  (115 + 5) / 120]                                                                                [Stage 99:===========================>                          (62 + 59) / 121][Stage 99:================================>                     (72 + 49) / 121][Stage 99:=========================================>            (92 + 29) / 121][Stage 99:====================================================> (118 + 3) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.532397562 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398339077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:===============================>                     (68 + 45) / 113][Stage 100:=========================================>           (88 + 25) / 113][Stage 100:==============================================>      (99 + 14) / 113][Stage 100:===================================================> (110 + 3) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:============================>                        (62 + 52) / 114][Stage 101:====================================>                (78 + 36) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:====================================================>(112 + 2) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.783657428 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385822076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===============================>                     (68 + 47) / 115][Stage 102:====================================>                (80 + 35) / 115][Stage 102:==========================================>          (92 + 23) / 115][Stage 102:=================================================>   (107 + 8) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:===============================>                     (70 + 46) / 116][Stage 103:======================================>              (85 + 31) / 116][Stage 103:=============================================>      (102 + 14) / 116][Stage 103:=================================================>   (109 + 7) / 116][Stage 103:====================================================>(114 + 2) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.453521515 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418522382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:====================================>                (81 + 37) / 118][Stage 104:========================================>            (90 + 28) / 118][Stage 104:==================================================>  (113 + 5) / 118][Stage 104:====================================================>(117 + 1) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:==================================>                  (77 + 42) / 119][Stage 105:=========================================>           (93 + 26) / 119][Stage 105:=============================================>      (105 + 14) / 119][Stage 105:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.275487878 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424056779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:=============================>                       (66 + 54) / 120][Stage 106:=======================================>             (89 + 31) / 120][Stage 106:=================================================>   (111 + 9) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:==============================>                      (69 + 52) / 121][Stage 107:=======================================>             (91 + 30) / 121][Stage 107:=================================================>   (112 + 9) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.551032782 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371134449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 41) / 113][Stage 108:=======================================>             (84 + 29) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:==================================================>  (108 + 5) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:==================================>                  (74 + 40) / 114][Stage 109:=========================================>           (89 + 25) / 114][Stage 109:=============================================>       (98 + 16) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.070288981 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416500555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 60) / 121][Stage 110:=============================>                       (68 + 53) / 121][Stage 110:=====================================>               (85 + 36) / 121][Stage 110:===============================================>    (110 + 11) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (68 + 54) / 122][Stage 111:===================================>                 (82 + 40) / 122][Stage 111:============================================>       (105 + 17) / 122][Stage 111:====================================================>(120 + 2) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.519881821 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338710365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:======================================>              (83 + 32) / 115][Stage 112:===========================================>         (95 + 20) / 115][Stage 112:===============================================>    (105 + 10) / 115][Stage 112:====================================================>(114 + 1) / 115]                                                                                [Stage 113:=====================================>               (83 + 33) / 116][Stage 113:==========================================>          (93 + 23) / 116][Stage 113:===============================================>    (105 + 11) / 116][Stage 113:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.741718368 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390742612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==============================>                      (64 + 49) / 113][Stage 114:=====================================>               (79 + 34) / 113][Stage 114:=============================================>       (97 + 16) / 113][Stage 114:==================================================>  (108 + 5) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=============================>                       (63 + 51) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.538657841 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400895385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (65 + 55) / 120][Stage 116:==================================>                  (77 + 43) / 120][Stage 116:===========================================>        (101 + 19) / 120][Stage 116:===================================================> (116 + 4) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:==============================>                      (69 + 52) / 121][Stage 117:======================================>              (87 + 34) / 121][Stage 117:===============================================>    (110 + 11) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.649718058 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380111858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (71 + 44) / 115][Stage 118:======================================>              (83 + 32) / 115][Stage 118:==============================================>     (103 + 12) / 115][Stage 118:===================================================> (112 + 3) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:====================================>                (79 + 37) / 116][Stage 119:============================================>        (97 + 19) / 116][Stage 119:==================================================>  (111 + 5) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.987344354 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401284106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:============================>                        (65 + 55) / 120][Stage 120:===============================>                     (71 + 49) / 120][Stage 120:========================================>            (92 + 28) / 120][Stage 120:==================================================>  (114 + 6) / 120]                                                                                [Stage 121:============================>                        (64 + 57) / 121][Stage 121:===================================>                 (81 + 40) / 121][Stage 121:=========================================>           (94 + 27) / 121][Stage 121:==================================================>  (115 + 6) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.672625771 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422005672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==================================>                  (74 + 39) / 113][Stage 122:======================================>              (82 + 31) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:========================================>            (87 + 27) / 114][Stage 123:=============================================>       (97 + 17) / 114][Stage 123:================================================>    (105 + 9) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.91735469 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394274444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:============================>                        (64 + 56) / 120][Stage 124:=================================>                   (75 + 45) / 120][Stage 124:=========================================>           (95 + 25) / 120][Stage 124:=================================================>   (111 + 9) / 120][Stage 124:====================================================>(119 + 1) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:============================>                        (65 + 56) / 121][Stage 125:===================================>                 (80 + 41) / 121][Stage 125:=========================================>           (95 + 26) / 121][Stage 125:=================================================>   (113 + 8) / 121][Stage 125:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.504189891 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392463618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=============================>                       (62 + 51) / 113][Stage 126:=================================>                   (72 + 41) / 113][Stage 126:============================================>        (95 + 18) / 113][Stage 126:===================================================> (110 + 3) / 113]                                                                                [Stage 127:============================>                        (62 + 52) / 114][Stage 127:==================================>                  (75 + 39) / 114][Stage 127:==========================================>          (92 + 22) / 114][Stage 127:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.31662807 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500852286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:>                                                      (0 + 0) / 121][Stage 128:==========================>                          (60 + 61) / 121][Stage 128:============================>                        (64 + 57) / 121][Stage 128:=====================================>               (85 + 36) / 121][Stage 128:=============================================>      (106 + 15) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:=============================>                       (68 + 54) / 122][Stage 129:=======================================>             (92 + 30) / 122][Stage 129:=================================================>   (114 + 8) / 122][Stage 129:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.547023668 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404801198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:============================>                        (64 + 56) / 120][Stage 130:=================================>                   (76 + 44) / 120][Stage 130:==============================================>     (108 + 12) / 120][Stage 130:====================================================>(118 + 2) / 120]                                                                                [Stage 131:===========================>                         (63 + 58) / 121][Stage 131:=================================>                   (77 + 44) / 121][Stage 131:==========================================>         (100 + 21) / 121][Stage 131:==================================================>  (116 + 5) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.916306432 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391994536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:============================>                        (65 + 55) / 120][Stage 132:=================================>                   (76 + 44) / 120][Stage 132:===========================================>        (101 + 19) / 120][Stage 132:====================================================>(118 + 2) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:==============================>                      (70 + 51) / 121][Stage 133:===================================>                 (82 + 39) / 121][Stage 133:==========================================>          (96 + 25) / 121][Stage 133:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.198957092 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35563366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (77 + 36) / 113][Stage 134:==========================================>          (90 + 23) / 113][Stage 134:=============================================>       (98 + 15) / 113][Stage 134:================================================>    (104 + 9) / 113]                                                                                [Stage 135:=====================================>               (81 + 33) / 114][Stage 135:=========================================>           (90 + 24) / 114][Stage 135:================================================>    (105 + 9) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.14827233 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355065218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (77 + 36) / 113][Stage 136:=========================================>           (88 + 25) / 113][Stage 136:==============================================>     (101 + 12) / 113][Stage 136:===================================================> (109 + 4) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:==================================>                  (75 + 39) / 114][Stage 137:===========================================>         (94 + 20) / 114][Stage 137:==============================================>      (99 + 15) / 114][Stage 137:====================================================>(112 + 2) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.024060232 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395415308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (66 + 54) / 120][Stage 138:====================================>                (82 + 38) / 120][Stage 138:=================================================>   (111 + 9) / 120]                                                                                [Stage 139:===========================>                         (62 + 59) / 121][Stage 139:==============================>                      (69 + 52) / 121][Stage 139:========================================>            (92 + 29) / 121][Stage 139:===============================================>    (110 + 11) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.369138778 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386306798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (63 + 50) / 113][Stage 140:==================================>                  (74 + 39) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:==================================================>  (107 + 6) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:=============================>                       (64 + 50) / 114][Stage 141:======================================>              (83 + 31) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.583349684 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide92"
dataSource: String = /nidan/orc/individualORC/slide92

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376966409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:=====================================>               (79 + 34) / 113][Stage 142:=============================================>       (97 + 16) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:============================>                        (62 + 52) / 114][Stage 143:===================================>                 (77 + 37) / 114][Stage 143:=============================================>       (97 + 17) / 114][Stage 143:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.216697709 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352037348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==================================>                  (74 + 39) / 113][Stage 144:=====================================>               (81 + 32) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:================================================>    (104 + 9) / 113][Stage 144:===================================================> (110 + 3) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:======================================>              (83 + 31) / 114][Stage 145:========================================>            (88 + 26) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.080772653 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385907317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:==============================>                      (65 + 48) / 113][Stage 146:======================================>              (83 + 30) / 113][Stage 146:=================================================>   (105 + 8) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:===============================>                     (68 + 46) / 114][Stage 147:======================================>              (83 + 31) / 114][Stage 147:==============================================>     (102 + 12) / 114][Stage 147:===================================================> (111 + 3) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.338828921 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331995024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (84 + 31) / 115][Stage 148:==========================================>          (92 + 23) / 115][Stage 148:=================================================>   (107 + 8) / 115]                                                                                [Stage 149:======================================>              (84 + 32) / 116][Stage 149:===========================================>         (96 + 20) / 116][Stage 149:=================================================>   (108 + 8) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.615766644 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360548856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=================================>                   (71 + 42) / 113][Stage 150:=======================================>             (85 + 28) / 113][Stage 150:==============================================>      (99 + 14) / 113][Stage 150:===================================================> (109 + 4) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:=====================================>               (80 + 34) / 114][Stage 151:=========================================>           (90 + 24) / 114][Stage 151:==============================================>     (102 + 12) / 114][Stage 151:=================================================>   (107 + 7) / 114][Stage 151:===================================================> (111 + 3) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.042033459 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378268313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:===============================>                     (67 + 46) / 113][Stage 152:=======================================>             (85 + 28) / 113][Stage 152:=============================================>       (98 + 15) / 113][Stage 152:=================================================>   (105 + 8) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:=================================>                   (71 + 43) / 114][Stage 153:========================================>            (87 + 27) / 114][Stage 153:==============================================>     (102 + 12) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.758933307 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367385138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (66 + 49) / 115][Stage 154:===================================>                 (77 + 38) / 115][Stage 154:============================================>        (97 + 18) / 115][Stage 154:================================================>    (106 + 9) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:=================================>                   (73 + 43) / 116][Stage 155:======================================>              (85 + 31) / 116][Stage 155:===============================================>    (105 + 11) / 116][Stage 155:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.889326 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398030696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:============================>                        (65 + 56) / 121][Stage 156:==================================>                  (78 + 43) / 121][Stage 156:===========================================>         (99 + 22) / 121][Stage 156:====================================================>(119 + 2) / 121]                                                                                [Stage 157:===========================>                         (64 + 58) / 122][Stage 157:==================================>                  (79 + 43) / 122][Stage 157:==========================================>         (100 + 22) / 122][Stage 157:==================================================>  (116 + 6) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.356264296 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359398692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:===================================>                 (79 + 39) / 118][Stage 158:==========================================>          (95 + 23) / 118][Stage 158:===============================================>    (108 + 10) / 118]                                                                                [Stage 159:================================>                    (73 + 46) / 119][Stage 159:===================================>                 (80 + 39) / 119][Stage 159:==========================================>          (96 + 23) / 119][Stage 159:==================================================>  (114 + 5) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.182553519 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399836322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:============================>                        (65 + 56) / 121][Stage 160:===================================>                 (82 + 39) / 121][Stage 160:=============================================>      (105 + 16) / 121][Stage 160:===================================================> (117 + 4) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:==============================>                      (70 + 52) / 122][Stage 161:=================================>                   (77 + 45) / 122][Stage 161:==========================================>          (97 + 25) / 122][Stage 161:====================================================>(120 + 2) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.434585587 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393421421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (60 + 53) / 113][Stage 162:================================>                    (69 + 44) / 113][Stage 162:========================================>            (87 + 26) / 113][Stage 162:===================================================> (109 + 4) / 113]                                                                                [Stage 163:==============================>                      (65 + 49) / 114][Stage 163:=================================>                   (73 + 41) / 114][Stage 163:=========================================>           (89 + 25) / 114][Stage 163:================================================>    (105 + 9) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.242287951 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354379016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (70 + 43) / 113][Stage 164:======================================>              (82 + 31) / 113][Stage 164:============================================>        (95 + 18) / 113][Stage 164:==============================================>     (101 + 12) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:==================================>                  (75 + 39) / 114][Stage 165:========================================>            (87 + 27) / 114][Stage 165:=============================================>       (98 + 16) / 114][Stage 165:=================================================>   (106 + 8) / 114][Stage 165:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.922672019 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367251231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===============================>                     (69 + 46) / 115][Stage 166:=======================================>             (86 + 29) / 115][Stage 166:================================================>    (106 + 9) / 115][Stage 166:===================================================> (111 + 4) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:================================>                    (71 + 45) / 116][Stage 167:======================================>              (84 + 32) / 116][Stage 167:============================================>       (100 + 16) / 116][Stage 167:===================================================> (112 + 4) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.038480981 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394315298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==============================>                      (64 + 49) / 113][Stage 168:====================================>                (77 + 36) / 113][Stage 168:================================================>    (104 + 9) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:=================================>                   (73 + 41) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:==================================================>  (108 + 6) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.577504303 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398554133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (62 + 59) / 121][Stage 170:================================>                    (74 + 47) / 121][Stage 170:==========================================>          (98 + 23) / 121][Stage 170:==================================================>  (115 + 6) / 121][Stage 170:====================================================>(120 + 1) / 121]                                                                                [Stage 171:==========================>                          (61 + 61) / 122][Stage 171:=============================>                       (68 + 54) / 122][Stage 171:=====================================>               (87 + 35) / 122][Stage 171:=============================================>      (106 + 16) / 122][Stage 171:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.575563656 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368509455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (72 + 43) / 115][Stage 172:==========================================>          (93 + 22) / 115][Stage 172:===============================================>    (104 + 11) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:=====================================>               (81 + 35) / 116][Stage 173:=============================================>      (101 + 15) / 116][Stage 173:==================================================>  (111 + 5) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.835435276 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390520566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:==========================>                          (61 + 59) / 120][Stage 174:=====================================>               (86 + 34) / 120][Stage 174:============================================>       (102 + 18) / 120][Stage 174:====================================================>(118 + 2) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:=============================>                       (67 + 54) / 121][Stage 175:====================================>                (84 + 37) / 121][Stage 175:=============================================>      (107 + 14) / 121][Stage 175:====================================================>(119 + 2) / 121][Stage 175:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.636318393 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390229346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (61 + 60) / 121][Stage 176:==============================>                      (70 + 51) / 121][Stage 176:======================================>              (87 + 34) / 121][Stage 176:=================================================>   (113 + 8) / 121]                                                                                [Stage 177:============================>                        (65 + 57) / 122][Stage 177:=================================>                   (77 + 45) / 122][Stage 177:========================================>            (93 + 29) / 122][Stage 177:=================================================>   (114 + 8) / 122][Stage 177:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.380762724 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337312854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:======================================>              (84 + 31) / 115][Stage 178:============================================>        (97 + 18) / 115][Stage 178:==================================================>  (109 + 6) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:======================================>              (84 + 32) / 116][Stage 179:============================================>       (100 + 16) / 116][Stage 179:===================================================> (112 + 4) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.811181377 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371205864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (73 + 42) / 115][Stage 180:=====================================>               (82 + 33) / 115][Stage 180:=============================================>       (98 + 17) / 115][Stage 180:==================================================>  (110 + 5) / 115]                                                                                [Stage 181:================================>                    (72 + 44) / 116][Stage 181:=======================================>             (87 + 29) / 116][Stage 181:===========================================>         (96 + 20) / 116][Stage 181:================================================>    (107 + 9) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.174223034 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432418603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:=============================>                       (62 + 51) / 113][Stage 182:=====================================>               (79 + 34) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:==============================>                      (65 + 49) / 114][Stage 183:======================================>              (82 + 32) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:===================================================> (110 + 4) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.487297029 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386904614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=============================>                       (62 + 51) / 113][Stage 184:=================================>                   (72 + 41) / 113][Stage 184:===========================================>         (92 + 21) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:================================>                    (70 + 44) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.223066972 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346264503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===================================>                 (76 + 37) / 113][Stage 186:========================================>            (86 + 27) / 113][Stage 186:=============================================>       (97 + 16) / 113][Stage 186:==================================================>  (108 + 5) / 113]                                                                                [Stage 187:====================================>                (79 + 35) / 114][Stage 187:==========================================>          (91 + 23) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.874439341 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393959098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (61 + 60) / 121][Stage 188:=============================>                       (67 + 54) / 121][Stage 188:==================================>                  (79 + 42) / 121][Stage 188:==============================================>     (109 + 12) / 121][Stage 188:====================================================>(119 + 2) / 121]                                                                                [Stage 189:============================>                        (66 + 56) / 122][Stage 189:=================================>                   (77 + 45) / 122][Stage 189:=========================================>           (96 + 26) / 122][Stage 189:====================================================>(120 + 2) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.479507422 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39173273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:============================>                        (65 + 56) / 121][Stage 190:===============================>                     (73 + 48) / 121][Stage 190:=========================================>           (94 + 27) / 121][Stage 190:===============================================>    (110 + 11) / 121]                                                                                [Stage 191:===========================>                         (63 + 59) / 122][Stage 191:===============================>                     (73 + 49) / 122][Stage 191:===========================================>         (99 + 23) / 122][Stage 191:===================================================> (118 + 4) / 122][Stage 191:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.334441192 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388206539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===========================>                         (62 + 58) / 120][Stage 192:===================================>                 (80 + 40) / 120][Stage 192:===========================================>         (99 + 21) / 120][Stage 192:===================================================> (116 + 4) / 120]                                                                                [Stage 193:============================>                        (64 + 57) / 121][Stage 193:================================>                    (74 + 47) / 121][Stage 193:==========================================>          (97 + 24) / 121][Stage 193:==================================================>  (116 + 5) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.42301872 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344891159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (83 + 32) / 115][Stage 194:=========================================>           (91 + 24) / 115][Stage 194:===============================================>    (104 + 11) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:========================================>            (88 + 28) / 116][Stage 195:=============================================>      (102 + 14) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.848455916 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482016123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:===========================>                         (62 + 59) / 121][Stage 196:==================================>                  (79 + 42) / 121][Stage 196:===========================================>        (101 + 20) / 121][Stage 196:====================================================>(120 + 1) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (69 + 53) / 122][Stage 197:=====================================>               (86 + 36) / 122][Stage 197:=============================================>      (106 + 16) / 122][Stage 197:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.186810453 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373661752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (78 + 35) / 113][Stage 198:=========================================>           (88 + 25) / 113][Stage 198:==============================================>     (100 + 13) / 113][Stage 198:==================================================>  (108 + 5) / 113]                                                                                [Stage 199:=====================================>               (80 + 34) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:===============================================>    (104 + 10) / 114][Stage 199:==================================================>  (109 + 5) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.472777382 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371046203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:==================================>                  (76 + 42) / 118][Stage 200:=======================================>             (88 + 30) / 118][Stage 200:==================================================>  (112 + 6) / 118]                                                                                [Stage 201:================================>                    (74 + 45) / 119][Stage 201:=====================================>               (85 + 34) / 119][Stage 201:============================================>       (101 + 18) / 119][Stage 201:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.037192728 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/23 09:52:25 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:43152) dropped. RpcEnv already stopped.
17/05/23 09:52:25 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:43152) dropped. RpcEnv already stopped.
17/05/23 09:52:25 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:34264) dropped. RpcEnv already stopped.
17/05/23 09:52:25 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:34264) dropped. RpcEnv already stopped.

real	10m33.041s
user	11m48.892s
sys	0m55.972s
