Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 07:17:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:17:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:17:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:17:50 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 07:17:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:18:02 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522071752-0429).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.367068776 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=====================>                                 (45 + 71) / 116][Stage 1:============================>                          (61 + 55) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.519622218 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partition Index = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.797614373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================>                                      (36 + 85) / 121][Stage 2:================>                                      (37 + 84) / 121][Stage 2:======================>                                (50 + 71) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:============================>                          (62 + 59) / 121][Stage 2:=============================>                         (65 + 56) / 121][Stage 2:===================================>                   (78 + 43) / 121][Stage 2:==========================================>            (93 + 28) / 121][Stage 2:============================================>         (100 + 21) / 121][Stage 2:=================================================>    (110 + 11) / 121][Stage 2:======================================================>(119 + 2) / 121]                                                                                [Stage 3:=========================>                             (57 + 65) / 122][Stage 3:===========================>                           (61 + 61) / 122][Stage 3:=============================>                         (65 + 57) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:======================================>                (85 + 37) / 122][Stage 3:==========================================>            (94 + 28) / 122][Stage 3:==============================================>       (106 + 16) / 122][Stage 3:====================================================>  (117 + 5) / 122][Stage 3:=====================================================> (119 + 3) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.874203711 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partition Index = 144  OR  partitionIndex = 130 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.642032987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==============================>                        (62 + 51) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:===============================================>       (98 + 15) / 113][Stage 4:==================================================>    (104 + 9) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:==================================>                    (72 + 42) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:================================================>     (103 + 11) / 114]                                                                                Time elapsed: 4.64011969 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  par titionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.663421992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:===============================>                       (70 + 51) / 121][Stage 6:====================================>                  (81 + 40) / 121][Stage 6:============================================>          (98 + 23) / 121][Stage 6:====================================================>  (115 + 6) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:================================>                      (71 + 51) / 122][Stage 7:====================================>                  (82 + 40) / 122][Stage 7:==========================================>            (94 + 28) / 122][Stage 7:==============================================>       (106 + 16) / 122][Stage 7:=================================================>    (112 + 10) / 122][Stage 7:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.748479699 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  p artitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex  = 90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.671372717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:======================================>                (79 + 34) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:============================================>          (92 + 21) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:=====================================================> (109 + 4) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:===================================>                   (73 + 41) / 114][Stage 9:======================================>                (80 + 34) / 114][Stage 9:==========================================>            (88 + 26) / 114][Stage 9:===========================================>           (90 + 24) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.309856744 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partition Index = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587718065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:==================================>                   (72 + 41) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:===========================================>          (91 + 22) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:============================>                         (61 + 53) / 114][Stage 11:================================>                     (68 + 46) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.634021501 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex  = 61  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502296889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==================================>                   (73 + 40) / 113][Stage 12:======================================>               (80 + 33) / 113][Stage 12:===========================================>          (91 + 22) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:====================================================> (109 + 4) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:==================================>                   (73 + 41) / 114][Stage 13:========================================>             (86 + 28) / 114][Stage 13:==========================================>           (90 + 24) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.718386907 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  p artitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex =  30  OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453878964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (80 + 35) / 115][Stage 14:=======================================>              (85 + 30) / 115][Stage 14:============================================>         (94 + 21) / 115][Stage 14:===============================================>     (103 + 12) / 115][Stage 14:==================================================>   (108 + 7) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:========================================>             (88 + 28) / 116][Stage 15:==============================================>      (101 + 15) / 116][Stage 15:==============================================>      (102 + 14) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 8.391668523 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partition Index = 221  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.584452357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=========================>                            (53 + 60) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:================================>                     (68 + 45) / 113][Stage 16:=======================================>              (83 + 30) / 113][Stage 16:===============================================>      (99 + 14) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:=====================================>                (79 + 35) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.042052592 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partition Index = 131  OR  partitionIndex = 145 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449626452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:====================================>                 (78 + 37) / 115][Stage 18:=========================================>            (88 + 27) / 115][Stage 18:============================================>         (94 + 21) / 115][Stage 18:====================================================> (111 + 4) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:=====================================>                (81 + 35) / 116][Stage 19:==========================================>           (92 + 24) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.837860393 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  p artitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex  = 94  OR  partitionIndex = 95 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53205722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:==================================>                   (73 + 40) / 113][Stage 20:===========================================>          (90 + 23) / 113][Stage 20:================================================>    (103 + 10) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:=============================>                        (62 + 52) / 114][Stage 21:======================================>               (81 + 33) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.3691586 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIn dex = 8  OR  partitionIndex = 9 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528426689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:=============================>                        (65 + 56) / 121][Stage 22:==================================>                   (78 + 43) / 121][Stage 22:============================================>        (102 + 19) / 121][Stage 22:====================================================> (118 + 3) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:==============================>                       (68 + 54) / 122][Stage 23:=====================================>                (84 + 38) / 122][Stage 23:=============================================>       (105 + 17) / 122][Stage 23:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.048400338 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  p artitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex  = 44  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474540687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==================================>                   (73 + 40) / 113][Stage 24:==========================================>           (88 + 25) / 113][Stage 24:==============================================>       (97 + 16) / 113][Stage 24:===================================================>  (107 + 6) / 113]                                                                                [Stage 25:=====================================>                (80 + 34) / 114][Stage 25:========================================>             (86 + 28) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.235265649 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  p artitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionInde x = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496095892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==============================>                       (64 + 51) / 115][Stage 26:=================================>                    (71 + 44) / 115][Stage 26:=====================================>                (79 + 36) / 115][Stage 26:===========================================>          (92 + 23) / 115][Stage 26:==================================================>   (107 + 8) / 115]                                                                                [Stage 27:==================================>                   (75 + 41) / 116][Stage 27:=======================================>              (85 + 31) / 116][Stage 27:===========================================>          (93 + 23) / 116][Stage 27:===============================================>     (103 + 13) / 116][Stage 27:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.324129583 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partition Index = 120  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443550535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  p artitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex  = 27  OR  partitionIndex = 28 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466990346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==============================>                       (66 + 49) / 115][Stage 28:=======================================>              (85 + 30) / 115][Stage 28:==============================================>       (98 + 17) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:====================================================> (112 + 3) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:================================>                     (70 + 46) / 116][Stage 29:======================================>               (83 + 33) / 116][Stage 29:============================================>         (96 + 20) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===============================================>     (103 + 13) / 116][Stage 29:================================================>    (106 + 10) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 9.432052073 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partition Index = 201  OR  partitionIndex = 202 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45153398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:>                                                       (0 + 0) / 113][Stage 30:==================================>                   (72 + 41) / 113][Stage 30:======================================>               (81 + 32) / 113][Stage 30:===========================================>          (92 + 21) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:====================================================> (109 + 4) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=======================================>              (83 + 31) / 114][Stage 31:============================================>         (93 + 21) / 114][Stage 31:==============================================>       (98 + 16) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:====================================================> (111 + 3) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.248411572 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partition Index = 164  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435518692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (70 + 43) / 113][Stage 32:====================================>                 (76 + 37) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:=============================================>        (95 + 18) / 113][Stage 32:==================================================>   (106 + 7) / 113][Stage 32:====================================================> (110 + 3) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:==================================>                   (73 + 41) / 114][Stage 33:=======================================>              (84 + 30) / 114][Stage 33:============================================>         (94 + 20) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.839135961 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  p artitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionInde x = 79  OR  partitionIndex = 80 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487230487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:============================>                         (60 + 53) / 113][Stage 34:===================================>                  (74 + 39) / 113][Stage 34:===========================================>          (92 + 21) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:===================================================>  (108 + 5) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:================================>                     (69 + 45) / 114][Stage 35:==========================================>           (89 + 25) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.063305319 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex  = 41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451283979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (73 + 45) / 118][Stage 36:====================================>                 (79 + 39) / 118][Stage 36:=====================================>                (83 + 35) / 118][Stage 36:============================================>         (98 + 20) / 118][Stage 36:===================================================>  (113 + 5) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:==================================>                   (77 + 42) / 119][Stage 37:======================================>               (85 + 34) / 119][Stage 37:=========================================>            (91 + 28) / 119][Stage 37:==============================================>      (104 + 15) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.108768898 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR   partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partition Index = 228  OR  partitionIndex = 184 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494624711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:===========================>                          (62 + 59) / 121][Stage 38:=================================>                    (75 + 46) / 121][Stage 38:==========================================>           (95 + 26) / 121][Stage 38:==================================================>   (113 + 8) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:==============================>                       (68 + 54) / 122][Stage 39:======================================>               (86 + 36) / 122][Stage 39:============================================>        (102 + 20) / 122][Stage 39:===============================================>     (109 + 13) / 122][Stage 39:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.892318628 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex  = 103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550111517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (61 + 60) / 121][Stage 40:================================>                     (73 + 48) / 121][Stage 40:=========================================>            (92 + 29) / 121][Stage 40:=================================================>    (112 + 9) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:===============================>                      (71 + 51) / 122][Stage 41:====================================>                 (82 + 40) / 122][Stage 41:=============================================>       (104 + 18) / 122][Stage 41:====================================================> (118 + 4) / 122][Stage 41:=====================================================>(120 + 2) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.898290042 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partition Index = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522979796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (66 + 55) / 121][Stage 42:====================================>                 (81 + 40) / 121][Stage 42:============================================>        (102 + 19) / 121][Stage 42:===================================================>  (116 + 5) / 121]                                                                                [Stage 43:===========================>                          (63 + 59) / 122][Stage 43:================================>                     (74 + 48) / 122][Stage 43:==========================================>           (97 + 25) / 122][Stage 43:==================================================>   (115 + 7) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.015805284 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR   partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionInd ex = 112  OR  partitionIndex = 8 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46118259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:===========================>                          (62 + 59) / 121][Stage 44:==============================>                       (68 + 53) / 121][Stage 44:========================================>             (90 + 31) / 121][Stage 44:==================================================>   (113 + 8) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:==============================>                       (70 + 52) / 122][Stage 45:=====================================>                (85 + 37) / 122][Stage 45:============================================>        (103 + 19) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.95078481 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partition Index = 154  OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429345654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:====================================>                 (76 + 37) / 113][Stage 46:=========================================>            (86 + 27) / 113][Stage 46:===============================================>     (101 + 12) / 113][Stage 46:====================================================> (110 + 3) / 113]                                                                                [Stage 47:========================================>             (85 + 29) / 114][Stage 47:============================================>         (93 + 21) / 114][Stage 47:===============================================>     (102 + 12) / 114][Stage 47:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.98813815 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  p artitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex  = 95  OR  partitionIndex = 109 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426172585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 40) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:=============================================>        (96 + 17) / 113][Stage 48:==================================================>   (106 + 7) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:=====================================>                (79 + 35) / 114][Stage 49:=========================================>            (87 + 27) / 114][Stage 49:=============================================>        (95 + 19) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.092489246 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR   partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionInd ex = 65  OR  partitionIndex = 79 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396580916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=======================================>              (83 + 30) / 113][Stage 50:============================================>         (94 + 19) / 113][Stage 50:===============================================>     (102 + 11) / 113][Stage 50:===================================================>  (108 + 5) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:=======================================>              (84 + 30) / 114][Stage 51:============================================>         (94 + 20) / 114][Stage 51:==============================================>      (101 + 13) / 114][Stage 51:==================================================>   (107 + 7) / 114][Stage 51:====================================================> (110 + 4) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.610115949 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  p artitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex  = 38  OR  partitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464669501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (69 + 52) / 121][Stage 52:====================================>                 (81 + 40) / 121][Stage 52:==============================================>      (107 + 14) / 121][Stage 52:=====================================================>(119 + 2) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:=============================>                        (67 + 55) / 122][Stage 53:====================================>                 (83 + 39) / 122][Stage 53:===========================================>         (100 + 22) / 122][Stage 53:==================================================>   (113 + 9) / 122][Stage 53:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.716131411 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  p artitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex  = 4  OR  partitionIndex = 5 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378543902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:======================================>               (82 + 33) / 115][Stage 54:=======================================>              (85 + 30) / 115][Stage 54:==============================================>      (101 + 14) / 115][Stage 54:===============================================>     (104 + 11) / 115][Stage 54:==================================================>   (108 + 7) / 115][Stage 54:====================================================> (112 + 3) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:=======================================>              (85 + 31) / 116][Stage 55:=========================================>            (90 + 26) / 116][Stage 55:==============================================>       (99 + 17) / 116][Stage 55:===============================================>     (103 + 13) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:====================================================> (113 + 3) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.889751725 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partition Index = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419681966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (69 + 46) / 115][Stage 56:=====================================>                (80 + 35) / 115][Stage 56:===============================================>     (102 + 13) / 115][Stage 56:===================================================>  (109 + 6) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:===============================>                      (67 + 49) / 116][Stage 57:=====================================>                (81 + 35) / 116][Stage 57:===========================================>          (94 + 22) / 116][Stage 57:===================================================>  (110 + 6) / 116][Stage 57:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.266176657 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  p artitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex  = 60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54656031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:>                                                       (0 + 0) / 120][Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===============================>                      (69 + 51) / 120][Stage 58:====================================>                 (81 + 39) / 120][Stage 58:=============================================>       (103 + 17) / 120][Stage 58:=====================================================>(118 + 2) / 120]                                                                                [Stage 59:============================>                         (63 + 58) / 121][Stage 59:==================================>                   (78 + 43) / 121][Stage 59:===========================================>         (100 + 21) / 121][Stage 59:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.645756424 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partition Index = 196  OR  partitionIndex = 182 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429421517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:=======================================>              (86 + 32) / 118][Stage 60:=============================================>        (99 + 19) / 118][Stage 60:===================================================>  (113 + 5) / 118]                                                                                [Stage 61:==================================>                   (75 + 44) / 119][Stage 61:====================================>                 (80 + 39) / 119][Stage 61:=========================================>            (91 + 28) / 119][Stage 61:=============================================>       (102 + 17) / 119][Stage 61:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.558632003 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  p artitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex  = 28  OR  partitionIndex = 14 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428466473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===============================>                      (68 + 47) / 115][Stage 62:=====================================>                (80 + 35) / 115][Stage 62:============================================>         (94 + 21) / 115][Stage 62:==============================================>      (101 + 14) / 115][Stage 62:==================================================>   (108 + 7) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:================================>                     (70 + 46) / 116][Stage 63:=======================================>              (85 + 31) / 116][Stage 63:============================================>         (96 + 20) / 116][Stage 63:==============================================>      (101 + 15) / 116][Stage 63:===============================================>     (105 + 11) / 116][Stage 63:=================================================>    (107 + 9) / 116][Stage 63:==================================================>   (108 + 8) / 116][Stage 63:===================================================>  (110 + 6) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:====================================================> (112 + 4) / 116][Stage 63:====================================================> (113 + 3) / 116][Stage 63:=====================================================>(114 + 2) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.095488264 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex  = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457613842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (60 + 53) / 113][Stage 64:================================>                     (67 + 46) / 113][Stage 64:======================================>               (81 + 32) / 113][Stage 64:================================================>    (103 + 10) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:=============================>                        (63 + 51) / 114][Stage 65:===================================>                  (74 + 40) / 114][Stage 65:==============================================>       (99 + 15) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.665595571 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partition Index = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360603529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=======================================>              (84 + 31) / 115][Stage 66:===========================================>          (92 + 23) / 115][Stage 66:==============================================>      (100 + 15) / 115]                                                                                [Stage 67:=======================================>              (84 + 32) / 116][Stage 67:===========================================>          (93 + 23) / 116][Stage 67:=================================================>    (107 + 9) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.626170093 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  pa rtitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 2 2  OR  partitionIndex = 34 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481020153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:==============================>                       (69 + 52) / 121][Stage 68:======================================>               (87 + 34) / 121][Stage 68:==============================================>      (107 + 14) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:=============================>                        (67 + 55) / 122][Stage 69:====================================>                 (82 + 40) / 122][Stage 69:=============================================>       (104 + 18) / 122][Stage 69:=====================================================>(120 + 2) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.903120991 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partition Index = 190  OR  partitionIndex = 191 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38386228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=======================================>              (85 + 30) / 115][Stage 70:============================================>         (95 + 20) / 115][Stage 70:==================================================>   (108 + 7) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:=====================================>                (81 + 35) / 116][Stage 71:=========================================>            (90 + 26) / 116][Stage 71:===============================================>     (103 + 13) / 116][Stage 71:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.768110763 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  p artitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex  = 45  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368172433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:==========================================>           (90 + 25) / 115][Stage 72:============================================>         (95 + 20) / 115][Stage 72:================================================>    (105 + 10) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:======================================>               (82 + 34) / 116][Stage 73:========================================>             (86 + 30) / 116][Stage 73:============================================>         (95 + 21) / 116][Stage 73:===============================================>     (104 + 12) / 116][Stage 73:===================================================>  (111 + 5) / 116][Stage 73:=====================================================>(114 + 2) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.252900237 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partition Index = 137  OR  partitionIndex = 138 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440296771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:=============================>                        (66 + 55) / 121][Stage 74:======================================>               (86 + 35) / 121][Stage 74:================================================>    (111 + 10) / 121]                                                                                [Stage 75:===========================>                          (61 + 61) / 122][Stage 75:=============================>                        (67 + 55) / 122][Stage 75:======================================>               (87 + 35) / 122][Stage 75:==============================================>      (107 + 15) / 122][Stage 75:===================================================>  (116 + 6) / 122][Stage 75:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.554405666 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partition Index = 165  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419193608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===============================>                      (67 + 48) / 115][Stage 76:==================================>                   (74 + 41) / 115][Stage 76:==============================================>       (99 + 16) / 115][Stage 76:==================================================>   (108 + 7) / 115]                                                                                [Stage 77:================================>                     (70 + 46) / 116][Stage 77:========================================>             (88 + 28) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.780321466 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex  = 69  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348655154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:========================================>             (87 + 28) / 115][Stage 78:============================================>         (94 + 21) / 115][Stage 78:==================================================>   (107 + 8) / 115][Stage 78:=====================================================>(113 + 2) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:======================================>               (82 + 34) / 116][Stage 79:============================================>         (95 + 21) / 116][Stage 79:===============================================>     (103 + 13) / 116][Stage 79:=================================================>    (107 + 9) / 116][Stage 79:====================================================> (112 + 4) / 116][Stage 79:=====================================================>(115 + 1) / 116][Stage 79:======================================================(116 + 0) / 116]                                                                                Time elapsed: 4.652615287 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partition Index = 217  OR  partitionIndex = 231 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410208721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===============================>                      (68 + 47) / 115][Stage 80:=====================================>                (80 + 35) / 115][Stage 80:===========================================>          (92 + 23) / 115][Stage 80:===================================================>  (109 + 6) / 115]                                                                                [Stage 81:=================================>                    (72 + 44) / 116][Stage 81:===========================================>          (94 + 22) / 116][Stage 81:================================================>    (106 + 10) / 116][Stage 81:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.918830707 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117  OR  partitionIndex = 118  OR   partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partition Index = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424363603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:=============================>                        (66 + 55) / 121][Stage 82:====================================>                 (82 + 39) / 121][Stage 82:==============================================>      (107 + 14) / 121][Stage 82:====================================================> (118 + 3) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:============================>                         (64 + 58) / 122][Stage 83:====================================>                 (82 + 40) / 122][Stage 83:=============================================>       (104 + 18) / 122][Stage 83:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.674806579 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partition Index = 218  OR  partitionIndex = 219 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457458564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:===========================>                          (62 + 59) / 121][Stage 84:===============================>                      (71 + 50) / 121][Stage 84:========================================>             (91 + 30) / 121][Stage 84:====================================================> (118 + 3) / 121]                                                                                [Stage 85:===========================>                          (62 + 60) / 122][Stage 85:==================================>                   (78 + 44) / 122][Stage 85:==========================================>           (97 + 25) / 122][Stage 85:==================================================>   (113 + 9) / 122][Stage 85:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.206581565 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  p artitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex  = 54  OR  partitionIndex = 40 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389619499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (80 + 38) / 118][Stage 86:==========================================>           (92 + 26) / 118][Stage 86:================================================>    (107 + 11) / 118][Stage 86:=====================================================>(117 + 1) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:===================================>                  (78 + 41) / 119][Stage 87:==========================================>           (94 + 25) / 119][Stage 87:================================================>    (108 + 11) / 119][Stage 87:=====================================================>(117 + 2) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.870558971 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partition Index = 226  OR  partitionIndex = 212 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413862292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:===============================>                      (69 + 51) / 120][Stage 88:=======================================>              (87 + 33) / 120][Stage 88:===============================================>     (108 + 12) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:============================>                         (63 + 58) / 121][Stage 89:================================>                     (73 + 48) / 121][Stage 89:=======================================>              (89 + 32) / 121][Stage 89:===================================================>  (115 + 6) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.718118171 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partition Index = 123  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418610867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:===============================>                      (66 + 47) / 113][Stage 90:=====================================>                (78 + 35) / 113][Stage 90:=================================================>    (104 + 9) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:=============================>                        (62 + 52) / 114][Stage 91:==================================>                   (73 + 41) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.612344432 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  par titionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17   OR  partitionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392866109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=======================================>              (82 + 31) / 113][Stage 92:===========================================>          (90 + 23) / 113][Stage 92:===============================================>     (101 + 12) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:====================================>                 (78 + 36) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:===============================================>     (103 + 11) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.875562099 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex  = 60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410664443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:===============================>                      (66 + 47) / 113][Stage 94:=====================================>                (79 + 34) / 113][Stage 94:==================================================>   (105 + 8) / 113]                                                                                [Stage 95:============================>                         (61 + 53) / 114][Stage 95:===================================>                  (74 + 40) / 114][Stage 95:===========================================>          (91 + 23) / 114][Stage 95:==================================================>   (107 + 7) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.605912758 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partition Index = 207  OR  partitionIndex = 208 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36658459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (71 + 42) / 113][Stage 96:======================================>               (80 + 33) / 113][Stage 96:=============================================>        (96 + 17) / 113][Stage 96:==================================================>   (105 + 8) / 113][Stage 96:===================================================>  (108 + 5) / 113][Stage 96:====================================================> (109 + 4) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:====================================>                 (76 + 38) / 114][Stage 97:=========================================>            (87 + 27) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:==================================================>   (106 + 8) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.549195148 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  p artitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex  = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375591457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:=================================>                    (74 + 44) / 118][Stage 98:=======================================>              (86 + 32) / 118][Stage 98:=============================================>       (101 + 17) / 118][Stage 98:==================================================>   (111 + 7) / 118]                                                                                [Stage 99:=================================>                    (73 + 46) / 119][Stage 99:===================================>                  (78 + 41) / 119][Stage 99:===========================================>          (95 + 24) / 119][Stage 99:=================================================>    (110 + 9) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.795110594 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partition Index = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436447402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (61 + 59) / 120][Stage 100:==============================>                      (70 + 50) / 120][Stage 100:====================================>                (82 + 38) / 120][Stage 100:=========================================>           (95 + 25) / 120][Stage 100:====================================================>(119 + 1) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:============================>                        (66 + 55) / 121][Stage 101:===================================>                 (82 + 39) / 121][Stage 101:==========================================>          (96 + 25) / 121][Stage 101:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 4.0933161 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR   partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionInde x = 80  OR  partitionIndex = 66 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391518327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===============================>                     (68 + 47) / 115][Stage 102:==================================>                  (75 + 40) / 115][Stage 102:==========================================>          (92 + 23) / 115][Stage 102:=================================================>   (108 + 7) / 115]                                                                                [Stage 103:==================================>                  (75 + 41) / 116][Stage 103:=====================================>               (81 + 35) / 116][Stage 103:=============================================>       (99 + 17) / 116][Stage 103:===================================================> (112 + 4) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.091692826 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  p artitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionInde x = 100  OR  partitionIndex = 101 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5082738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=======================================>             (86 + 29) / 115][Stage 104:=============================================>       (98 + 17) / 115][Stage 104:================================================>    (106 + 9) / 115]                                                                                [Stage 105:=======================================>             (87 + 29) / 116][Stage 105:============================================>        (98 + 18) / 116][Stage 105:=================================================>   (109 + 7) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.67669105 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex  = 29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430256603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (62 + 58) / 120][Stage 106:==================================>                  (77 + 43) / 120][Stage 106:==========================================>          (97 + 23) / 120][Stage 106:==================================================>  (114 + 6) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:============================>                        (65 + 56) / 121][Stage 107:===================================>                 (81 + 40) / 121][Stage 107:============================================>       (103 + 18) / 121][Stage 107:===================================================> (118 + 3) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.60645428 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partition Index = 178  OR  partitionIndex = 164 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387970096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (76 + 39) / 115][Stage 108:========================================>            (88 + 27) / 115][Stage 108:==============================================>     (103 + 12) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:================================>                    (72 + 44) / 116][Stage 109:======================================>              (85 + 31) / 116][Stage 109:==============================================>     (103 + 13) / 116][Stage 109:=================================================>   (109 + 7) / 116][Stage 109:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.203546569 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partition Index = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396855403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:============================>                        (64 + 57) / 121][Stage 110:======================================>              (88 + 33) / 121][Stage 110:=============================================>      (106 + 15) / 121][Stage 110:===================================================> (117 + 4) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (69 + 53) / 122][Stage 111:==================================>                  (80 + 42) / 122][Stage 111:==========================================>          (98 + 24) / 122][Stage 111:=================================================>   (115 + 7) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.220852815 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partition Index = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381433936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===============================>                     (69 + 46) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:=================================================>   (108 + 7) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:==================================>                  (76 + 40) / 116][Stage 113:=======================================>             (87 + 29) / 116][Stage 113:=============================================>       (99 + 17) / 116][Stage 113:=================================================>   (108 + 8) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.059639316 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partition Index = 220  OR  partitionIndex = 221 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374384555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===============================>                     (69 + 46) / 115][Stage 114:=======================================>             (86 + 29) / 115][Stage 114:=============================================>       (98 + 17) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:================================>                    (72 + 44) / 116][Stage 115:========================================>            (88 + 28) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.956111123 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partition Index = 147  OR  partitionIndex = 148 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38581079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (60 + 53) / 113][Stage 116:================================>                    (69 + 44) / 113][Stage 116:========================================>            (87 + 26) / 113][Stage 116:==================================================>  (107 + 6) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:============================>                        (61 + 53) / 114][Stage 117:===================================>                 (77 + 37) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.011303665 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  p artitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex  = 102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374025954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:======================================>              (86 + 32) / 118][Stage 118:============================================>        (98 + 20) / 118][Stage 118:==================================================>  (112 + 6) / 118][Stage 118:====================================================>(117 + 1) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:=================================>                   (75 + 44) / 119][Stage 119:=======================================>             (88 + 31) / 119][Stage 119:============================================>       (101 + 18) / 119][Stage 119:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.305758219 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  p artitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex  = 14  OR  partitionIndex = 15 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342073417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (81 + 34) / 115][Stage 120:=========================================>           (89 + 26) / 115][Stage 120:===============================================>    (105 + 10) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=====================================>               (81 + 35) / 116][Stage 121:=======================================>             (86 + 30) / 116][Stage 121:============================================>        (98 + 18) / 116][Stage 121:==============================================>     (103 + 13) / 116][Stage 121:=================================================>   (109 + 7) / 116][Stage 121:===================================================> (113 + 3) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.482289145 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  p artitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionInde x = 92  OR  partitionIndex = 93 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33613472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (81 + 34) / 115][Stage 122:=========================================>           (91 + 24) / 115][Stage 122:===============================================>    (105 + 10) / 115]                                                                                [Stage 123:======================================>              (84 + 32) / 116][Stage 123:==========================================>          (92 + 24) / 116][Stage 123:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.516876516 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  p artitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex =  11  OR  partitionIndex = 25 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40195856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:==============================>                      (70 + 50) / 120][Stage 124:=======================================>             (90 + 30) / 120][Stage 124:=================================================>   (111 + 9) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:==============================>                      (69 + 52) / 121][Stage 125:====================================>                (83 + 38) / 121][Stage 125:==============================================>     (109 + 12) / 121][Stage 125:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.077715733 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partition Index = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360056972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:====================================>                (80 + 35) / 115][Stage 126:========================================>            (88 + 27) / 115][Stage 126:============================================>        (96 + 19) / 115][Stage 126:===================================================> (112 + 3) / 115]                                                                                [Stage 127:======================================>              (85 + 31) / 116][Stage 127:===========================================>         (95 + 21) / 116][Stage 127:===============================================>    (106 + 10) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.742006362 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex  = 51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404763168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (62 + 58) / 120][Stage 128:===============================>                     (71 + 49) / 120][Stage 128:=======================================>             (90 + 30) / 120][Stage 128:=============================================>      (106 + 14) / 120][Stage 128:====================================================>(119 + 1) / 120]                                                                                [Stage 129:============================>                        (66 + 55) / 121][Stage 129:==================================>                  (78 + 43) / 121][Stage 129:===========================================>        (101 + 20) / 121][Stage 129:===================================================> (117 + 4) / 121][Stage 129:====================================================>(119 + 2) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.906811399 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partition Index = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346112091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (82 + 33) / 115][Stage 130:=========================================>           (90 + 25) / 115][Stage 130:===============================================>    (104 + 11) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:==========================================>          (93 + 23) / 116][Stage 131:================================================>    (107 + 9) / 116][Stage 131:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.671227669 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partition Index = 212  OR  partitionIndex = 213 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397593047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:============================>                        (66 + 55) / 121][Stage 132:==================================>                  (78 + 43) / 121][Stage 132:===========================================>         (99 + 22) / 121][Stage 132:==================================================>  (116 + 5) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:==============================>                      (71 + 51) / 122][Stage 133:========================================>            (94 + 28) / 122][Stage 133:==================================================>  (116 + 6) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.812402795 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partition Index = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361209057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=======================================>             (84 + 29) / 113][Stage 134:==========================================>          (90 + 23) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:===================================================> (110 + 3) / 113]                                                                                [Stage 135:====================================>                (78 + 36) / 114][Stage 135:=========================================>           (89 + 25) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.059185369 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partition Index = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392670533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:================================>                    (74 + 47) / 121][Stage 136:=============================================>      (105 + 16) / 121][Stage 136:==================================================>  (116 + 5) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:=============================>                       (68 + 54) / 122][Stage 137:====================================>                (85 + 37) / 122][Stage 137:===========================================>        (101 + 21) / 122][Stage 137:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.518730383 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR   partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex  = 10  OR  partitionIndex = 11 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356867544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==================================>                  (73 + 40) / 113][Stage 138:=======================================>             (84 + 29) / 113][Stage 138:==========================================>          (91 + 22) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:==================================================>  (107 + 6) / 113]                                                                                [Stage 139:====================================>                (79 + 35) / 114][Stage 139:=========================================>           (90 + 24) / 114][Stage 139:==============================================>      (99 + 15) / 114][Stage 139:================================================>    (105 + 9) / 114][Stage 139:===================================================> (110 + 4) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.123224241 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex  = 48  OR  partitionIndex = 4 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391459229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:============================>                        (65 + 55) / 120][Stage 140:==================================>                  (79 + 41) / 120][Stage 140:===========================================>         (98 + 22) / 120][Stage 140:====================================================>(118 + 2) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:=============================>                       (68 + 53) / 121][Stage 141:=====================================>               (86 + 35) / 121][Stage 141:===============================================>    (110 + 11) / 121][Stage 141:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.54854348 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partition Index = 187  OR  partitionIndex = 201 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395851203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:===========================>                         (62 + 58) / 120][Stage 142:================================>                    (73 + 47) / 120][Stage 142:===========================================>         (99 + 21) / 120][Stage 142:===================================================> (117 + 3) / 120]                                                                                [Stage 143:===========================>                         (62 + 59) / 121][Stage 143:================================>                    (74 + 47) / 121][Stage 143:==========================================>          (96 + 25) / 121][Stage 143:===============================================>    (110 + 11) / 121][Stage 143:===================================================> (118 + 3) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.238616399 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR   partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partition Index = 202  OR  partitionIndex = 214 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53944954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (61 + 59) / 120][Stage 144:===============================>                     (72 + 48) / 120][Stage 144:==========================================>          (96 + 24) / 120][Stage 144:===============================================>    (109 + 11) / 120]                                                                                [Stage 145:============================>                        (64 + 57) / 121][Stage 145:================================>                    (75 + 46) / 121][Stage 145:=========================================>           (95 + 26) / 121][Stage 145:===============================================>    (111 + 10) / 121][Stage 145:===================================================> (118 + 3) / 121][Stage 145:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.475954982 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  pa rtitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex =  31  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383839087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=================================>                   (72 + 43) / 115][Stage 146:======================================>              (84 + 31) / 115][Stage 146:=============================================>       (99 + 16) / 115][Stage 146:==================================================>  (109 + 6) / 115]                                                                                [Stage 147:================================>                    (71 + 45) / 116][Stage 147:======================================>              (85 + 31) / 116][Stage 147:==========================================>          (93 + 23) / 116][Stage 147:============================================>       (100 + 16) / 116][Stage 147:================================================>    (107 + 9) / 116][Stage 147:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.144645097 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  p artitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex  = 32  OR  partitionIndex = 33 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357699087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===================================>                 (76 + 37) / 113][Stage 148:=======================================>             (85 + 28) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:=================================================>   (105 + 8) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:====================================>                (79 + 35) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:============================================>        (96 + 18) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(112 + 2) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.657856962 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex  = 30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383111925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:=============================>                       (63 + 50) / 113][Stage 150:=====================================>               (79 + 34) / 113][Stage 150:==============================================>     (100 + 13) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:=============================>                       (64 + 50) / 114][Stage 151:====================================>                (78 + 36) / 114][Stage 151:============================================>        (95 + 19) / 114][Stage 151:=================================================>   (107 + 7) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.033777927 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex  = 75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412709995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:============================>                        (66 + 55) / 121][Stage 152:========================================>            (92 + 29) / 121][Stage 152:===================================================> (117 + 4) / 121]                                                                                [Stage 153:==========================>                          (62 + 60) / 122][Stage 153:===============================>                     (73 + 49) / 122][Stage 153:========================================>            (94 + 28) / 122][Stage 153:===============================================>    (112 + 10) / 122][Stage 153:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.896019109 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR   partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionI ndex = 116  OR  partitionIndex = 72 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398719433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (64 + 56) / 120][Stage 154:==================================>                  (77 + 43) / 120][Stage 154:===============================================>    (109 + 11) / 120]                                                                                [Stage 155:===========================>                         (62 + 59) / 121][Stage 155:================================>                    (75 + 46) / 121][Stage 155:=======================================>             (91 + 30) / 121][Stage 155:=============================================>      (106 + 15) / 121][Stage 155:=================================================>   (114 + 7) / 121][Stage 155:===================================================> (118 + 3) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.274279402 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113  OR  partitionIndex = 114  OR   partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partition Index = 72  OR  partitionIndex = 73 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368884262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==============================>                      (66 + 49) / 115][Stage 156:====================================>                (80 + 35) / 115][Stage 156:=============================================>       (98 + 17) / 115][Stage 156:==================================================>  (109 + 6) / 115]                                                                                [Stage 157:=================================>                   (74 + 42) / 116][Stage 157:========================================>            (88 + 28) / 116][Stage 157:=============================================>      (102 + 14) / 116][Stage 157:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.804848673 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  p artitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex  = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336185642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (82 + 33) / 115][Stage 158:========================================>            (87 + 28) / 115][Stage 158:============================================>        (96 + 19) / 115][Stage 158:=================================================>   (107 + 8) / 115][Stage 158:==================================================>  (110 + 5) / 115]                                                                                [Stage 159:=====================================>               (81 + 35) / 116][Stage 159:===========================================>         (96 + 20) / 116][Stage 159:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.789840969 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partition Index = 170  OR  partitionIndex = 156 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397913751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:==============================>                      (69 + 52) / 121][Stage 160:=======================================>             (90 + 31) / 121][Stage 160:=================================================>   (112 + 9) / 121][Stage 160:====================================================>(120 + 1) / 121]                                                                                [Stage 161:===========================>                         (64 + 58) / 122][Stage 161:=================================>                   (78 + 44) / 122][Stage 161:==========================================>         (100 + 22) / 122][Stage 161:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.457967526 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partition Index = 156  OR  partitionIndex = 157 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355196401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (80 + 33) / 113][Stage 162:==========================================>          (91 + 22) / 113][Stage 162:==============================================>     (100 + 13) / 113][Stage 162:==================================================>  (108 + 5) / 113]                                                                                [Stage 163:=====================================>               (81 + 33) / 114][Stage 163:=========================================>           (90 + 24) / 114][Stage 163:=============================================>       (97 + 17) / 114][Stage 163:==================================================>  (108 + 6) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.109242243 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partition Index = 143  OR  partitionIndex = 144 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348555441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (82 + 33) / 115][Stage 164:========================================>            (88 + 27) / 115][Stage 164:============================================>        (97 + 18) / 115][Stage 164:==================================================>  (110 + 5) / 115]                                                                                [Stage 165:=======================================>             (87 + 29) / 116][Stage 165:=============================================>      (101 + 15) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.535816819 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partition Index = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37756653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:============================>                        (61 + 52) / 113][Stage 166:===============================>                     (68 + 45) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:===================================================> (109 + 4) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:=============================>                       (64 + 50) / 114][Stage 167:====================================>                (79 + 35) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.788885714 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR   partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex  = 24  OR  partitionIndex = 10 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394444661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:============================>                        (65 + 56) / 121][Stage 168:==================================>                  (79 + 42) / 121][Stage 168:===============================================>    (111 + 10) / 121]                                                                                [Stage 169:=============================>                       (68 + 54) / 122][Stage 169:=================================>                   (77 + 45) / 122][Stage 169:==========================================>          (98 + 24) / 122][Stage 169:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.64893833 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  p artitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionInde x = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356166125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (78 + 35) / 113][Stage 170:========================================>            (87 + 26) / 113][Stage 170:=============================================>       (98 + 15) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:=====================================>               (81 + 33) / 114][Stage 171:==========================================>          (92 + 22) / 114][Stage 171:==============================================>     (102 + 12) / 114][Stage 171:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.898630226 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  p artitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex  = 63  OR  partitionIndex = 77 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413106998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:>                                                      (0 + 0) / 121][Stage 172:==========================>                          (60 + 61) / 121][Stage 172:==============================>                      (69 + 52) / 121][Stage 172:======================================>              (88 + 33) / 121][Stage 172:============================================>       (104 + 17) / 121][Stage 172:===================================================> (117 + 4) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:=============================>                       (67 + 55) / 122][Stage 173:=================================>                   (78 + 44) / 122][Stage 173:==========================================>         (100 + 22) / 122][Stage 173:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.967808944 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  p artitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex  = 91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378929774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:===================================>                 (76 + 37) / 113][Stage 174:============================================>        (94 + 19) / 113][Stage 174:=================================================>   (106 + 7) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:=============================>                       (64 + 50) / 114][Stage 175:=================================>                   (72 + 42) / 114][Stage 175:===========================================>         (94 + 20) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.683732601 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partition Index = 193  OR  partitionIndex = 207 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374511701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:===============================>                     (68 + 45) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==============================================>     (100 + 13) / 113]                                                                                [Stage 177:============================>                        (61 + 53) / 114][Stage 177:=================================>                   (72 + 42) / 114][Stage 177:=======================================>             (86 + 28) / 114][Stage 177:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.207921233 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR   partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partition Index = 208  OR  partitionIndex = 194 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366308736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (73 + 45) / 118][Stage 178:==================================>                  (77 + 41) / 118][Stage 178:=======================================>             (88 + 30) / 118][Stage 178:============================================>       (101 + 17) / 118][Stage 178:=================================================>   (111 + 7) / 118][Stage 178:==================================================>  (113 + 5) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:=================================>                   (76 + 43) / 119][Stage 179:======================================>              (86 + 33) / 119][Stage 179:===========================================>        (100 + 19) / 119][Stage 179:=================================================>   (112 + 7) / 119][Stage 179:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.044714844 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partition Index = 163  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545097441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:=============================>                       (63 + 50) / 113][Stage 180:=====================================>               (81 + 32) / 113][Stage 180:=================================================>   (106 + 7) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:==============================>                      (65 + 49) / 114][Stage 181:======================================>              (82 + 32) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.697625207 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partition Index = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424588873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 60) / 121][Stage 182:=============================>                       (67 + 54) / 121][Stage 182:=====================================>               (85 + 36) / 121][Stage 182:==============================================>     (108 + 13) / 121]                                                                                [Stage 183:==========================>                          (62 + 60) / 122][Stage 183:=============================>                       (68 + 54) / 122][Stage 183:====================================>                (85 + 37) / 122][Stage 183:===========================================>        (103 + 19) / 122][Stage 183:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.594301374 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  p artitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex  = 68  OR  partitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356052545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (74 + 44) / 118][Stage 184:====================================>                (82 + 36) / 118][Stage 184:==========================================>          (95 + 23) / 118][Stage 184:=================================================>   (111 + 7) / 118][Stage 184:====================================================>(117 + 1) / 118]                                                                                [Stage 185:================================>                    (73 + 46) / 119][Stage 185:===================================>                 (80 + 39) / 119][Stage 185:========================================>            (90 + 29) / 119][Stage 185:==============================================>     (107 + 12) / 119][Stage 185:===================================================> (116 + 3) / 119][Stage 185:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.137792993 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partition Index = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368268223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (73 + 42) / 115][Stage 186:=======================================>             (85 + 30) / 115][Stage 186:===============================================>    (105 + 10) / 115][Stage 186:===================================================> (112 + 3) / 115]                                                                                [Stage 187:==================================>                  (76 + 40) / 116][Stage 187:=============================================>      (102 + 14) / 116][Stage 187:=================================================>   (109 + 7) / 116][Stage 187:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.820649139 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIn dex = 87  OR  partitionIndex = 88 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374625162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:===============================>                     (67 + 46) / 113][Stage 188:====================================>                (77 + 36) / 113][Stage 188:=================================================>   (106 + 7) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:==============================>                      (65 + 49) / 114][Stage 189:=====================================>               (80 + 34) / 114][Stage 189:==============================================>     (101 + 13) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.45087445 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionInde x = 97  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371481453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=============================>                       (65 + 50) / 115][Stage 190:===================================>                 (77 + 38) / 115][Stage 190:==========================================>          (93 + 22) / 115][Stage 190:===============================================>    (105 + 10) / 115]                                                                                [Stage 191:==================================>                  (75 + 41) / 116][Stage 191:========================================>            (89 + 27) / 116][Stage 191:===============================================>    (105 + 11) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.66631747 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partition Index = 139  OR  partitionIndex = 140 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385066634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (64 + 56) / 120][Stage 192:===================================>                 (80 + 40) / 120][Stage 192:===========================================>        (101 + 19) / 120][Stage 192:====================================================>(118 + 2) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:============================>                        (65 + 56) / 121][Stage 193:==================================>                  (78 + 43) / 121][Stage 193:===========================================>         (99 + 22) / 121][Stage 193:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.10523846 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partition Index = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407252242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:============================>                        (65 + 55) / 120][Stage 194:==================================>                  (77 + 43) / 120][Stage 194:==========================================>          (96 + 24) / 120][Stage 194:==================================================>  (115 + 5) / 120]                                                                                [Stage 195:===========================>                         (62 + 59) / 121][Stage 195:================================>                    (75 + 46) / 121][Stage 195:=====================================>               (86 + 35) / 121][Stage 195:==============================================>     (109 + 12) / 121][Stage 195:==================================================>  (116 + 5) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.264247206 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405299997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 60) / 120][Stage 196:=============================>                       (67 + 53) / 120][Stage 196:====================================>                (83 + 37) / 120][Stage 196:===============================================>    (109 + 11) / 120][Stage 196:===================================================> (117 + 3) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:=============================>                       (68 + 53) / 121][Stage 197:===================================>                 (82 + 39) / 121][Stage 197:==========================================>          (98 + 23) / 121][Stage 197:=================================================>   (114 + 7) / 121][Stage 197:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.386990903 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partition Index = 157  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365751816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=======================================>             (84 + 29) / 113][Stage 198:============================================>        (95 + 18) / 113][Stage 198:==============================================>     (102 + 11) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:====================================>                (78 + 36) / 114][Stage 199:========================================>            (88 + 26) / 114][Stage 199:=============================================>       (98 + 16) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.338623107 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m39.629s
user	12m34.256s
sys	1m37.152s
