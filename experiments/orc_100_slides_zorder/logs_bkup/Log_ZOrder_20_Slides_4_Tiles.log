Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 02:30:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:30:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:30:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:30:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 02:30:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:31:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522023058-0402).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.441166446 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (36 + 79) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:=========================>                             (54 + 62) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.406454775 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.687929777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (56 + 59) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:============================================>          (93 + 22) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:======================================>                (81 + 35) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:=========================================>             (88 + 28) / 116][Stage 3:==============================================>        (99 + 17) / 116][Stage 3:===============================================>      (103 + 13) / 116][Stage 3:===================================================>   (109 + 7) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.848752935 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.764594252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:=================================>                     (68 + 45) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:===================================================>   (106 + 7) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (56 + 58) / 114][Stage 5:============================>                          (59 + 55) / 114][Stage 5:==============================>                        (64 + 50) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:=====================================================> (110 + 4) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.268696618 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.665113709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (65 + 56) / 121][Stage 6:==================================>                    (75 + 46) / 121][Stage 6:===========================================>           (95 + 26) / 121][Stage 6:===================================================>   (114 + 7) / 121][Stage 6:=====================================================> (117 + 4) / 121]                                                                                [Stage 7:===========================>                           (60 + 62) / 122][Stage 7:================================>                      (71 + 51) / 122][Stage 7:=====================================>                 (83 + 39) / 122][Stage 7:===========================================>           (96 + 26) / 122][Stage 7:=================================================>    (112 + 10) / 122][Stage 7:=====================================================> (119 + 3) / 122][Stage 7:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.660648396 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564972705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==============================>                        (64 + 51) / 115][Stage 8:===================================>                   (74 + 41) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:==============================================>        (97 + 18) / 115][Stage 8:===================================================>   (108 + 7) / 115][Stage 8:======================================================>(113 + 2) / 115]                                                                                [Stage 9:=====================================>                 (79 + 37) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:===============================================>      (103 + 13) / 116][Stage 9:===================================================>   (108 + 8) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.756334254 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537895966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=============================>                        (65 + 53) / 118][Stage 10:===============================>                      (68 + 50) / 118][Stage 10:==================================>                   (76 + 42) / 118][Stage 10:=====================================>                (82 + 36) / 118][Stage 10:======================================>               (85 + 33) / 118][Stage 10:=========================================>            (90 + 28) / 118][Stage 10:=============================================>       (101 + 17) / 118][Stage 10:==================================================>   (111 + 7) / 118]                                                                                [Stage 11:================================>                     (72 + 47) / 119][Stage 11:===================================>                  (79 + 40) / 119][Stage 11:======================================>               (85 + 34) / 119][Stage 11:========================================>             (89 + 30) / 119][Stage 11:============================================>         (97 + 22) / 119][Stage 11:=============================================>       (102 + 17) / 119][Stage 11:================================================>    (108 + 11) / 119][Stage 11:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.611922959 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.686686683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:============================>                         (63 + 57) / 120][Stage 12:=================================>                    (74 + 46) / 120][Stage 12:========================================>             (89 + 31) / 120][Stage 12:============================================>        (100 + 20) / 120][Stage 12:==============================================>      (106 + 14) / 120][Stage 12:====================================================> (117 + 3) / 120]                                                                                [Stage 13:=========================>                            (58 + 63) / 121][Stage 13:=============================>                        (66 + 55) / 121][Stage 13:=================================>                    (76 + 45) / 121][Stage 13:==========================================>           (96 + 25) / 121][Stage 13:=============================================>       (105 + 16) / 121][Stage 13:====================================================> (117 + 4) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.2720228 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.555191706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:=================================>                    (74 + 47) / 121][Stage 14:==========================================>           (95 + 26) / 121][Stage 14:===============================================>     (109 + 12) / 121][Stage 14:===================================================>  (115 + 6) / 121][Stage 14:=====================================================>(119 + 2) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:==============================>                       (68 + 54) / 122][Stage 15:==================================>                   (79 + 43) / 122][Stage 15:=============================================>       (105 + 17) / 122][Stage 15:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.266874792 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491330534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:=======================================>              (84 + 31) / 115][Stage 16:=========================================>            (89 + 26) / 115][Stage 16:================================================>    (105 + 10) / 115][Stage 16:====================================================> (111 + 4) / 115]                                                                                [Stage 17:======================================>               (83 + 33) / 116][Stage 17:=========================================>            (89 + 27) / 116][Stage 17:==============================================>      (102 + 14) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.289401315 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539042866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:=============================>                        (65 + 55) / 120][Stage 18:===================================>                  (78 + 42) / 120][Stage 18:=============================================>       (103 + 17) / 120][Stage 18:==================================================>   (112 + 8) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:=================================>                    (75 + 46) / 121][Stage 19:=========================================>            (93 + 28) / 121][Stage 19:==============================================>      (107 + 14) / 121][Stage 19:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 4.033401613 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.552286972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (60 + 53) / 113][Stage 20:==============================>                       (64 + 49) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:==========================================>           (90 + 24) / 114][Stage 21:===============================================>     (103 + 11) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.968558091 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521792841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:====================================>                 (77 + 36) / 113][Stage 22:==============================================>       (98 + 15) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:=============================>                        (62 + 52) / 114][Stage 23:======================================>               (81 + 33) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.586395926 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42766092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (82 + 33) / 115][Stage 24:=========================================>            (88 + 27) / 115][Stage 24:==============================================>      (100 + 15) / 115][Stage 24:==================================================>   (108 + 7) / 115][Stage 24:=====================================================>(113 + 2) / 115]                                                                                [Stage 25:=====================================>                (81 + 35) / 116][Stage 25:========================================>             (87 + 29) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.91742733 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507478248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:============================>                         (60 + 53) / 113][Stage 26:====================================>                 (76 + 37) / 113][Stage 26:==============================================>       (97 + 16) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:============================>                         (61 + 53) / 114][Stage 27:====================================>                 (76 + 38) / 114][Stage 27:==========================================>           (89 + 25) / 114][Stage 27:==============================================>      (100 + 14) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.389097963 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485735808 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:=================================>                    (71 + 42) / 113][Stage 28:==============================================>       (97 + 16) / 113][Stage 28:====================================================> (110 + 3) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:================================>                     (68 + 46) / 114][Stage 29:=========================================>            (87 + 27) / 114][Stage 29:==================================================>   (106 + 8) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.355902436 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502569428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:==============================>                       (64 + 49) / 113][Stage 30:======================================>               (80 + 33) / 113][Stage 30:=============================================>        (95 + 18) / 113][Stage 30:=================================================>    (104 + 9) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:================================>                     (68 + 46) / 114][Stage 31:========================================>             (86 + 28) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.326228544 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427298516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (74 + 39) / 113][Stage 32:=========================================>            (86 + 27) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:=================================================>    (104 + 9) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:=========================================>            (87 + 27) / 114][Stage 33:==============================================>      (100 + 14) / 114][Stage 33:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.94544601 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463827407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===============================>                      (68 + 47) / 115][Stage 34:=======================================>              (85 + 30) / 115][Stage 34:==============================================>       (99 + 16) / 115][Stage 34:=================================================>    (106 + 9) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:================================>                     (70 + 46) / 116][Stage 35:=====================================>                (80 + 36) / 116][Stage 35:============================================>         (95 + 21) / 116][Stage 35:===============================================>     (103 + 13) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:===================================================>  (110 + 6) / 116][Stage 35:===================================================>  (111 + 5) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.805115534 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445061639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:===================================>                  (78 + 40) / 118][Stage 36:===========================================>          (94 + 24) / 118][Stage 36:==================================================>   (110 + 8) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:======================================>               (85 + 34) / 119][Stage 37:==============================================>      (105 + 14) / 119][Stage 37:===================================================>  (114 + 5) / 119][Stage 37:=====================================================>(117 + 2) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.803970123 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487760371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:=====================================>                (83 + 35) / 118][Stage 38:===========================================>          (95 + 23) / 118][Stage 38:==================================================>   (110 + 8) / 118][Stage 38:=====================================================>(116 + 2) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:=========================================>            (92 + 27) / 119][Stage 39:===============================================>     (106 + 13) / 119][Stage 39:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.613211912 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470012786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:=============================>                        (62 + 51) / 113][Stage 40:===================================>                  (75 + 38) / 113][Stage 40:============================================>         (93 + 20) / 113][Stage 40:====================================================> (109 + 4) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:=================================>                    (71 + 43) / 114][Stage 41:===========================================>          (91 + 23) / 114][Stage 41:=============================================>        (97 + 17) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.482460636 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450809977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (70 + 43) / 113][Stage 42:========================================>             (84 + 29) / 113][Stage 42:============================================>         (94 + 19) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:=====================================>                (79 + 35) / 114][Stage 43:==========================================>           (89 + 25) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:===================================================>  (108 + 6) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.391648864 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441332823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:====================================>                 (77 + 38) / 115][Stage 44:==========================================>           (91 + 24) / 115][Stage 44:==============================================>       (99 + 16) / 115][Stage 44:===================================================>  (110 + 5) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=================================>                    (71 + 45) / 116][Stage 45:=====================================>                (80 + 36) / 116][Stage 45:===========================================>          (94 + 22) / 116][Stage 45:==================================================>   (109 + 7) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.118963721 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433044352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (73 + 42) / 115][Stage 46:========================================>             (87 + 28) / 115][Stage 46:==============================================>      (100 + 15) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:=====================================================>(113 + 2) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=================================>                    (72 + 44) / 116][Stage 47:======================================>               (82 + 34) / 116][Stage 47:=============================================>        (97 + 19) / 116][Stage 47:===============================================>     (104 + 12) / 116][Stage 47:====================================================> (112 + 4) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.384524632 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441931663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===================================>                  (76 + 39) / 115][Stage 48:============================================>         (94 + 21) / 115][Stage 48:===================================================>  (110 + 5) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:===============================>                      (68 + 48) / 116][Stage 49:=====================================>                (80 + 36) / 116][Stage 49:============================================>         (96 + 20) / 116][Stage 49:===============================================>     (105 + 11) / 116][Stage 49:====================================================> (113 + 3) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.672620751 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51133215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:=====================================>                (83 + 37) / 120][Stage 50:=============================================>       (103 + 17) / 120][Stage 50:===================================================>  (114 + 6) / 120]                                                                                [Stage 51:===========================>                          (62 + 59) / 121][Stage 51:===============================>                      (70 + 51) / 121][Stage 51:========================================>             (91 + 30) / 121][Stage 51:=================================================>    (112 + 9) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.520808799 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409071623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:====================================>                 (77 + 36) / 113][Stage 52:=======================================>              (82 + 31) / 113][Stage 52:============================================>         (93 + 20) / 113][Stage 52:===================================================>  (107 + 6) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:====================================>                 (77 + 37) / 114][Stage 53:==========================================>           (89 + 25) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.212581611 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386089701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=======================================>              (84 + 31) / 115][Stage 54:=============================================>        (97 + 18) / 115][Stage 54:=================================================>    (106 + 9) / 115][Stage 54:===================================================>  (110 + 5) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:======================================>               (83 + 33) / 116][Stage 55:=========================================>            (90 + 26) / 116][Stage 55:==============================================>      (101 + 15) / 116][Stage 55:====================================================> (113 + 3) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.429863302 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397902162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:====================================>                 (77 + 36) / 113][Stage 56:========================================>             (84 + 29) / 113][Stage 56:==============================================>       (97 + 16) / 113][Stage 56:==================================================>   (106 + 7) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:====================================>                 (77 + 37) / 114][Stage 57:========================================>             (86 + 28) / 114][Stage 57:==============================================>       (99 + 15) / 114][Stage 57:=================================================>    (105 + 9) / 114][Stage 57:=====================================================>(112 + 2) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.316399691 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413012635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=====================================>                (82 + 36) / 118][Stage 58:==========================================>           (93 + 25) / 118][Stage 58:===================================================>  (112 + 6) / 118]                                                                                [Stage 59:==================================>                   (76 + 43) / 119][Stage 59:=======================================>              (86 + 33) / 119][Stage 59:============================================>        (101 + 18) / 119][Stage 59:==================================================>   (111 + 8) / 119][Stage 59:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.286543199 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47627162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (61 + 59) / 120][Stage 60:==================================>                   (76 + 44) / 120][Stage 60:===========================================>          (96 + 24) / 120][Stage 60:===================================================>  (115 + 5) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:================================>                     (73 + 48) / 121][Stage 61:========================================>             (90 + 31) / 121][Stage 61:====================================================> (117 + 4) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.515697712 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50154683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (78 + 35) / 113][Stage 62:===========================================>          (91 + 22) / 113][Stage 62:================================================>    (103 + 10) / 113][Stage 62:====================================================> (109 + 4) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:======================================>               (81 + 33) / 114][Stage 63:=============================================>        (96 + 18) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.069543714 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428103848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (66 + 49) / 115][Stage 64:===================================>                  (76 + 39) / 115][Stage 64:==========================================>           (91 + 24) / 115][Stage 64:==================================================>   (107 + 8) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:====================================>                 (78 + 38) / 116][Stage 65:============================================>         (95 + 21) / 116][Stage 65:=============================================>       (100 + 16) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.429478753 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429637433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (70 + 45) / 115][Stage 66:======================================>               (83 + 32) / 115][Stage 66:==============================================>       (99 + 16) / 115][Stage 66:=================================================>    (106 + 9) / 115][Stage 66:====================================================> (111 + 4) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:================================>                     (70 + 46) / 116][Stage 67:=======================================>              (84 + 32) / 116][Stage 67:=============================================>       (100 + 16) / 116][Stage 67:================================================>    (106 + 10) / 116][Stage 67:==================================================>   (109 + 7) / 116][Stage 67:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.505042457 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420523119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:=============================>                        (61 + 52) / 113][Stage 68:=================================>                    (71 + 42) / 113][Stage 68:=========================================>            (86 + 27) / 113][Stage 68:===================================================>  (108 + 5) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:=================================>                    (70 + 44) / 114][Stage 69:=======================================>              (83 + 31) / 114][Stage 69:=============================================>        (97 + 17) / 114][Stage 69:===================================================>  (108 + 6) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.261563067 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472761345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:=============================>                        (67 + 54) / 121][Stage 70:=====================================>                (84 + 37) / 121][Stage 70:============================================>        (101 + 20) / 121][Stage 70:================================================>    (111 + 10) / 121]                                                                                [Stage 71:===========================>                          (61 + 61) / 122][Stage 71:=============================>                        (67 + 55) / 122][Stage 71:=======================================>              (90 + 32) / 122][Stage 71:================================================>    (111 + 11) / 122][Stage 71:=====================================================>(120 + 2) / 122][Stage 71:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.903968005 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464087593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (62 + 59) / 121][Stage 72:===============================>                      (71 + 50) / 121][Stage 72:========================================>             (90 + 31) / 121][Stage 72:=============================================>       (103 + 18) / 121][Stage 72:=====================================================>(119 + 2) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:===========================>                          (63 + 59) / 122][Stage 73:====================================>                 (82 + 40) / 122][Stage 73:===========================================>         (100 + 22) / 122][Stage 73:=====================================================>(120 + 2) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.681958608 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386776857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (75 + 43) / 118][Stage 74:=======================================>              (87 + 31) / 118][Stage 74:===============================================>     (106 + 12) / 118]                                                                                [Stage 75:=================================>                    (74 + 45) / 119][Stage 75:====================================>                 (80 + 39) / 119][Stage 75:=========================================>            (92 + 27) / 119][Stage 75:===============================================>     (107 + 12) / 119][Stage 75:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.347669912 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409589197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (64 + 51) / 115][Stage 76:===================================>                  (75 + 40) / 115][Stage 76:==========================================>           (91 + 24) / 115][Stage 76:===============================================>     (103 + 12) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:===============================>                      (68 + 48) / 116][Stage 77:====================================>                 (79 + 37) / 116][Stage 77:=============================================>        (97 + 19) / 116][Stage 77:=====================================================>(114 + 2) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.03624868 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403081464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:==================================>                   (75 + 43) / 118][Stage 78:=======================================>              (87 + 31) / 118][Stage 78:============================================>        (100 + 18) / 118][Stage 78:====================================================> (115 + 3) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:===================================>                  (79 + 40) / 119][Stage 79:========================================>             (90 + 29) / 119][Stage 79:============================================>        (101 + 18) / 119][Stage 79:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.105725444 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355018951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=======================================>              (85 + 30) / 115][Stage 80:==========================================>           (90 + 25) / 115][Stage 80:===============================================>     (104 + 11) / 115]                                                                                [Stage 81:=======================================>              (85 + 31) / 116][Stage 81:==========================================>           (92 + 24) / 116][Stage 81:=================================================>    (107 + 9) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.598205727 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412662951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:=================================>                    (71 + 42) / 113][Stage 82:==========================================>           (89 + 24) / 113][Stage 82:====================================================> (109 + 4) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:===============================>                      (67 + 47) / 114][Stage 83:=======================================>              (84 + 30) / 114][Stage 83:================================================>    (104 + 10) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.165319621 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404115735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (61 + 52) / 113][Stage 84:====================================>                 (77 + 36) / 113][Stage 84:===============================================>     (102 + 11) / 113][Stage 84:====================================================> (110 + 3) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=============================>                        (62 + 52) / 114][Stage 85:====================================>                 (77 + 37) / 114][Stage 85:============================================>         (94 + 20) / 114][Stage 85:===================================================>  (109 + 5) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.629946423 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42943694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:============================>                         (64 + 56) / 120][Stage 86:===================================>                  (79 + 41) / 120][Stage 86:===========================================>          (96 + 24) / 120][Stage 86:====================================================> (117 + 3) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=============================>                        (66 + 55) / 121][Stage 87:=======================================>              (89 + 32) / 121][Stage 87:==============================================>      (106 + 15) / 121][Stage 87:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.36661211 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353001919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=======================================>              (84 + 31) / 115][Stage 88:==============================================>       (99 + 16) / 115][Stage 88:===================================================>  (109 + 6) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:======================================>               (83 + 33) / 116][Stage 89:=========================================>            (90 + 26) / 116][Stage 89:===============================================>     (103 + 13) / 116][Stage 89:====================================================> (112 + 4) / 116][Stage 89:=====================================================>(114 + 2) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.129773426 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390411914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===============================>                      (68 + 47) / 115][Stage 90:=======================================>              (84 + 31) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:==================================>                   (75 + 41) / 116][Stage 91:=========================================>            (90 + 26) / 116][Stage 91:===============================================>     (105 + 11) / 116][Stage 91:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.796392625 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416782244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:==============================>                       (67 + 53) / 120][Stage 92:=========================================>            (92 + 28) / 120][Stage 92:====================================================> (117 + 3) / 120][Stage 92:=====================================================>(119 + 1) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:=============================>                        (66 + 55) / 121][Stage 93:=================================>                    (76 + 45) / 121][Stage 93:===========================================>          (98 + 23) / 121][Stage 93:====================================================> (118 + 3) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.753286262 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388831066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:===================================>                  (78 + 40) / 118][Stage 94:==========================================>           (92 + 26) / 118][Stage 94:==================================================>   (110 + 8) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:====================================>                 (80 + 39) / 119][Stage 95:===========================================>          (96 + 23) / 119][Stage 95:=================================================>    (110 + 9) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.203671154 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40890937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:=================================>                    (74 + 46) / 120][Stage 96:========================================>             (90 + 30) / 120][Stage 96:==================================================>   (112 + 8) / 120]                                                                                [Stage 97:============================>                         (64 + 57) / 121][Stage 97:=================================>                    (75 + 46) / 121][Stage 97:=======================================>              (88 + 33) / 121][Stage 97:==============================================>      (107 + 14) / 121][Stage 97:====================================================> (118 + 3) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.537663923 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38765586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (69 + 46) / 115][Stage 98:=======================================>              (85 + 30) / 115][Stage 98:===========================================>          (93 + 22) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:===================================>                  (77 + 39) / 116][Stage 99:========================================>             (88 + 28) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.82761393 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405718834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==============================>                      (66 + 49) / 115][Stage 100:==================================>                  (75 + 40) / 115][Stage 100:=========================================>           (91 + 24) / 115][Stage 100:==============================================>     (102 + 13) / 115][Stage 100:====================================================>(113 + 2) / 115]                                                                                [Stage 101:=================================>                   (74 + 42) / 116][Stage 101:=========================================>           (90 + 26) / 116][Stage 101:==============================================>     (103 + 13) / 116][Stage 101:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.036658536 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395670911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:=================================>                   (74 + 44) / 118][Stage 102:=======================================>             (87 + 31) / 118][Stage 102:===========================================>         (97 + 21) / 118][Stage 102:=================================================>   (111 + 7) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:====================================>                (83 + 36) / 119][Stage 103:============================================>        (99 + 20) / 119][Stage 103:===============================================>    (108 + 11) / 119][Stage 103:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.436890699 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418074503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (61 + 59) / 120][Stage 104:=============================>                       (66 + 54) / 120][Stage 104:==================================>                  (79 + 41) / 120][Stage 104:===========================================>        (101 + 19) / 120][Stage 104:====================================================>(119 + 1) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:============================>                        (66 + 55) / 121][Stage 105:=====================================>               (85 + 36) / 121][Stage 105:=============================================>      (106 + 15) / 121][Stage 105:===================================================> (117 + 4) / 121][Stage 105:===================================================> (118 + 3) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.025749146 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43411733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:================================>                    (74 + 47) / 121][Stage 106:==========================================>          (98 + 23) / 121][Stage 106:===================================================> (117 + 4) / 121]                                                                                [Stage 107:===========================>                         (63 + 59) / 122][Stage 107:=================================>                   (78 + 44) / 122][Stage 107:===========================================>        (101 + 21) / 122][Stage 107:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.231836408 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409163104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:============================>                        (60 + 53) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:============================>                        (62 + 52) / 114][Stage 109:=================================>                   (73 + 41) / 114][Stage 109:=============================================>       (97 + 17) / 114][Stage 109:=================================================>   (107 + 7) / 114][Stage 109:====================================================>(112 + 2) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.89466074 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417665999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:===========================>                         (62 + 59) / 121][Stage 110:=================================>                   (76 + 45) / 121][Stage 110:==========================================>          (96 + 25) / 121][Stage 110:==================================================>  (115 + 6) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:===============================>                     (72 + 50) / 122][Stage 111:====================================>                (85 + 37) / 122][Stage 111:==============================================>     (110 + 12) / 122][Stage 111:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.35149689 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36286433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:==================================>                  (77 + 41) / 118][Stage 112:=======================================>             (89 + 29) / 118][Stage 112:=============================================>      (104 + 14) / 118][Stage 112:====================================================>(116 + 2) / 118]                                                                                [Stage 113:================================>                    (74 + 45) / 119][Stage 113:===================================>                 (80 + 39) / 119][Stage 113:==========================================>          (96 + 23) / 119][Stage 113:===============================================>    (109 + 10) / 119][Stage 113:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.448671466 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394540761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 58) / 120][Stage 114:===============================>                     (71 + 49) / 120][Stage 114:========================================>            (92 + 28) / 120][Stage 114:==================================================>  (115 + 5) / 120]                                                                                [Stage 115:============================>                        (64 + 57) / 121][Stage 115:===================================>                 (82 + 39) / 121][Stage 115:===========================================>         (99 + 22) / 121][Stage 115:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.299245857 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338663907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:======================================>              (83 + 32) / 115][Stage 116:============================================>        (96 + 19) / 115][Stage 116:===============================================>    (104 + 11) / 115]                                                                                [Stage 117:======================================>              (85 + 31) / 116][Stage 117:===========================================>         (95 + 21) / 116][Stage 117:==============================================>     (103 + 13) / 116][Stage 117:==================================================>  (111 + 5) / 116][Stage 117:====================================================>(114 + 2) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.906829772 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380181599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==============================>                      (67 + 48) / 115][Stage 118:========================================>            (87 + 28) / 115][Stage 118:=============================================>      (100 + 15) / 115][Stage 118:=================================================>   (107 + 8) / 115][Stage 118:===================================================> (111 + 4) / 115]                                                                                [Stage 119:==================================>                  (76 + 40) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:===================================================> (112 + 4) / 116][Stage 119:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.512642337 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377327726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (70 + 45) / 115][Stage 120:========================================>            (88 + 27) / 115][Stage 120:=============================================>      (101 + 14) / 115][Stage 120:===================================================> (112 + 3) / 115]                                                                                [Stage 121:====================================>                (79 + 37) / 116][Stage 121:===========================================>         (95 + 21) / 116][Stage 121:==================================================>  (110 + 6) / 116][Stage 121:===================================================> (113 + 3) / 116][Stage 121:====================================================>(114 + 2) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.532106565 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39547002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:=============================>                       (66 + 54) / 120][Stage 122:====================================>                (82 + 38) / 120][Stage 122:=============================================>      (104 + 16) / 120][Stage 122:====================================================>(119 + 1) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:============================>                        (65 + 56) / 121][Stage 123:======================================>              (87 + 34) / 121][Stage 123:==============================================>     (109 + 12) / 121][Stage 123:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.402521109 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33523143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (80 + 35) / 115][Stage 124:=======================================>             (86 + 29) / 115][Stage 124:=============================================>       (98 + 17) / 115][Stage 124:==================================================>  (109 + 6) / 115]                                                                                [Stage 125:======================================>              (85 + 31) / 116][Stage 125:===========================================>         (95 + 21) / 116][Stage 125:==================================================>  (110 + 6) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.715954837 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464166944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (73 + 42) / 115][Stage 126:=========================================>           (91 + 24) / 115][Stage 126:===============================================>    (104 + 11) / 115][Stage 126:====================================================>(114 + 1) / 115]                                                                                [Stage 127:================================>                    (72 + 44) / 116][Stage 127:========================================>            (88 + 28) / 116][Stage 127:==============================================>     (103 + 13) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.607772003 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401974984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:===========================>                         (62 + 58) / 120][Stage 128:===================================>                 (81 + 39) / 120][Stage 128:===============================================>    (110 + 10) / 120][Stage 128:===================================================> (117 + 3) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:=============================>                       (68 + 53) / 121][Stage 129:======================================>              (88 + 33) / 121][Stage 129:===============================================>    (110 + 11) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.25803049 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360724713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:===================================>                 (79 + 39) / 118][Stage 130:======================================>              (85 + 33) / 118][Stage 130:============================================>       (102 + 16) / 118][Stage 130:==================================================>  (113 + 5) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:==================================>                  (77 + 42) / 119][Stage 131:=========================================>           (94 + 25) / 119][Stage 131:==============================================>     (106 + 13) / 119][Stage 131:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.440415116 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397828686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (62 + 58) / 120][Stage 132:==================================>                  (77 + 43) / 120][Stage 132:=========================================>           (94 + 26) / 120][Stage 132:====================================================>(119 + 1) / 120]                                                                                [Stage 133:=============================>                       (67 + 54) / 121][Stage 133:==================================>                  (79 + 42) / 121][Stage 133:=============================================>      (106 + 15) / 121][Stage 133:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.196003498 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384209488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:=============================>                       (62 + 51) / 113][Stage 134:====================================>                (78 + 35) / 113][Stage 134:==============================================>      (99 + 14) / 113][Stage 134:==================================================>  (107 + 6) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:===============================>                     (67 + 47) / 114][Stage 135:====================================>                (79 + 35) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.345015187 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37757032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:============================>                        (60 + 53) / 113][Stage 136:================================>                    (70 + 43) / 113][Stage 136:=============================================>       (96 + 17) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:=============================>                       (63 + 51) / 114][Stage 137:===================================>                 (76 + 38) / 114][Stage 137:=============================================>       (97 + 17) / 114][Stage 137:==================================================>  (109 + 5) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.257616918 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392547781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (67 + 53) / 120][Stage 138:===================================>                 (81 + 39) / 120][Stage 138:===============================================>    (109 + 11) / 120]                                                                                [Stage 139:============================>                        (65 + 56) / 121][Stage 139:==============================>                      (70 + 51) / 121][Stage 139:======================================>              (87 + 34) / 121][Stage 139:=================================================>   (113 + 8) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.171198554 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397342361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (63 + 57) / 120][Stage 140:================================>                    (74 + 46) / 120][Stage 140:==========================================>          (96 + 24) / 120][Stage 140:==================================================>  (114 + 6) / 120]                                                                                [Stage 141:===========================>                         (62 + 59) / 121][Stage 141:==================================>                  (78 + 43) / 121][Stage 141:======================================>              (87 + 34) / 121][Stage 141:============================================>       (104 + 17) / 121][Stage 141:===================================================> (118 + 3) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.564154669 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381834896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:================================>                    (69 + 44) / 113][Stage 142:============================================>        (94 + 19) / 113][Stage 142:==================================================>  (108 + 5) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:=================================>                   (72 + 42) / 114][Stage 143:==========================================>          (91 + 23) / 114][Stage 143:==============================================>     (103 + 11) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.319838513 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373897341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=================================>                   (72 + 43) / 115][Stage 144:======================================>              (84 + 31) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:==============================>                      (67 + 49) / 116][Stage 145:====================================>                (80 + 36) / 116][Stage 145:============================================>        (97 + 19) / 116][Stage 145:=================================================>   (109 + 7) / 116][Stage 145:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.943083696 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399720327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 59) / 120][Stage 146:==============================>                      (70 + 50) / 120][Stage 146:====================================>                (82 + 38) / 120][Stage 146:=============================================>      (106 + 14) / 120][Stage 146:====================================================>(118 + 2) / 120]                                                                                [Stage 147:=============================>                       (67 + 54) / 121][Stage 147:===================================>                 (81 + 40) / 121][Stage 147:===========================================>         (99 + 22) / 121][Stage 147:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.42513511 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395176967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:===========================>                         (62 + 59) / 121][Stage 148:================================>                    (74 + 47) / 121][Stage 148:===========================================>         (99 + 22) / 121][Stage 148:===================================================> (118 + 3) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:============================>                        (66 + 56) / 122][Stage 149:=========================================>           (96 + 26) / 122][Stage 149:===============================================>    (111 + 11) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.588119973 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394116302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (65 + 55) / 120][Stage 150:=================================>                   (76 + 44) / 120][Stage 150:==========================================>          (96 + 24) / 120][Stage 150:===================================================> (116 + 4) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:===============================>                     (73 + 48) / 121][Stage 151:========================================>            (93 + 28) / 121][Stage 151:===================================================> (117 + 4) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.470343879 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360523083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (78 + 40) / 118][Stage 152:============================================>        (98 + 20) / 118][Stage 152:=================================================>   (110 + 8) / 118][Stage 152:====================================================>(116 + 2) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:====================================>                (81 + 38) / 119][Stage 153:=======================================>             (89 + 30) / 119][Stage 153:============================================>       (102 + 17) / 119][Stage 153:==================================================>  (113 + 6) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.7058027 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348733933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (74 + 39) / 113][Stage 154:=====================================>               (81 + 32) / 113][Stage 154:===========================================>         (93 + 20) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:===================================================> (110 + 3) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:===================================>                 (76 + 38) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:==============================================>      (99 + 15) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.077219627 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405369286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:=================================>                   (76 + 44) / 120][Stage 156:=========================================>           (94 + 26) / 120][Stage 156:=================================================>   (113 + 7) / 120]                                                                                [Stage 157:============================>                        (65 + 56) / 121][Stage 157:===================================>                 (81 + 40) / 121][Stage 157:=============================================>      (106 + 15) / 121][Stage 157:====================================================>(119 + 2) / 121][Stage 157:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.318844873 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369034375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===============================>                     (68 + 47) / 115][Stage 158:==================================>                  (74 + 41) / 115][Stage 158:=========================================>           (89 + 26) / 115][Stage 158:=============================================>      (100 + 15) / 115]                                                                                [Stage 159:===================================>                 (77 + 39) / 116][Stage 159:=========================================>           (90 + 26) / 116][Stage 159:=================================================>   (109 + 7) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.741660876 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335621438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (82 + 33) / 115][Stage 160:========================================>            (88 + 27) / 115][Stage 160:=============================================>      (101 + 14) / 115][Stage 160:==================================================>  (110 + 5) / 115]                                                                                [Stage 161:======================================>              (84 + 32) / 116][Stage 161:=========================================>           (90 + 26) / 116][Stage 161:============================================>        (98 + 18) / 116][Stage 161:=================================================>   (109 + 7) / 116][Stage 161:====================================================>(114 + 2) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.213004488 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389788159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===================================>                 (76 + 39) / 115][Stage 162:=========================================>           (90 + 25) / 115][Stage 162:=============================================>       (99 + 16) / 115][Stage 162:===================================================> (112 + 3) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:==============================>                      (67 + 49) / 116][Stage 163:===================================>                 (77 + 39) / 116][Stage 163:==========================================>          (94 + 22) / 116][Stage 163:===============================================>    (105 + 11) / 116][Stage 163:=================================================>   (109 + 7) / 116][Stage 163:===================================================> (113 + 3) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.205217865 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373692492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (71 + 44) / 115][Stage 164:========================================>            (88 + 27) / 115][Stage 164:==============================================>     (102 + 13) / 115][Stage 164:===================================================> (111 + 4) / 115]                                                                                [Stage 165:==================================>                  (76 + 40) / 116][Stage 165:============================================>        (98 + 18) / 116][Stage 165:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.689627163 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392243947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (62 + 58) / 120][Stage 166:=================================>                   (76 + 44) / 120][Stage 166:============================================>       (102 + 18) / 120][Stage 166:==================================================>  (115 + 5) / 120]                                                                                [Stage 167:============================>                        (66 + 55) / 121][Stage 167:==================================>                  (79 + 42) / 121][Stage 167:===========================================>        (101 + 20) / 121][Stage 167:==================================================>  (116 + 5) / 121][Stage 167:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.342822934 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397606948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==================================>                  (74 + 39) / 113][Stage 168:========================================>            (87 + 26) / 113][Stage 168:===================================================> (109 + 4) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (59 + 55) / 114][Stage 169:================================>                    (69 + 45) / 114][Stage 169:=====================================>               (81 + 33) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.278171561 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472859235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (71 + 44) / 115][Stage 170:=======================================>             (85 + 30) / 115][Stage 170:=============================================>       (99 + 16) / 115][Stage 170:==================================================>  (109 + 6) / 115]                                                                                [Stage 171:==================================>                  (75 + 41) / 116][Stage 171:============================================>        (98 + 18) / 116][Stage 171:==================================================>  (111 + 5) / 116][Stage 171:====================================================>(114 + 2) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.190378666 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363583627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:====================================>                (82 + 36) / 118][Stage 172:==========================================>          (94 + 24) / 118][Stage 172:===============================================>    (108 + 10) / 118][Stage 172:====================================================>(117 + 1) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:===================================>                 (80 + 39) / 119][Stage 173:=========================================>           (93 + 26) / 119][Stage 173:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.214333225 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386334399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:=================================>                   (72 + 41) / 113][Stage 174:=============================================>       (98 + 15) / 113][Stage 174:===================================================> (109 + 4) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:===============================>                     (67 + 47) / 114][Stage 175:=====================================>               (81 + 33) / 114][Stage 175:==============================================>     (103 + 11) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.618851351 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344360987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:========================================>            (86 + 27) / 113][Stage 176:=============================================>       (96 + 17) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:====================================>                (79 + 35) / 114][Stage 177:=========================================>           (90 + 24) / 114][Stage 177:==============================================>     (101 + 13) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.99136106 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394445171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (61 + 59) / 120][Stage 178:==============================>                      (70 + 50) / 120][Stage 178:===================================>                 (81 + 39) / 120][Stage 178:=============================================>      (106 + 14) / 120][Stage 178:====================================================>(118 + 2) / 120]                                                                                [Stage 179:===============================>                     (71 + 50) / 121][Stage 179:===================================>                 (80 + 41) / 121][Stage 179:========================================>            (93 + 28) / 121][Stage 179:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.287241441 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376526417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (74 + 44) / 118][Stage 180:======================================>              (86 + 32) / 118][Stage 180:===========================================>         (97 + 21) / 118][Stage 180:===================================================> (115 + 3) / 118]                                                                                [Stage 181:=================================>                   (76 + 43) / 119][Stage 181:=====================================>               (84 + 35) / 119][Stage 181:=========================================>           (94 + 25) / 119][Stage 181:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.20788777 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385720913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (73 + 45) / 118][Stage 182:==================================>                  (77 + 41) / 118][Stage 182:=====================================>               (84 + 34) / 118][Stage 182:===============================================>    (108 + 10) / 118][Stage 182:====================================================>(116 + 2) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:===================================>                 (80 + 39) / 119][Stage 183:======================================>              (86 + 33) / 119][Stage 183:==========================================>          (95 + 24) / 119][Stage 183:================================================>    (110 + 9) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.659880947 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33837696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:========================================>            (87 + 28) / 115][Stage 184:===========================================>         (94 + 21) / 115][Stage 184:================================================>    (106 + 9) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:==============================================>     (104 + 12) / 116][Stage 185:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.680538587 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382905321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:=============================>                       (62 + 51) / 113][Stage 186:====================================>                (78 + 35) / 113][Stage 186:=============================================>       (98 + 15) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:==============================>                      (65 + 49) / 114][Stage 187:=======================================>             (84 + 30) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.43373913 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344457143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (77 + 36) / 113][Stage 188:========================================>            (87 + 26) / 113][Stage 188:==============================================>      (99 + 14) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:==================================>                  (75 + 39) / 114][Stage 189:=======================================>             (85 + 29) / 114][Stage 189:============================================>        (95 + 19) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.824215741 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334477061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (83 + 32) / 115][Stage 190:========================================>            (87 + 28) / 115][Stage 190:===============================================>    (104 + 11) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:=====================================>               (82 + 34) / 116][Stage 191:=======================================>             (87 + 29) / 116][Stage 191:==============================================>     (104 + 12) / 116][Stage 191:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.660388128 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357196613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:=================================>                   (75 + 43) / 118][Stage 192:======================================>              (86 + 32) / 118][Stage 192:============================================>       (100 + 18) / 118][Stage 192:=================================================>   (111 + 7) / 118]                                                                                [Stage 193:=================================>                   (75 + 44) / 119][Stage 193:====================================>                (83 + 36) / 119][Stage 193:============================================>       (101 + 18) / 119][Stage 193:================================================>    (110 + 9) / 119][Stage 193:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.362506539 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399202584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:===============================>                     (68 + 45) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:==================================================>  (107 + 6) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:================================>                    (70 + 44) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.328130012 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409396645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 60) / 120][Stage 196:==============================>                      (69 + 51) / 120][Stage 196:===================================>                 (80 + 40) / 120][Stage 196:==============================================>     (108 + 12) / 120][Stage 196:====================================================>(119 + 1) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:===============================>                     (71 + 50) / 121][Stage 197:=======================================>             (90 + 31) / 121][Stage 197:===============================================>    (110 + 11) / 121][Stage 197:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.138814496 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376060768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===================================>                 (75 + 38) / 113][Stage 198:========================================>            (86 + 27) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:======================================>              (83 + 31) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:==============================================>     (103 + 11) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.961280768 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349378439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (79 + 34) / 113][Stage 200:===========================================>         (92 + 21) / 113][Stage 200:==============================================>     (101 + 12) / 113][Stage 200:=================================================>   (106 + 7) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:==================================>                  (75 + 39) / 114][Stage 201:========================================>            (88 + 26) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.850465473 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 02:41:12 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:50808) dropped. RpcEnv already stopped.
17/05/22 02:41:12 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:50808) dropped. RpcEnv already stopped.

real	10m34.705s
user	11m51.780s
sys	0m56.916s
