Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 10:27:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:27:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:27:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:27:41 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 10:27:43 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:27:54 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522102743-0447).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.455400823 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (58 + 58) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.601303476 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.775918802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (39 + 76) / 115][Stage 2:====================>                                  (42 + 73) / 115][Stage 2:==============================>                        (64 + 51) / 115][Stage 2:================================>                      (68 + 47) / 115][Stage 2:===================================>                   (74 + 41) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:============================>                          (60 + 56) / 116][Stage 3:================================>                      (69 + 47) / 116][Stage 3:==================================>                    (72 + 44) / 116][Stage 3:===================================>                   (75 + 41) / 116][Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:============================================>          (93 + 23) / 116][Stage 3:===============================================>      (101 + 15) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:====================================================>  (111 + 5) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.175754681 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.674947135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (51 + 62) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:====================================>                  (75 + 38) / 113][Stage 4:=======================================>               (82 + 31) / 113][Stage 4:==========================================>            (88 + 25) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:==========================>                            (55 + 59) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:===============================>                       (65 + 49) / 114][Stage 5:=================================>                     (70 + 44) / 114][Stage 5:=====================================>                 (77 + 37) / 114][Stage 5:==========================================>            (88 + 26) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:======================================================>(112 + 2) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.9021238 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.701148605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 60) / 120][Stage 6:===============================>                       (69 + 51) / 120][Stage 6:====================================>                  (79 + 41) / 120][Stage 6:==========================================>            (92 + 28) / 120][Stage 6:==================================================>    (111 + 9) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:==============================>                        (66 + 55) / 121][Stage 7:====================================>                  (81 + 40) / 121][Stage 7:=============================================>        (102 + 19) / 121][Stage 7:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.785381107 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591770902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:=================================>                     (69 + 44) / 113][Stage 8:========================================>              (84 + 29) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:===========================>                           (58 + 56) / 114][Stage 9:==============================>                        (63 + 51) / 114][Stage 9:===================================>                   (73 + 41) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:===============================================>      (101 + 13) / 114][Stage 9:===================================================>   (106 + 8) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.959294456 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.615695767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:===================================>                  (75 + 38) / 113][Stage 10:===========================================>          (90 + 23) / 113][Stage 10:===================================================>  (108 + 5) / 113]                                                                                [Stage 11:=============================>                        (62 + 52) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.354218892 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52022197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (64 + 51) / 115][Stage 12:==================================>                   (73 + 42) / 115][Stage 12:=======================================>              (84 + 31) / 115][Stage 12:============================================>         (95 + 20) / 115][Stage 12:===============================================>     (104 + 11) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:==============================>                       (65 + 51) / 116][Stage 13:=================================>                    (72 + 44) / 116][Stage 13:========================================>             (86 + 30) / 116][Stage 13:=============================================>       (100 + 16) / 116][Stage 13:===============================================>     (104 + 12) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:=====================================================>(114 + 2) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.304292308 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522718455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:=================================>                    (73 + 45) / 118][Stage 14:=====================================>                (82 + 36) / 118][Stage 14:=============================================>        (99 + 19) / 118][Stage 14:==================================================>   (111 + 7) / 118][Stage 14:====================================================> (115 + 3) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:===================================>                  (78 + 41) / 119][Stage 15:=========================================>            (91 + 28) / 119][Stage 15:================================================>    (108 + 11) / 119][Stage 15:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.539159625 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484920365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (80 + 35) / 115][Stage 16:======================================>               (83 + 32) / 115][Stage 16:===========================================>          (92 + 23) / 115][Stage 16:==============================================>      (101 + 14) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (111 + 4) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:=====================================>                (81 + 35) / 116][Stage 17:========================================>             (88 + 28) / 116][Stage 17:===============================================>     (103 + 13) / 116][Stage 17:=================================================>    (107 + 9) / 116][Stage 17:==================================================>   (109 + 7) / 116][Stage 17:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.101125818 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574235813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=====================================>                (80 + 35) / 115][Stage 18:========================================>             (86 + 29) / 115][Stage 18:==============================================>      (100 + 15) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:======================================>               (82 + 34) / 116][Stage 19:============================================>         (95 + 21) / 116][Stage 19:===============================================>     (104 + 12) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.678740373 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453435967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=====================================>                (79 + 36) / 115][Stage 20:=======================================>              (85 + 30) / 115][Stage 20:=============================================>        (97 + 18) / 115][Stage 20:================================================>    (105 + 10) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:======================================>               (82 + 34) / 116][Stage 21:=========================================>            (89 + 27) / 116][Stage 21:==============================================>      (102 + 14) / 116][Stage 21:==================================================>   (108 + 8) / 116][Stage 21:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.166350219 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538264966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:==============================>                       (69 + 52) / 121][Stage 22:=================================>                    (76 + 45) / 121][Stage 22:========================================>             (91 + 30) / 121][Stage 22:==============================================>      (106 + 15) / 121][Stage 22:=====================================================>(119 + 2) / 121]                                                                                [Stage 23:===========================>                          (62 + 60) / 122][Stage 23:===============================>                      (72 + 50) / 122][Stage 23:=========================================>            (94 + 28) / 122][Stage 23:==================================================>   (114 + 8) / 122][Stage 23:====================================================> (119 + 3) / 122][Stage 23:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.847064934 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538641667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:=============================>                        (65 + 56) / 121][Stage 24:===============================>                      (71 + 50) / 121][Stage 24:========================================>             (90 + 31) / 121][Stage 24:================================================>    (111 + 10) / 121][Stage 24:=====================================================>(120 + 1) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:=============================>                        (67 + 55) / 122][Stage 25:===================================>                  (81 + 41) / 122][Stage 25:=============================================>       (104 + 18) / 122][Stage 25:==================================================>   (115 + 7) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.45243204 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42761816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (82 + 33) / 115][Stage 26:===========================================>          (92 + 23) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:====================================================> (112 + 3) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:========================================>             (87 + 29) / 116][Stage 27:=============================================>        (97 + 19) / 116][Stage 27:================================================>    (106 + 10) / 116][Stage 27:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.224296017 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474521209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===============================>                      (67 + 48) / 115][Stage 28:====================================>                 (77 + 38) / 115][Stage 28:===========================================>          (92 + 23) / 115][Stage 28:=================================================>    (106 + 9) / 115][Stage 28:===================================================>  (109 + 6) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=================================>                    (73 + 43) / 116][Stage 29:==========================================>           (91 + 25) / 116][Stage 29:================================================>    (106 + 10) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.181747819 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499067316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:============================>                         (59 + 54) / 113][Stage 30:==================================>                   (72 + 41) / 113][Stage 30:========================================>             (85 + 28) / 113][Stage 30:===============================================>     (102 + 11) / 113][Stage 30:====================================================> (110 + 3) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:===============================>                      (67 + 47) / 114][Stage 31:=====================================>                (80 + 34) / 114][Stage 31:============================================>         (93 + 21) / 114][Stage 31:==================================================>   (106 + 8) / 114][Stage 31:====================================================> (111 + 3) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.590820469 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492420323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:=================================>                    (71 + 42) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:====================================>                 (78 + 36) / 114][Stage 33:==============================================>       (99 + 15) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.010855025 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510983238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:================================>                     (72 + 48) / 120][Stage 34:========================================>             (90 + 30) / 120][Stage 34:==============================================>      (106 + 14) / 120][Stage 34:====================================================> (116 + 4) / 120]                                                                                [Stage 35:===========================>                          (62 + 59) / 121][Stage 35:==================================>                   (77 + 44) / 121][Stage 35:============================================>         (99 + 22) / 121][Stage 35:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.338304562 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459180581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:====================================>                 (77 + 36) / 113][Stage 36:==========================================>           (88 + 25) / 113][Stage 36:==============================================>       (97 + 16) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:==================================>                   (73 + 41) / 114][Stage 37:========================================>             (86 + 28) / 114][Stage 37:=============================================>        (97 + 17) / 114][Stage 37:===============================================>     (102 + 12) / 114][Stage 37:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.90395865 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521241678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (61 + 60) / 121][Stage 38:================================>                     (72 + 49) / 121][Stage 38:========================================>             (91 + 30) / 121][Stage 38:================================================>    (111 + 10) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:==============================>                       (69 + 53) / 122][Stage 39:==========================================>           (96 + 26) / 122][Stage 39:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.081733966 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42617428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=====================================>                (79 + 36) / 115][Stage 40:=======================================>              (84 + 31) / 115][Stage 40:==========================================>           (90 + 25) / 115][Stage 40:==================================================>   (107 + 8) / 115][Stage 40:=====================================================>(113 + 2) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:=====================================>                (81 + 35) / 116][Stage 41:========================================>             (87 + 29) / 116][Stage 41:===============================================>     (103 + 13) / 116][Stage 41:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.987228971 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.536033187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:================================>                     (73 + 48) / 121][Stage 42:===========================================>          (97 + 24) / 121][Stage 42:===================================================>  (116 + 5) / 121]                                                                                [Stage 43:===========================>                          (63 + 59) / 122][Stage 43:==================================>                   (79 + 43) / 122][Stage 43:===========================================>          (99 + 23) / 122][Stage 43:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.042685478 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440928109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:==================================>                   (75 + 43) / 118][Stage 44:======================================>               (85 + 33) / 118][Stage 44:==========================================>           (93 + 25) / 118][Stage 44:=================================================>    (109 + 9) / 118][Stage 44:====================================================> (115 + 3) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:=====================================>                (82 + 37) / 119][Stage 45:============================================>         (99 + 20) / 119][Stage 45:==================================================>   (112 + 7) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.502760166 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421118932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:=================================>                    (74 + 44) / 118][Stage 46:========================================>             (88 + 30) / 118][Stage 46:=============================================>        (99 + 19) / 118][Stage 46:====================================================> (114 + 4) / 118]                                                                                [Stage 47:=================================>                    (73 + 46) / 119][Stage 47:===================================>                  (79 + 40) / 119][Stage 47:===========================================>          (95 + 24) / 119][Stage 47:===============================================>     (107 + 12) / 119][Stage 47:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.207738094 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479639762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:=============================>                        (66 + 54) / 120][Stage 48:=====================================>                (84 + 36) / 120][Stage 48:=============================================>       (103 + 17) / 120][Stage 48:====================================================> (117 + 3) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:=================================>                    (75 + 46) / 121][Stage 49:===========================================>         (100 + 21) / 121][Stage 49:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.119955752 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406463386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:======================================>               (82 + 33) / 115][Stage 50:==========================================>           (90 + 25) / 115][Stage 50:===============================================>     (104 + 11) / 115][Stage 50:====================================================> (112 + 3) / 115]                                                                                [Stage 51:======================================>               (82 + 34) / 116][Stage 51:========================================>             (88 + 28) / 116][Stage 51:=============================================>       (100 + 16) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.620456313 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412227677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (78 + 35) / 113][Stage 52:============================================>         (93 + 20) / 113][Stage 52:================================================>    (103 + 10) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=====================================>                (80 + 34) / 114][Stage 53:============================================>         (94 + 20) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.170902892 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537597573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (65 + 50) / 115][Stage 54:====================================>                 (78 + 37) / 115][Stage 54:=============================================>        (97 + 18) / 115][Stage 54:===================================================>  (109 + 6) / 115]                                                                                [Stage 55:=================================>                    (72 + 44) / 116][Stage 55:========================================>             (88 + 28) / 116][Stage 55:===============================================>     (103 + 13) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.723941573 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441974473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:=============================>                        (61 + 52) / 113][Stage 56:==================================>                   (72 + 41) / 113][Stage 56:=========================================>            (87 + 26) / 113][Stage 56:=============================================>        (96 + 17) / 113][Stage 56:==================================================>   (106 + 7) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:================================>                     (69 + 45) / 114][Stage 57:==========================================>           (89 + 25) / 114][Stage 57:=================================================>    (105 + 9) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.336598991 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418064148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (74 + 44) / 118][Stage 58:======================================>               (85 + 33) / 118][Stage 58:=================================================>    (109 + 9) / 118][Stage 58:=====================================================>(117 + 1) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:==================================>                   (75 + 44) / 119][Stage 59:============================================>         (97 + 22) / 119][Stage 59:==================================================>   (112 + 7) / 119][Stage 59:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.067536425 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418192369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:========================================>             (86 + 29) / 115][Stage 60:=============================================>        (97 + 18) / 115][Stage 60:===============================================>     (104 + 11) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:========================================>             (86 + 30) / 116][Stage 61:==============================================>       (99 + 17) / 116][Stage 61:==================================================>   (109 + 7) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.065461764 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422150136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (80 + 33) / 113][Stage 62:==========================================>           (89 + 24) / 113][Stage 62:=============================================>        (96 + 17) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:====================================>                 (77 + 37) / 114][Stage 63:========================================>             (85 + 29) / 114][Stage 63:=============================================>        (95 + 19) / 114][Stage 63:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.147596602 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405642326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (73 + 45) / 118][Stage 64:=====================================>                (81 + 37) / 118][Stage 64:=============================================>        (99 + 19) / 118][Stage 64:==================================================>   (111 + 7) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:====================================>                 (81 + 38) / 119][Stage 65:============================================>         (97 + 22) / 119][Stage 65:===================================================>  (114 + 5) / 119][Stage 65:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.188766463 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425461263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:====================================>                 (79 + 39) / 118][Stage 66:============================================>         (97 + 21) / 118][Stage 66:====================================================> (115 + 3) / 118]                                                                                [Stage 67:==================================>                   (77 + 42) / 119][Stage 67:=========================================>            (92 + 27) / 119][Stage 67:================================================>    (108 + 11) / 119][Stage 67:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.021509029 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441887315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:==============================>                       (68 + 52) / 120][Stage 68:=======================================>              (88 + 32) / 120][Stage 68:================================================>    (110 + 10) / 120][Stage 68:=====================================================>(119 + 1) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:==============================>                       (69 + 52) / 121][Stage 69:=======================================>              (88 + 33) / 121][Stage 69:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.041330729 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411341838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (70 + 43) / 113][Stage 70:=====================================>                (78 + 35) / 113][Stage 70:=============================================>        (96 + 17) / 113][Stage 70:================================================>    (103 + 10) / 113][Stage 70:====================================================> (109 + 4) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:===================================>                  (75 + 39) / 114][Stage 71:======================================>               (82 + 32) / 114][Stage 71:=============================================>        (97 + 17) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.339610775 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41210946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:====================================>                 (77 + 36) / 113][Stage 72:==========================================>           (89 + 24) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:====================================================> (110 + 3) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:====================================>                 (76 + 38) / 114][Stage 73:============================================>         (93 + 21) / 114][Stage 73:==============================================>       (98 + 16) / 114][Stage 73:=================================================>    (105 + 9) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.394195841 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461278613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:=============================>                        (65 + 55) / 120][Stage 74:=================================>                    (74 + 46) / 120][Stage 74:==========================================>           (95 + 25) / 120][Stage 74:====================================================> (117 + 3) / 120]                                                                                [Stage 75:============================>                         (63 + 58) / 121][Stage 75:==================================>                   (77 + 44) / 121][Stage 75:============================================>        (101 + 20) / 121][Stage 75:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.015938288 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418025352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (74 + 41) / 115][Stage 76:========================================>             (86 + 29) / 115][Stage 76:============================================>         (94 + 21) / 115][Stage 76:===================================================>  (110 + 5) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:================================>                     (69 + 47) / 116][Stage 77:=====================================>                (81 + 35) / 116][Stage 77:=============================================>        (98 + 18) / 116][Stage 77:==================================================>   (108 + 8) / 116][Stage 77:====================================================> (113 + 3) / 116][Stage 77:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.294660318 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410310337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (73 + 45) / 118][Stage 78:==================================>                   (76 + 42) / 118][Stage 78:======================================>               (84 + 34) / 118][Stage 78:============================================>         (97 + 21) / 118][Stage 78:==================================================>   (111 + 7) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:====================================>                 (80 + 39) / 119][Stage 79:======================================>               (85 + 34) / 119][Stage 79:===========================================>          (95 + 24) / 119][Stage 79:==================================================>   (111 + 8) / 119][Stage 79:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.465242625 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546300095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:===========================>                          (62 + 59) / 121][Stage 80:=================================>                    (76 + 45) / 121][Stage 80:============================================>        (101 + 20) / 121][Stage 80:===================================================>  (115 + 6) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:==================================>                   (79 + 43) / 122][Stage 81:===========================================>          (99 + 23) / 122][Stage 81:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.003689713 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447005368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:===========================>                          (62 + 59) / 121][Stage 82:=================================>                    (74 + 47) / 121][Stage 82:============================================>         (99 + 22) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:============================>                         (64 + 58) / 122][Stage 83:==================================>                   (79 + 43) / 122][Stage 83:===========================================>         (101 + 21) / 122][Stage 83:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 2.95867371 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378785558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (70 + 43) / 113][Stage 84:========================================>             (84 + 29) / 113][Stage 84:===========================================>          (92 + 21) / 113][Stage 84:==================================================>   (105 + 8) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:=======================================>              (84 + 30) / 114][Stage 85:============================================>         (93 + 21) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.123685305 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430846317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:===================================>                  (78 + 42) / 120][Stage 86:==========================================>           (94 + 26) / 120][Stage 86:===================================================>  (114 + 6) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:=============================>                        (65 + 56) / 121][Stage 87:==================================>                   (77 + 44) / 121][Stage 87:=========================================>            (93 + 28) / 121][Stage 87:==================================================>   (113 + 8) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.357487392 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380901123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=================================>                    (70 + 43) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:============================================>         (93 + 20) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:=======================================>              (84 + 30) / 114][Stage 89:=============================================>        (95 + 19) / 114][Stage 89:==================================================>   (106 + 8) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.08142679 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359730964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=====================================>                (80 + 35) / 115][Stage 90:======================================>               (83 + 32) / 115][Stage 90:============================================>         (94 + 21) / 115][Stage 90:==================================================>   (108 + 7) / 115]                                                                                [Stage 91:======================================>               (83 + 33) / 116][Stage 91:=============================================>        (97 + 19) / 116][Stage 91:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.763236909 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418268234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:==============================>                       (64 + 49) / 113][Stage 92:====================================>                 (77 + 36) / 113][Stage 92:===============================================>      (99 + 14) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:=============================>                        (63 + 51) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.124575157 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432633363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (63 + 57) / 120][Stage 94:=================================>                    (74 + 46) / 120][Stage 94:========================================>             (89 + 31) / 120][Stage 94:===============================================>     (108 + 12) / 120][Stage 94:=====================================================>(119 + 1) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:===============================>                      (70 + 51) / 121][Stage 95:====================================>                 (82 + 39) / 121][Stage 95:=============================================>       (104 + 17) / 121][Stage 95:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.112163836 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398599958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:================================>                     (67 + 46) / 113][Stage 96:======================================>               (81 + 32) / 113][Stage 96:==============================================>       (98 + 15) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:=============================>                        (63 + 51) / 114][Stage 97:====================================>                 (78 + 36) / 114][Stage 97:==========================================>           (89 + 25) / 114][Stage 97:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.195537757 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380832845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (75 + 43) / 118][Stage 98:======================================>               (84 + 34) / 118][Stage 98:==============================================>      (104 + 14) / 118][Stage 98:=====================================================>(117 + 1) / 118]                                                                                [Stage 99:===================================>                  (78 + 41) / 119][Stage 99:========================================>             (89 + 30) / 119][Stage 99:================================================>    (108 + 11) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.908760574 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429818518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:============================>                        (65 + 56) / 121][Stage 100:====================================>                (84 + 37) / 121][Stage 100:=============================================>      (106 + 15) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:=============================>                       (68 + 54) / 122][Stage 101:====================================>                (83 + 39) / 122][Stage 101:=================================================>   (113 + 9) / 122][Stage 101:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.932668441 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428587916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:>                                                      (0 + 0) / 121][Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (66 + 55) / 121][Stage 102:=====================================>               (85 + 36) / 121][Stage 102:=============================================>      (106 + 15) / 121]                                                                                [Stage 103:===========================>                         (63 + 59) / 122][Stage 103:==============================>                      (71 + 51) / 122][Stage 103:====================================>                (85 + 37) / 122][Stage 103:==============================================>     (109 + 13) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.044521377 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389606863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (71 + 44) / 115][Stage 104:=========================================>           (91 + 24) / 115][Stage 104:===============================================>    (104 + 11) / 115][Stage 104:=================================================>   (107 + 8) / 115][Stage 104:=====================================================(115 + 0) / 115]                                                                                [Stage 105:===============================>                     (70 + 46) / 116][Stage 105:=====================================>               (82 + 34) / 116][Stage 105:==========================================>          (94 + 22) / 116][Stage 105:===============================================>    (105 + 11) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.282359973 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417554655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (73 + 42) / 115][Stage 106:===========================================>         (95 + 20) / 115][Stage 106:===============================================>    (105 + 10) / 115][Stage 106:====================================================>(113 + 2) / 115]                                                                                [Stage 107:====================================>                (80 + 36) / 116][Stage 107:=========================================>           (90 + 26) / 116][Stage 107:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.757652396 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433138665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (64 + 57) / 121][Stage 108:==================================>                  (78 + 43) / 121][Stage 108:===========================================>        (101 + 20) / 121][Stage 108:===================================================> (118 + 3) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:============================>                        (66 + 56) / 122][Stage 109:====================================>                (85 + 37) / 122][Stage 109:==============================================>     (108 + 14) / 122]                                                                                Time elapsed: 3.092479575 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378126161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===================================>                 (76 + 37) / 113][Stage 110:==========================================>          (90 + 23) / 113][Stage 110:===============================================>    (103 + 10) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===================================>                 (76 + 38) / 114][Stage 111:========================================>            (87 + 27) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.01494177 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386502877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==============================>                      (66 + 49) / 115][Stage 112:======================================>              (83 + 32) / 115][Stage 112:================================================>    (106 + 9) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:====================================>                (79 + 37) / 116][Stage 113:==========================================>          (93 + 23) / 116][Stage 113:=================================================>   (108 + 8) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.795321713 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384037273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=============================>                       (65 + 50) / 115][Stage 114:===================================>                 (78 + 37) / 115][Stage 114:========================================>            (87 + 28) / 115][Stage 114:==============================================>     (102 + 13) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:====================================>                (80 + 36) / 116][Stage 115:==========================================>          (94 + 22) / 116][Stage 115:================================================>    (107 + 9) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.184799399 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409306521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (64 + 56) / 120][Stage 116:=====================================>               (85 + 35) / 120][Stage 116:=================================================>   (111 + 9) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:================================>                    (75 + 46) / 121][Stage 117:==========================================>          (96 + 25) / 121][Stage 117:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.90633263 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347880025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (82 + 33) / 115][Stage 118:=============================================>       (99 + 16) / 115][Stage 118:=================================================>   (107 + 8) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:=====================================>               (83 + 33) / 116][Stage 119:=========================================>           (91 + 25) / 116][Stage 119:==============================================>     (103 + 13) / 116][Stage 119:===================================================> (113 + 3) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.802184334 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416071195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:================================>                    (73 + 47) / 120][Stage 120:=======================================>             (90 + 30) / 120][Stage 120:==================================================>  (115 + 5) / 120]                                                                                [Stage 121:===========================>                         (63 + 58) / 121][Stage 121:==============================>                      (69 + 52) / 121][Stage 121:======================================>              (89 + 32) / 121][Stage 121:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.96682833 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407588119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:===========================>                         (63 + 58) / 121][Stage 122:===================================>                 (82 + 39) / 121][Stage 122:============================================>       (103 + 18) / 121][Stage 122:===================================================> (118 + 3) / 121]                                                                                [Stage 123:===========================>                         (63 + 59) / 122][Stage 123:==============================>                      (70 + 52) / 122][Stage 123:=========================================>           (96 + 26) / 122][Stage 123:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.056373904 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349949209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (84 + 31) / 115][Stage 124:=========================================>           (90 + 25) / 115][Stage 124:=============================================>      (101 + 14) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:=======================================>             (86 + 30) / 116][Stage 125:===============================================>    (105 + 11) / 116][Stage 125:===================================================> (113 + 3) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.031535298 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395788477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:====================================>                (82 + 36) / 118][Stage 126:============================================>       (102 + 16) / 118][Stage 126:=================================================>   (110 + 8) / 118]                                                                                [Stage 127:=================================>                   (75 + 44) / 119][Stage 127:=====================================>               (85 + 34) / 119][Stage 127:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 2.799353577 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385832858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:==================================>                  (77 + 41) / 118][Stage 128:==========================================>          (95 + 23) / 118][Stage 128:===================================================> (114 + 4) / 118]                                                                                [Stage 129:================================>                    (74 + 45) / 119][Stage 129:=======================================>             (89 + 30) / 119][Stage 129:==============================================>     (107 + 12) / 119][Stage 129:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.848134511 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40224453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:=============================>                       (62 + 51) / 113][Stage 130:===================================>                 (76 + 37) / 113][Stage 130:============================================>        (95 + 18) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:=============================>                       (63 + 51) / 114][Stage 131:===================================>                 (77 + 37) / 114][Stage 131:==============================================>      (99 + 15) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.053697348 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454731971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:=================================>                   (74 + 44) / 118][Stage 132:===================================>                 (78 + 40) / 118][Stage 132:=======================================>             (88 + 30) / 118][Stage 132:===============================================>    (107 + 11) / 118][Stage 132:====================================================>(116 + 2) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:==================================>                  (78 + 41) / 119][Stage 133:======================================>              (86 + 33) / 119][Stage 133:===========================================>         (98 + 21) / 119][Stage 133:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.459579668 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406757859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:================================>                    (69 + 44) / 113][Stage 134:====================================>                (78 + 35) / 113][Stage 134:=============================================>       (97 + 16) / 113][Stage 134:==================================================>  (107 + 6) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:===============================>                     (67 + 47) / 114][Stage 135:==========================================>          (92 + 22) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.175372545 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404421796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (62 + 58) / 120][Stage 136:===================================>                 (81 + 39) / 120][Stage 136:===========================================>        (100 + 20) / 120][Stage 136:===================================================> (116 + 4) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:============================>                        (66 + 55) / 121][Stage 137:====================================>                (83 + 38) / 121][Stage 137:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.813408994 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397763823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:============================>                        (61 + 52) / 113][Stage 138:=====================================>               (81 + 32) / 113][Stage 138:==============================================>     (101 + 12) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:======================================>              (82 + 32) / 114][Stage 139:==========================================>          (91 + 23) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.097954182 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34365502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:======================================>              (83 + 32) / 115][Stage 140:==========================================>          (92 + 23) / 115][Stage 140:=================================================>   (108 + 7) / 115][Stage 140:===================================================> (111 + 4) / 115][Stage 140:===================================================> (112 + 3) / 115]                                                                                [Stage 141:======================================>              (84 + 32) / 116][Stage 141:=========================================>           (91 + 25) / 116][Stage 141:=================================================>   (109 + 7) / 116][Stage 141:===================================================> (112 + 4) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.987601772 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376237082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:=======================================>             (89 + 29) / 118][Stage 142:===============================================>    (107 + 11) / 118][Stage 142:====================================================>(116 + 2) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:===================================>                 (79 + 40) / 119][Stage 143:==========================================>          (96 + 23) / 119][Stage 143:==================================================>  (113 + 6) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.098588768 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403600795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:=============================>                       (67 + 53) / 120][Stage 144:===================================>                 (80 + 40) / 120][Stage 144:==========================================>          (97 + 23) / 120][Stage 144:==================================================>  (114 + 6) / 120][Stage 144:====================================================>(119 + 1) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:===============================>                     (72 + 49) / 121][Stage 145:========================================>            (93 + 28) / 121][Stage 145:============================================>       (103 + 18) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.223718991 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340297433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:======================================>              (84 + 31) / 115][Stage 146:============================================>        (96 + 19) / 115][Stage 146:================================================>    (106 + 9) / 115][Stage 146:====================================================>(113 + 2) / 115]                                                                                [Stage 147:====================================>                (80 + 36) / 116][Stage 147:=====================================>               (83 + 33) / 116][Stage 147:===========================================>         (95 + 21) / 116][Stage 147:=================================================>   (109 + 7) / 116][Stage 147:===================================================> (113 + 3) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.031869425 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41095227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 59) / 120][Stage 148:================================>                    (74 + 46) / 120][Stage 148:=========================================>           (94 + 26) / 120][Stage 148:===============================================>    (110 + 10) / 120][Stage 148:====================================================>(119 + 1) / 120]                                                                                [Stage 149:==========================>                          (61 + 60) / 121][Stage 149:===============================>                     (73 + 48) / 121][Stage 149:======================================>              (88 + 33) / 121][Stage 149:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.991028909 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375325721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:===================================>                 (79 + 39) / 118][Stage 150:=========================================>           (92 + 26) / 118][Stage 150:=================================================>   (111 + 7) / 118]                                                                                [Stage 151:================================>                    (74 + 45) / 119][Stage 151:========================================>            (91 + 28) / 119][Stage 151:===============================================>    (109 + 10) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.889093655 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346818167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:===========================================>         (94 + 21) / 115][Stage 152:=================================================>   (107 + 8) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:======================================>              (85 + 31) / 116][Stage 153:=============================================>      (101 + 15) / 116][Stage 153:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.725007141 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419163707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:============================>                        (65 + 56) / 121][Stage 154:==================================>                  (78 + 43) / 121][Stage 154:==============================================>     (109 + 12) / 121][Stage 154:==================================================>  (116 + 5) / 121]                                                                                [Stage 155:============================>                        (65 + 57) / 122][Stage 155:====================================>                (84 + 38) / 122][Stage 155:============================================>       (105 + 17) / 122][Stage 155:=================================================>   (113 + 9) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.215543747 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385675042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (71 + 44) / 115][Stage 156:=========================================>           (91 + 24) / 115][Stage 156:===============================================>    (105 + 10) / 115][Stage 156:==================================================>  (110 + 5) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:===============================>                     (70 + 46) / 116][Stage 157:=====================================>               (82 + 34) / 116][Stage 157:============================================>        (97 + 19) / 116][Stage 157:==================================================>  (111 + 5) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.086870562 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407637065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:================================>                    (73 + 47) / 120][Stage 158:=========================================>           (94 + 26) / 120][Stage 158:==================================================>  (114 + 6) / 120]                                                                                [Stage 159:===========================>                         (62 + 59) / 121][Stage 159:==================================>                  (79 + 42) / 121][Stage 159:==========================================>          (96 + 25) / 121][Stage 159:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.930225682 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404326679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:==============================>                      (69 + 51) / 120][Stage 160:=====================================>               (85 + 35) / 120][Stage 160:===========================================>         (98 + 22) / 120][Stage 160:===================================================> (117 + 3) / 120]                                                                                [Stage 161:============================>                        (64 + 57) / 121][Stage 161:=================================>                   (77 + 44) / 121][Stage 161:==========================================>          (98 + 23) / 121][Stage 161:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.020490999 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404534379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (60 + 53) / 113][Stage 162:==================================>                  (74 + 39) / 113][Stage 162:==========================================>          (90 + 23) / 113][Stage 162:===================================================> (109 + 4) / 113]                                                                                [Stage 163:============================>                        (61 + 53) / 114][Stage 163:=================================>                   (72 + 42) / 114][Stage 163:=============================================>       (97 + 17) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.886265162 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396569465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (61 + 52) / 113][Stage 164:====================================>                (78 + 35) / 113][Stage 164:========================================>            (87 + 26) / 113][Stage 164:================================================>    (104 + 9) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:==================================>                  (74 + 40) / 114][Stage 165:===========================================>         (94 + 20) / 114][Stage 165:==================================================>  (108 + 6) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.136212046 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410214951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===============================>                     (72 + 49) / 121][Stage 166:=======================================>             (90 + 31) / 121][Stage 166:=============================================>      (107 + 14) / 121][Stage 166:===================================================> (117 + 4) / 121]                                                                                [Stage 167:===========================>                         (63 + 59) / 122][Stage 167:==============================>                      (70 + 52) / 122][Stage 167:==========================================>          (98 + 24) / 122][Stage 167:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.097049733 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372733859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:==================================>                  (77 + 41) / 118][Stage 168:=======================================>             (89 + 29) / 118][Stage 168:=============================================>      (104 + 14) / 118][Stage 168:===================================================> (115 + 3) / 118]                                                                                [Stage 169:================================>                    (73 + 46) / 119][Stage 169:====================================>                (81 + 38) / 119][Stage 169:=======================================>             (88 + 31) / 119][Stage 169:==========================================>          (96 + 23) / 119][Stage 169:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.188881112 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371497477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (77 + 36) / 113][Stage 170:========================================>            (86 + 27) / 113][Stage 170:============================================>        (95 + 18) / 113][Stage 170:=================================================>   (106 + 7) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:=====================================>               (80 + 34) / 114][Stage 171:==========================================>          (91 + 23) / 114][Stage 171:==============================================>     (102 + 12) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.986339804 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394499042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==============================>                      (67 + 48) / 115][Stage 172:===================================>                 (78 + 37) / 115][Stage 172:=========================================>           (91 + 24) / 115][Stage 172:=================================================>   (108 + 7) / 115][Stage 172:==================================================>  (110 + 5) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:====================================>                (80 + 36) / 116][Stage 173:=========================================>           (91 + 25) / 116][Stage 173:================================================>    (107 + 9) / 116][Stage 173:==================================================>  (111 + 5) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.404846734 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410666853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:>                                                      (0 + 0) / 121][Stage 174:==========================>                          (60 + 61) / 121][Stage 174:============================>                        (64 + 57) / 121][Stage 174:===================================>                 (81 + 40) / 121][Stage 174:============================================>       (103 + 18) / 121][Stage 174:====================================================>(119 + 2) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:==============================>                      (70 + 52) / 122][Stage 175:=======================================>             (91 + 31) / 122][Stage 175:==============================================>     (109 + 13) / 122][Stage 175:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.064535939 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345631967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (84 + 31) / 115][Stage 176:==========================================>          (92 + 23) / 115][Stage 176:===============================================>    (104 + 11) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:=======================================>             (87 + 29) / 116][Stage 177:============================================>        (97 + 19) / 116][Stage 177:===============================================>    (106 + 10) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.77862451 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404111801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:===========================>                         (63 + 58) / 121][Stage 178:=================================>                   (77 + 44) / 121][Stage 178:===========================================>         (99 + 22) / 121][Stage 178:=================================================>   (113 + 8) / 121][Stage 178:====================================================>(120 + 1) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:===========================>                         (64 + 58) / 122][Stage 179:===================================>                 (82 + 40) / 122][Stage 179:=============================================>      (106 + 16) / 122][Stage 179:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.342331782 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402490818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (62 + 59) / 121][Stage 180:================================>                    (74 + 47) / 121][Stage 180:==========================================>          (97 + 24) / 121][Stage 180:=================================================>   (112 + 9) / 121][Stage 180:====================================================>(120 + 1) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:===============================>                     (72 + 50) / 122][Stage 181:=======================================>             (91 + 31) / 122][Stage 181:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.053493705 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416325105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (61 + 52) / 113][Stage 182:=================================>                   (71 + 42) / 113][Stage 182:=========================================>           (88 + 25) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=================================>                   (73 + 41) / 114][Stage 183:==========================================>          (91 + 23) / 114][Stage 183:==================================================>  (109 + 5) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.193402479 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424088321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:===========================>                         (62 + 59) / 121][Stage 184:===============================>                     (72 + 49) / 121][Stage 184:========================================>            (92 + 29) / 121][Stage 184:===============================================>    (110 + 11) / 121][Stage 184:====================================================>(119 + 2) / 121]                                                                                [Stage 185:==========================>                          (61 + 61) / 122][Stage 185:=============================>                       (69 + 53) / 122][Stage 185:======================================>              (88 + 34) / 122][Stage 185:==============================================>     (108 + 14) / 122][Stage 185:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.217178567 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404698343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:===========================>                         (62 + 59) / 121][Stage 186:===============================>                     (73 + 48) / 121][Stage 186:==========================================>          (98 + 23) / 121][Stage 186:==================================================>  (116 + 5) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:=============================>                       (68 + 54) / 122][Stage 187:=========================================>           (96 + 26) / 122][Stage 187:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.084193772 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409120192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:==========================>                          (61 + 60) / 121][Stage 188:=================================>                   (76 + 45) / 121][Stage 188:=============================================>      (105 + 16) / 121][Stage 188:===================================================> (118 + 3) / 121][Stage 188:====================================================>(120 + 1) / 121]                                                                                [Stage 189:==========================>                          (61 + 61) / 122][Stage 189:=============================>                       (67 + 55) / 122][Stage 189:======================================>              (89 + 33) / 122][Stage 189:=================================================>   (115 + 7) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.191078081 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398396231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:=============================>                       (68 + 53) / 121][Stage 190:=====================================>               (86 + 35) / 121][Stage 190:=============================================>      (107 + 14) / 121][Stage 190:====================================================>(120 + 1) / 121]                                                                                [Stage 191:==========================>                          (61 + 61) / 122][Stage 191:===============================>                     (73 + 49) / 122][Stage 191:=========================================>           (95 + 27) / 122][Stage 191:===============================================>    (112 + 10) / 122][Stage 191:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.170137763 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376073209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (72 + 43) / 115][Stage 192:====================================>                (79 + 36) / 115][Stage 192:=============================================>      (101 + 14) / 115][Stage 192:===================================================> (111 + 4) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:==============================>                      (67 + 49) / 116][Stage 193:====================================>                (80 + 36) / 116][Stage 193:============================================>        (98 + 18) / 116][Stage 193:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.774962619 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350198419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (82 + 33) / 115][Stage 194:=========================================>           (90 + 25) / 115][Stage 194:=============================================>       (99 + 16) / 115][Stage 194:==================================================>  (109 + 6) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:=======================================>             (87 + 29) / 116][Stage 195:=============================================>      (102 + 14) / 116][Stage 195:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.74371754 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389960236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===============================>                     (68 + 47) / 115][Stage 196:=====================================>               (81 + 34) / 115][Stage 196:=========================================>           (91 + 24) / 115][Stage 196:===============================================>    (105 + 10) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:================================>                    (71 + 45) / 116][Stage 197:=====================================>               (82 + 34) / 116][Stage 197:==========================================>          (94 + 22) / 116][Stage 197:=================================================>   (108 + 8) / 116][Stage 197:====================================================>(114 + 2) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.185366419 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434165403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:================================>                    (74 + 47) / 121][Stage 198:=========================================>           (94 + 27) / 121][Stage 198:============================================>       (103 + 18) / 121][Stage 198:====================================================>(120 + 1) / 121]                                                                                [Stage 199:==========================>                          (61 + 61) / 122][Stage 199:=============================>                       (69 + 53) / 122][Stage 199:====================================>                (84 + 38) / 122][Stage 199:=============================================>      (106 + 16) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.111804319 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376966552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (73 + 45) / 118][Stage 200:=====================================>               (84 + 34) / 118][Stage 200:=============================================>      (104 + 14) / 118][Stage 200:===================================================> (114 + 4) / 118]                                                                                [Stage 201:================================>                    (74 + 45) / 119][Stage 201:=====================================>               (85 + 34) / 119][Stage 201:=============================================>      (103 + 16) / 119][Stage 201:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.043698529 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m52.152s
user	11m35.092s
sys	0m28.076s
