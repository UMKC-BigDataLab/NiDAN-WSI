Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 07:29:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:29:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:29:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:29:31 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 07:29:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:29:43 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522072932-0430).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.420438943 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.633596242 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.673225297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============================>                       (65 + 50) / 115][Stage 2:==================================>                    (72 + 43) / 115][Stage 2:==================================>                    (73 + 42) / 115][Stage 2:=======================================>               (83 + 32) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:===========================================>           (91 + 24) / 115][Stage 2:===============================================>      (102 + 13) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:===================================>                   (74 + 42) / 116][Stage 3:=====================================>                 (79 + 37) / 116][Stage 3:========================================>              (86 + 30) / 116][Stage 3:==========================================>            (90 + 26) / 116][Stage 3:================================================>     (104 + 12) / 116][Stage 3:====================================================>  (111 + 5) / 116][Stage 3:=====================================================> (113 + 3) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.941145663 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.66391041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (66 + 52) / 118][Stage 4:=================================>                     (71 + 47) / 118][Stage 4:==================================>                    (73 + 45) / 118][Stage 4:===================================>                   (77 + 41) / 118][Stage 4:======================================>                (82 + 36) / 118][Stage 4:=========================================>             (89 + 29) / 118][Stage 4:==============================================>       (102 + 16) / 118][Stage 4:=================================================>    (108 + 10) / 118][Stage 4:====================================================>  (112 + 6) / 118][Stage 4:======================================================>(117 + 1) / 118]                                                                                [Stage 5:================================>                      (71 + 48) / 119][Stage 5:=================================>                     (72 + 47) / 119][Stage 5:==================================>                    (74 + 45) / 119][Stage 5:======================================>                (83 + 36) / 119][Stage 5:===========================================>           (94 + 25) / 119][Stage 5:==============================================>       (102 + 17) / 119][Stage 5:================================================>     (106 + 13) / 119][Stage 5:===================================================>   (112 + 7) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.941867668 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.689413648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:===================================>                   (72 + 41) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:=====================================================> (109 + 4) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:==============================>                        (64 + 50) / 114][Stage 7:===================================>                   (73 + 41) / 114][Stage 7:========================================>              (84 + 30) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:====================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.932530024 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522560298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:==============================================>       (100 + 15) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:========================================>              (85 + 31) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:===============================================>      (102 + 14) / 116][Stage 9:=================================================>    (106 + 10) / 116][Stage 9:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.460931024 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.583914366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:===============================>                      (70 + 51) / 121][Stage 10:=========================================>            (94 + 27) / 121][Stage 10:==============================================>      (106 + 15) / 121][Stage 10:==================================================>   (114 + 7) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:===========================>                          (63 + 59) / 122][Stage 11:================================>                     (73 + 49) / 122][Stage 11:=========================================>            (94 + 28) / 122][Stage 11:================================================>    (111 + 11) / 122][Stage 11:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.787697065 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.625980995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (67 + 54) / 121][Stage 12:====================================>                 (81 + 40) / 121][Stage 12:=========================================>            (92 + 29) / 121][Stage 12:=============================================>       (105 + 16) / 121][Stage 12:===================================================>  (115 + 6) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:=============================>                        (66 + 56) / 122][Stage 13:=====================================>                (84 + 38) / 122][Stage 13:===========================================>         (100 + 22) / 122][Stage 13:===============================================>     (110 + 12) / 122][Stage 13:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.937300065 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527292234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (69 + 46) / 115][Stage 14:=====================================>                (80 + 35) / 115][Stage 14:=========================================>            (88 + 27) / 115][Stage 14:=============================================>        (96 + 19) / 115][Stage 14:===================================================>  (110 + 5) / 115]                                                                                [Stage 15:=================================>                    (71 + 45) / 116][Stage 15:=========================================>            (89 + 27) / 116][Stage 15:=============================================>        (98 + 18) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:===================================================>  (111 + 5) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.929724383 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.567232475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (66 + 54) / 120][Stage 16:==================================>                   (77 + 43) / 120][Stage 16:============================================>        (100 + 20) / 120][Stage 16:==================================================>   (112 + 8) / 120][Stage 16:=====================================================>(119 + 1) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (65 + 56) / 121][Stage 17:==================================>                   (78 + 43) / 121][Stage 17:============================================>        (102 + 19) / 121][Stage 17:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.445506964 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57165353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (71 + 42) / 113][Stage 18:====================================>                 (77 + 36) / 113][Stage 18:=========================================>            (86 + 27) / 113][Stage 18:==============================================>       (98 + 15) / 113][Stage 18:===================================================>  (107 + 6) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:==================================>                   (72 + 42) / 114][Stage 19:======================================>               (81 + 33) / 114][Stage 19:==============================================>       (99 + 15) / 114][Stage 19:====================================================> (110 + 4) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.41106082 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495235956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:===================================>                  (77 + 41) / 118][Stage 20:========================================>             (88 + 30) / 118][Stage 20:============================================>         (97 + 21) / 118][Stage 20:===================================================>  (113 + 5) / 118][Stage 20:=====================================================>(116 + 2) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:==================================>                   (77 + 42) / 119][Stage 21:=======================================>              (87 + 32) / 119][Stage 21:===========================================>          (96 + 23) / 119][Stage 21:===================================================>  (114 + 5) / 119][Stage 21:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.755940977 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472491966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (74 + 44) / 118][Stage 22:=====================================>                (82 + 36) / 118][Stage 22:=========================================>            (91 + 27) / 118][Stage 22:===============================================>     (106 + 12) / 118][Stage 22:===================================================>  (113 + 5) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:===================================>                  (79 + 40) / 119][Stage 23:=======================================>              (87 + 32) / 119][Stage 23:============================================>        (100 + 19) / 119][Stage 23:==================================================>   (112 + 7) / 119][Stage 23:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.720792371 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542535841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (62 + 59) / 121][Stage 24:=================================>                    (74 + 47) / 121][Stage 24:=========================================>            (92 + 29) / 121][Stage 24:================================================>    (110 + 11) / 121][Stage 24:====================================================> (118 + 3) / 121]                                                                                [Stage 25:===========================>                          (62 + 60) / 122][Stage 25:================================>                     (74 + 48) / 122][Stage 25:========================================>             (92 + 30) / 122][Stage 25:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.327458468 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421826011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (83 + 32) / 115][Stage 26:==========================================>           (90 + 25) / 115][Stage 26:===============================================>     (104 + 11) / 115][Stage 26:====================================================> (111 + 4) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:======================================>               (82 + 34) / 116][Stage 27:==========================================>           (91 + 25) / 116][Stage 27:================================================>    (106 + 10) / 116][Stage 27:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.059797429 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480730472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:=======================================>              (82 + 31) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:==================================>                   (72 + 42) / 114][Stage 29:========================================>             (86 + 28) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.152743595 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52886846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:============================>                         (64 + 56) / 120][Stage 30:=======================================>              (87 + 33) / 120][Stage 30:===============================================>     (107 + 13) / 120][Stage 30:====================================================> (116 + 4) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:================================>                     (72 + 49) / 121][Stage 31:========================================>             (90 + 31) / 121][Stage 31:==============================================>      (107 + 14) / 121][Stage 31:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.481377943 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495831779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:===============================>                      (70 + 50) / 120][Stage 32:========================================>             (89 + 31) / 120][Stage 32:==================================================>   (113 + 7) / 120]                                                                                [Stage 33:===========================>                          (62 + 59) / 121][Stage 33:==============================>                       (68 + 53) / 121][Stage 33:======================================>               (87 + 34) / 121][Stage 33:==================================================>   (113 + 8) / 121][Stage 33:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.217506297 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450201999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:=================================>                    (74 + 44) / 118][Stage 34:========================================>             (89 + 29) / 118][Stage 34:================================================>    (107 + 11) / 118][Stage 34:=====================================================>(116 + 2) / 118]                                                                                [Stage 35:==================================>                   (75 + 44) / 119][Stage 35:========================================>             (90 + 29) / 119][Stage 35:=============================================>       (103 + 16) / 119][Stage 35:===================================================>  (114 + 5) / 119][Stage 35:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.332714131 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479853551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (81 + 32) / 113][Stage 36:==========================================>           (89 + 24) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:====================================================> (110 + 3) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:=====================================>                (80 + 34) / 114][Stage 37:=========================================>            (88 + 26) / 114][Stage 37:=============================================>        (97 + 17) / 114][Stage 37:================================================>    (104 + 10) / 114][Stage 37:===================================================>  (108 + 6) / 114][Stage 37:====================================================> (110 + 4) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.827697988 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463219239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===============================>                      (67 + 48) / 115][Stage 38:======================================>               (83 + 32) / 115][Stage 38:=============================================>        (97 + 18) / 115][Stage 38:=================================================>    (106 + 9) / 115][Stage 38:====================================================> (112 + 3) / 115]                                                                                [Stage 39:==================================>                   (74 + 42) / 116][Stage 39:======================================>               (83 + 33) / 116][Stage 39:===============================================>     (104 + 12) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.27281899 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467911434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:==================================>                   (73 + 40) / 113][Stage 40:=======================================>              (82 + 31) / 113][Stage 40:=============================================>        (95 + 18) / 113][Stage 40:===================================================>  (107 + 6) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:=================================>                    (71 + 43) / 114][Stage 41:==========================================>           (89 + 25) / 114][Stage 41:===============================================>     (103 + 11) / 114][Stage 41:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.420964385 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523564505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:===============================>                      (66 + 47) / 113][Stage 42:=======================================>              (82 + 31) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:============================>                         (61 + 53) / 114][Stage 43:===============================>                      (67 + 47) / 114][Stage 43:=============================================>        (95 + 19) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.982985804 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413136827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (70 + 43) / 113][Stage 44:======================================>               (80 + 33) / 113][Stage 44:===========================================>          (92 + 21) / 113][Stage 44:=================================================>    (104 + 9) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:========================================>             (85 + 29) / 114][Stage 45:============================================>         (94 + 20) / 114][Stage 45:==================================================>   (107 + 7) / 114][Stage 45:=====================================================>(112 + 2) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.176016677 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399361764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===================================>                  (75 + 38) / 113][Stage 46:===========================================>          (90 + 23) / 113][Stage 46:=============================================>        (96 + 17) / 113][Stage 46:===================================================>  (108 + 5) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:==================================>                   (73 + 41) / 114][Stage 47:=========================================>            (87 + 27) / 114][Stage 47:=============================================>        (96 + 18) / 114][Stage 47:=================================================>    (105 + 9) / 114][Stage 47:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.083577034 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438809506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:=================================>                    (74 + 44) / 118][Stage 48:======================================>               (84 + 34) / 118][Stage 48:============================================>         (97 + 21) / 118][Stage 48:===================================================>  (113 + 5) / 118]                                                                                [Stage 49:==================================>                   (76 + 43) / 119][Stage 49:=====================================>                (83 + 36) / 119][Stage 49:=========================================>            (91 + 28) / 119][Stage 49:============================================>        (101 + 18) / 119][Stage 49:===================================================>  (114 + 5) / 119][Stage 49:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.432713106 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498321708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:===========================>                          (62 + 59) / 121][Stage 50:================================>                     (73 + 48) / 121][Stage 50:============================================>        (102 + 19) / 121][Stage 50:==================================================>   (113 + 8) / 121][Stage 50:====================================================> (118 + 3) / 121]                                                                                [Stage 51:============================>                         (65 + 57) / 122][Stage 51:===================================>                  (81 + 41) / 122][Stage 51:===========================================>         (101 + 21) / 122][Stage 51:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.181518397 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436951741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 42) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:=============================================>        (97 + 18) / 115][Stage 52:==================================================>   (107 + 8) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:==================================>                   (74 + 42) / 116][Stage 53:========================================>             (88 + 28) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:====================================================> (112 + 4) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.298055996 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422855517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:=================================>                    (73 + 45) / 118][Stage 54:===================================>                  (77 + 41) / 118][Stage 54:======================================>               (84 + 34) / 118][Stage 54:=============================================>        (99 + 19) / 118][Stage 54:====================================================> (114 + 4) / 118]                                                                                [Stage 55:=================================>                    (74 + 45) / 119][Stage 55:===================================>                  (78 + 41) / 119][Stage 55:=======================================>              (86 + 33) / 119][Stage 55:=============================================>       (102 + 17) / 119][Stage 55:==================================================>   (111 + 8) / 119][Stage 55:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.702787939 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446013509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:============================>                         (64 + 56) / 120][Stage 56:==================================>                   (76 + 44) / 120][Stage 56:============================================>        (101 + 19) / 120][Stage 56:===================================================>  (114 + 6) / 120]                                                                                [Stage 57:===========================>                          (62 + 59) / 121][Stage 57:=================================>                    (74 + 47) / 121][Stage 57:==========================================>           (95 + 26) / 121][Stage 57:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.994476887 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469819401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (61 + 60) / 121][Stage 58:==================================>                   (77 + 44) / 121][Stage 58:===========================================>          (98 + 23) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:=============================>                        (66 + 56) / 122][Stage 59:======================================>               (86 + 36) / 122][Stage 59:==============================================>      (108 + 14) / 122][Stage 59:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.073552351 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457848985 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:>                                                       (0 + 0) / 113][Stage 60:===========================>                          (58 + 55) / 113][Stage 60:=============================>                        (62 + 51) / 113][Stage 60:===================================>                  (74 + 39) / 113][Stage 60:===============================================>     (101 + 12) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:===============================>                      (67 + 47) / 114][Stage 61:==========================================>           (90 + 24) / 114][Stage 61:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.176161147 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432877849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:================================>                     (68 + 45) / 113][Stage 62:==========================================>           (88 + 25) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:================================>                     (68 + 46) / 114][Stage 63:==========================================>           (89 + 25) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.955179829 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392644245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=======================================>              (82 + 31) / 113][Stage 64:===========================================>          (91 + 22) / 113][Stage 64:===============================================>     (102 + 11) / 113][Stage 64:===================================================>  (107 + 6) / 113][Stage 64:====================================================> (109 + 4) / 113]                                                                                [Stage 65:======================================>               (82 + 32) / 114][Stage 65:==========================================>           (90 + 24) / 114][Stage 65:===============================================>     (102 + 12) / 114][Stage 65:====================================================> (110 + 4) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.251681001 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430700822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:>                                                       (0 + 0) / 113][Stage 66:===========================>                          (58 + 55) / 113][Stage 66:==============================>                       (63 + 50) / 113][Stage 66:===================================>                  (74 + 39) / 113][Stage 66:=============================================>        (95 + 18) / 113][Stage 66:===================================================>  (107 + 6) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:==============================>                       (65 + 49) / 114][Stage 67:===================================>                  (74 + 40) / 114][Stage 67:=============================================>        (95 + 19) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.415536065 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523056666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (72 + 43) / 115][Stage 68:=========================================>            (89 + 26) / 115][Stage 68:===============================================>     (104 + 11) / 115][Stage 68:====================================================> (111 + 4) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:===================================>                  (76 + 40) / 116][Stage 69:============================================>         (96 + 20) / 116][Stage 69:==================================================>   (109 + 7) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.030661665 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402332915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:=================================>                    (73 + 45) / 118][Stage 70:=====================================>                (83 + 35) / 118][Stage 70:==========================================>           (92 + 26) / 118][Stage 70:==============================================>      (104 + 14) / 118][Stage 70:====================================================> (115 + 3) / 118]                                                                                [Stage 71:==================================>                   (76 + 43) / 119][Stage 71:======================================>               (85 + 34) / 119][Stage 71:==========================================>           (94 + 25) / 119][Stage 71:===============================================>     (107 + 12) / 119][Stage 71:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.428658028 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429058238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (72 + 43) / 115][Stage 72:=======================================>              (85 + 30) / 115][Stage 72:===============================================>     (103 + 12) / 115][Stage 72:====================================================> (112 + 3) / 115]                                                                                [Stage 73:===================================>                  (76 + 40) / 116][Stage 73:=========================================>            (90 + 26) / 116][Stage 73:==============================================>      (101 + 15) / 116][Stage 73:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.14539366 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385072883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===================================>                  (74 + 39) / 113][Stage 74:========================================>             (85 + 28) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:=================================================>    (104 + 9) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:=====================================>                (80 + 34) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:==============================================>       (99 + 15) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.03781693 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371014439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=====================================>                (78 + 35) / 113][Stage 76:============================================>         (93 + 20) / 113][Stage 76:================================================>    (103 + 10) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:=====================================>                (79 + 35) / 114][Stage 77:=========================================>            (88 + 26) / 114][Stage 77:==============================================>      (100 + 14) / 114][Stage 77:===================================================>  (108 + 6) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.017574908 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386968309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===================================>                  (75 + 38) / 113][Stage 78:=========================================>            (87 + 26) / 113][Stage 78:==============================================>      (100 + 13) / 113][Stage 78:=====================================================>(111 + 2) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===================================>                  (74 + 40) / 114][Stage 79:==========================================>           (89 + 25) / 114][Stage 79:==============================================>       (98 + 16) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.073562602 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405364266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:===============================>                      (66 + 47) / 113][Stage 80:==========================================>           (89 + 24) / 113][Stage 80:==============================================>      (100 + 13) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:=============================>                        (62 + 52) / 114][Stage 81:===================================>                  (74 + 40) / 114][Stage 81:==============================================>       (99 + 15) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.035182545 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38738055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (75 + 43) / 118][Stage 82:======================================>               (85 + 33) / 118][Stage 82:==============================================>      (103 + 15) / 118][Stage 82:====================================================> (115 + 3) / 118]                                                                                [Stage 83:==================================>                   (76 + 43) / 119][Stage 83:=====================================>                (82 + 37) / 119][Stage 83:============================================>        (101 + 18) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.969478964 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428320636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:=============================>                        (61 + 52) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:=============================================>        (96 + 17) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:=================================>                    (70 + 44) / 114][Stage 85:==========================================>           (90 + 24) / 114][Stage 85:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.942455422 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540625341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (61 + 59) / 120][Stage 86:================================>                     (73 + 47) / 120][Stage 86:=====================================>                (84 + 36) / 120][Stage 86:================================================>    (109 + 11) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=============================>                        (65 + 56) / 121][Stage 87:===================================>                  (80 + 41) / 121][Stage 87:===============================================>     (108 + 13) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.135417896 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39047556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==============================>                       (65 + 50) / 115][Stage 88:==================================>                   (73 + 42) / 115][Stage 88:=======================================>              (85 + 30) / 115][Stage 88:===============================================>     (102 + 13) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:==================================>                   (75 + 41) / 116][Stage 89:===========================================>          (93 + 23) / 116][Stage 89:=================================================>    (107 + 9) / 116][Stage 89:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.946886158 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424681025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (65 + 55) / 120][Stage 90:========================================>             (89 + 31) / 120][Stage 90:===============================================>     (107 + 13) / 120][Stage 90:=====================================================>(119 + 1) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:=============================>                        (67 + 54) / 121][Stage 91:===================================>                  (80 + 41) / 121][Stage 91:============================================>        (102 + 19) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.985431377 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372068224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:====================================>                 (76 + 37) / 113][Stage 92:===========================================>          (90 + 23) / 113][Stage 92:==============================================>       (98 + 15) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:====================================================> (110 + 3) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:=======================================>              (84 + 30) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:==============================================>      (101 + 13) / 114][Stage 93:===================================================>  (109 + 5) / 114][Stage 93:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.53223128 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358141761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=====================================>                (80 + 35) / 115][Stage 94:==========================================>           (90 + 25) / 115][Stage 94:===============================================>     (103 + 12) / 115][Stage 94:====================================================> (112 + 3) / 115]                                                                                [Stage 95:========================================>             (86 + 30) / 116][Stage 95:==============================================>      (102 + 14) / 116][Stage 95:====================================================> (112 + 4) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.707605545 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396925321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (71 + 44) / 115][Stage 96:=======================================>              (85 + 30) / 115][Stage 96:==============================================>      (101 + 14) / 115][Stage 96:===================================================>  (110 + 5) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:===============================>                      (68 + 48) / 116][Stage 97:=======================================>              (85 + 31) / 116][Stage 97:============================================>         (96 + 20) / 116][Stage 97:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.710148994 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371606023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:===================================>                  (77 + 41) / 118][Stage 98:======================================>               (85 + 33) / 118][Stage 98:==============================================>      (104 + 14) / 118][Stage 98:=====================================================>(117 + 1) / 118]                                                                                [Stage 99:=================================>                    (74 + 45) / 119][Stage 99:===================================>                  (79 + 40) / 119][Stage 99:==========================================>           (93 + 26) / 119][Stage 99:=================================================>    (110 + 9) / 119][Stage 99:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.268674392 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347661909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (81 + 34) / 115][Stage 100:=========================================>           (89 + 26) / 115][Stage 100:=============================================>       (99 + 16) / 115][Stage 100:===================================================> (112 + 3) / 115]                                                                                [Stage 101:=======================================>             (87 + 29) / 116][Stage 101:=============================================>      (102 + 14) / 116][Stage 101:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.596094805 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411534286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:==============================>                      (68 + 52) / 120][Stage 102:==================================>                  (79 + 41) / 120][Stage 102:===========================================>        (100 + 20) / 120][Stage 102:===================================================> (117 + 3) / 120]                                                                                [Stage 103:============================>                        (66 + 55) / 121][Stage 103:===================================>                 (82 + 39) / 121][Stage 103:===========================================>        (102 + 19) / 121][Stage 103:=================================================>   (113 + 8) / 121][Stage 103:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.214513248 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384934104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:=====================================>               (81 + 34) / 115][Stage 104:===========================================>         (94 + 21) / 115][Stage 104:=================================================>   (107 + 8) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:===============================>                     (69 + 47) / 116][Stage 105:===================================>                 (78 + 38) / 116][Stage 105:==========================================>          (92 + 24) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.199425623 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444678048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:=================================>                   (77 + 44) / 121][Stage 106:===========================================>        (101 + 20) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:=============================>                       (69 + 53) / 122][Stage 107:=========================================>           (95 + 27) / 122][Stage 107:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.066575077 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405703001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==============================>                      (67 + 48) / 115][Stage 108:======================================>              (83 + 32) / 115][Stage 108:===========================================>         (95 + 20) / 115][Stage 108:==================================================>  (110 + 5) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:===================================>                 (77 + 39) / 116][Stage 109:=========================================>           (91 + 25) / 116][Stage 109:================================================>    (107 + 9) / 116][Stage 109:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.942896988 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367241077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (74 + 44) / 118][Stage 110:====================================>                (82 + 36) / 118][Stage 110:============================================>       (102 + 16) / 118][Stage 110:==================================================>  (113 + 5) / 118]                                                                                [Stage 111:================================>                    (74 + 45) / 119][Stage 111:======================================>              (86 + 33) / 119][Stage 111:============================================>       (101 + 18) / 119][Stage 111:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.916075138 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399591865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:>                                                      (0 + 0) / 120][Stage 112:==========================>                          (60 + 60) / 120][Stage 112:============================>                        (65 + 55) / 120][Stage 112:===================================>                 (80 + 40) / 120][Stage 112:==============================================>     (108 + 12) / 120][Stage 112:====================================================>(118 + 2) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:==============================>                      (70 + 51) / 121][Stage 113:=======================================>             (90 + 31) / 121][Stage 113:============================================>       (103 + 18) / 121][Stage 113:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.083113333 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389017097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:==============================>                      (65 + 48) / 113][Stage 114:=========================================>           (89 + 24) / 113][Stage 114:=================================================>   (106 + 7) / 113]                                                                                [Stage 115:===========================>                         (59 + 55) / 114][Stage 115:================================>                    (70 + 44) / 114][Stage 115:=========================================>           (89 + 25) / 114][Stage 115:=================================================>   (106 + 8) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.219077023 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378731329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (73 + 42) / 115][Stage 116:======================================>              (84 + 31) / 115][Stage 116:=============================================>      (101 + 14) / 115][Stage 116:====================================================>(113 + 2) / 115]                                                                                [Stage 117:=================================>                   (73 + 43) / 116][Stage 117:========================================>            (89 + 27) / 116][Stage 117:=============================================>      (101 + 15) / 116][Stage 117:==================================================>  (110 + 6) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.317213912 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408118988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:============================>                        (65 + 56) / 121][Stage 118:====================================>                (83 + 38) / 121][Stage 118:===========================================>         (99 + 22) / 121][Stage 118:===================================================> (118 + 3) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:==============================>                      (71 + 51) / 122][Stage 119:========================================>            (94 + 28) / 122][Stage 119:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.152182765 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413719264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (62 + 59) / 121][Stage 120:=================================>                   (76 + 45) / 121][Stage 120:======================================>              (89 + 32) / 121][Stage 120:==============================================>     (108 + 13) / 121][Stage 120:====================================================>(120 + 1) / 121]                                                                                [Stage 121:==========================>                          (61 + 61) / 122][Stage 121:============================>                        (66 + 56) / 122][Stage 121:=====================================>               (86 + 36) / 122][Stage 121:=============================================>      (106 + 16) / 122][Stage 121:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.198892413 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457734284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (81 + 32) / 113][Stage 122:==========================================>          (90 + 23) / 113][Stage 122:==============================================>     (100 + 13) / 113][Stage 122:===================================================> (109 + 4) / 113]                                                                                [Stage 123:====================================>                (79 + 35) / 114][Stage 123:==========================================>          (92 + 22) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.051329434 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384375085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:===============================>                     (67 + 46) / 113][Stage 124:=====================================>               (80 + 33) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:===============================>                     (67 + 47) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:==============================================>     (101 + 13) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.250469738 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395372455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:=====================================>               (84 + 34) / 118][Stage 126:============================================>       (101 + 17) / 118][Stage 126:=================================================>   (111 + 7) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:=====================================>               (85 + 34) / 119][Stage 127:===========================================>        (100 + 19) / 119][Stage 127:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 2.98974273 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342632292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:======================================>              (83 + 32) / 115][Stage 128:=========================================>           (90 + 25) / 115][Stage 128:=============================================>      (101 + 14) / 115][Stage 128:====================================================>(114 + 1) / 115]                                                                                [Stage 129:======================================>              (84 + 32) / 116][Stage 129:=========================================>           (91 + 25) / 116][Stage 129:===============================================>    (106 + 10) / 116][Stage 129:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.641000383 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393050529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==================================>                  (74 + 41) / 115][Stage 130:=======================================>             (85 + 30) / 115][Stage 130:===============================================>    (104 + 11) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:================================>                    (71 + 45) / 116][Stage 131:=========================================>           (91 + 25) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.729365164 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398494284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (62 + 58) / 120][Stage 132:================================>                    (74 + 46) / 120][Stage 132:=======================================>             (90 + 30) / 120][Stage 132:==============================================>     (108 + 12) / 120]                                                                                [Stage 133:============================>                        (65 + 56) / 121][Stage 133:=================================>                   (77 + 44) / 121][Stage 133:==========================================>          (96 + 25) / 121][Stage 133:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.068308548 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364590512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:================================>                    (73 + 45) / 118][Stage 134:===================================>                 (79 + 39) / 118][Stage 134:======================================>              (85 + 33) / 118][Stage 134:============================================>        (99 + 19) / 118][Stage 134:=================================================>   (111 + 7) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:=================================>                   (76 + 43) / 119][Stage 135:====================================>                (82 + 37) / 119][Stage 135:=======================================>             (89 + 30) / 119][Stage 135:=============================================>      (105 + 14) / 119][Stage 135:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.710361157 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395716877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=================================>                   (76 + 44) / 120][Stage 136:===========================================>        (100 + 20) / 120][Stage 136:===================================================> (117 + 3) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:============================>                        (66 + 55) / 121][Stage 137:=================================>                   (77 + 44) / 121][Stage 137:============================================>       (104 + 17) / 121][Stage 137:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.004637098 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38197798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:============================>                        (60 + 53) / 113][Stage 138:====================================>                (77 + 36) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:======================================>              (82 + 32) / 114][Stage 139:==============================================>     (103 + 11) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.110192447 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34901385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (71 + 42) / 113][Stage 140:=========================================>           (88 + 25) / 113][Stage 140:=============================================>       (96 + 17) / 113][Stage 140:==================================================>  (107 + 6) / 113][Stage 140:===================================================> (109 + 4) / 113]                                                                                [Stage 141:==================================>                  (75 + 39) / 114][Stage 141:========================================>            (88 + 26) / 114][Stage 141:=============================================>      (100 + 14) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.040184578 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378663771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (60 + 53) / 113][Stage 142:================================>                    (69 + 44) / 113][Stage 142:============================================>        (94 + 19) / 113][Stage 142:==================================================>  (108 + 5) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:============================>                        (61 + 53) / 114][Stage 143:==================================>                  (74 + 40) / 114][Stage 143:=========================================>           (90 + 24) / 114][Stage 143:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.140679333 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333280928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=======================================>             (85 + 30) / 115][Stage 144:============================================>        (97 + 18) / 115][Stage 144:=================================================>   (108 + 7) / 115]                                                                                [Stage 145:======================================>              (84 + 32) / 116][Stage 145:===========================================>         (96 + 20) / 116][Stage 145:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.581234411 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363945012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:================================>                    (73 + 45) / 118][Stage 146:======================================>              (85 + 33) / 118][Stage 146:===============================================>    (108 + 10) / 118][Stage 146:====================================================>(116 + 2) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:===================================>                 (79 + 40) / 119][Stage 147:========================================>            (90 + 29) / 119][Stage 147:==============================================>     (106 + 13) / 119][Stage 147:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.998304688 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369398647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:===================================>                 (78 + 40) / 118][Stage 148:===========================================>         (96 + 22) / 118][Stage 148:================================================>    (109 + 9) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:========================================>            (90 + 29) / 119][Stage 149:==============================================>     (106 + 13) / 119]                                                                                Time elapsed: 2.800800052 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393153151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:=================================>                   (71 + 42) / 113][Stage 150:============================================>        (94 + 19) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:============================>                        (61 + 53) / 114][Stage 151:=================================>                   (72 + 42) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.003304405 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502973091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (61 + 52) / 113][Stage 152:================================>                    (70 + 43) / 113][Stage 152:=========================================>           (89 + 24) / 113][Stage 152:===============================================>    (103 + 10) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:==============================>                      (65 + 49) / 114][Stage 153:======================================>              (83 + 31) / 114][Stage 153:==============================================>     (101 + 13) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.130666773 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35222786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (80 + 33) / 113][Stage 154:=========================================>           (89 + 24) / 113][Stage 154:=============================================>       (97 + 16) / 113][Stage 154:==================================================>  (107 + 6) / 113][Stage 154:===================================================> (110 + 3) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:===================================>                 (77 + 37) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:=============================================>      (100 + 14) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.471167743 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336600638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (81 + 34) / 115][Stage 156:========================================>            (87 + 28) / 115][Stage 156:=============================================>       (99 + 16) / 115][Stage 156:=================================================>   (108 + 7) / 115]                                                                                [Stage 157:=====================================>               (83 + 33) / 116][Stage 157:=========================================>           (91 + 25) / 116][Stage 157:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.658247368 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390766526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:=============================>                       (66 + 54) / 120][Stage 158:==================================>                  (77 + 43) / 120][Stage 158:=========================================>           (94 + 26) / 120][Stage 158:=================================================>   (113 + 7) / 120]                                                                                [Stage 159:============================>                        (64 + 57) / 121][Stage 159:=================================>                   (77 + 44) / 121][Stage 159:==========================================>          (96 + 25) / 121][Stage 159:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.028267599 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371648674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===============================>                     (69 + 46) / 115][Stage 160:=======================================>             (86 + 29) / 115][Stage 160:===============================================>    (104 + 11) / 115][Stage 160:==================================================>  (110 + 5) / 115]                                                                                [Stage 161:===============================>                     (68 + 48) / 116][Stage 161:=====================================>               (81 + 35) / 116][Stage 161:============================================>       (100 + 16) / 116][Stage 161:=================================================>   (108 + 8) / 116][Stage 161:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.816078022 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355174609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (74 + 39) / 113][Stage 162:========================================>            (86 + 27) / 113][Stage 162:=============================================>       (96 + 17) / 113][Stage 162:==================================================>  (107 + 6) / 113][Stage 162:===================================================> (109 + 4) / 113]                                                                                [Stage 163:===================================>                 (76 + 38) / 114][Stage 163:=======================================>             (86 + 28) / 114][Stage 163:============================================>        (96 + 18) / 114][Stage 163:=================================================>   (107 + 7) / 114][Stage 163:===================================================> (111 + 3) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.327499118 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350720177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (72 + 41) / 113][Stage 164:======================================>              (83 + 30) / 113][Stage 164:============================================>        (95 + 18) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===================================>                 (76 + 38) / 114][Stage 165:=========================================>           (90 + 24) / 114][Stage 165:============================================>        (96 + 18) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.914549053 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369182848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:==================================>                  (76 + 42) / 118][Stage 166:=======================================>             (89 + 29) / 118][Stage 166:============================================>       (100 + 18) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:=================================>                   (75 + 44) / 119][Stage 167:=======================================>             (89 + 30) / 119][Stage 167:==============================================>     (106 + 13) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.089861813 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349244073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=================================>                   (72 + 41) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:============================================>        (94 + 19) / 113][Stage 168:=================================================>   (105 + 8) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:======================================>              (82 + 32) / 114][Stage 169:=========================================>           (90 + 24) / 114][Stage 169:=============================================>       (97 + 17) / 114][Stage 169:==================================================>  (108 + 6) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.285189628 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397444565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:===========================>                         (63 + 57) / 120][Stage 170:===================================>                 (81 + 39) / 120][Stage 170:=================================================>   (111 + 9) / 120][Stage 170:===================================================> (117 + 3) / 120]                                                                                [Stage 171:============================>                        (64 + 57) / 121][Stage 171:==================================>                  (79 + 42) / 121][Stage 171:===========================================>        (102 + 19) / 121][Stage 171:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.013963329 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517129352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 59) / 120][Stage 172:==================================>                  (79 + 41) / 120][Stage 172:===========================================>        (100 + 20) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:==============================>                      (69 + 52) / 121][Stage 173:=======================================>             (91 + 30) / 121][Stage 173:===================================================> (117 + 4) / 121][Stage 173:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.889143309 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386822377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:===================================>                 (80 + 38) / 118][Stage 174:=========================================>           (93 + 25) / 118][Stage 174:==============================================>     (105 + 13) / 118][Stage 174:====================================================>(116 + 2) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:===================================>                 (80 + 39) / 119][Stage 175:========================================>            (90 + 29) / 119][Stage 175:==================================================>  (114 + 5) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.087618233 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346573667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (81 + 32) / 113][Stage 176:===========================================>         (92 + 21) / 113][Stage 176:==============================================>     (102 + 11) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:==================================>                  (75 + 39) / 114][Stage 177:==========================================>          (91 + 23) / 114][Stage 177:==============================================>     (103 + 11) / 114][Stage 177:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.936226301 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344415941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===================================>                 (76 + 37) / 113][Stage 178:=========================================>           (88 + 25) / 113][Stage 178:==============================================>     (102 + 11) / 113][Stage 178:===================================================> (109 + 4) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:======================================>              (82 + 32) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:==============================================>     (102 + 12) / 114][Stage 179:==================================================>  (109 + 5) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.479820928 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367800485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (77 + 36) / 113][Stage 180:========================================>            (87 + 26) / 113][Stage 180:==============================================>     (100 + 13) / 113][Stage 180:===================================================> (110 + 3) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===================================>                 (77 + 37) / 114][Stage 181:========================================>            (88 + 26) / 114][Stage 181:==============================================>      (99 + 15) / 114][Stage 181:==================================================>  (108 + 6) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.972244922 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550441064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:==============================>                      (66 + 47) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:=============================>                       (63 + 51) / 114][Stage 183:==================================>                  (75 + 39) / 114][Stage 183:===========================================>         (94 + 20) / 114][Stage 183:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.049302875 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406403031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:===========================>                         (62 + 58) / 120][Stage 184:=================================>                   (76 + 44) / 120][Stage 184:=============================================>      (104 + 16) / 120][Stage 184:====================================================>(119 + 1) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:==============================>                      (70 + 51) / 121][Stage 185:===================================>                 (82 + 39) / 121][Stage 185:=================================================>   (112 + 9) / 121][Stage 185:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.935390405 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371593276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (72 + 43) / 115][Stage 186:========================================>            (87 + 28) / 115][Stage 186:===============================================>    (105 + 10) / 115][Stage 186:===================================================> (112 + 3) / 115]                                                                                [Stage 187:==============================>                      (67 + 49) / 116][Stage 187:====================================>                (80 + 36) / 116][Stage 187:=============================================>      (101 + 15) / 116][Stage 187:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.711272433 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345233444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (81 + 32) / 113][Stage 188:=========================================>           (89 + 24) / 113][Stage 188:=================================================>   (106 + 7) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:=======================================>             (84 + 30) / 114][Stage 189:===========================================>         (94 + 20) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.039940633 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356393154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==================================>                  (73 + 40) / 113][Stage 190:=====================================>               (81 + 32) / 113][Stage 190:============================================>        (95 + 18) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:===================================>                 (77 + 37) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:============================================>        (95 + 19) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.988788995 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349373196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (72 + 41) / 113][Stage 192:=======================================>             (85 + 28) / 113][Stage 192:=============================================>       (97 + 16) / 113][Stage 192:=================================================>   (105 + 8) / 113][Stage 192:===================================================> (110 + 3) / 113]                                                                                [Stage 193:=====================================>               (80 + 34) / 114][Stage 193:=========================================>           (90 + 24) / 114][Stage 193:==============================================>     (102 + 12) / 114][Stage 193:==================================================>  (109 + 5) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.189939287 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356382655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (80 + 33) / 113][Stage 194:=========================================>           (89 + 24) / 113][Stage 194:==============================================>      (99 + 14) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:=================================>                   (73 + 41) / 114][Stage 195:=======================================>             (85 + 29) / 114][Stage 195:=============================================>       (98 + 16) / 114][Stage 195:==================================================>  (108 + 6) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.849675737 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339373008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=========================================>           (90 + 25) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:=================================================>   (108 + 7) / 115]                                                                                [Stage 197:======================================>              (84 + 32) / 116][Stage 197:===========================================>         (96 + 20) / 116][Stage 197:=================================================>   (109 + 7) / 116][Stage 197:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.787573469 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420576751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (61 + 60) / 121][Stage 198:==============================>                      (69 + 52) / 121][Stage 198:=========================================>           (94 + 27) / 121][Stage 198:==================================================>  (115 + 6) / 121]                                                                                [Stage 199:===========================>                         (64 + 58) / 122][Stage 199:================================>                    (75 + 47) / 122][Stage 199:=========================================>           (95 + 27) / 122][Stage 199:===============================================>    (111 + 11) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.207674579 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350197379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (72 + 41) / 113][Stage 200:======================================>              (82 + 31) / 113][Stage 200:============================================>        (94 + 19) / 113][Stage 200:===================================================> (109 + 4) / 113]                                                                                [Stage 201:====================================>                (78 + 36) / 114][Stage 201:=========================================>           (90 + 24) / 114][Stage 201:==============================================>     (101 + 13) / 114][Stage 201:====================================================>(112 + 2) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.045918659 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m56.243s
user	11m37.468s
sys	0m27.412s
