Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 12:32:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:32:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:32:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:32:41 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 12:32:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:32:54 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522123243-0459).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.32024518 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.504144272 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.657095633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=============================>                         (61 + 54) / 115][Stage 2:=================================>                     (71 + 44) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:===========================================>           (90 + 25) / 115][Stage 2:=============================================>         (96 + 19) / 115][Stage 2:==============================================>       (100 + 15) / 115][Stage 2:================================================>     (104 + 11) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:======================================>                (81 + 35) / 116][Stage 3:=======================================>               (83 + 33) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:==========================================>            (90 + 26) / 116][Stage 3:=============================================>         (95 + 21) / 116][Stage 3:==============================================>       (100 + 16) / 116][Stage 3:================================================>     (104 + 12) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.313304123 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  pa rtitionIndex = 62  OR  partitionIndex = 63 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.638499483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (68 + 45) / 113][Stage 4:====================================>                  (75 + 38) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:=========================================>             (85 + 28) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===================================>                   (73 + 41) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:===============================================>       (99 + 15) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.340669542 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.595721172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:====================================>                  (76 + 37) / 113][Stage 6:=======================================>               (82 + 31) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:===============================================>       (98 + 15) / 113][Stage 6:==================================================>    (104 + 9) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:===================================>                   (73 + 41) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:========================================>              (83 + 31) / 114][Stage 7:=============================================>         (94 + 20) / 114][Stage 7:================================================>     (103 + 11) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.970326982 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.642684879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:========================>                              (53 + 67) / 120][Stage 8:=========================>                             (55 + 65) / 120][Stage 8:===============================>                       (68 + 52) / 120][Stage 8:=====================================>                 (81 + 39) / 120][Stage 8:======================================>                (85 + 35) / 120][Stage 8:============================================>          (98 + 22) / 120][Stage 8:================================================>     (108 + 12) / 120][Stage 8:====================================================>  (114 + 6) / 120]                                                                                [Stage 9:==========================>                            (58 + 63) / 121][Stage 9:=============================>                         (65 + 56) / 121][Stage 9:=================================>                     (73 + 48) / 121][Stage 9:======================================>                (84 + 37) / 121][Stage 9:=========================================>             (92 + 29) / 121][Stage 9:============================================>          (97 + 24) / 121][Stage 9:===================================================>   (114 + 7) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.747234588 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477463827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:======================================>               (81 + 34) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:=============================================>        (96 + 19) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:====================================================> (111 + 4) / 115][Stage 10:=====================================================>(113 + 2) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:=====================================>                (81 + 35) / 116][Stage 11:=========================================>            (90 + 26) / 116][Stage 11:===============================================>     (103 + 13) / 116][Stage 11:==================================================>   (109 + 7) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:====================================================> (113 + 3) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.989427742 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  pa rtitionIndex = 67  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482167098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=====================================>                (79 + 36) / 115][Stage 12:======================================>               (82 + 33) / 115][Stage 12:============================================>         (95 + 20) / 115][Stage 12:===================================================>  (109 + 6) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:=======================================>              (84 + 32) / 116][Stage 13:============================================>         (95 + 21) / 116][Stage 13:===============================================>     (105 + 11) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:===================================================>  (111 + 5) / 116][Stage 13:====================================================> (112 + 4) / 116][Stage 13:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.857063251 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520485706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (67 + 51) / 118][Stage 14:================================>                     (72 + 46) / 118][Stage 14:=================================>                    (73 + 45) / 118][Stage 14:========================================>             (89 + 29) / 118][Stage 14:=============================================>       (102 + 16) / 118][Stage 14:==================================================>   (110 + 8) / 118][Stage 14:====================================================> (114 + 4) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:=====================================>                (82 + 37) / 119][Stage 15:=============================================>       (103 + 16) / 119][Stage 15:===================================================>  (114 + 5) / 119][Stage 15:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.893430696 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516932437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (56 + 57) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:===============================>                      (66 + 47) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:============================================>         (94 + 19) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.884459472 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541327559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (66 + 49) / 115][Stage 18:==================================>                   (74 + 41) / 115][Stage 18:==========================================>           (90 + 25) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:===================================================>  (109 + 6) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:===============================>                      (67 + 49) / 116][Stage 19:===================================>                  (77 + 39) / 116][Stage 19:===========================================>          (93 + 23) / 116][Stage 19:===============================================>     (103 + 13) / 116][Stage 19:==================================================>   (108 + 8) / 116][Stage 19:===================================================>  (110 + 6) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.864334015 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479767131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===================================>                  (74 + 39) / 113][Stage 20:========================================>             (84 + 29) / 113][Stage 20:===========================================>          (90 + 23) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:======================================>               (81 + 33) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.007756119 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510314278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==============================>                       (64 + 51) / 115][Stage 22:=================================>                    (71 + 44) / 115][Stage 22:==============================================>       (98 + 17) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:====================================================> (111 + 4) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:===============================>                      (68 + 48) / 116][Stage 23:====================================>                 (79 + 37) / 116][Stage 23:==========================================>           (91 + 25) / 116][Stage 23:==============================================>      (101 + 15) / 116][Stage 23:==================================================>   (109 + 7) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.075294329 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479513755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===============================>                      (68 + 47) / 115][Stage 24:======================================>               (81 + 34) / 115][Stage 24:============================================>         (94 + 21) / 115][Stage 24:==============================================>      (101 + 14) / 115][Stage 24:================================================>    (105 + 10) / 115][Stage 24:==================================================>   (107 + 8) / 115][Stage 24:===================================================>  (110 + 5) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:===============================>                      (67 + 49) / 116][Stage 25:====================================>                 (79 + 37) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:================================================>    (106 + 10) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.344595438 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  pa rtitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435032265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (80 + 35) / 115][Stage 26:======================================>               (83 + 32) / 115][Stage 26:=============================================>        (97 + 18) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:===================================================>  (109 + 6) / 115][Stage 26:====================================================> (112 + 3) / 115]                                                                                [Stage 27:======================================>               (83 + 33) / 116][Stage 27:=========================================>            (89 + 27) / 116][Stage 27:==============================================>      (101 + 15) / 116][Stage 27:====================================================> (112 + 4) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.747595977 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  pa rtitionIndex = 11  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587615837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:=================================>                    (70 + 43) / 113][Stage 28:==========================================>           (89 + 24) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:=============================>                        (62 + 52) / 114][Stage 29:=====================================>                (80 + 34) / 114][Stage 29:============================================>         (94 + 20) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.277344289 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452988005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:==================================>                   (76 + 42) / 118][Stage 30:==========================================>           (93 + 25) / 118][Stage 30:===================================================>  (113 + 5) / 118][Stage 30:=====================================================>(117 + 1) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:========================================>             (90 + 29) / 119][Stage 31:==================================================>   (111 + 8) / 119][Stage 31:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.400411583 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420253306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (79 + 36) / 115][Stage 32:======================================>               (81 + 34) / 115][Stage 32:=========================================>            (88 + 27) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:====================================================> (112 + 3) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:======================================>               (82 + 34) / 116][Stage 33:============================================>         (95 + 21) / 116][Stage 33:==================================================>   (108 + 8) / 116][Stage 33:=====================================================>(114 + 2) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.919346342 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  pa rtitionIndex = 66  OR  partitionIndex = 67 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408425655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (82 + 33) / 115][Stage 34:=========================================>            (88 + 27) / 115][Stage 34:===============================================>     (103 + 12) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:========================================>             (87 + 29) / 116][Stage 35:===========================================>          (94 + 22) / 116][Stage 35:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.805446239 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491552296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:==============================>                       (64 + 49) / 113][Stage 36:====================================>                 (77 + 36) / 113][Stage 36:=============================================>        (96 + 17) / 113][Stage 36:====================================================> (110 + 3) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:==================================>                   (72 + 42) / 114][Stage 37:============================================>         (94 + 20) / 114][Stage 37:===================================================>  (108 + 6) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.749614454 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454173607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (76 + 42) / 118][Stage 38:========================================>             (88 + 30) / 118][Stage 38:==================================================>   (110 + 8) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:===================================>                  (78 + 41) / 119][Stage 39:=======================================>              (88 + 31) / 119][Stage 39:===============================================>     (106 + 13) / 119][Stage 39:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.259465424 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484382377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:=============================>                        (61 + 52) / 113][Stage 40:===================================>                  (75 + 38) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:==================================================>   (106 + 7) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:=============================>                        (62 + 52) / 114][Stage 41:====================================>                 (76 + 38) / 114][Stage 41:============================================>         (93 + 21) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.569991469 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501800176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (61 + 59) / 120][Stage 42:===============================>                      (70 + 50) / 120][Stage 42:========================================>             (90 + 30) / 120][Stage 42:================================================>    (109 + 11) / 120][Stage 42:=====================================================>(118 + 2) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:=============================>                        (67 + 54) / 121][Stage 43:====================================>                 (81 + 40) / 121][Stage 43:===========================================>         (100 + 21) / 121][Stage 43:====================================================> (118 + 3) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.406121193 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 85  OR  partitionIndex = 86 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473296646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (57 + 56) / 113][Stage 44:=============================>                        (61 + 52) / 113][Stage 44:==================================>                   (73 + 40) / 113][Stage 44:==========================================>           (89 + 24) / 113][Stage 44:===================================================>  (108 + 5) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:=================================>                    (71 + 43) / 114][Stage 45:==========================================>           (90 + 24) / 114][Stage 45:================================================>    (104 + 10) / 114][Stage 45:====================================================> (111 + 3) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.711934091 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR   partitionIndex = 208  OR  partitionIndex = 194 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424907524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (73 + 40) / 113][Stage 46:=========================================>            (86 + 27) / 113][Stage 46:===============================================>     (101 + 12) / 113][Stage 46:==================================================>   (106 + 7) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:=====================================>                (80 + 34) / 114][Stage 47:=======================================>              (84 + 30) / 114][Stage 47:=============================================>        (95 + 19) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.245736658 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418225421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (70 + 43) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:=============================================>        (96 + 17) / 113][Stage 48:================================================>    (103 + 10) / 113][Stage 48:====================================================> (110 + 3) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:======================================>               (81 + 33) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:===============================================>     (103 + 11) / 114][Stage 49:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.185125072 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387151136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:>                                                       (0 + 0) / 115][Stage 50:=====================================>                (80 + 35) / 115][Stage 50:=========================================>            (88 + 27) / 115][Stage 50:===============================================>     (103 + 12) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:=======================================>              (85 + 31) / 116][Stage 51:=============================================>        (97 + 19) / 116][Stage 51:================================================>    (106 + 10) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.107326947 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  pa rtitionIndex = 32  OR  partitionIndex = 33 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452639201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:===========================>                          (62 + 59) / 121][Stage 52:==================================>                   (77 + 44) / 121][Stage 52:===========================================>         (100 + 21) / 121][Stage 52:=====================================================>(120 + 1) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:============================>                         (65 + 57) / 122][Stage 53:==================================>                   (79 + 43) / 122][Stage 53:===========================================>         (100 + 22) / 122][Stage 53:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.232198098 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464478254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (66 + 49) / 115][Stage 54:=======================================>              (85 + 30) / 115][Stage 54:==============================================>       (99 + 16) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:===================================>                  (76 + 40) / 116][Stage 55:============================================>         (96 + 20) / 116][Stage 55:================================================>    (106 + 10) / 116][Stage 55:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.032906862 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409042307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (70 + 43) / 113][Stage 56:=======================================>              (82 + 31) / 113][Stage 56:============================================>         (93 + 20) / 113][Stage 56:==================================================>   (105 + 8) / 113][Stage 56:=====================================================>(111 + 2) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:====================================>                 (76 + 38) / 114][Stage 57:==========================================>           (90 + 24) / 114][Stage 57:=================================================>    (105 + 9) / 114][Stage 57:===================================================>  (109 + 5) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.107449594 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422999895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==============================>                       (66 + 49) / 115][Stage 58:===================================>                  (75 + 40) / 115][Stage 58:============================================>         (94 + 21) / 115][Stage 58:=================================================>    (106 + 9) / 115][Stage 58:===================================================>  (110 + 5) / 115]                                                                                [Stage 59:=================================>                    (73 + 43) / 116][Stage 59:===========================================>          (93 + 23) / 116][Stage 59:================================================>    (106 + 10) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.913308422 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516718574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:===========================>                          (62 + 59) / 121][Stage 60:=================================>                    (76 + 45) / 121][Stage 60:=========================================>            (92 + 29) / 121][Stage 60:==============================================>      (107 + 14) / 121][Stage 60:==================================================>   (114 + 7) / 121][Stage 60:=====================================================>(120 + 1) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:=============================>                        (66 + 56) / 122][Stage 61:======================================>               (88 + 34) / 122][Stage 61:============================================>        (103 + 19) / 122][Stage 61:====================================================> (118 + 4) / 122][Stage 61:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.998210639 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441477254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (61 + 60) / 121][Stage 62:===============================>                      (71 + 50) / 121][Stage 62:=========================================>            (92 + 29) / 121][Stage 62:================================================>    (110 + 11) / 121]                                                                                [Stage 63:===========================>                          (61 + 61) / 122][Stage 63:===========================>                          (63 + 59) / 122][Stage 63:==================================>                   (77 + 45) / 122][Stage 63:===========================================>         (101 + 21) / 122][Stage 63:===================================================>  (117 + 5) / 122][Stage 63:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.595437386 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418196551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (61 + 52) / 113][Stage 64:====================================>                 (76 + 37) / 113][Stage 64:==============================================>       (97 + 16) / 113][Stage 64:================================================>    (103 + 10) / 113][Stage 64:====================================================> (110 + 3) / 113]                                                                                [Stage 65:==============================>                       (64 + 50) / 114][Stage 65:====================================>                 (76 + 38) / 114][Stage 65:===========================================>          (92 + 22) / 114][Stage 65:================================================>    (104 + 10) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.669683141 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45703778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:===============================>                      (70 + 50) / 120][Stage 66:=====================================>                (83 + 37) / 120][Stage 66:===============================================>     (108 + 12) / 120][Stage 66:=====================================================>(118 + 2) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:=============================>                        (65 + 56) / 121][Stage 67:===================================>                  (79 + 42) / 121][Stage 67:===========================================>          (97 + 24) / 121][Stage 67:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.212056913 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380668261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:====================================>                 (77 + 36) / 113][Stage 68:=========================================>            (87 + 26) / 113][Stage 68:===============================================>      (99 + 14) / 113][Stage 68:====================================================> (110 + 3) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:=====================================>                (79 + 35) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:============================================>         (93 + 21) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.100576725 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451950654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (61 + 60) / 121][Stage 70:=================================>                    (74 + 47) / 121][Stage 70:===========================================>          (97 + 24) / 121][Stage 70:================================================>    (111 + 10) / 121][Stage 70:=====================================================>(120 + 1) / 121]                                                                                [Stage 71:===========================>                          (61 + 61) / 122][Stage 71:============================>                         (64 + 58) / 122][Stage 71:==================================>                   (77 + 45) / 122][Stage 71:============================================>        (103 + 19) / 122][Stage 71:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.363439634 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426892015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===============================>                      (68 + 47) / 115][Stage 72:======================================>               (82 + 33) / 115][Stage 72:===========================================>          (92 + 23) / 115][Stage 72:=================================================>    (106 + 9) / 115]                                                                                [Stage 73:=================================>                    (73 + 43) / 116][Stage 73:=======================================>              (84 + 32) / 116][Stage 73:============================================>         (96 + 20) / 116][Stage 73:==================================================>   (109 + 7) / 116][Stage 73:====================================================> (112 + 4) / 116][Stage 73:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.080639985 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  pa rtitionIndex = 28  OR  partitionIndex = 14 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369196612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:========================================>             (86 + 29) / 115][Stage 74:=============================================>        (97 + 18) / 115][Stage 74:==================================================>   (107 + 8) / 115][Stage 74:====================================================> (112 + 3) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=======================================>              (85 + 31) / 116][Stage 75:=============================================>        (97 + 19) / 116][Stage 75:===============================================>     (103 + 13) / 116][Stage 75:===================================================>  (110 + 6) / 116][Stage 75:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 5.730135879 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  pa rtitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45570251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 59) / 120][Stage 76:=================================>                    (75 + 45) / 120][Stage 76:===========================================>          (96 + 24) / 120][Stage 76:==================================================>   (112 + 8) / 120]                                                                                [Stage 77:============================>                         (63 + 58) / 121][Stage 77:==================================>                   (78 + 43) / 121][Stage 77:===========================================>         (100 + 21) / 121][Stage 77:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.415637288 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437964534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:=============================>                        (66 + 55) / 121][Stage 78:====================================>                 (82 + 39) / 121][Stage 78:=================================================>    (112 + 9) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (62 + 60) / 122][Stage 79:==============================>                       (68 + 54) / 122][Stage 79:====================================>                 (82 + 40) / 122][Stage 79:=============================================>       (104 + 18) / 122][Stage 79:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.430216364 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357800563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=======================================>              (84 + 31) / 115][Stage 80:===========================================>          (92 + 23) / 115][Stage 80:===============================================>     (103 + 12) / 115][Stage 80:=====================================================>(113 + 2) / 115]                                                                                [Stage 81:========================================>             (86 + 30) / 116][Stage 81:=============================================>       (100 + 16) / 116][Stage 81:=================================================>    (107 + 9) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.897124021 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56  OR  partitionIndex = 12 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425929784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (60 + 60) / 120][Stage 82:==============================>                       (67 + 53) / 120][Stage 82:======================================>               (85 + 35) / 120][Stage 82:==============================================>      (105 + 15) / 120][Stage 82:=====================================================>(119 + 1) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:================================>                     (72 + 49) / 121][Stage 83:=====================================>                (84 + 37) / 121][Stage 83:===========================================>          (97 + 24) / 121][Stage 83:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.292257446 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480017339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 42) / 115][Stage 84:=========================================>            (89 + 26) / 115][Stage 84:==================================================>   (108 + 7) / 115]                                                                                [Stage 85:===================================>                  (76 + 40) / 116][Stage 85:========================================>             (87 + 29) / 116][Stage 85:==================================================>   (108 + 8) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.687126187 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37728552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:========================================>             (86 + 29) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(113 + 2) / 115]                                                                                [Stage 87:======================================>               (82 + 34) / 116][Stage 87:=============================================>        (98 + 18) / 116][Stage 87:===============================================>     (105 + 11) / 116][Stage 87:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.758549767 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369426959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=====================================>                (79 + 36) / 115][Stage 88:========================================>             (86 + 29) / 115][Stage 88:===============================================>     (102 + 13) / 115][Stage 88:===================================================>  (110 + 5) / 115]                                                                                [Stage 89:=======================================>              (85 + 31) / 116][Stage 89:===============================================>     (104 + 12) / 116][Stage 89:===================================================>  (111 + 5) / 116][Stage 89:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.866913742 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421322499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:=============================>                        (61 + 52) / 113][Stage 90:===================================>                  (75 + 38) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:==============================>                       (64 + 50) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:====================================================> (111 + 3) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.665763211 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402044905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:=============================>                        (61 + 52) / 113][Stage 92:==================================>                   (73 + 40) / 113][Stage 92:===========================================>          (90 + 23) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:===========================>                          (59 + 55) / 114][Stage 93:==============================>                       (64 + 50) / 114][Stage 93:======================================>               (81 + 33) / 114][Stage 93:=============================================>        (96 + 18) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.548133275 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  pa rtitionIndex = 52  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356481152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (81 + 34) / 115][Stage 94:=======================================>              (85 + 30) / 115][Stage 94:==============================================>       (98 + 17) / 115][Stage 94:==================================================>   (107 + 8) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=======================================>              (84 + 32) / 116][Stage 95:===========================================>          (94 + 22) / 116][Stage 95:==============================================>      (102 + 14) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:=====================================================>(114 + 2) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.909604226 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  pa rtitionIndex = 13  OR  partitionIndex = 27 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43570457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:============================>                         (63 + 57) / 120][Stage 96:=================================>                    (74 + 46) / 120][Stage 96:============================================>         (99 + 21) / 120][Stage 96:====================================================> (116 + 4) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:=============================>                        (65 + 56) / 121][Stage 97:==================================>                   (78 + 43) / 121][Stage 97:============================================>         (99 + 22) / 121][Stage 97:===================================================>  (116 + 5) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.49067749 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373927494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===================================>                  (74 + 39) / 113][Stage 98:=========================================>            (87 + 26) / 113][Stage 98:==============================================>       (97 + 16) / 113][Stage 98:=================================================>    (104 + 9) / 113][Stage 98:=====================================================>(111 + 2) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:=======================================>              (84 + 30) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.068897816 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407600197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:==============================>                      (65 + 48) / 113][Stage 100:====================================>                (78 + 35) / 113][Stage 100:===========================================>         (92 + 21) / 113][Stage 100:===============================================>    (103 + 10) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:===================================>                 (77 + 37) / 114][Stage 101:=========================================>           (90 + 24) / 114][Stage 101:================================================>    (105 + 9) / 114][Stage 101:====================================================>(112 + 2) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.981567355 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410726332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (62 + 58) / 120][Stage 102:==============================>                      (68 + 52) / 120][Stage 102:=========================================>           (95 + 25) / 120][Stage 102:==================================================>  (115 + 5) / 120]                                                                                [Stage 103:===========================>                         (62 + 59) / 121][Stage 103:===============================>                     (73 + 48) / 121][Stage 103:======================================>              (88 + 33) / 121][Stage 103:==============================================>     (108 + 13) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.279691487 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487611995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:==============================>                      (66 + 47) / 113][Stage 104:====================================>                (78 + 35) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:===============================>                     (68 + 46) / 114][Stage 105:=======================================>             (85 + 29) / 114][Stage 105:==============================================>     (102 + 12) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.290766471 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374688296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (72 + 41) / 113][Stage 106:======================================>              (82 + 31) / 113][Stage 106:============================================>        (94 + 19) / 113][Stage 106:=================================================>   (106 + 7) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:=====================================>               (80 + 34) / 114][Stage 107:==========================================>          (92 + 22) / 114][Stage 107:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.881466182 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406575523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:=============================>                       (62 + 51) / 113][Stage 108:=======================================>             (84 + 29) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (59 + 55) / 114][Stage 109:============================>                        (62 + 52) / 114][Stage 109:===================================>                 (77 + 37) / 114][Stage 109:=============================================>       (97 + 17) / 114][Stage 109:====================================================>(112 + 2) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.365369196 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388398066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:====================================>                (81 + 37) / 118][Stage 110:=========================================>           (93 + 25) / 118][Stage 110:===============================================>    (108 + 10) / 118][Stage 110:====================================================>(117 + 1) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:===================================>                 (79 + 40) / 119][Stage 111:=======================================>             (89 + 30) / 119][Stage 111:===========================================>         (98 + 21) / 119][Stage 111:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.317930195 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 59  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506058557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===============================>                     (68 + 47) / 115][Stage 112:====================================>                (80 + 35) / 115][Stage 112:=============================================>       (99 + 16) / 115][Stage 112:==================================================>  (110 + 5) / 115]                                                                                [Stage 113:================================>                    (72 + 44) / 116][Stage 113:==========================================>          (92 + 24) / 116][Stage 113:==============================================>     (103 + 13) / 116][Stage 113:==================================================>  (111 + 5) / 116][Stage 113:====================================================>(114 + 2) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.555156145 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353833489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (82 + 33) / 115][Stage 114:=======================================>             (86 + 29) / 115][Stage 114:===============================================>    (104 + 11) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:========================================>            (89 + 27) / 116][Stage 115:===============================================>    (105 + 11) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.598533443 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402320319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:==============================>                      (69 + 52) / 121][Stage 116:===================================>                 (82 + 39) / 121][Stage 116:=============================================>      (105 + 16) / 121][Stage 116:====================================================>(119 + 2) / 121]                                                                                [Stage 117:============================>                        (65 + 57) / 122][Stage 117:================================>                    (75 + 47) / 122][Stage 117:===========================================>         (99 + 23) / 122][Stage 117:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.525614088 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404447375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:=============================>                       (67 + 53) / 120][Stage 118:=================================>                   (76 + 44) / 120][Stage 118:===========================================>        (101 + 19) / 120][Stage 118:===================================================> (117 + 3) / 120]                                                                                [Stage 119:============================>                        (66 + 55) / 121][Stage 119:====================================>                (83 + 38) / 121][Stage 119:=========================================>           (95 + 26) / 121][Stage 119:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.271971978 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357043684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:====================================>                (77 + 36) / 113][Stage 120:==========================================>          (91 + 22) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:=======================================>             (85 + 29) / 114][Stage 121:=============================================>       (98 + 16) / 114][Stage 121:==================================================>  (108 + 6) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.861532124 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353706973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:======================================>              (82 + 31) / 113][Stage 122:==========================================>          (90 + 23) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:=====================================>               (80 + 34) / 114][Stage 123:=========================================>           (89 + 25) / 114][Stage 123:=============================================>       (98 + 16) / 114][Stage 123:=================================================>   (107 + 7) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.287836358 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37296957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:===================================>                 (76 + 39) / 115][Stage 124:=========================================>           (89 + 26) / 115][Stage 124:=============================================>      (101 + 14) / 115][Stage 124:=================================================>   (108 + 7) / 115]                                                                                [Stage 125:===============================>                     (70 + 46) / 116][Stage 125:====================================>                (79 + 37) / 116][Stage 125:==============================================>     (104 + 12) / 116][Stage 125:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.083316078 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393595824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:==================================>                  (76 + 42) / 118][Stage 126:======================================>              (85 + 33) / 118][Stage 126:=============================================>      (103 + 15) / 118][Stage 126:==================================================>  (113 + 5) / 118][Stage 126:====================================================>(117 + 1) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:=================================>                   (76 + 43) / 119][Stage 127:====================================>                (83 + 36) / 119][Stage 127:========================================>            (91 + 28) / 119][Stage 127:==================================================>  (113 + 6) / 119][Stage 127:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.843335518 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106  OR  partitionIndex = 92 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370204838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (73 + 45) / 118][Stage 128:=====================================>               (84 + 34) / 118][Stage 128:=============================================>      (103 + 15) / 118][Stage 128:===================================================> (114 + 4) / 118]                                                                                [Stage 129:==================================>                  (77 + 42) / 119][Stage 129:=====================================>               (85 + 34) / 119][Stage 129:=============================================>      (103 + 16) / 119][Stage 129:==================================================>  (114 + 5) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.450093562 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391701871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (78 + 35) / 113][Stage 130:=========================================>           (89 + 24) / 113][Stage 130:==============================================>     (102 + 11) / 113][Stage 130:==================================================>  (107 + 6) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:==================================>                  (75 + 39) / 114][Stage 131:=======================================>             (86 + 28) / 114][Stage 131:=============================================>      (100 + 14) / 114][Stage 131:=================================================>   (106 + 8) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.044998511 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403629225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:============================>                        (60 + 53) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:===================================>                 (76 + 38) / 114][Stage 133:============================================>        (95 + 19) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.339515351 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 152  OR   partitionIndex = 153  OR  partitionIndex = 167 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347512653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 34) / 115][Stage 134:=======================================>             (85 + 30) / 115][Stage 134:=============================================>      (101 + 14) / 115][Stage 134:===================================================> (112 + 3) / 115]                                                                                [Stage 135:=====================================>               (82 + 34) / 116][Stage 135:=========================================>           (90 + 26) / 116][Stage 135:=============================================>      (102 + 14) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.696640916 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33597826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (82 + 33) / 115][Stage 136:=========================================>           (90 + 25) / 115][Stage 136:==============================================>     (102 + 13) / 115]                                                                                [Stage 137:======================================>              (84 + 32) / 116][Stage 137:============================================>        (98 + 18) / 116][Stage 137:===================================================> (112 + 4) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.555215162 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341563028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (81 + 34) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:===================================================> (111 + 4) / 115]                                                                                [Stage 139:======================================>              (85 + 31) / 116][Stage 139:============================================>        (97 + 19) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.031167476 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397312103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:=============================>                       (67 + 53) / 120][Stage 140:=========================================>           (95 + 25) / 120][Stage 140:=================================================>   (111 + 9) / 120]                                                                                [Stage 141:============================>                        (66 + 55) / 121][Stage 141:==================================>                  (79 + 42) / 121][Stage 141:============================================>       (103 + 18) / 121][Stage 141:===================================================> (117 + 4) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.40930899 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38594369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (64 + 49) / 113][Stage 142:====================================>                (77 + 36) / 113][Stage 142:=============================================>       (96 + 17) / 113][Stage 142:===================================================> (109 + 4) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:================================>                    (70 + 44) / 114][Stage 143:========================================>            (87 + 27) / 114][Stage 143:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.241385938 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391299999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:=============================>                       (66 + 54) / 120][Stage 144:===================================>                 (81 + 39) / 120][Stage 144:==============================================>     (108 + 12) / 120][Stage 144:===================================================> (117 + 3) / 120]                                                                                [Stage 145:===========================>                         (62 + 59) / 121][Stage 145:=============================>                       (68 + 53) / 121][Stage 145:=========================================>           (95 + 26) / 121][Stage 145:=================================================>   (113 + 8) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.415017896 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40461777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:============================>                        (66 + 55) / 121][Stage 146:====================================>                (84 + 37) / 121][Stage 146:=============================================>      (105 + 16) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:===========================>                         (64 + 58) / 122][Stage 147:=================================>                   (76 + 46) / 122][Stage 147:===========================================>        (102 + 20) / 122][Stage 147:===================================================> (119 + 3) / 122][Stage 147:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.565771807 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  par titionIndex = 7  OR  partitionIndex = 21 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375159898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (73 + 42) / 115][Stage 148:=====================================>               (81 + 34) / 115][Stage 148:============================================>        (96 + 19) / 115][Stage 148:==============================================>     (103 + 12) / 115][Stage 148:====================================================>(113 + 2) / 115]                                                                                [Stage 149:=================================>                   (74 + 42) / 116][Stage 149:========================================>            (88 + 28) / 116][Stage 149:=============================================>       (99 + 17) / 116][Stage 149:=================================================>   (108 + 8) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.092185875 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  p artitionIndex = 110  OR  partitionIndex = 96 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389652527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==================================>                  (74 + 39) / 113][Stage 150:===========================================>         (93 + 20) / 113][Stage 150:===================================================> (109 + 4) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:==============================>                      (66 + 48) / 114][Stage 151:===================================>                 (76 + 38) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.200314867 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  pa rtitionIndex = 2  OR  partitionIndex = 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369100293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (73 + 45) / 118][Stage 152:===================================>                 (79 + 39) / 118][Stage 152:====================================>                (82 + 36) / 118][Stage 152:==========================================>          (95 + 23) / 118][Stage 152:==================================================>  (112 + 6) / 118]                                                                                [Stage 153:=================================>                   (76 + 43) / 119][Stage 153:==================================>                  (78 + 41) / 119][Stage 153:=======================================>             (88 + 31) / 119][Stage 153:============================================>        (99 + 20) / 119][Stage 153:=================================================>   (112 + 7) / 119][Stage 153:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.73896931 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407295449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (65 + 55) / 120][Stage 154:====================================>                (82 + 38) / 120][Stage 154:===========================================>        (100 + 20) / 120][Stage 154:===================================================> (117 + 3) / 120]                                                                                [Stage 155:============================>                        (65 + 56) / 121][Stage 155:=====================================>               (85 + 36) / 121][Stage 155:=============================================>      (105 + 16) / 121][Stage 155:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.320806995 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383334364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==============================>                      (67 + 48) / 115][Stage 156:===================================>                 (78 + 37) / 115][Stage 156:=============================================>      (100 + 15) / 115][Stage 156:==================================================>  (110 + 5) / 115]                                                                                [Stage 157:================================>                    (72 + 44) / 116][Stage 157:=====================================>               (83 + 33) / 116][Stage 157:=================================================>   (109 + 7) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.738926043 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390585308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:============================>                        (64 + 56) / 120][Stage 158:==================================>                  (77 + 43) / 120][Stage 158:=========================================>           (95 + 25) / 120][Stage 158:==================================================>  (114 + 6) / 120]                                                                                [Stage 159:============================>                        (66 + 55) / 121][Stage 159:===================================>                 (81 + 40) / 121][Stage 159:==========================================>          (96 + 25) / 121][Stage 159:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.396355843 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362541052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (73 + 45) / 118][Stage 160:======================================>              (85 + 33) / 118][Stage 160:===========================================>         (96 + 22) / 118][Stage 160:=================================================>   (111 + 7) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:=====================================>               (84 + 35) / 119][Stage 161:===========================================>         (98 + 21) / 119][Stage 161:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.136517211 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343656015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (80 + 35) / 115][Stage 162:=======================================>             (85 + 30) / 115][Stage 162:=============================================>      (100 + 15) / 115][Stage 162:===================================================> (111 + 4) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:==========================================>          (92 + 24) / 116][Stage 163:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.785081301 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 77 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397325396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (62 + 59) / 121][Stage 164:================================>                    (74 + 47) / 121][Stage 164:==========================================>          (98 + 23) / 121][Stage 164:==================================================>  (115 + 6) / 121]                                                                                [Stage 165:============================>                        (65 + 57) / 122][Stage 165:===============================>                     (72 + 50) / 122][Stage 165:=========================================>           (95 + 27) / 122][Stage 165:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.118732526 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  pa rtitionIndex = 84  OR  partitionIndex = 70 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332104022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (79 + 36) / 115][Stage 166:=======================================>             (86 + 29) / 115][Stage 166:=============================================>      (101 + 14) / 115][Stage 166:=================================================>   (108 + 7) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=======================================>             (87 + 29) / 116][Stage 167:=============================================>      (102 + 14) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.919180157 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396075181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:===========================>                         (63 + 57) / 120][Stage 168:===================================>                 (80 + 40) / 120][Stage 168:===========================================>         (98 + 22) / 120][Stage 168:===================================================> (116 + 4) / 120]                                                                                [Stage 169:===========================>                         (63 + 58) / 121][Stage 169:==================================>                  (78 + 43) / 121][Stage 169:=========================================>           (95 + 26) / 121][Stage 169:=================================================>   (113 + 8) / 121][Stage 169:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.417668558 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391147213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (66 + 47) / 113][Stage 170:=====================================>               (80 + 33) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:===========================>                         (59 + 55) / 114][Stage 171:============================>                        (62 + 52) / 114][Stage 171:=====================================>               (80 + 34) / 114][Stage 171:==========================================>          (92 + 22) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.527871363 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358282867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:===================================>                 (79 + 39) / 118][Stage 172:========================================>            (90 + 28) / 118][Stage 172:===============================================>    (107 + 11) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:==================================>                  (78 + 41) / 119][Stage 173:======================================>              (87 + 32) / 119][Stage 173:============================================>       (102 + 17) / 119][Stage 173:===================================================> (115 + 4) / 119][Stage 173:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.455602333 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37087842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (75 + 40) / 115][Stage 174:===========================================>         (95 + 20) / 115][Stage 174:=================================================>   (107 + 8) / 115]                                                                                [Stage 175:===============================>                     (70 + 46) / 116][Stage 175:=======================================>             (86 + 30) / 116][Stage 175:=============================================>      (101 + 15) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.682923189 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  pa rtitionIndex = 44  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373962414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==============================>                      (67 + 48) / 115][Stage 176:====================================>                (80 + 35) / 115][Stage 176:==========================================>          (93 + 22) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:===============================>                     (70 + 46) / 116][Stage 177:=====================================>               (81 + 35) / 116][Stage 177:==========================================>          (94 + 22) / 116][Stage 177:===============================================>    (106 + 10) / 116][Stage 177:===================================================> (113 + 3) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.880860525 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378355926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (73 + 42) / 115][Stage 178:=========================================>           (90 + 25) / 115][Stage 178:===============================================>    (105 + 10) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:===============================>                     (69 + 47) / 116][Stage 179:=====================================>               (82 + 34) / 116][Stage 179:============================================>       (100 + 16) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.882543926 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  pa rtitionIndex = 58  OR  partitionIndex = 44 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392750763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (61 + 60) / 121][Stage 180:===============================>                     (71 + 50) / 121][Stage 180:===========================================>         (99 + 22) / 121][Stage 180:==================================================>  (116 + 5) / 121]                                                                                [Stage 181:=============================>                       (67 + 55) / 122][Stage 181:=================================>                   (77 + 45) / 122][Stage 181:==========================================>         (100 + 22) / 122][Stage 181:=================================================>   (115 + 7) / 122][Stage 181:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.527544072 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378318251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:>                                                      (0 + 0) / 115][Stage 182:======================================>              (83 + 32) / 115][Stage 182:========================================>            (88 + 27) / 115][Stage 182:=================================================>   (108 + 7) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:=====================================>               (82 + 34) / 116][Stage 183:=========================================>           (91 + 25) / 116][Stage 183:==============================================>     (103 + 13) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.648548742 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371706003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (79 + 34) / 113][Stage 184:===========================================>         (93 + 20) / 113][Stage 184:==============================================>     (101 + 12) / 113][Stage 184:==================================================>  (108 + 5) / 113]                                                                                [Stage 185:=====================================>               (80 + 34) / 114][Stage 185:===========================================>         (94 + 20) / 114][Stage 185:=================================================>   (106 + 8) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.818909936 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 207 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368924677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===============================>                     (69 + 46) / 115][Stage 186:=====================================>               (82 + 33) / 115][Stage 186:============================================>        (97 + 18) / 115][Stage 186:=================================================>   (107 + 8) / 115]                                                                                [Stage 187:=================================>                   (74 + 42) / 116][Stage 187:=========================================>           (90 + 26) / 116][Stage 187:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.621821325 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  pa rtitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423108589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:=============================>                       (66 + 54) / 120][Stage 188:=====================================>               (86 + 34) / 120][Stage 188:===============================================>    (110 + 10) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:==============================>                      (69 + 52) / 121][Stage 189:=====================================>               (86 + 35) / 121][Stage 189:=============================================>      (106 + 15) / 121]                                                                                Time elapsed: 3.078810738 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  pa rtitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370576658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===================================>                 (76 + 39) / 115][Stage 190:===========================================>         (95 + 20) / 115][Stage 190:===============================================>    (105 + 10) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:===============================>                     (70 + 46) / 116][Stage 191:=====================================>               (82 + 34) / 116][Stage 191:=============================================>       (99 + 17) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.698937385 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332276266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=====================================>               (81 + 34) / 115][Stage 192:==========================================>          (92 + 23) / 115][Stage 192:===============================================>    (104 + 11) / 115][Stage 192:=================================================>   (107 + 8) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=======================================>             (87 + 29) / 116][Stage 193:===========================================>         (95 + 21) / 116][Stage 193:==============================================>     (104 + 12) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.516565059 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412551889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 60) / 121][Stage 194:=============================>                       (67 + 54) / 121][Stage 194:===================================>                 (81 + 40) / 121][Stage 194:===========================================>        (102 + 19) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:=============================>                       (67 + 55) / 122][Stage 195:====================================>                (85 + 37) / 122][Stage 195:===========================================>        (103 + 19) / 122][Stage 195:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.445325654 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342944608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=========================================>           (89 + 26) / 115][Stage 196:=============================================>      (100 + 15) / 115][Stage 196:===================================================> (112 + 3) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:======================================>              (84 + 32) / 116][Stage 197:==========================================>          (93 + 23) / 116][Stage 197:=================================================>   (109 + 7) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.922015921 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384271017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===============================>                     (68 + 47) / 115][Stage 198:====================================>                (79 + 36) / 115][Stage 198:============================================>        (96 + 19) / 115][Stage 198:=================================================>   (108 + 7) / 115][Stage 198:===================================================> (112 + 3) / 115]                                                                                [Stage 199:===============================>                     (68 + 48) / 116][Stage 199:=====================================>               (81 + 35) / 116][Stage 199:==========================================>          (94 + 22) / 116][Stage 199:==============================================>     (104 + 12) / 116][Stage 199:================================================>    (107 + 9) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.215269031 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391818529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:============================>                        (65 + 55) / 120][Stage 200:=================================>                   (75 + 45) / 120][Stage 200:========================================>            (92 + 28) / 120][Stage 200:==============================================>     (107 + 13) / 120][Stage 200:===================================================> (116 + 4) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:=============================>                       (68 + 53) / 121][Stage 201:=====================================>               (86 + 35) / 121][Stage 201:=============================================>      (107 + 14) / 121][Stage 201:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.557672703 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m30.651s
user	11m40.748s
sys	0m57.684s
