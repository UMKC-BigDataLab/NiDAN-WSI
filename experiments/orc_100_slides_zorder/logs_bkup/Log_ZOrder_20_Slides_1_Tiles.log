Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 01:50:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 01:51:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 01:51:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 01:51:03 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 01:51:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 01:51:16 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522015105-0398).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.489621425 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (46 + 69) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.733985554 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.663992557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (52 + 66) / 118][Stage 2:=================================>                     (71 + 47) / 118][Stage 2:==================================>                    (73 + 45) / 118][Stage 2:==================================>                    (75 + 43) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:==========================================>            (91 + 27) / 118][Stage 2:==============================================>       (101 + 17) / 118][Stage 2:====================================================>  (113 + 5) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:=============================================>        (100 + 19) / 119][Stage 3:=====================================================> (115 + 4) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.67444687 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.763207567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 61) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:==================================>                    (76 + 45) / 121][Stage 4:==========================================>            (94 + 27) / 121][Stage 4:===============================================>      (107 + 14) / 121][Stage 4:=====================================================> (117 + 4) / 121]                                                                                [Stage 5:===========================>                           (60 + 62) / 122][Stage 5:=============================>                         (65 + 57) / 122][Stage 5:================================>                      (73 + 49) / 122][Stage 5:=====================================>                 (83 + 39) / 122][Stage 5:=============================================>        (102 + 20) / 122][Stage 5:====================================================>  (116 + 6) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.360808358 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.603967167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:========================================>              (84 + 29) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:===================================================>   (105 + 8) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:==================================>                    (72 + 42) / 114][Stage 7:===================================>                   (74 + 40) / 114][Stage 7:======================================>                (80 + 34) / 114][Stage 7:=========================================>             (87 + 27) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.995094027 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569272733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (60 + 55) / 115][Stage 8:===============================>                       (65 + 50) / 115][Stage 8:====================================>                  (76 + 39) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:==========================================>            (88 + 27) / 115][Stage 8:=============================================>         (96 + 19) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:====================================================>  (110 + 5) / 115]                                                                                [Stage 9:===========================>                           (59 + 57) / 116][Stage 9:=================================>                     (71 + 45) / 116][Stage 9:======================================>                (81 + 35) / 116][Stage 9:=======================================>               (83 + 33) / 116][Stage 9:==========================================>            (90 + 26) / 116][Stage 9:================================================>     (104 + 12) / 116][Stage 9:====================================================>  (110 + 6) / 116][Stage 9:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.664040958 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476943656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:======================================>               (82 + 33) / 115][Stage 10:=======================================>              (84 + 31) / 115][Stage 10:===========================================>          (93 + 22) / 115][Stage 10:=============================================>        (97 + 18) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:==================================================>   (107 + 8) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:======================================>               (83 + 33) / 116][Stage 11:========================================>             (88 + 28) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:====================================================> (112 + 4) / 116][Stage 11:====================================================> (113 + 3) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.944340662 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606759652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (64 + 51) / 115][Stage 12:================================>                     (69 + 46) / 115][Stage 12:===================================>                  (76 + 39) / 115][Stage 12:========================================>             (87 + 28) / 115][Stage 12:==============================================>      (100 + 15) / 115][Stage 12:==================================================>   (107 + 8) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:=================================>                    (71 + 45) / 116][Stage 13:======================================>               (82 + 34) / 116][Stage 13:=========================================>            (90 + 26) / 116][Stage 13:==============================================>      (101 + 15) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:===================================================>  (111 + 5) / 116][Stage 13:======================================================(116 + 0) / 116]                                                                                Time elapsed: 4.001120641 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572698819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (59 + 61) / 120][Stage 14:============================>                         (63 + 57) / 120][Stage 14:=================================>                    (75 + 45) / 120][Stage 14:=========================================>            (93 + 27) / 120][Stage 14:==============================================>      (106 + 14) / 120][Stage 14:==================================================>   (112 + 8) / 120][Stage 14:===================================================>  (115 + 5) / 120][Stage 14:=====================================================>(118 + 2) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:===============================>                      (70 + 51) / 121][Stage 15:=====================================>                (83 + 38) / 121][Stage 15:==============================================>      (106 + 15) / 121][Stage 15:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 4.090156488 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59166228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:===========================>                          (61 + 60) / 121][Stage 16:===============================>                      (71 + 50) / 121][Stage 16:=========================================>            (92 + 29) / 121][Stage 16:===============================================>     (108 + 13) / 121][Stage 16:====================================================> (118 + 3) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:=============================>                        (66 + 56) / 122][Stage 17:===================================>                  (80 + 42) / 122][Stage 17:=========================================>            (93 + 29) / 122][Stage 17:==================================================>   (113 + 9) / 122][Stage 17:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.629033924 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470479402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (71 + 42) / 113][Stage 18:=======================================>              (82 + 31) / 113][Stage 18:===========================================>          (91 + 22) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:===================================================>  (108 + 5) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:====================================>                 (76 + 38) / 114][Stage 19:========================================>             (85 + 29) / 114][Stage 19:============================================>         (93 + 21) / 114][Stage 19:===============================================>     (103 + 11) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.640502187 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509339303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:====================================>                 (76 + 37) / 113][Stage 20:========================================>             (85 + 28) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:===============================================>      (99 + 14) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (76 + 38) / 114][Stage 21:==========================================>           (89 + 25) / 114][Stage 21:==============================================>       (99 + 15) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.488035361 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511665368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:===================================>                  (75 + 38) / 113][Stage 22:============================================>         (93 + 20) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:====================================================> (109 + 4) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===============================>                      (66 + 48) / 114][Stage 23:======================================>               (82 + 32) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.01984045 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49381843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (66 + 49) / 115][Stage 24:===================================>                  (75 + 40) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:==============================================>      (100 + 15) / 115][Stage 24:==================================================>   (108 + 7) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:===============================>                      (68 + 48) / 116][Stage 25:======================================>               (83 + 33) / 116][Stage 25:============================================>         (96 + 20) / 116][Stage 25:====================================================> (112 + 4) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.509025622 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428869712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (81 + 34) / 115][Stage 26:========================================>             (86 + 29) / 115][Stage 26:==============================================>      (100 + 15) / 115][Stage 26:===================================================>  (110 + 5) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:=======================================>              (84 + 32) / 116][Stage 27:==========================================>           (92 + 24) / 116][Stage 27:===============================================>     (105 + 11) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.445424285 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450087757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=====================================>                (81 + 37) / 118][Stage 28:=======================================>              (87 + 31) / 118][Stage 28:==============================================>      (104 + 14) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:====================================>                 (80 + 39) / 119][Stage 29:==========================================>           (94 + 25) / 119][Stage 29:=================================================>    (110 + 9) / 119][Stage 29:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.384031833 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461813782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (66 + 49) / 115][Stage 30:=================================>                    (71 + 44) / 115][Stage 30:==========================================>           (90 + 25) / 115][Stage 30:==============================================>       (99 + 16) / 115][Stage 30:==================================================>   (107 + 8) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:=================================>                    (72 + 44) / 116][Stage 31:========================================>             (88 + 28) / 116][Stage 31:===============================================>     (105 + 11) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:====================================================> (113 + 3) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.892992133 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531485549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:==================================>                   (77 + 43) / 120][Stage 32:===========================================>          (97 + 23) / 120][Stage 32:====================================================> (117 + 3) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:==============================>                       (68 + 53) / 121][Stage 33:=====================================>                (84 + 37) / 121][Stage 33:==========================================>           (96 + 25) / 121][Stage 33:===================================================>  (116 + 5) / 121][Stage 33:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.393960211 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452445742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:==================================>                   (76 + 42) / 118][Stage 34:======================================>               (85 + 33) / 118][Stage 34:==========================================>           (93 + 25) / 118][Stage 34:================================================>    (108 + 10) / 118][Stage 34:===================================================>  (112 + 6) / 118][Stage 34:=====================================================>(116 + 2) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:===================================>                  (78 + 41) / 119][Stage 35:======================================>               (85 + 34) / 119][Stage 35:============================================>        (101 + 18) / 119][Stage 35:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.760095327 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436500567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===================================>                  (75 + 38) / 113][Stage 36:========================================>             (85 + 28) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:==================================================>   (105 + 8) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:====================================>                 (77 + 37) / 114][Stage 37:==========================================>           (90 + 24) / 114][Stage 37:===========================================>          (92 + 22) / 114][Stage 37:==================================================>   (106 + 8) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.361645678 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451433579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:=================================>                    (73 + 45) / 118][Stage 38:=====================================>                (83 + 35) / 118][Stage 38:=============================================>        (99 + 19) / 118][Stage 38:===================================================>  (113 + 5) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:==================================>                   (75 + 44) / 119][Stage 39:=====================================>                (83 + 36) / 119][Stage 39:==================================================>   (111 + 8) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.152979894 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461038239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:>                                                       (0 + 0) / 115][Stage 40:===============================>                      (68 + 47) / 115][Stage 40:=====================================>                (79 + 36) / 115][Stage 40:============================================>         (94 + 21) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:==================================>                   (75 + 41) / 116][Stage 41:==========================================>           (92 + 24) / 116][Stage 41:==============================================>      (102 + 14) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.268179497 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393513656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:========================================>             (87 + 28) / 115][Stage 42:==============================================>      (101 + 14) / 115][Stage 42:====================================================> (112 + 3) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:======================================>               (83 + 33) / 116][Stage 43:=============================================>        (97 + 19) / 116][Stage 43:===============================================>     (103 + 13) / 116][Stage 43:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.002906633 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.614456324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:===========================>                          (62 + 58) / 120][Stage 44:================================>                     (73 + 47) / 120][Stage 44:=========================================>            (92 + 28) / 120][Stage 44:===================================================>  (114 + 6) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (62 + 59) / 121][Stage 45:==============================>                       (69 + 52) / 121][Stage 45:=====================================>                (84 + 37) / 121][Stage 45:==============================================>      (107 + 14) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.137332096 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437906449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===================================>                  (76 + 39) / 115][Stage 46:=======================================>              (84 + 31) / 115][Stage 46:===============================================>     (102 + 13) / 115][Stage 46:=====================================================>(113 + 2) / 115]                                                                                [Stage 47:===================================>                  (76 + 40) / 116][Stage 47:============================================>         (95 + 21) / 116][Stage 47:==================================================>   (109 + 7) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.875280739 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439381232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 42) / 115][Stage 48:=========================================>            (88 + 27) / 115][Stage 48:===============================================>     (103 + 12) / 115][Stage 48:===================================================>  (109 + 6) / 115][Stage 48:=====================================================>(113 + 2) / 115]                                                                                [Stage 49:==================================>                   (74 + 42) / 116][Stage 49:==========================================>           (92 + 24) / 116][Stage 49:===============================================>     (105 + 11) / 116][Stage 49:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.228254947 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429176071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (71 + 44) / 115][Stage 50:=========================================>            (89 + 26) / 115][Stage 50:==================================================>   (107 + 8) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:====================================>                 (78 + 38) / 116][Stage 51:==========================================>           (91 + 25) / 116][Stage 51:=================================================>    (107 + 9) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.82033542 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402692554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 40) / 113][Stage 52:=======================================>              (82 + 31) / 113][Stage 52:============================================>         (94 + 19) / 113][Stage 52:===============================================>     (102 + 11) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=========================================>            (87 + 27) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.025477094 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42458544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (70 + 43) / 113][Stage 54:=======================================>              (82 + 31) / 113][Stage 54:===========================================>          (90 + 23) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:======================================>               (82 + 32) / 114][Stage 55:============================================>         (94 + 20) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:===================================================>  (109 + 5) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.407390983 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436571406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:===================================>                  (77 + 41) / 118][Stage 56:========================================>             (88 + 30) / 118][Stage 56:=============================================>       (102 + 16) / 118][Stage 56:=====================================================>(116 + 2) / 118]                                                                                [Stage 57:===================================>                  (79 + 40) / 119][Stage 57:=======================================>              (88 + 31) / 119][Stage 57:============================================>        (100 + 19) / 119][Stage 57:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.086782702 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454628804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===============================>                      (70 + 51) / 121][Stage 58:=======================================>              (88 + 33) / 121][Stage 58:===============================================>     (109 + 12) / 121][Stage 58:====================================================> (118 + 3) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:=============================>                        (67 + 55) / 122][Stage 59:====================================>                 (82 + 40) / 122][Stage 59:============================================>        (103 + 19) / 122][Stage 59:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.213186688 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440858434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:================================>                     (68 + 45) / 113][Stage 60:=====================================>                (79 + 34) / 113][Stage 60:==============================================>      (100 + 13) / 113][Stage 60:=====================================================>(111 + 2) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=============================>                        (63 + 51) / 114][Stage 61:====================================>                 (78 + 36) / 114][Stage 61:==============================================>      (101 + 13) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.29958747 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43903797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:============================>                         (64 + 56) / 120][Stage 62:=================================>                    (74 + 46) / 120][Stage 62:===========================================>          (97 + 23) / 120][Stage 62:===================================================>  (115 + 5) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:=============================>                        (66 + 55) / 121][Stage 63:====================================>                 (81 + 40) / 121][Stage 63:==============================================>      (107 + 14) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.109454626 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479120974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:=============================>                        (65 + 55) / 120][Stage 64:==================================>                   (76 + 44) / 120][Stage 64:=======================================>              (88 + 32) / 120][Stage 64:=================================================>    (111 + 9) / 120]                                                                                [Stage 65:============================>                         (63 + 58) / 121][Stage 65:=================================>                    (75 + 46) / 121][Stage 65:=========================================>            (92 + 29) / 121][Stage 65:===================================================>  (115 + 6) / 121][Stage 65:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.313069376 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426206903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (69 + 46) / 115][Stage 66:========================================>             (86 + 29) / 115][Stage 66:==============================================>       (98 + 17) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:===================================================>  (111 + 5) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.120938488 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393309333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (73 + 45) / 118][Stage 68:=====================================>                (83 + 35) / 118][Stage 68:==========================================>           (93 + 25) / 118][Stage 68:==================================================>   (111 + 7) / 118][Stage 68:=====================================================>(117 + 1) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:======================================>               (84 + 35) / 119][Stage 69:==========================================>           (94 + 25) / 119][Stage 69:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.076239191 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437060885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:===================================>                  (77 + 41) / 118][Stage 70:========================================>             (88 + 30) / 118][Stage 70:===============================================>     (105 + 13) / 118][Stage 70:====================================================> (115 + 3) / 118]                                                                                [Stage 71:==================================>                   (76 + 43) / 119][Stage 71:======================================>               (84 + 35) / 119][Stage 71:===============================================>     (107 + 12) / 119][Stage 71:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.064885126 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394614915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==================================>                   (73 + 40) / 113][Stage 72:==========================================>           (88 + 25) / 113][Stage 72:==============================================>       (97 + 16) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:=====================================>                (79 + 35) / 114][Stage 73:=============================================>        (95 + 19) / 114][Stage 73:================================================>    (104 + 10) / 114][Stage 73:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.005431198 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400139067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (73 + 45) / 118][Stage 74:====================================>                 (80 + 38) / 118][Stage 74:==========================================>           (93 + 25) / 118][Stage 74:================================================>    (107 + 11) / 118][Stage 74:=====================================================>(116 + 2) / 118]                                                                                [Stage 75:=================================>                    (74 + 45) / 119][Stage 75:====================================>                 (81 + 38) / 119][Stage 75:===========================================>          (96 + 23) / 119][Stage 75:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.18136887 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432403115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:>                                                       (0 + 0) / 120][Stage 76:===========================>                          (60 + 60) / 120][Stage 76:================================>                     (72 + 48) / 120][Stage 76:======================================>               (86 + 34) / 120][Stage 76:===================================================>  (114 + 6) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:===============================>                      (71 + 50) / 121][Stage 77:==========================================>           (96 + 25) / 121][Stage 77:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.083818882 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438963908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:=============================>                        (66 + 55) / 121][Stage 78:====================================>                 (81 + 40) / 121][Stage 78:=============================================>       (104 + 17) / 121][Stage 78:==================================================>   (114 + 7) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:==============================>                       (68 + 54) / 122][Stage 79:========================================>             (91 + 31) / 122][Stage 79:===============================================>     (110 + 12) / 122][Stage 79:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.352847389 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424501777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (61 + 59) / 120][Stage 80:===============================>                      (70 + 50) / 120][Stage 80:=========================================>            (93 + 27) / 120][Stage 80:==================================================>   (112 + 8) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:================================>                     (72 + 49) / 121][Stage 81:======================================>               (86 + 35) / 121][Stage 81:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.025225355 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37872478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (81 + 32) / 113][Stage 82:===========================================>          (92 + 21) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:======================================>               (82 + 32) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:================================================>    (104 + 10) / 114][Stage 83:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.000827983 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424184757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:============================>                         (63 + 57) / 120][Stage 84:=================================>                    (74 + 46) / 120][Stage 84:============================================>        (101 + 19) / 120][Stage 84:====================================================> (117 + 3) / 120]                                                                                [Stage 85:============================>                         (64 + 57) / 121][Stage 85:==================================>                   (77 + 44) / 121][Stage 85:=========================================>            (94 + 27) / 121]                                                                                Time elapsed: 2.932367637 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448732088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:=============================>                        (66 + 54) / 120][Stage 86:======================================>               (85 + 35) / 120][Stage 86:===============================================>     (108 + 12) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=============================>                        (65 + 56) / 121][Stage 87:=====================================>                (84 + 37) / 121][Stage 87:===================================================>  (115 + 6) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.066365119 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357019694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=======================================>              (85 + 30) / 115][Stage 88:============================================>         (94 + 21) / 115][Stage 88:==================================================>   (107 + 8) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:========================================>             (88 + 28) / 116][Stage 89:=============================================>        (98 + 18) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.647162472 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357190034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:======================================>               (81 + 34) / 115][Stage 90:=======================================>              (85 + 30) / 115][Stage 90:==============================================>       (99 + 16) / 115][Stage 90:==================================================>   (107 + 8) / 115][Stage 90:====================================================> (112 + 3) / 115][Stage 90:=====================================================>(113 + 2) / 115]                                                                                [Stage 91:=======================================>              (84 + 32) / 116][Stage 91:========================================>             (88 + 28) / 116][Stage 91:================================================>    (106 + 10) / 116][Stage 91:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.036368413 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419716926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:======================================>               (85 + 35) / 120][Stage 92:===============================================>     (108 + 12) / 120][Stage 92:=====================================================>(119 + 1) / 120]                                                                                [Stage 93:============================>                         (64 + 57) / 121][Stage 93:=================================>                    (75 + 46) / 121][Stage 93:============================================>        (102 + 19) / 121][Stage 93:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.045514231 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375447013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===================================>                  (74 + 39) / 113][Stage 94:=========================================>            (86 + 27) / 113][Stage 94:============================================>         (94 + 19) / 113][Stage 94:==================================================>   (106 + 7) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:===================================>                  (75 + 39) / 114][Stage 95:=======================================>              (83 + 31) / 114][Stage 95:============================================>         (94 + 20) / 114][Stage 95:===============================================>     (103 + 11) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.057071514 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403584952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:====================================>                 (79 + 39) / 118][Stage 96:=======================================>              (87 + 31) / 118][Stage 96:==============================================>      (104 + 14) / 118]                                                                                [Stage 97:=================================>                    (74 + 45) / 119][Stage 97:=====================================>                (82 + 37) / 119][Stage 97:==========================================>           (94 + 25) / 119][Stage 97:=================================================>    (110 + 9) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.093105129 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394386072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==============================>                       (66 + 49) / 115][Stage 98:===================================>                  (76 + 39) / 115][Stage 98:==========================================>           (91 + 24) / 115][Stage 98:==================================================>   (108 + 7) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:===================================>                  (76 + 40) / 116][Stage 99:=========================================>            (89 + 27) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:==================================================>   (108 + 8) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.090063722 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425609439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:============================>                        (66 + 55) / 121][Stage 100:=====================================>               (85 + 36) / 121][Stage 100:===============================================>    (110 + 11) / 121][Stage 100:====================================================>(119 + 2) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:===========================>                         (64 + 58) / 122][Stage 101:===================================>                 (82 + 40) / 122][Stage 101:============================================>       (104 + 18) / 122][Stage 101:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.30314061 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382267866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (73 + 45) / 118][Stage 102:======================================>              (86 + 32) / 118][Stage 102:============================================>        (98 + 20) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:==================================>                  (78 + 41) / 119][Stage 103:=========================================>           (93 + 26) / 119][Stage 103:===============================================>    (109 + 10) / 119][Stage 103:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.945957195 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416179518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (61 + 59) / 120][Stage 104:==============================>                      (69 + 51) / 120][Stage 104:===================================>                 (80 + 40) / 120][Stage 104:==================================================>  (115 + 5) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:===============================>                     (73 + 48) / 121][Stage 105:==========================================>          (97 + 24) / 121][Stage 105:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.952796629 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371270683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (79 + 36) / 115][Stage 106:========================================>            (88 + 27) / 115][Stage 106:=============================================>      (100 + 15) / 115][Stage 106:===================================================> (112 + 3) / 115]                                                                                [Stage 107:=====================================>               (82 + 34) / 116][Stage 107:========================================>            (88 + 28) / 116][Stage 107:=============================================>      (101 + 15) / 116][Stage 107:==================================================>  (111 + 5) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.819317066 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365560911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:======================================>              (83 + 30) / 113][Stage 108:===========================================>         (93 + 20) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:===================================================> (109 + 4) / 113]                                                                                [Stage 109:======================================>              (83 + 31) / 114][Stage 109:===========================================>         (93 + 21) / 114][Stage 109:==============================================>     (102 + 12) / 114][Stage 109:==================================================>  (108 + 6) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.017267682 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415513176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:==========================>                          (61 + 59) / 120][Stage 110:===================================>                 (81 + 39) / 120][Stage 110:===========================================>         (98 + 22) / 120][Stage 110:=================================================>   (113 + 7) / 120]                                                                                [Stage 111:=============================>                       (68 + 53) / 121][Stage 111:=====================================>               (85 + 36) / 121][Stage 111:==========================================>         (100 + 21) / 121][Stage 111:=================================================>   (114 + 7) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.179812683 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413203911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (61 + 60) / 121][Stage 112:==============================>                      (70 + 51) / 121][Stage 112:======================================>              (88 + 33) / 121][Stage 112:==================================================>  (115 + 6) / 121]                                                                                [Stage 113:==========================>                          (62 + 60) / 122][Stage 113:===============================>                     (72 + 50) / 122][Stage 113:=======================================>             (91 + 31) / 122][Stage 113:==================================================>  (116 + 6) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.071913235 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358012134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (73 + 40) / 113][Stage 114:=======================================>             (84 + 29) / 113][Stage 114:===========================================>         (92 + 21) / 113][Stage 114:=============================================>       (98 + 15) / 113][Stage 114:=================================================>   (105 + 8) / 113]                                                                                [Stage 115:======================================>              (83 + 31) / 114][Stage 115:============================================>        (95 + 19) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.96576917 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407611499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:================================>                    (73 + 47) / 120][Stage 116:=========================================>           (95 + 25) / 120][Stage 116:=================================================>   (111 + 9) / 120][Stage 116:====================================================>(118 + 2) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:===============================>                     (72 + 49) / 121][Stage 117:==========================================>          (96 + 25) / 121][Stage 117:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.152467002 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347204992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (82 + 33) / 115][Stage 118:==========================================>          (92 + 23) / 115][Stage 118:===============================================>    (104 + 11) / 115][Stage 118:==================================================>  (109 + 6) / 115]                                                                                [Stage 119:========================================>            (89 + 27) / 116][Stage 119:===========================================>         (95 + 21) / 116][Stage 119:================================================>    (107 + 9) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.892929335 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362254543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (80 + 33) / 113][Stage 120:==========================================>          (91 + 22) / 113][Stage 120:===============================================>    (103 + 10) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:========================================>            (87 + 27) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:==============================================>     (102 + 12) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.834119349 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387525977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (63 + 50) / 113][Stage 122:=====================================>               (79 + 34) / 113][Stage 122:===============================================>    (103 + 10) / 113][Stage 122:===================================================> (109 + 4) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:=================================>                   (71 + 43) / 114][Stage 123:=============================================>       (97 + 17) / 114][Stage 123:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.038283618 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367136373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:===================================>                 (78 + 40) / 118][Stage 124:========================================>            (90 + 28) / 118][Stage 124:===============================================>    (108 + 10) / 118][Stage 124:====================================================>(116 + 2) / 118]                                                                                [Stage 125:=================================>                   (75 + 44) / 119][Stage 125:=======================================>             (88 + 31) / 119][Stage 125:==========================================>          (96 + 23) / 119][Stage 125:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.125812481 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362360783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:======================================>              (83 + 32) / 115][Stage 126:=========================================>           (91 + 24) / 115][Stage 126:===============================================>    (104 + 11) / 115][Stage 126:====================================================>(113 + 2) / 115]                                                                                [Stage 127:======================================>              (85 + 31) / 116][Stage 127:=============================================>      (102 + 14) / 116][Stage 127:=================================================>   (108 + 8) / 116][Stage 127:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.841553481 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421727707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 59) / 120][Stage 128:================================>                    (74 + 46) / 120][Stage 128:=======================================>             (89 + 31) / 120][Stage 128:===================================================> (117 + 3) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:============================>                        (65 + 56) / 121][Stage 129:=====================================>               (85 + 36) / 121][Stage 129:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 2.845470709 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380940461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (73 + 45) / 118][Stage 130:===================================>                 (80 + 38) / 118][Stage 130:==========================================>          (94 + 24) / 118][Stage 130:===============================================>    (108 + 10) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:=================================>                   (76 + 43) / 119][Stage 131:=====================================>               (85 + 34) / 119][Stage 131:===========================================>         (97 + 22) / 119][Stage 131:===================================================> (116 + 3) / 119][Stage 131:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.325299777 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363324005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (83 + 30) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:============================================>        (95 + 18) / 113][Stage 132:=================================================>   (106 + 7) / 113]                                                                                [Stage 133:=====================================>               (81 + 33) / 114][Stage 133:==========================================>          (92 + 22) / 114][Stage 133:==============================================>     (101 + 13) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.481869485 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341459698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (80 + 35) / 115][Stage 134:=======================================>             (85 + 30) / 115][Stage 134:=============================================>       (99 + 16) / 115][Stage 134:===================================================> (111 + 4) / 115]                                                                                [Stage 135:=======================================>             (86 + 30) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:==================================================>  (110 + 6) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.713943329 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414993933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:==============================>                      (68 + 52) / 120][Stage 136:======================================>              (87 + 33) / 120][Stage 136:==============================================>     (107 + 13) / 120][Stage 136:====================================================>(118 + 2) / 120]                                                                                [Stage 137:===========================>                         (62 + 59) / 121][Stage 137:===============================>                     (72 + 49) / 121][Stage 137:======================================>              (87 + 34) / 121][Stage 137:============================================>       (103 + 18) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.408112687 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=236", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=236,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369032736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:====================================>                (82 + 36) / 118][Stage 138:===========================================>         (97 + 21) / 118][Stage 138:==================================================>  (113 + 5) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:===================================>                 (79 + 40) / 119][Stage 139:===========================================>         (98 + 21) / 119][Stage 139:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.955026673 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369976238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:================================>                    (73 + 45) / 118][Stage 140:=====================================>               (83 + 35) / 118][Stage 140:=============================================>      (103 + 15) / 118][Stage 140:==================================================>  (112 + 6) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (78 + 41) / 119][Stage 141:=======================================>             (88 + 31) / 119][Stage 141:============================================>       (102 + 17) / 119][Stage 141:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.199333966 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401076743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:>                                                      (0 + 0) / 120][Stage 142:==========================>                          (60 + 60) / 120][Stage 142:==============================>                      (69 + 51) / 120][Stage 142:========================================>            (91 + 29) / 120][Stage 142:=================================================>   (111 + 9) / 120]                                                                                [Stage 143:===========================>                         (63 + 58) / 121][Stage 143:==================================>                  (78 + 43) / 121][Stage 143:===========================================>        (102 + 19) / 121][Stage 143:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.967378537 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364346306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:==================================>                  (77 + 41) / 118][Stage 144:======================================>              (85 + 33) / 118][Stage 144:============================================>       (100 + 18) / 118][Stage 144:==================================================>  (113 + 5) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:=====================================>               (85 + 34) / 119][Stage 145:===========================================>         (98 + 21) / 119][Stage 145:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.184116812 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357891172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:====================================>                (78 + 35) / 113][Stage 146:=========================================>           (89 + 24) / 113][Stage 146:=============================================>       (96 + 17) / 113][Stage 146:=================================================>   (106 + 7) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:====================================>                (78 + 36) / 114][Stage 147:=========================================>           (89 + 25) / 114][Stage 147:==============================================>      (99 + 15) / 114][Stage 147:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.890064772 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374558107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (72 + 43) / 115][Stage 148:=======================================>             (85 + 30) / 115][Stage 148:=============================================>      (100 + 15) / 115][Stage 148:===============================================>    (105 + 10) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:================================>                    (71 + 45) / 116][Stage 149:===================================>                 (78 + 38) / 116][Stage 149:============================================>        (97 + 19) / 116][Stage 149:==============================================>     (104 + 12) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.381146243 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505896743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (81 + 34) / 115][Stage 150:=========================================>           (89 + 26) / 115][Stage 150:===============================================>    (104 + 11) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:=====================================>               (82 + 34) / 116][Stage 151:========================================>            (89 + 27) / 116][Stage 151:==============================================>     (103 + 13) / 116][Stage 151:=================================================>   (109 + 7) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.754055084 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380735359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=================================>                   (72 + 43) / 115][Stage 152:=========================================>           (91 + 24) / 115][Stage 152:===================================================> (112 + 3) / 115]                                                                                [Stage 153:===============================>                     (69 + 47) / 116][Stage 153:=====================================>               (83 + 33) / 116][Stage 153:============================================>        (97 + 19) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.50460778 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396341932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=============================>                       (62 + 51) / 113][Stage 154:=====================================>               (80 + 33) / 113][Stage 154:==========================================>          (91 + 22) / 113][Stage 154:=================================================>   (105 + 8) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=============================>                       (64 + 50) / 114][Stage 155:=================================>                   (71 + 43) / 114][Stage 155:============================================>        (95 + 19) / 114]                                                                                Time elapsed: 3.015939392 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368628554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:==================================>                  (77 + 41) / 118][Stage 156:============================================>        (98 + 20) / 118][Stage 156:==================================================>  (113 + 5) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=====================================>               (85 + 34) / 119][Stage 157:==========================================>          (95 + 24) / 119][Stage 157:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.846704856 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403551767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:============================>                        (64 + 57) / 121][Stage 158:===============================>                     (73 + 48) / 121][Stage 158:===========================================>        (102 + 19) / 121][Stage 158:==================================================>  (116 + 5) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:===============================>                     (72 + 50) / 122][Stage 159:========================================>            (93 + 29) / 122][Stage 159:=============================================>      (106 + 16) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.091399728 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389831898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:============================>                        (61 + 52) / 113][Stage 160:===================================>                 (76 + 37) / 113][Stage 160:=============================================>       (98 + 15) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:===============================>                     (68 + 46) / 114][Stage 161:======================================>              (83 + 31) / 114][Stage 161:==============================================>     (101 + 13) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31190375 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388702755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=================================>                   (73 + 42) / 115][Stage 162:========================================>            (88 + 27) / 115][Stage 162:================================================>    (106 + 9) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:==============================>                      (67 + 49) / 116][Stage 163:====================================>                (80 + 36) / 116][Stage 163:==========================================>          (94 + 22) / 116][Stage 163:==================================================>  (111 + 5) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.768254528 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37640647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (73 + 42) / 115][Stage 164:========================================>            (87 + 28) / 115][Stage 164:=============================================>      (101 + 14) / 115][Stage 164:===================================================> (111 + 4) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:====================================>                (79 + 37) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:===============================================>    (105 + 11) / 116][Stage 165:=================================================>   (108 + 8) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.283518507 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336815346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (82 + 33) / 115][Stage 166:=========================================>           (90 + 25) / 115][Stage 166:===============================================>    (105 + 10) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:========================================>            (89 + 27) / 116][Stage 167:============================================>        (97 + 19) / 116][Stage 167:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.822803241 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383638765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (75 + 40) / 115][Stage 168:=========================================>           (89 + 26) / 115][Stage 168:===============================================>    (105 + 10) / 115][Stage 168:==================================================>  (110 + 5) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:==================================>                  (76 + 40) / 116][Stage 169:==========================================>          (92 + 24) / 116][Stage 169:===============================================>    (106 + 10) / 116][Stage 169:====================================================>(114 + 2) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.291182641 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410580581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (61 + 59) / 120][Stage 170:==============================>                      (70 + 50) / 120][Stage 170:=========================================>           (93 + 27) / 120][Stage 170:=================================================>   (112 + 8) / 120][Stage 170:====================================================>(119 + 1) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:===============================>                     (72 + 49) / 121][Stage 171:====================================>                (83 + 38) / 121][Stage 171:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.029708652 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36261462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (72 + 41) / 113][Stage 172:======================================>              (82 + 31) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:===============================================>    (103 + 10) / 113][Stage 172:===================================================> (110 + 3) / 113]                                                                                [Stage 173:=====================================>               (80 + 34) / 114][Stage 173:=========================================>           (89 + 25) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:==================================================>  (109 + 5) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.127635536 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400221419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:============================>                        (61 + 52) / 113][Stage 174:=================================>                   (71 + 42) / 113][Stage 174:=============================================>       (97 + 16) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:============================>                        (61 + 53) / 114][Stage 175:=================================>                   (71 + 43) / 114][Stage 175:==========================================>          (91 + 23) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.21625248 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400007638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:================================>                    (69 + 44) / 113][Stage 176:==========================================>          (91 + 22) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:===============================>                     (67 + 47) / 114][Stage 177:==========================================>          (92 + 22) / 114][Stage 177:==================================================>  (108 + 6) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.070323673 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378326953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (65 + 50) / 115][Stage 178:===================================>                 (77 + 38) / 115][Stage 178:===========================================>         (94 + 21) / 115][Stage 178:=================================================>   (108 + 7) / 115]                                                                                [Stage 179:================================>                    (71 + 45) / 116][Stage 179:======================================>              (85 + 31) / 116][Stage 179:============================================>       (100 + 16) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.727851034 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375326286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (73 + 42) / 115][Stage 180:=========================================>           (89 + 26) / 115][Stage 180:==============================================>     (103 + 12) / 115][Stage 180:==================================================>  (109 + 6) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:==============================>                      (67 + 49) / 116][Stage 181:=====================================>               (83 + 33) / 116][Stage 181:===========================================>         (95 + 21) / 116][Stage 181:==================================================>  (111 + 5) / 116][Stage 181:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.154822148 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387621412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (78 + 35) / 113][Stage 182:==========================================>          (91 + 22) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:===================================================> (109 + 4) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:===================================>                 (77 + 37) / 114][Stage 183:==========================================>          (91 + 23) / 114][Stage 183:==============================================>     (103 + 11) / 114][Stage 183:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.915373625 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413528486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:===========================>                         (62 + 58) / 120][Stage 184:=================================>                   (75 + 45) / 120][Stage 184:=========================================>           (94 + 26) / 120][Stage 184:==================================================>  (114 + 6) / 120]                                                                                [Stage 185:============================>                        (64 + 57) / 121][Stage 185:================================>                    (75 + 46) / 121][Stage 185:===========================================>        (101 + 20) / 121][Stage 185:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.007416077 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386324828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===============================>                     (69 + 46) / 115][Stage 186:======================================>              (83 + 32) / 115][Stage 186:==============================================>     (103 + 12) / 115][Stage 186:==================================================>  (110 + 5) / 115]                                                                                [Stage 187:==================================>                  (75 + 41) / 116][Stage 187:==========================================>          (93 + 23) / 116][Stage 187:=================================================>   (109 + 7) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.838422442 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438815259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (61 + 59) / 120][Stage 188:==================================>                  (77 + 43) / 120][Stage 188:==========================================>          (96 + 24) / 120][Stage 188:===================================================> (116 + 4) / 120]                                                                                [Stage 189:===========================>                         (63 + 58) / 121][Stage 189:============================>                        (65 + 56) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:=============================================>      (106 + 15) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.066956959 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365253325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:=================================>                   (75 + 43) / 118][Stage 190:======================================>              (86 + 32) / 118][Stage 190:=============================================>      (104 + 14) / 118][Stage 190:=================================================>   (111 + 7) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:===================================>                 (80 + 39) / 119][Stage 191:===========================================>         (97 + 22) / 119][Stage 191:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.110330469 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381669639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:======================================>              (82 + 31) / 113][Stage 192:===========================================>         (93 + 20) / 113][Stage 192:===================================================> (110 + 3) / 113]                                                                                [Stage 193:=============================>                       (64 + 50) / 114][Stage 193:====================================>                (78 + 36) / 114][Stage 193:=============================================>       (97 + 17) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.978998913 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365365664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:==================================>                  (77 + 41) / 118][Stage 194:========================================>            (91 + 27) / 118][Stage 194:==============================================>     (106 + 12) / 118][Stage 194:===================================================> (115 + 3) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:==================================>                  (77 + 42) / 119][Stage 195:=======================================>             (88 + 31) / 119][Stage 195:===============================================>    (109 + 10) / 119][Stage 195:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.129886608 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36336282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==================================>                  (73 + 40) / 113][Stage 196:========================================>            (87 + 26) / 113][Stage 196:=============================================>       (96 + 17) / 113][Stage 196:==================================================>  (108 + 5) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===================================>                 (76 + 38) / 114][Stage 197:========================================>            (87 + 27) / 114][Stage 197:==============================================>      (99 + 15) / 114][Stage 197:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.9262262 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365124244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (81 + 32) / 113][Stage 198:===========================================>         (92 + 21) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:====================================>                (79 + 35) / 114][Stage 199:========================================>            (88 + 26) / 114][Stage 199:==============================================>     (101 + 13) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.961246193 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367792849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (75 + 43) / 118][Stage 200:=====================================>               (83 + 35) / 118][Stage 200:==========================================>          (94 + 24) / 118][Stage 200:=================================================>   (110 + 8) / 118][Stage 200:===================================================> (115 + 3) / 118]                                                                                [Stage 201:=================================>                   (75 + 44) / 119][Stage 201:====================================>                (83 + 36) / 119][Stage 201:===========================================>         (98 + 21) / 119][Stage 201:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.179601908 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m53.079s
user	11m27.388s
sys	0m28.892s
