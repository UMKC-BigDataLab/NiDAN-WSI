Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 07:05:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:06:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:06:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:06:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 07:06:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 07:06:20 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522070609-0428).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.298702166 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (48 + 67) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:===========================>                           (58 + 58) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.497519425 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.782878978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================>                                   (40 + 73) / 113][Stage 2:=======================>                               (48 + 65) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:====================================>                  (74 + 39) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:==============================================>        (96 + 17) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:====================================================>  (107 + 6) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===============================>                       (65 + 49) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.187181021 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.689668645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 61) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:==============================>                        (68 + 53) / 121][Stage 4:==================================>                    (75 + 46) / 121][Stage 4:=======================================>               (86 + 35) / 121][Stage 4:===============================================>      (107 + 14) / 121][Stage 4:====================================================>  (115 + 6) / 121]                                                                                [Stage 5:===========================>                           (62 + 60) / 122][Stage 5:=============================>                         (66 + 56) / 122][Stage 5:=================================>                     (74 + 48) / 122][Stage 5:=====================================>                 (84 + 38) / 122][Stage 5:=============================================>        (102 + 20) / 122][Stage 5:===================================================>   (114 + 8) / 122][Stage 5:======================================================>(120 + 2) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.635530787 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.8033965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 60) / 120][Stage 6:==============================>                        (67 + 53) / 120][Stage 6:=====================================>                 (82 + 38) / 120][Stage 6:===========================================>           (94 + 26) / 120][Stage 6:===============================================>      (106 + 14) / 120][Stage 6:===================================================>   (113 + 7) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:==============================>                        (66 + 55) / 121][Stage 7:===================================>                   (77 + 44) / 121][Stage 7:=========================================>             (91 + 30) / 121][Stage 7:==============================================>       (104 + 17) / 121][Stage 7:===================================================>   (114 + 7) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.712482381 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59583581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==============================>                        (64 + 51) / 115][Stage 8:=================================>                     (69 + 46) / 115][Stage 8:======================================>                (80 + 35) / 115][Stage 8:=========================================>             (87 + 28) / 115][Stage 8:=============================================>         (95 + 20) / 115][Stage 8:================================================>     (104 + 11) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:================================>                      (68 + 48) / 116][Stage 9:==================================>                    (73 + 43) / 116][Stage 9:====================================>                  (76 + 40) / 116][Stage 9:========================================>              (85 + 31) / 116][Stage 9:============================================>          (93 + 23) / 116][Stage 9:===============================================>      (101 + 15) / 116][Stage 9:===================================================>   (109 + 7) / 116][Stage 9:====================================================>  (111 + 5) / 116][Stage 9:=====================================================> (113 + 3) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 10.05713011 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553062446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (71 + 47) / 118][Stage 10:================================>                     (72 + 46) / 118][Stage 10:=====================================>                (82 + 36) / 118][Stage 10:==========================================>           (92 + 26) / 118][Stage 10:==============================================>      (103 + 15) / 118][Stage 10:================================================>    (107 + 11) / 118][Stage 10:===================================================>  (112 + 6) / 118][Stage 10:=====================================================>(117 + 1) / 118]                                                                                [Stage 11:================================>                     (72 + 47) / 119][Stage 11:=================================>                    (73 + 46) / 119][Stage 11:======================================>               (85 + 34) / 119][Stage 11:============================================>        (101 + 18) / 119][Stage 11:==============================================>      (105 + 14) / 119][Stage 11:================================================>    (108 + 11) / 119][Stage 11:===================================================>  (113 + 6) / 119][Stage 11:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.033576855 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.639176779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:===========================>                          (62 + 59) / 121][Stage 12:================================>                     (73 + 48) / 121][Stage 12:========================================>             (91 + 30) / 121][Stage 12:==============================================>      (107 + 14) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (65 + 57) / 122][Stage 13:==================================>                   (79 + 43) / 122][Stage 13:===========================================>         (101 + 21) / 122][Stage 13:===============================================>     (109 + 13) / 122][Stage 13:===================================================>  (116 + 6) / 122][Stage 13:=====================================================>(120 + 2) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.453275133 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430516266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (82 + 33) / 115][Stage 14:==========================================>           (90 + 25) / 115][Stage 14:==============================================>       (98 + 17) / 115][Stage 14:==============================================>       (99 + 16) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:===================================================>  (109 + 6) / 115]                                                                                [Stage 15:======================================>               (83 + 33) / 116][Stage 15:==========================================>           (91 + 25) / 116][Stage 15:=============================================>        (98 + 18) / 116][Stage 15:================================================>    (106 + 10) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:====================================================> (112 + 4) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.36445796 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562418254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (74 + 44) / 118][Stage 16:=====================================>                (83 + 35) / 118][Stage 16:===========================================>          (96 + 22) / 118][Stage 16:=================================================>    (109 + 9) / 118][Stage 16:====================================================> (115 + 3) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:===================================>                  (79 + 40) / 119][Stage 17:==========================================>           (94 + 25) / 119][Stage 17:===============================================>     (107 + 12) / 119][Stage 17:====================================================> (115 + 4) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.428552288 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546703009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:================================>                     (73 + 48) / 121][Stage 18:=======================================>              (89 + 32) / 121][Stage 18:=============================================>       (104 + 17) / 121][Stage 18:===================================================>  (115 + 6) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:=============================>                        (66 + 56) / 122][Stage 19:=======================================>              (90 + 32) / 122][Stage 19:================================================>    (112 + 10) / 122][Stage 19:====================================================> (118 + 4) / 122][Stage 19:=====================================================>(120 + 2) / 122][Stage 19:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.106164045 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54004587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (66 + 49) / 115][Stage 20:====================================>                 (78 + 37) / 115][Stage 20:============================================>         (94 + 21) / 115][Stage 20:================================================>    (105 + 10) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:=================================>                    (73 + 43) / 116][Stage 21:========================================>             (87 + 29) / 116][Stage 21:==========================================>           (92 + 24) / 116][Stage 21:==============================================>       (99 + 17) / 116][Stage 21:==================================================>   (109 + 7) / 116][Stage 21:====================================================> (113 + 3) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.751601057 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505285748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:===============================>                      (65 + 48) / 113][Stage 22:=========================================>            (86 + 27) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:====================================================> (109 + 4) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:==============================>                       (64 + 50) / 114][Stage 23:====================================>                 (76 + 38) / 114][Stage 23:==========================================>           (89 + 25) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.465774588 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501202156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (69 + 44) / 113][Stage 24:===========================================>          (90 + 23) / 113][Stage 24:====================================================> (110 + 3) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:================================>                     (68 + 46) / 114][Stage 25:=======================================>              (83 + 31) / 114][Stage 25:==============================================>       (99 + 15) / 114][Stage 25:====================================================> (111 + 3) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.618399157 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417122649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=======================================>              (85 + 30) / 115][Stage 26:==============================================>       (99 + 16) / 115][Stage 26:==================================================>   (107 + 8) / 115][Stage 26:===================================================>  (109 + 6) / 115][Stage 26:====================================================> (111 + 4) / 115]                                                                                [Stage 27:=======================================>              (84 + 32) / 116][Stage 27:=========================================>            (90 + 26) / 116][Stage 27:================================================>    (106 + 10) / 116][Stage 27:=================================================>    (107 + 9) / 116][Stage 27:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.189757413 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438237671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (80 + 33) / 113][Stage 28:===========================================>          (90 + 23) / 113][Stage 28:==============================================>      (100 + 13) / 113][Stage 28:====================================================> (110 + 3) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:==================================>                   (73 + 41) / 114][Stage 29:========================================>             (86 + 28) / 114][Stage 29:===========================================>          (92 + 22) / 114][Stage 29:===============================================>     (103 + 11) / 114][Stage 29:====================================================> (111 + 3) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.869851882 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5224035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:============================>                         (63 + 58) / 121][Stage 30:==================================>                   (78 + 43) / 121][Stage 30:=========================================>            (93 + 28) / 121][Stage 30:===============================================>     (108 + 13) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:============================>                         (65 + 57) / 122][Stage 31:=====================================>                (84 + 38) / 122][Stage 31:===========================================>         (100 + 22) / 122][Stage 31:==============================================>      (108 + 14) / 122][Stage 31:===================================================>  (116 + 6) / 122][Stage 31:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.101039006 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426382057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:====================================>                 (76 + 37) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:==================================================>   (105 + 8) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:======================================>               (81 + 33) / 114][Stage 33:===========================================>          (91 + 23) / 114][Stage 33:==============================================>      (101 + 13) / 114][Stage 33:====================================================> (111 + 3) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.563165523 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4341975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (83 + 32) / 115][Stage 34:========================================>             (86 + 29) / 115][Stage 34:===============================================>     (103 + 12) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:======================================>               (82 + 34) / 116][Stage 35:========================================>             (87 + 29) / 116][Stage 35:=============================================>        (98 + 18) / 116][Stage 35:===============================================>     (105 + 11) / 116][Stage 35:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.945046583 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442072144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=====================================>                (80 + 35) / 115][Stage 36:========================================>             (87 + 28) / 115][Stage 36:==============================================>       (98 + 17) / 115][Stage 36:==================================================>   (107 + 8) / 115][Stage 36:===================================================>  (110 + 5) / 115][Stage 36:=====================================================>(114 + 1) / 115]                                                                                [Stage 37:=======================================>              (84 + 32) / 116][Stage 37:===========================================>          (94 + 22) / 116][Stage 37:===============================================>     (103 + 13) / 116][Stage 37:====================================================> (113 + 3) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.789576902 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521795679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:===========================>                          (61 + 59) / 120][Stage 38:==================================>                   (76 + 44) / 120][Stage 38:=======================================>              (88 + 32) / 120][Stage 38:==============================================>      (106 + 14) / 120][Stage 38:==================================================>   (112 + 8) / 120][Stage 38:===================================================>  (115 + 5) / 120][Stage 38:=====================================================>(119 + 1) / 120]                                                                                [Stage 39:===========================>                          (62 + 59) / 121][Stage 39:==============================>                       (69 + 52) / 121][Stage 39:=======================================>              (89 + 32) / 121][Stage 39:================================================>    (110 + 11) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.550730604 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480997859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (60 + 53) / 113][Stage 40:================================>                     (68 + 45) / 113][Stage 40:=====================================>                (79 + 34) / 113][Stage 40:==============================================>      (100 + 13) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==============================>                       (64 + 50) / 114][Stage 41:=====================================>                (79 + 35) / 114][Stage 41:============================================>         (93 + 21) / 114][Stage 41:==================================================>   (107 + 7) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.945751162 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472789556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (73 + 45) / 118][Stage 42:===================================>                  (77 + 41) / 118][Stage 42:=====================================>                (83 + 35) / 118][Stage 42:=============================================>        (99 + 19) / 118][Stage 42:===================================================>  (112 + 6) / 118][Stage 42:=====================================================>(117 + 1) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:==================================>                   (75 + 44) / 119][Stage 43:====================================>                 (80 + 39) / 119][Stage 43:=========================================>            (91 + 28) / 119][Stage 43:===============================================>     (107 + 12) / 119][Stage 43:====================================================> (116 + 3) / 119][Stage 43:=====================================================>(117 + 2) / 119][Stage 43:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.35103016 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414209362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (73 + 45) / 118][Stage 44:=====================================>                (83 + 35) / 118][Stage 44:==========================================>           (92 + 26) / 118][Stage 44:==============================================>      (104 + 14) / 118][Stage 44:==================================================>   (110 + 8) / 118][Stage 44:====================================================> (115 + 3) / 118]                                                                                [Stage 45:=================================>                    (74 + 45) / 119][Stage 45:=====================================>                (82 + 37) / 119][Stage 45:============================================>         (97 + 22) / 119][Stage 45:==================================================>   (111 + 8) / 119][Stage 45:====================================================> (115 + 4) / 119][Stage 45:=====================================================>(117 + 2) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.437608718 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461488442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:============================>                         (64 + 57) / 121][Stage 46:=====================================>                (84 + 37) / 121][Stage 46:=============================================>       (103 + 18) / 121][Stage 46:===================================================>  (115 + 6) / 121]                                                                                [Stage 47:===========================>                          (62 + 60) / 122][Stage 47:===============================>                      (71 + 51) / 122][Stage 47:========================================>             (92 + 30) / 122][Stage 47:==============================================>      (106 + 16) / 122][Stage 47:=====================================================>(120 + 2) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.595083786 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48403135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:==============================>                       (68 + 53) / 121][Stage 48:========================================>             (90 + 31) / 121][Stage 48:================================================>    (110 + 11) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:=============================>                        (66 + 56) / 122][Stage 49:====================================>                 (82 + 40) / 122][Stage 49:==============================================>      (106 + 16) / 122][Stage 49:====================================================> (118 + 4) / 122][Stage 49:=====================================================>(120 + 2) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.863893023 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400865044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (80 + 35) / 115][Stage 50:=======================================>              (85 + 30) / 115][Stage 50:==============================================>       (98 + 17) / 115][Stage 50:====================================================> (111 + 4) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:======================================>               (83 + 33) / 116][Stage 51:==========================================>           (91 + 25) / 116][Stage 51:==============================================>      (101 + 15) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:====================================================> (113 + 3) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.900030308 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444161593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:================================>                     (67 + 46) / 113][Stage 52:===========================================>          (91 + 22) / 113][Stage 52:==================================================>   (105 + 8) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=============================>                        (62 + 52) / 114][Stage 53:=====================================>                (79 + 35) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:==================================================>   (107 + 7) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.912043474 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420465482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (73 + 45) / 118][Stage 54:====================================>                 (80 + 38) / 118][Stage 54:=============================================>       (102 + 16) / 118][Stage 54:====================================================> (115 + 3) / 118]                                                                                [Stage 55:=================================>                    (74 + 45) / 119][Stage 55:===================================>                  (79 + 40) / 119][Stage 55:==========================================>           (93 + 26) / 119][Stage 55:====================================================> (115 + 4) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.516423192 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406734402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=================================>                    (73 + 45) / 118][Stage 56:====================================>                 (80 + 38) / 118][Stage 56:===========================================>          (94 + 24) / 118][Stage 56:==================================================>   (110 + 8) / 118][Stage 56:=====================================================>(117 + 1) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:==================================>                   (76 + 43) / 119][Stage 57:=======================================>              (86 + 33) / 119][Stage 57:===============================================>     (106 + 13) / 119][Stage 57:====================================================> (116 + 3) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.881177451 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388071687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=================================>                    (70 + 43) / 113][Stage 58:=======================================>              (83 + 30) / 113][Stage 58:============================================>         (94 + 19) / 113][Stage 58:================================================>    (103 + 10) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:====================================>                 (77 + 37) / 114][Stage 59:==========================================>           (90 + 24) / 114][Stage 59:=============================================>        (97 + 17) / 114][Stage 59:===================================================>  (108 + 6) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.054119089 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450091631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:================================>                     (72 + 48) / 120][Stage 60:=====================================>                (83 + 37) / 120][Stage 60:===============================================>     (108 + 12) / 120][Stage 60:=====================================================>(118 + 2) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:=============================>                        (67 + 54) / 121][Stage 61:===================================>                  (79 + 42) / 121][Stage 61:=============================================>       (105 + 16) / 121][Stage 61:====================================================> (117 + 4) / 121][Stage 61:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.74396613 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443728392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==============================>                       (65 + 50) / 115][Stage 62:=====================================>                (79 + 36) / 115][Stage 62:===========================================>          (92 + 23) / 115][Stage 62:=================================================>    (106 + 9) / 115][Stage 62:====================================================> (112 + 3) / 115]                                                                                [Stage 63:==================================>                   (75 + 41) / 116][Stage 63:===========================================>          (93 + 23) / 116][Stage 63:===============================================>     (103 + 13) / 116][Stage 63:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.950796107 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434366845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:==============================>                       (63 + 50) / 113][Stage 64:========================================>             (84 + 29) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:==================================================>   (106 + 7) / 113][Stage 64:===================================================>  (107 + 6) / 113][Stage 64:=====================================================>(111 + 2) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:==============================>                       (65 + 49) / 114][Stage 65:====================================>                 (77 + 37) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.074891413 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372637523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (80 + 35) / 115][Stage 66:==========================================>           (90 + 25) / 115][Stage 66:================================================>    (105 + 10) / 115][Stage 66:===================================================>  (109 + 6) / 115][Stage 66:====================================================> (112 + 3) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:========================================>             (87 + 29) / 116][Stage 67:===============================================>     (104 + 12) / 116][Stage 67:==================================================>   (109 + 7) / 116][Stage 67:====================================================> (113 + 3) / 116][Stage 67:=====================================================>(114 + 2) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.250808552 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420134303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (66 + 49) / 115][Stage 68:=====================================>                (80 + 35) / 115][Stage 68:==============================================>       (98 + 17) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:===============================>                      (68 + 48) / 116][Stage 69:======================================>               (82 + 34) / 116][Stage 69:==========================================>           (92 + 24) / 116][Stage 69:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.681566836 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385691802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (83 + 32) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:===============================================>     (103 + 12) / 115][Stage 70:====================================================> (111 + 4) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:=======================================>              (84 + 32) / 116][Stage 71:============================================>         (95 + 21) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:=================================================>    (107 + 9) / 116][Stage 71:====================================================> (113 + 3) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.440969386 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40199251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:===================================>                  (77 + 41) / 118][Stage 72:=====================================>                (81 + 37) / 118][Stage 72:===========================================>          (94 + 24) / 118][Stage 72:===============================================>     (105 + 13) / 118][Stage 72:===================================================>  (113 + 5) / 118]                                                                                [Stage 73:==================================>                   (75 + 44) / 119][Stage 73:=====================================>                (83 + 36) / 119][Stage 73:==========================================>           (93 + 26) / 119][Stage 73:===============================================>     (106 + 13) / 119][Stage 73:=====================================================>(117 + 2) / 119][Stage 73:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.216577325 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438320398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:=============================>                        (61 + 52) / 113][Stage 74:================================>                     (69 + 44) / 113][Stage 74:========================================>             (85 + 28) / 113][Stage 74:===============================================>     (101 + 12) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:==================================>                   (72 + 42) / 114][Stage 75:======================================>               (82 + 32) / 114][Stage 75:================================================>    (104 + 10) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.486789446 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422815272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:===========================================>          (91 + 22) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=============================>                        (63 + 51) / 114][Stage 77:=======================================>              (83 + 31) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:==================================================>   (106 + 8) / 114][Stage 77:=====================================================>(112 + 2) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.322490223 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449926493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:===============================>                      (66 + 47) / 113][Stage 78:==========================================>           (89 + 24) / 113][Stage 78:===================================================>  (107 + 6) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:====================================>                 (77 + 37) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:===============================================>     (103 + 11) / 114][Stage 79:====================================================> (110 + 4) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.010409442 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412894624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:==================================>                   (73 + 40) / 113][Stage 80:============================================>         (94 + 19) / 113][Stage 80:==================================================>   (105 + 8) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:=============================>                        (62 + 52) / 114][Stage 81:=====================================>                (80 + 34) / 114][Stage 81:==============================================>       (98 + 16) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.906677136 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357349979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (82 + 33) / 115][Stage 82:===========================================>          (93 + 22) / 115][Stage 82:==================================================>   (107 + 8) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:=========================================>            (89 + 27) / 116][Stage 83:==============================================>      (101 + 15) / 116][Stage 83:===================================================>  (110 + 6) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.842621124 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352704665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=========================================>            (88 + 27) / 115][Stage 84:==============================================>       (98 + 17) / 115][Stage 84:====================================================> (111 + 4) / 115]                                                                                [Stage 85:========================================>             (87 + 29) / 116][Stage 85:=============================================>        (97 + 19) / 116][Stage 85:==================================================>   (108 + 8) / 116][Stage 85:====================================================> (112 + 4) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.89797141 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420505827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:=============================>                        (67 + 54) / 121][Stage 86:========================================>             (90 + 31) / 121][Stage 86:================================================>    (110 + 11) / 121][Stage 86:=====================================================>(119 + 2) / 121]                                                                                [Stage 87:===========================>                          (63 + 59) / 122][Stage 87:==================================>                   (77 + 45) / 122][Stage 87:=========================================>            (93 + 29) / 122][Stage 87:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.982109906 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393300966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:====================================>                 (77 + 36) / 113][Stage 88:===========================================>          (91 + 22) / 113][Stage 88:==============================================>       (98 + 15) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:====================================>                 (77 + 37) / 114][Stage 89:=======================================>              (84 + 30) / 114][Stage 89:=============================================>        (95 + 19) / 114][Stage 89:==================================================>   (106 + 8) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.189546757 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390747499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==============================>                       (66 + 49) / 115][Stage 90:====================================>                 (77 + 38) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:==================================================>   (108 + 7) / 115][Stage 90:====================================================> (111 + 4) / 115]                                                                                [Stage 91:================================>                     (69 + 47) / 116][Stage 91:========================================>             (87 + 29) / 116][Stage 91:=============================================>        (97 + 19) / 116][Stage 91:==================================================>   (109 + 7) / 116][Stage 91:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.280175208 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376800178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (72 + 41) / 113][Stage 92:=======================================>              (82 + 31) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:==================================================>   (106 + 7) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:=====================================>                (80 + 34) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:===============================================>     (102 + 12) / 114][Stage 93:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.040263078 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351507563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (83 + 32) / 115][Stage 94:==========================================>           (90 + 25) / 115][Stage 94:==============================================>       (99 + 16) / 115][Stage 94:================================================>    (105 + 10) / 115][Stage 94:===================================================>  (110 + 5) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:======================================>               (82 + 34) / 116][Stage 95:========================================>             (87 + 29) / 116][Stage 95:==============================================>      (101 + 15) / 116][Stage 95:===============================================>     (105 + 11) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:====================================================> (112 + 4) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.109991681 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396943078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:=================================>                    (73 + 45) / 118][Stage 96:=====================================>                (83 + 35) / 118][Stage 96:==============================================>      (104 + 14) / 118][Stage 96:====================================================> (115 + 3) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:=====================================>                (82 + 37) / 119][Stage 97:============================================>         (98 + 21) / 119][Stage 97:===================================================>  (114 + 5) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.946654993 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404476981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:================================>                     (68 + 45) / 113][Stage 98:===========================================>          (90 + 23) / 113][Stage 98:===============================================>     (102 + 11) / 113][Stage 98:====================================================> (110 + 3) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:===========================>                          (59 + 55) / 114][Stage 99:===============================>                      (67 + 47) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.804351113 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356261517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (70 + 43) / 113][Stage 100:=======================================>             (84 + 29) / 113][Stage 100:=============================================>       (96 + 17) / 113][Stage 100:==============================================>     (102 + 11) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:======================================>              (82 + 32) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.116539412 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34335498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=====================================>               (81 + 34) / 115][Stage 102:=========================================>           (90 + 25) / 115][Stage 102:============================================>        (97 + 18) / 115][Stage 102:=================================================>   (108 + 7) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:=====================================>               (83 + 33) / 116][Stage 103:=======================================>             (86 + 30) / 116][Stage 103:===========================================>         (96 + 20) / 116][Stage 103:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.969372096 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352998388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=======================================>             (85 + 30) / 115][Stage 104:===========================================>         (95 + 20) / 115][Stage 104:==================================================>  (109 + 6) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:=======================================>             (87 + 29) / 116][Stage 105:==========================================>          (94 + 22) / 116][Stage 105:=============================================>      (102 + 14) / 116][Stage 105:===================================================> (113 + 3) / 116][Stage 105:====================================================>(114 + 2) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.309813159 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3906821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (74 + 39) / 113][Stage 106:========================================>            (86 + 27) / 113][Stage 106:=============================================>       (96 + 17) / 113][Stage 106:================================================>    (104 + 9) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:===================================>                 (77 + 37) / 114][Stage 107:=========================================>           (89 + 25) / 114][Stage 107:=============================================>      (100 + 14) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.251438378 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383626659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (76 + 37) / 113][Stage 108:======================================>              (82 + 31) / 113][Stage 108:==========================================>          (91 + 22) / 113][Stage 108:==============================================>     (101 + 12) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:======================================>              (82 + 32) / 114][Stage 109:==========================================>          (92 + 22) / 114][Stage 109:==============================================>     (101 + 13) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.117655203 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395273955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=============================>                       (65 + 50) / 115][Stage 110:==================================>                  (74 + 41) / 115][Stage 110:=========================================>           (89 + 26) / 115][Stage 110:=============================================>       (98 + 17) / 115][Stage 110:===================================================> (112 + 3) / 115]                                                                                [Stage 111:==================================>                  (75 + 41) / 116][Stage 111:===========================================>         (95 + 21) / 116][Stage 111:===================================================> (112 + 4) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.851031512 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345526647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (82 + 33) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:=================================================>   (107 + 8) / 115][Stage 112:===================================================> (111 + 4) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:======================================>              (84 + 32) / 116][Stage 113:==========================================>          (94 + 22) / 116][Stage 113:=================================================>   (109 + 7) / 116][Stage 113:===================================================> (112 + 4) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.226726729 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336940422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (82 + 33) / 115][Stage 114:========================================>            (88 + 27) / 115][Stage 114:==============================================>     (103 + 12) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:=========================================>           (91 + 25) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:=================================================>   (109 + 7) / 116][Stage 115:==================================================>  (111 + 5) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.922019925 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=238", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=238,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415217274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:===========================>                         (62 + 59) / 121][Stage 116:================================>                    (75 + 46) / 121][Stage 116:=========================================>           (95 + 26) / 121][Stage 116:=================================================>   (113 + 8) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:===========================>                         (63 + 59) / 122][Stage 117:================================>                    (75 + 47) / 122][Stage 117:==========================================>          (98 + 24) / 122][Stage 117:===================================================> (118 + 4) / 122][Stage 117:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.84168428 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384899784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=============================>                       (63 + 50) / 113][Stage 118:====================================>                (78 + 35) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:==================================>                  (74 + 40) / 114][Stage 119:===========================================>         (93 + 21) / 114][Stage 119:==============================================>     (103 + 11) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.586532083 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358131925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (80 + 33) / 113][Stage 120:========================================>            (87 + 26) / 113][Stage 120:==============================================>      (99 + 14) / 113][Stage 120:=================================================>   (106 + 7) / 113]                                                                                [Stage 121:=====================================>               (81 + 33) / 114][Stage 121:==========================================>          (91 + 23) / 114][Stage 121:=============================================>       (98 + 16) / 114][Stage 121:================================================>    (105 + 9) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.980005422 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36984008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===============================>                     (68 + 47) / 115][Stage 122:===================================>                 (76 + 39) / 115][Stage 122:============================================>        (97 + 18) / 115][Stage 122:===================================================> (112 + 3) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:===============================>                     (70 + 46) / 116][Stage 123:====================================>                (80 + 36) / 116][Stage 123:============================================>        (98 + 18) / 116][Stage 123:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.838806163 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352392688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (78 + 35) / 113][Stage 124:=======================================>             (84 + 29) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:==============================================>     (102 + 11) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===================================>                 (76 + 38) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:==========================================>          (91 + 23) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.996082897 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400588572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (66 + 54) / 120][Stage 126:===================================>                 (81 + 39) / 120][Stage 126:===============================================>    (109 + 11) / 120][Stage 126:===================================================> (117 + 3) / 120]                                                                                [Stage 127:============================>                        (64 + 57) / 121][Stage 127:=================================>                   (77 + 44) / 121][Stage 127:==============================================>     (108 + 13) / 121][Stage 127:===================================================> (118 + 3) / 121][Stage 127:====================================================>(119 + 2) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.868701392 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363401201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:=================================>                   (75 + 43) / 118][Stage 128:========================================>            (90 + 28) / 118][Stage 128:============================================>       (102 + 16) / 118][Stage 128:===================================================> (114 + 4) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:====================================>                (81 + 38) / 119][Stage 129:======================================>              (87 + 32) / 119][Stage 129:==========================================>          (96 + 23) / 119][Stage 129:=================================================>   (112 + 7) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.983080914 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390076201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:===============================>                     (67 + 46) / 113][Stage 130:==========================================>          (90 + 23) / 113][Stage 130:================================================>    (104 + 9) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:=============================>                       (63 + 51) / 114][Stage 131:=====================================>               (81 + 33) / 114][Stage 131:============================================>        (95 + 19) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.169901693 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3561329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (84 + 31) / 115][Stage 132:===========================================>         (94 + 21) / 115][Stage 132:==================================================>  (109 + 6) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:=========================================>           (91 + 25) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.672557556 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=174", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=174,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334639776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (80 + 35) / 115][Stage 134:=========================================>           (91 + 24) / 115][Stage 134:================================================>    (106 + 9) / 115][Stage 134:====================================================>(113 + 2) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=====================================>               (83 + 33) / 116][Stage 135:========================================>            (88 + 28) / 116][Stage 135:===============================================>    (106 + 10) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.742833787 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382958601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (71 + 44) / 115][Stage 136:===================================>                 (78 + 37) / 115][Stage 136:=============================================>       (99 + 16) / 115][Stage 136:================================================>    (106 + 9) / 115][Stage 136:====================================================>(113 + 2) / 115]                                                                                [Stage 137:==============================>                      (66 + 50) / 116][Stage 137:==================================>                  (76 + 40) / 116][Stage 137:=========================================>           (90 + 26) / 116][Stage 137:================================================>    (107 + 9) / 116][Stage 137:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.972421492 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359712691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (74 + 44) / 118][Stage 138:=====================================>               (84 + 34) / 118][Stage 138:==============================================>     (105 + 13) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:====================================>                (82 + 37) / 119][Stage 139:========================================>            (91 + 28) / 119][Stage 139:=================================================>   (111 + 8) / 119][Stage 139:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.99217899 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405835389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:=============================>                       (67 + 54) / 121][Stage 140:=====================================>               (86 + 35) / 121][Stage 140:=============================================>      (105 + 16) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:=============================>                       (67 + 55) / 122][Stage 141:==================================>                  (80 + 42) / 122][Stage 141:============================================>       (104 + 18) / 122][Stage 141:===================================================> (118 + 4) / 122][Stage 141:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.780484042 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35911037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:======================================>              (86 + 32) / 118][Stage 142:============================================>       (101 + 17) / 118][Stage 142:=================================================>   (111 + 7) / 118][Stage 142:===================================================> (115 + 3) / 118]                                                                                [Stage 143:================================>                    (74 + 45) / 119][Stage 143:==================================>                  (77 + 42) / 119][Stage 143:======================================>              (87 + 32) / 119][Stage 143:============================================>        (99 + 20) / 119][Stage 143:==================================================>  (113 + 6) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.54083647 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407465554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:===========================>                         (63 + 58) / 121][Stage 144:===============================>                     (72 + 49) / 121][Stage 144:=========================================>           (94 + 27) / 121][Stage 144:====================================================>(119 + 2) / 121]                                                                                [Stage 145:============================>                        (65 + 57) / 122][Stage 145:===============================>                     (73 + 49) / 122][Stage 145:=======================================>             (92 + 30) / 122][Stage 145:===================================================> (119 + 3) / 122][Stage 145:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.61380135 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333617134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:======================================>              (83 + 32) / 115][Stage 146:===========================================>         (94 + 21) / 115][Stage 146:===================================================> (112 + 3) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:=====================================>               (82 + 34) / 116][Stage 147:==========================================>          (93 + 23) / 116][Stage 147:==============================================>     (104 + 12) / 116][Stage 147:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.775827354 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398191147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:============================>                        (65 + 55) / 120][Stage 148:=====================================>               (85 + 35) / 120][Stage 148:=================================================>   (111 + 9) / 120]                                                                                [Stage 149:=============================>                       (67 + 54) / 121][Stage 149:===================================>                 (80 + 41) / 121][Stage 149:=============================================>      (106 + 15) / 121][Stage 149:===============================================>    (110 + 11) / 121][Stage 149:=================================================>   (112 + 9) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.525974415 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399900912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:==============================>                      (69 + 52) / 121][Stage 150:==================================>                  (79 + 42) / 121][Stage 150:==========================================>         (100 + 21) / 121][Stage 150:====================================================>(120 + 1) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:=============================>                       (68 + 54) / 122][Stage 151:======================================>              (88 + 34) / 122][Stage 151:=================================================>   (114 + 8) / 122][Stage 151:===================================================> (119 + 3) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.512460816 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392150209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:============================>                        (60 + 53) / 113][Stage 152:===================================>                 (75 + 38) / 113][Stage 152:========================================>            (87 + 26) / 113][Stage 152:==================================================>  (107 + 6) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:==============================>                      (66 + 48) / 114][Stage 153:=======================================>             (86 + 28) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.982706399 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389708662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (65 + 55) / 120][Stage 154:======================================>              (87 + 33) / 120][Stage 154:=================================================>   (111 + 9) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:===============================>                     (72 + 49) / 121][Stage 155:========================================>            (92 + 29) / 121][Stage 155:=================================================>   (114 + 7) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.094056393 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374517697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==============================>                      (67 + 48) / 115][Stage 156:====================================>                (79 + 36) / 115][Stage 156:=========================================>           (91 + 24) / 115][Stage 156:===================================================> (111 + 4) / 115]                                                                                [Stage 157:====================================>                (80 + 36) / 116][Stage 157:=============================================>       (99 + 17) / 116][Stage 157:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.684824291 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381113477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:===============================>                     (68 + 45) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:=============================================>       (97 + 16) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:==============================>                      (65 + 49) / 114][Stage 159:====================================>                (79 + 35) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.015291362 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367906778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:==================================>                  (76 + 42) / 118][Stage 160:===================================>                 (79 + 39) / 118][Stage 160:========================================>            (91 + 27) / 118][Stage 160:================================================>    (109 + 9) / 118][Stage 160:====================================================>(116 + 2) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:================================>                    (74 + 45) / 119][Stage 161:=====================================>               (85 + 34) / 119][Stage 161:==========================================>          (95 + 24) / 119][Stage 161:==============================================>     (106 + 13) / 119][Stage 161:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.950354815 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407374536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:===========================>                         (63 + 58) / 121][Stage 162:==================================>                  (79 + 42) / 121][Stage 162:===========================================>        (101 + 20) / 121][Stage 162:====================================================>(119 + 2) / 121]                                                                                [Stage 163:==========================>                          (62 + 60) / 122][Stage 163:============================>                        (66 + 56) / 122][Stage 163:===================================>                 (82 + 40) / 122][Stage 163:============================================>       (105 + 17) / 122][Stage 163:===================================================> (119 + 3) / 122][Stage 163:====================================================>(120 + 2) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.280694659 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397805288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:============================>                        (64 + 57) / 121][Stage 164:====================================>                (84 + 37) / 121][Stage 164:==========================================>         (100 + 21) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:==========================>                          (61 + 61) / 122][Stage 165:=============================>                       (68 + 54) / 122][Stage 165:====================================>                (84 + 38) / 122][Stage 165:==============================================>     (108 + 14) / 122][Stage 165:===================================================> (119 + 3) / 122][Stage 165:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.195675808 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346984936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (79 + 36) / 115][Stage 166:========================================>            (88 + 27) / 115][Stage 166:=============================================>      (100 + 15) / 115][Stage 166:===================================================> (111 + 4) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:============================================>        (97 + 19) / 116][Stage 167:=================================================>   (109 + 7) / 116][Stage 167:====================================================>(114 + 2) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.909297428 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360881138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=================================>                   (71 + 42) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:=============================================>       (97 + 16) / 113][Stage 168:==================================================>  (108 + 5) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=================================>                   (73 + 41) / 114][Stage 169:========================================>            (87 + 27) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:=================================================>   (107 + 7) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084133872 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363883187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (82 + 31) / 113][Stage 170:==========================================>          (90 + 23) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:===================================================> (109 + 4) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:=====================================>               (80 + 34) / 114][Stage 171:=========================================>           (90 + 24) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.536808305 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376608525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:=============================>                       (63 + 50) / 113][Stage 172:=================================>                   (72 + 41) / 113][Stage 172:=============================================>       (96 + 17) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:=============================>                       (63 + 51) / 114][Stage 173:=================================>                   (73 + 41) / 114][Stage 173:============================================>        (96 + 18) / 114][Stage 173:=================================================>   (107 + 7) / 114][Stage 173:====================================================>(112 + 2) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.788305059 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394106718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:=============================>                       (67 + 53) / 120][Stage 174:=====================================>               (84 + 36) / 120][Stage 174:===============================================>    (109 + 11) / 120][Stage 174:====================================================>(118 + 2) / 120]                                                                                [Stage 175:===========================>                         (63 + 58) / 121][Stage 175:=================================>                   (77 + 44) / 121][Stage 175:============================================>       (103 + 18) / 121][Stage 175:===================================================> (118 + 3) / 121][Stage 175:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.394298892 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369951246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (72 + 43) / 115][Stage 176:==========================================>          (92 + 23) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:==================================>                  (76 + 40) / 116][Stage 177:========================================>            (89 + 27) / 116][Stage 177:==============================================>     (104 + 12) / 116][Stage 177:=================================================>   (109 + 7) / 116][Stage 177:==================================================>  (110 + 6) / 116][Stage 177:====================================================>(114 + 2) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.181035574 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356430445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===================================>                 (75 + 38) / 113][Stage 178:======================================>              (82 + 31) / 113][Stage 178:=============================================>       (96 + 17) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:===================================================> (110 + 3) / 113]                                                                                [Stage 179:===================================>                 (77 + 37) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:=============================================>      (100 + 14) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.035243775 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361618881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:===================================>                 (78 + 40) / 118][Stage 180:============================================>       (102 + 16) / 118][Stage 180:==================================================>  (113 + 5) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:====================================>                (83 + 36) / 119][Stage 181:============================================>        (99 + 20) / 119][Stage 181:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.441605691 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43140881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (60 + 53) / 113][Stage 182:================================>                    (69 + 44) / 113][Stage 182:=========================================>           (88 + 25) / 113][Stage 182:=================================================>   (106 + 7) / 113]                                                                                [Stage 183:==============================>                      (65 + 49) / 114][Stage 183:=====================================>               (81 + 33) / 114][Stage 183:==========================================>          (92 + 22) / 114][Stage 183:==================================================>  (109 + 5) / 114][Stage 183:====================================================>(112 + 2) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.805939502 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343539527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (80 + 35) / 115][Stage 184:======================================>              (84 + 31) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:===================================================> (112 + 3) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:===========================================>         (96 + 20) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.720983499 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331437112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:======================================>              (83 + 32) / 115][Stage 186:==========================================>          (92 + 23) / 115][Stage 186:=================================================>   (108 + 7) / 115][Stage 186:==================================================>  (110 + 5) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:=====================================>               (83 + 33) / 116][Stage 187:==========================================>          (93 + 23) / 116][Stage 187:=============================================>      (101 + 15) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.884521549 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3341261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:======================================>              (84 + 31) / 115][Stage 188:===========================================>         (94 + 21) / 115][Stage 188:===============================================>    (104 + 11) / 115][Stage 188:===================================================> (112 + 3) / 115]                                                                                [Stage 189:=======================================>             (86 + 30) / 116][Stage 189:============================================>        (97 + 19) / 116][Stage 189:===============================================>    (105 + 11) / 116][Stage 189:===================================================> (112 + 4) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.051933352 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387913201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:============================>                        (61 + 52) / 113][Stage 190:====================================>                (77 + 36) / 113][Stage 190:==============================================>     (102 + 11) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:==============================>                      (65 + 49) / 114][Stage 191:========================================>            (87 + 27) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.6091874 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391568372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===============================>                     (71 + 49) / 120][Stage 192:========================================>            (91 + 29) / 120][Stage 192:===============================================>    (110 + 10) / 120]                                                                                [Stage 193:============================>                        (64 + 57) / 121][Stage 193:=================================>                   (77 + 44) / 121][Stage 193:======================================>              (89 + 32) / 121][Stage 193:==============================================>     (109 + 12) / 121][Stage 193:===================================================> (117 + 4) / 121][Stage 193:====================================================>(119 + 2) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.929663335 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386233417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==============================>                      (67 + 48) / 115][Stage 194:=====================================>               (81 + 34) / 115][Stage 194:=============================================>       (99 + 16) / 115][Stage 194:================================================>    (106 + 9) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:===============================>                     (68 + 48) / 116][Stage 195:=====================================>               (82 + 34) / 116][Stage 195:==========================================>          (93 + 23) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.972577058 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329556407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=========================================>           (89 + 26) / 115][Stage 196:=============================================>      (100 + 15) / 115][Stage 196:==================================================>  (110 + 5) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:======================================>              (85 + 31) / 116][Stage 197:===========================================>         (96 + 20) / 116][Stage 197:================================================>    (107 + 9) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.943057612 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401760803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (67 + 48) / 115][Stage 198:====================================>                (79 + 36) / 115][Stage 198:============================================>        (96 + 19) / 115][Stage 198:================================================>    (106 + 9) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:=================================>                   (73 + 43) / 116][Stage 199:=========================================>           (90 + 26) / 116][Stage 199:===============================================>    (106 + 10) / 116][Stage 199:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.756099993 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370316049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:=============================>                       (62 + 51) / 113][Stage 200:=====================================>               (79 + 34) / 113][Stage 200:==============================================>      (99 + 14) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:===========================>                         (60 + 54) / 114][Stage 201:==================================>                  (75 + 39) / 114][Stage 201:======================================>              (83 + 31) / 114][Stage 201:=============================================>      (100 + 14) / 114][Stage 201:==================================================>  (109 + 5) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.844404113 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:53048) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.4:49656) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:39168) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:59190) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:39168) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.4:49656) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:53048) dropped. RpcEnv already stopped.
17/05/22 07:17:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:59190) dropped. RpcEnv already stopped.

real	11m41.959s
user	12m14.480s
sys	1m29.972s
