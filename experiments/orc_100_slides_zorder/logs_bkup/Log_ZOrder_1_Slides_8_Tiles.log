Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/21 23:17:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:18:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:18:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:18:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/21 23:18:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:18:20 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170521231809-0388).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.602988692 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:================================================>     (105 + 11) / 116]                                                                                Time elapsed: 12.365346631 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.862982641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (37 + 76) / 113][Stage 2:=====================>                                 (45 + 68) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:================================>                      (67 + 46) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:==================================================>    (104 + 9) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (56 + 58) / 114][Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===================================>                   (74 + 40) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 5.66472485 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.756794958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:==============================>                        (64 + 50) / 114][Stage 5:===================================>                   (73 + 41) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.158867861 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.764863487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (61 + 52) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:========================================>              (83 + 30) / 113][Stage 6:=================================================>    (103 + 10) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:==============================>                        (63 + 51) / 114][Stage 7:=====================================>                 (78 + 36) / 114][Stage 7:==============================================>        (96 + 18) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:======================================================>(112 + 2) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.291852111 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617001229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=========================>                             (53 + 60) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:==============================>                        (62 + 51) / 113][Stage 8:==================================>                    (71 + 42) / 113][Stage 8:==========================================>            (88 + 25) / 113][Stage 8:================================================>     (102 + 11) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:====================================================>  (108 + 5) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:===============================>                       (65 + 49) / 114][Stage 9:========================================>              (84 + 30) / 114][Stage 9:==============================================>        (96 + 18) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.841816826 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.585112464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:======================================>               (81 + 32) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:==============================>                       (64 + 50) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:============================================>         (93 + 21) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.809381622 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548592876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:=============================>                        (61 + 52) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:===================================================>  (108 + 5) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:=============================>                        (63 + 51) / 114][Stage 13:===================================>                  (75 + 39) / 114][Stage 13:============================================>         (93 + 21) / 114][Stage 13:==============================================>      (101 + 13) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.484018018 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529296222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:================================>                     (69 + 44) / 113][Stage 14:=========================================>            (86 + 27) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:====================================================> (110 + 3) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:===================================>                  (74 + 40) / 114][Stage 15:===========================================>          (92 + 22) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:===================================================>  (109 + 5) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.025284968 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52488614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:================================>                     (67 + 46) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:==============================================>       (98 + 15) / 113][Stage 16:==================================================>   (105 + 8) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:===============================>                      (66 + 48) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.971431934 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531329047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:====================================>                 (76 + 37) / 113][Stage 18:==========================================>           (89 + 24) / 113][Stage 18:==================================================>   (106 + 7) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:==================================>                   (72 + 42) / 114][Stage 19:=============================================>        (96 + 18) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:====================================================> (111 + 3) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.831412768 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519469098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:==================================>                   (72 + 41) / 113][Stage 20:===========================================>          (90 + 23) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===========================>                          (58 + 56) / 114][Stage 21:=============================>                        (63 + 51) / 114][Stage 21:====================================>                 (78 + 36) / 114][Stage 21:=============================================>        (95 + 19) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.25038852 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496416941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:=============================>                        (61 + 52) / 113][Stage 22:========================================>             (85 + 28) / 113][Stage 22:===============================================>     (102 + 11) / 113][Stage 22:====================================================> (109 + 4) / 113]                                                                                [Stage 23:=============================>                        (62 + 52) / 114][Stage 23:=====================================>                (79 + 35) / 114][Stage 23:===========================================>          (91 + 23) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.470927986 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573879248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:===============================>                      (65 + 48) / 113][Stage 24:========================================>             (85 + 28) / 113][Stage 24:===============================================>     (101 + 12) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:==============================>                       (65 + 49) / 114][Stage 25:=========================================>            (87 + 27) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.025717391 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498836246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:=============================>                        (61 + 52) / 113][Stage 26:===================================>                  (74 + 39) / 113][Stage 26:=============================================>        (96 + 17) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:================================>                     (68 + 46) / 114][Stage 27:=======================================>              (83 + 31) / 114][Stage 27:==============================================>       (98 + 16) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:=====================================================>(112 + 2) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.631809121 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482390314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:===============================>                      (66 + 47) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:===================================>                  (74 + 40) / 114][Stage 29:==============================================>       (98 + 16) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.798522722 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596703533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:==============================>                       (63 + 50) / 113][Stage 30:===================================>                  (75 + 38) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:====================================================> (110 + 3) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:=================================>                    (70 + 44) / 114][Stage 31:===========================================>          (92 + 22) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.681397051 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539068005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:=============================>                        (62 + 51) / 113][Stage 32:====================================>                 (77 + 36) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:==================================================>   (106 + 7) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:===================================>                  (74 + 40) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:=================================================>    (105 + 9) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.882485554 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514944305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:========================================>             (84 + 29) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:==============================>                       (64 + 50) / 114][Stage 35:====================================>                 (78 + 36) / 114][Stage 35:==============================================>       (99 + 15) / 114][Stage 35:==================================================>   (107 + 7) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.103437497 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49534159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:============================>                         (59 + 54) / 113][Stage 36:=================================>                    (71 + 42) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:===============================>                      (67 + 47) / 114][Stage 37:=======================================>              (84 + 30) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.602632513 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494205051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:=============================>                        (62 + 51) / 113][Stage 38:====================================>                 (76 + 37) / 113][Stage 38:=============================================>        (95 + 18) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:===========================>                          (59 + 55) / 114][Stage 39:=============================>                        (63 + 51) / 114][Stage 39:======================================>               (81 + 33) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.236517442 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477497377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:============================>                         (60 + 53) / 113][Stage 40:==================================>                   (72 + 41) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:===================================================>  (107 + 6) / 113][Stage 40:===================================================>  (108 + 5) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:===============================>                      (67 + 47) / 114][Stage 41:=======================================>              (84 + 30) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.86495204 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451317876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:=============================>                        (61 + 52) / 113][Stage 42:===================================>                  (75 + 38) / 113][Stage 42:==============================================>      (100 + 13) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:================================>                     (68 + 46) / 114][Stage 43:========================================>             (85 + 29) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.305842118 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439380246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:==============================>                       (64 + 49) / 113][Stage 44:==========================================>           (88 + 25) / 113][Stage 44:=================================================>    (104 + 9) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:=============================>                        (62 + 52) / 114][Stage 45:=====================================>                (80 + 34) / 114][Stage 45:==============================================>      (101 + 13) / 114][Stage 45:==================================================>   (107 + 7) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.65947142 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445922053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:===============================>                      (66 + 47) / 113][Stage 46:==========================================>           (88 + 25) / 113][Stage 46:==================================================>   (105 + 8) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==================================>                   (72 + 42) / 114][Stage 47:=============================================>        (96 + 18) / 114][Stage 47:===================================================>  (109 + 5) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.797962691 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447793516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:=============================>                        (62 + 51) / 113][Stage 48:==================================>                   (73 + 40) / 113][Stage 48:===========================================>          (91 + 22) / 113][Stage 48:====================================================> (109 + 4) / 113]                                                                                [Stage 49:=============================>                        (62 + 52) / 114][Stage 49:====================================>                 (78 + 36) / 114][Stage 49:===============================================>     (103 + 11) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.78369745 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452071421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=============================>                        (61 + 52) / 113][Stage 50:==================================>                   (73 + 40) / 113][Stage 50:===========================================>          (90 + 23) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:====================================>                 (77 + 37) / 114][Stage 51:============================================>         (93 + 21) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.410153027 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422972556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:================================>                     (68 + 45) / 113][Stage 52:==========================================>           (89 + 24) / 113][Stage 52:=================================================>    (104 + 9) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:============================>                         (60 + 54) / 114][Stage 53:===================================>                  (74 + 40) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:================================================>    (104 + 10) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.110160939 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443917476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:===============================>                      (66 + 47) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:===================================================>  (108 + 5) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:===============================>                      (66 + 48) / 114][Stage 55:=======================================>              (83 + 31) / 114][Stage 55:==============================================>       (99 + 15) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.529904732 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=9", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=9,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483736253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:=============================>                        (62 + 51) / 113][Stage 56:===================================>                  (75 + 38) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:====================================================> (109 + 4) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:==============================>                       (64 + 50) / 114][Stage 57:====================================>                 (77 + 37) / 114][Stage 57:==============================================>       (99 + 15) / 114][Stage 57:===================================================>  (108 + 6) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(112 + 2) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.204785536 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448737823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:===============================>                      (65 + 48) / 113][Stage 58:========================================>             (84 + 29) / 113][Stage 58:================================================>    (103 + 10) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:=============================>                        (63 + 51) / 114][Stage 59:=====================================>                (79 + 35) / 114][Stage 59:==============================================>       (99 + 15) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.771476472 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442919979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:===================================>                  (74 + 39) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:====================================>                 (78 + 36) / 114][Stage 61:==============================================>       (99 + 15) / 114][Stage 61:==================================================>   (107 + 7) / 114][Stage 61:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.651593353 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505406937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (60 + 53) / 113][Stage 62:===============================>                      (65 + 48) / 113][Stage 62:==========================================>           (89 + 24) / 113][Stage 62:================================================>    (103 + 10) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:=================================>                    (70 + 44) / 114][Stage 63:========================================>             (85 + 29) / 114][Stage 63:===================================================>  (108 + 6) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.583232981 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443472142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=============================>                        (62 + 51) / 113][Stage 64:===================================>                  (74 + 39) / 113][Stage 64:===========================================>          (90 + 23) / 113][Stage 64:==================================================>   (106 + 7) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:===========================>                          (59 + 55) / 114][Stage 65:==============================>                       (64 + 50) / 114][Stage 65:=====================================>                (79 + 35) / 114][Stage 65:==============================================>      (100 + 14) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.646249687 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425589986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:=================================>                    (71 + 42) / 113][Stage 66:==========================================>           (89 + 24) / 113][Stage 66:==============================================>      (100 + 13) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:==============================>                       (64 + 50) / 114][Stage 67:======================================>               (81 + 33) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:====================================================> (110 + 4) / 114][Stage 67:=====================================================>(112 + 2) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.912604808 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426356468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:===============================>                      (65 + 48) / 113][Stage 68:=====================================>                (79 + 34) / 113][Stage 68:===================================================>  (107 + 6) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:=================================>                    (70 + 44) / 114][Stage 69:============================================>         (94 + 20) / 114][Stage 69:===================================================>  (108 + 6) / 114][Stage 69:====================================================> (110 + 4) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.311862336 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439344442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:=============================>                        (62 + 51) / 113][Stage 70:===================================>                  (75 + 38) / 113][Stage 70:=============================================>        (95 + 18) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:=============================>                        (62 + 52) / 114][Stage 71:==================================>                   (73 + 41) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.626660439 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411056556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:=============================>                        (61 + 52) / 113][Stage 72:==================================>                   (72 + 41) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:====================================================> (110 + 3) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:======================================>               (82 + 32) / 114][Stage 73:==============================================>      (101 + 13) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.090653554 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421594288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==================================>                   (73 + 40) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:===================================================>  (108 + 5) / 113]                                                                                [Stage 75:=============================>                        (63 + 51) / 114][Stage 75:==================================>                   (73 + 41) / 114][Stage 75:=============================================>        (95 + 19) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.648548779 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41212732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=============================>                        (61 + 52) / 113][Stage 76:==================================>                   (73 + 40) / 113][Stage 76:==========================================>           (89 + 24) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=================================>                    (70 + 44) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:=================================================>    (105 + 9) / 114][Stage 77:====================================================> (111 + 3) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.588592934 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419824388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:===============================>                      (66 + 47) / 113][Stage 78:=========================================>            (86 + 27) / 113][Stage 78:=================================================>    (104 + 9) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:==============================>                       (64 + 50) / 114][Stage 79:======================================>               (81 + 33) / 114][Stage 79:==============================================>       (98 + 16) / 114][Stage 79:====================================================> (110 + 4) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.824561482 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411499562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:=============================>                        (61 + 52) / 113][Stage 80:===================================>                  (75 + 38) / 113][Stage 80:===============================================>     (101 + 12) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:=================================>                    (71 + 43) / 114][Stage 81:========================================>             (86 + 28) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.52217341 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42019277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:===============================>                      (65 + 48) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:====================================================> (110 + 3) / 113]                                                                                [Stage 83:============================>                         (61 + 53) / 114][Stage 83:================================>                     (68 + 46) / 114][Stage 83:========================================>             (85 + 29) / 114][Stage 83:==============================================>      (100 + 14) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.692660368 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415025107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (61 + 52) / 113][Stage 84:======================================>               (80 + 33) / 113][Stage 84:==============================================>       (98 + 15) / 113][Stage 84:===================================================>  (107 + 6) / 113]                                                                                [Stage 85:=============================>                        (62 + 52) / 114][Stage 85:===================================>                  (75 + 39) / 114][Stage 85:============================================>         (93 + 21) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.956126273 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422343275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:==============================>                       (63 + 50) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:===============================================>     (101 + 12) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:=================================>                    (70 + 44) / 114][Stage 87:=========================================>            (87 + 27) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:====================================================> (111 + 3) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.718324781 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402281017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:=============================>                        (62 + 51) / 113][Stage 88:========================================>             (84 + 29) / 113][Stage 88:==================================================>   (105 + 8) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:=================================>                    (70 + 44) / 114][Stage 89:========================================>             (85 + 29) / 114][Stage 89:================================================>    (104 + 10) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.43143198 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467230939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:===============================>                      (65 + 48) / 113][Stage 90:=======================================>              (82 + 31) / 113][Stage 90:===================================================>  (108 + 5) / 113]                                                                                [Stage 91:============================>                         (61 + 53) / 114][Stage 91:==================================>                   (73 + 41) / 114][Stage 91:=============================================>        (95 + 19) / 114][Stage 91:==================================================>   (106 + 8) / 114][Stage 91:===================================================>  (108 + 6) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.197970011 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394093251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:================================>                     (67 + 46) / 113][Stage 92:===========================================>          (91 + 22) / 113][Stage 92:===================================================>  (107 + 6) / 113]                                                                                [Stage 93:==============================>                       (65 + 49) / 114][Stage 93:==================================>                   (73 + 41) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.508664051 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404350102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:==============================>                       (63 + 50) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:==============================================>      (100 + 13) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:============================>                         (61 + 53) / 114][Stage 95:================================>                     (68 + 46) / 114][Stage 95:===========================================>          (91 + 23) / 114][Stage 95:===================================================>  (109 + 5) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.442043896 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395875495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:==============================>                       (63 + 50) / 113][Stage 96:=====================================>                (78 + 35) / 113][Stage 96:==============================================>       (98 + 15) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:=============================>                        (63 + 51) / 114][Stage 97:====================================>                 (78 + 36) / 114][Stage 97:==========================================>           (90 + 24) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.600418814 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404815145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:================================>                     (68 + 45) / 113][Stage 98:============================================>         (93 + 20) / 113][Stage 98:====================================================> (109 + 4) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:==============================>                       (64 + 50) / 114][Stage 99:=====================================>                (80 + 34) / 114][Stage 99:=============================================>        (95 + 19) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(112 + 2) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.268216217 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422323422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:============================>                        (60 + 53) / 113][Stage 100:===================================>                 (76 + 37) / 113][Stage 100:=============================================>       (96 + 17) / 113][Stage 100:=================================================>   (106 + 7) / 113]                                                                                [Stage 101:=============================>                       (63 + 51) / 114][Stage 101:================================>                    (70 + 44) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.234571397 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400494003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:============================>                        (60 + 53) / 113][Stage 102:===================================>                 (75 + 38) / 113][Stage 102:=============================================>       (98 + 15) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:===========================>                         (59 + 55) / 114][Stage 103:============================>                        (61 + 53) / 114][Stage 103:===================================>                 (77 + 37) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:===============================================>    (104 + 10) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.932004779 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395765679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:=================================>                   (71 + 42) / 113][Stage 104:==========================================>          (91 + 22) / 113][Stage 104:=================================================>   (105 + 8) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:=============================>                       (64 + 50) / 114][Stage 105:======================================>              (82 + 32) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.352439711 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384316469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:===================================>                 (75 + 38) / 113][Stage 106:==============================================>     (102 + 11) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:===========================>                         (60 + 54) / 114][Stage 107:==============================>                      (66 + 48) / 114][Stage 107:=======================================>             (86 + 28) / 114][Stage 107:==============================================>     (102 + 12) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.576143657 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406567111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:===============================>                     (67 + 46) / 113][Stage 108:========================================>            (87 + 26) / 113][Stage 108:================================================>    (104 + 9) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:=================================>                   (71 + 43) / 114][Stage 109:=========================================>           (90 + 24) / 114][Stage 109:=================================================>   (107 + 7) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(112 + 2) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.103899334 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385616012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:=============================>                       (63 + 50) / 113][Stage 110:===================================>                 (76 + 37) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:============================>                        (62 + 52) / 114][Stage 111:=================================>                   (71 + 43) / 114][Stage 111:========================================>            (88 + 26) / 114][Stage 111:====================================================>(112 + 2) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.804244335 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391386819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (65 + 48) / 113][Stage 112:======================================>              (82 + 31) / 113][Stage 112:==============================================>     (102 + 11) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:===============================>                     (68 + 46) / 114][Stage 113:========================================>            (87 + 27) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:===================================================> (111 + 3) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.773173213 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387933756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:============================================>        (95 + 18) / 113][Stage 114:===================================================> (109 + 4) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (59 + 55) / 114][Stage 115:================================>                    (70 + 44) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:==============================================>     (103 + 11) / 114][Stage 115:===================================================> (110 + 4) / 114][Stage 115:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.807651036 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394013203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:==============================>                      (64 + 49) / 113][Stage 116:=====================================>               (80 + 33) / 113][Stage 116:==============================================>     (101 + 12) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:===============================>                     (68 + 46) / 114][Stage 117:===========================================>         (94 + 20) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:===================================================> (110 + 4) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.622028565 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402265832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:===========================================>         (93 + 20) / 113][Stage 118:==================================================>  (108 + 5) / 113]                                                                                [Stage 119:============================>                        (62 + 52) / 114][Stage 119:=================================>                   (71 + 43) / 114][Stage 119:===========================================>         (93 + 21) / 114][Stage 119:===================================================> (110 + 4) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.538183848 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398416769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (60 + 53) / 113][Stage 120:===============================>                     (67 + 46) / 113][Stage 120:======================================>              (83 + 30) / 113][Stage 120:================================================>    (104 + 9) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==================================>                  (74 + 40) / 114][Stage 121:==========================================>          (91 + 23) / 114][Stage 121:=================================================>   (107 + 7) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.171790561 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386687279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:===============================>                     (67 + 46) / 113][Stage 122:=====================================>               (80 + 33) / 113][Stage 122:==================================================>  (107 + 6) / 113]                                                                                [Stage 123:=============================>                       (63 + 51) / 114][Stage 123:=================================>                   (71 + 43) / 114][Stage 123:========================================>            (88 + 26) / 114][Stage 123:==================================================>  (108 + 6) / 114][Stage 123:====================================================>(112 + 2) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.802410549 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389753083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:=============================>                       (62 + 51) / 113][Stage 124:===================================>                 (75 + 38) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (62 + 52) / 114][Stage 125:==================================>                  (74 + 40) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:===================================================> (110 + 4) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.634253273 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393758667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (60 + 53) / 113][Stage 126:=================================>                   (71 + 42) / 113][Stage 126:==========================================>          (91 + 22) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:==============================>                      (66 + 48) / 114][Stage 127:=====================================>               (81 + 33) / 114][Stage 127:==============================================>      (99 + 15) / 114][Stage 127:===================================================> (111 + 3) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.599499587 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465250619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:============================>                        (60 + 53) / 113][Stage 128:===================================>                 (75 + 38) / 113][Stage 128:==============================================>      (99 + 14) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:================================>                    (69 + 45) / 114][Stage 129:=======================================>             (84 + 30) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:==================================================>  (109 + 5) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.664417239 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380794976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:============================>                        (61 + 52) / 113][Stage 130:====================================>                (78 + 35) / 113][Stage 130:==============================================>     (100 + 13) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:==============================>                      (65 + 49) / 114][Stage 131:====================================>                (79 + 35) / 114][Stage 131:=============================================>      (100 + 14) / 114][Stage 131:===================================================> (111 + 3) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.630646295 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404685761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:==============================>                      (66 + 47) / 113][Stage 132:=======================================>             (85 + 28) / 113][Stage 132:==================================================>  (107 + 6) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:=============================>                       (64 + 50) / 114][Stage 133:=====================================>               (80 + 34) / 114][Stage 133:===============================================>    (104 + 10) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.679629092 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382167219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (60 + 53) / 113][Stage 134:===============================>                     (68 + 45) / 113][Stage 134:=========================================>           (88 + 25) / 113][Stage 134:==============================================>     (102 + 11) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:===============================>                     (67 + 47) / 114][Stage 135:=========================================>           (89 + 25) / 114][Stage 135:================================================>    (105 + 9) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.985848745 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389226628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:===================================>                 (76 + 37) / 113][Stage 136:==============================================>     (100 + 13) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:==============================>                      (66 + 48) / 114][Stage 137:=====================================>               (80 + 34) / 114][Stage 137:==============================================>      (99 + 15) / 114][Stage 137:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.543701513 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393866893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (62 + 51) / 113][Stage 138:====================================>                (78 + 35) / 113][Stage 138:===============================================>    (103 + 10) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:=================================>                   (71 + 43) / 114][Stage 139:========================================>            (88 + 26) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.633474872 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437991878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:============================>                        (60 + 53) / 113][Stage 140:===============================>                     (67 + 46) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:=================================================>   (106 + 7) / 113]                                                                                [Stage 141:============================>                        (61 + 53) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:=========================================>           (90 + 24) / 114][Stage 141:==============================================>     (102 + 12) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.97665346 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388543671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (66 + 47) / 113][Stage 142:===================================>                 (76 + 37) / 113][Stage 142:==============================================>     (100 + 13) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:==============================>                      (65 + 49) / 114][Stage 143:=================================>                   (73 + 41) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:=================================================>   (107 + 7) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.681742386 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390868793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:>                                                      (0 + 0) / 113][Stage 144:===========================>                         (58 + 55) / 113][Stage 144:==============================>                      (66 + 47) / 113][Stage 144:=========================================>           (89 + 24) / 113][Stage 144:==============================================>     (100 + 13) / 113][Stage 144:===================================================> (110 + 3) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:================================>                    (70 + 44) / 114][Stage 145:========================================>            (87 + 27) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.304783823 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392711436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:===============================>                     (68 + 45) / 113][Stage 146:=======================================>             (85 + 28) / 113][Stage 146:==============================================>     (102 + 11) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:=============================>                       (64 + 50) / 114][Stage 147:=======================================>             (85 + 29) / 114][Stage 147:==============================================>     (101 + 13) / 114][Stage 147:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.725658068 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3745458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:===============================>                     (67 + 46) / 113][Stage 148:=========================================>           (89 + 24) / 113][Stage 148:=================================================>   (105 + 8) / 113]                                                                                [Stage 149:============================>                        (62 + 52) / 114][Stage 149:=====================================>               (80 + 34) / 114][Stage 149:===========================================>         (94 + 20) / 114][Stage 149:==================================================>  (108 + 6) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.556252284 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380350146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:===============================>                     (67 + 46) / 113][Stage 150:========================================>            (87 + 26) / 113][Stage 150:==================================================>  (107 + 6) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:=============================>                       (63 + 51) / 114][Stage 151:=====================================>               (80 + 34) / 114][Stage 151:===============================================>    (104 + 10) / 114][Stage 151:===================================================> (110 + 4) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.793554653 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=174", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=174,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390241377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=============================>                       (62 + 51) / 113][Stage 152:================================>                    (69 + 44) / 113][Stage 152:=========================================>           (88 + 25) / 113][Stage 152:==================================================>  (108 + 5) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:=============================>                       (63 + 51) / 114][Stage 153:==================================>                  (74 + 40) / 114][Stage 153:==============================================>     (101 + 13) / 114][Stage 153:===================================================> (110 + 4) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.627715673 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384406812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:==============================>                      (65 + 48) / 113][Stage 154:======================================>              (82 + 31) / 113][Stage 154:================================================>    (104 + 9) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:===============================>                     (67 + 47) / 114][Stage 155:========================================>            (88 + 26) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.465398495 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385315253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:>                                                      (0 + 0) / 113][Stage 156:===========================>                         (59 + 54) / 113][Stage 156:================================>                    (69 + 44) / 113][Stage 156:===========================================>         (92 + 21) / 113][Stage 156:==================================================>  (107 + 6) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:==============================>                      (66 + 48) / 114][Stage 157:====================================>                (78 + 36) / 114][Stage 157:==============================================>      (99 + 15) / 114][Stage 157:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.410996667 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375757645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:============================>                        (61 + 52) / 113][Stage 158:================================>                    (70 + 43) / 113][Stage 158:============================================>        (94 + 19) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:==============================>                      (65 + 49) / 114][Stage 159:====================================>                (79 + 35) / 114][Stage 159:==============================================>      (99 + 15) / 114][Stage 159:==================================================>  (108 + 6) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.879786615 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39025202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=============================>                       (62 + 51) / 113][Stage 160:=====================================>               (79 + 34) / 113][Stage 160:=============================================>       (98 + 15) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:===================================>                 (76 + 38) / 114][Stage 161:==========================================>          (91 + 23) / 114][Stage 161:===================================================> (110 + 4) / 114][Stage 161:====================================================>(112 + 2) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.792781414 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402536614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:=============================>                       (62 + 51) / 113][Stage 162:=====================================>               (81 + 32) / 113][Stage 162:==============================================>     (102 + 11) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:=============================>                       (63 + 51) / 114][Stage 163:=================================>                   (72 + 42) / 114][Stage 163:==========================================>          (92 + 22) / 114][Stage 163:=================================================>   (106 + 8) / 114][Stage 163:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.024983142 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37813029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:===============================>                     (68 + 45) / 113][Stage 164:==========================================>          (91 + 22) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:====================================>                (78 + 36) / 114][Stage 165:==========================================>          (91 + 23) / 114][Stage 165:==============================================>     (103 + 11) / 114][Stage 165:===================================================> (110 + 4) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.678514447 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382066474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:=============================>                       (63 + 50) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:==================================================>  (107 + 6) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:===============================>                     (68 + 46) / 114][Stage 167:======================================>              (83 + 31) / 114][Stage 167:==============================================>     (101 + 13) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.748104976 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39664489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:===============================>                     (67 + 46) / 113][Stage 168:==========================================>          (91 + 22) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:============================>                        (62 + 52) / 114][Stage 169:==================================>                  (75 + 39) / 114][Stage 169:===========================================>         (94 + 20) / 114][Stage 169:=================================================>   (107 + 7) / 114][Stage 169:==================================================>  (109 + 5) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.511377132 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381781616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:=============================>                       (62 + 51) / 113][Stage 170:==================================>                  (74 + 39) / 113][Stage 170:===============================================>    (103 + 10) / 113][Stage 170:===================================================> (109 + 4) / 113]                                                                                [Stage 171:=============================>                       (63 + 51) / 114][Stage 171:====================================>                (78 + 36) / 114][Stage 171:==============================================>     (103 + 11) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.003363443 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377731813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (58 + 55) / 113][Stage 172:============================>                        (60 + 53) / 113][Stage 172:=================================>                   (72 + 41) / 113][Stage 172:===========================================>         (93 + 20) / 113]                                                                                [Stage 173:===========================>                         (59 + 55) / 114][Stage 173:=================================>                   (73 + 41) / 114][Stage 173:=============================================>       (98 + 16) / 114][Stage 173:===================================================> (110 + 4) / 114][Stage 173:====================================================>(112 + 2) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.99049126 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38387494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:==============================>                      (66 + 47) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:================================================>    (104 + 9) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:=====================================>               (81 + 33) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:===================================================> (110 + 4) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.71369592 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387130025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:============================>                        (61 + 52) / 113][Stage 176:=======================================>             (85 + 28) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:============================>                        (61 + 53) / 114][Stage 177:================================>                    (69 + 45) / 114][Stage 177:========================================>            (87 + 27) / 114][Stage 177:==================================================>  (108 + 6) / 114][Stage 177:====================================================>(112 + 2) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.265753266 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421029381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (60 + 53) / 113][Stage 178:================================>                    (70 + 43) / 113][Stage 178:===========================================>         (92 + 21) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:=============================>                       (64 + 50) / 114][Stage 179:===================================>                 (76 + 38) / 114][Stage 179:===========================================>         (93 + 21) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.393076942 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40893299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:============================>                        (61 + 52) / 113][Stage 180:==================================>                  (74 + 39) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:=================================>                   (72 + 42) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.678981811 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421816344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:=============================>                       (62 + 51) / 113][Stage 182:==================================>                  (74 + 39) / 113][Stage 182:==============================================>      (99 + 14) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=================================>                   (73 + 41) / 114][Stage 183:=======================================>             (84 + 30) / 114][Stage 183:================================================>    (105 + 9) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.514048085 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384909967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:============================>                        (61 + 52) / 113][Stage 184:==================================>                  (73 + 40) / 113][Stage 184:=============================================>       (97 + 16) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:=============================>                       (63 + 51) / 114][Stage 185:======================================>              (83 + 31) / 114][Stage 185:==============================================>      (99 + 15) / 114][Stage 185:===================================================> (111 + 3) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.626405151 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381624744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:==============================>                      (64 + 49) / 113][Stage 186:====================================>                (78 + 35) / 113][Stage 186:==================================================>  (107 + 6) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:===============================>                     (68 + 46) / 114][Stage 187:=======================================>             (85 + 29) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.565494974 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388235131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:===============================>                     (67 + 46) / 113][Stage 188:======================================>              (82 + 31) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:=================================>                   (72 + 42) / 114][Stage 189:==========================================>          (92 + 22) / 114][Stage 189:=================================================>   (106 + 8) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.724600734 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382326326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:=====================================>               (80 + 33) / 113][Stage 190:===============================================>    (103 + 10) / 113][Stage 190:===================================================> (109 + 4) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:==============================>                      (66 + 48) / 114][Stage 191:======================================>              (83 + 31) / 114][Stage 191:==============================================>     (101 + 13) / 114][Stage 191:====================================================>(112 + 2) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.974420208 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393078338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (62 + 51) / 113][Stage 192:=================================>                   (72 + 41) / 113][Stage 192:===========================================>         (93 + 20) / 113]                                                                                [Stage 193:============================>                        (61 + 53) / 114][Stage 193:==================================>                  (74 + 40) / 114][Stage 193:===========================================>         (93 + 21) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:==================================================>  (109 + 5) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.601672639 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400394868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=============================>                       (62 + 51) / 113][Stage 194:=====================================>               (80 + 33) / 113][Stage 194:==============================================>      (99 + 14) / 113][Stage 194:==================================================>  (107 + 6) / 113]                                                                                [Stage 195:============================>                        (62 + 52) / 114][Stage 195:===================================>                 (77 + 37) / 114][Stage 195:===========================================>         (93 + 21) / 114][Stage 195:===================================================> (111 + 3) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.697107589 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397376165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:=============================>                       (63 + 50) / 113][Stage 196:======================================>              (83 + 30) / 113][Stage 196:==============================================>      (99 + 14) / 113][Stage 196:===================================================> (109 + 4) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:================================>                    (70 + 44) / 114][Stage 197:==========================================>          (92 + 22) / 114][Stage 197:==================================================>  (108 + 6) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.49412231 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396177044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (60 + 53) / 113][Stage 198:====================================>                (78 + 35) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:=============================>                       (63 + 51) / 114][Stage 199:==================================>                  (75 + 39) / 114][Stage 199:============================================>        (95 + 19) / 114][Stage 199:==================================================>  (109 + 5) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.996614848 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380300849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:============================>                        (61 + 52) / 113][Stage 200:==================================>                  (73 + 40) / 113][Stage 200:============================================>        (95 + 18) / 113][Stage 200:==================================================>  (107 + 6) / 113]                                                                                [Stage 201:============================>                        (61 + 53) / 114][Stage 201:=================================>                   (71 + 43) / 114][Stage 201:==========================================>          (92 + 22) / 114][Stage 201:===================================================> (111 + 3) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.542975569 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m40.805s
user	12m16.712s
sys	1m42.292s
