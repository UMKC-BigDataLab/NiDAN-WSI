Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 12:01:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:01:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:01:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:01:52 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 12:01:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:02:05 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522120154-0456).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.406095722 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (24 + 91) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.408345957 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.674624818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (56 + 62) / 118][Stage 2:================================>                      (70 + 48) / 118][Stage 2:==================================>                    (73 + 45) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:=======================================>               (85 + 33) / 118][Stage 2:=========================================>             (89 + 29) / 118][Stage 2:=============================================>         (98 + 20) / 118][Stage 2:===================================================>   (110 + 8) / 118][Stage 2:======================================================>(116 + 2) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:=====================================>                 (81 + 38) / 119][Stage 3:========================================>              (88 + 31) / 119][Stage 3:==========================================>            (91 + 28) / 119][Stage 3:=============================================>         (99 + 20) / 119][Stage 3:=================================================>    (109 + 10) / 119][Stage 3:====================================================>  (114 + 5) / 119][Stage 3:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 5.438690174 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.67673992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:========================================>              (84 + 29) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:=====================================================> (110 + 3) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (61 + 53) / 114][Stage 5:==================================>                    (71 + 43) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:===========================================>           (90 + 24) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.501707374 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.690849475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:====================================>                  (74 + 39) / 113][Stage 6:=======================================>               (82 + 31) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:============================>                          (60 + 54) / 114][Stage 7:================================>                      (67 + 47) / 114][Stage 7:========================================>              (84 + 30) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.992766047 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.627293126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (71 + 47) / 118][Stage 8:=================================>                     (72 + 46) / 118][Stage 8:==================================>                    (74 + 44) / 118][Stage 8:=====================================>                 (81 + 37) / 118][Stage 8:========================================>              (86 + 32) / 118][Stage 8:===========================================>           (93 + 25) / 118][Stage 8:====================================================>  (112 + 6) / 118][Stage 8:======================================================>(117 + 1) / 118]                                                                                [Stage 9:=================================>                     (72 + 47) / 119][Stage 9:===================================>                   (76 + 43) / 119][Stage 9:====================================>                  (78 + 41) / 119][Stage 9:======================================>                (84 + 35) / 119][Stage 9:=========================================>             (90 + 29) / 119][Stage 9:================================================>     (106 + 13) / 119][Stage 9:=====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.088198113 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.598372901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:============================>                         (63 + 57) / 120][Stage 10:================================>                     (73 + 47) / 120][Stage 10:=====================================>                (84 + 36) / 120][Stage 10:=================================================>    (111 + 9) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:============================>                         (64 + 57) / 121][Stage 11:====================================>                 (81 + 40) / 121][Stage 11:=============================================>       (105 + 16) / 121][Stage 11:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.571910983 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606335479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:================================>                     (72 + 48) / 120][Stage 12:====================================>                 (80 + 40) / 120][Stage 12:=============================================>       (103 + 17) / 120][Stage 12:=================================================>    (111 + 9) / 120][Stage 12:====================================================> (117 + 3) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:===========================>                          (62 + 59) / 121][Stage 13:=================================>                    (75 + 46) / 121][Stage 13:============================================>         (99 + 22) / 121][Stage 13:================================================>    (110 + 11) / 121][Stage 13:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.822871077 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485768357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:=================================>                    (73 + 45) / 118][Stage 14:=======================================>              (86 + 32) / 118][Stage 14:===============================================>     (105 + 13) / 118][Stage 14:====================================================> (114 + 4) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:===================================>                  (79 + 40) / 119][Stage 15:========================================>             (89 + 30) / 119][Stage 15:=================================================>    (110 + 9) / 119][Stage 15:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.493799597 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.535984115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=============================>                        (63 + 52) / 115][Stage 16:==================================>                   (73 + 42) / 115][Stage 16:======================================>               (83 + 32) / 115][Stage 16:==============================================>       (98 + 17) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:====================================================> (111 + 4) / 115]                                                                                [Stage 17:================================>                     (70 + 46) / 116][Stage 17:=====================================>                (80 + 36) / 116][Stage 17:=========================================>            (90 + 26) / 116][Stage 17:=============================================>        (97 + 19) / 116][Stage 17:================================================>    (106 + 10) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:=====================================================>(114 + 2) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.18151209 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.552955468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:=============================>                        (66 + 55) / 121][Stage 18:===================================>                  (79 + 42) / 121][Stage 18:=============================================>       (104 + 17) / 121][Stage 18:================================================>    (111 + 10) / 121][Stage 18:===================================================>  (115 + 6) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:==============================>                       (68 + 54) / 122][Stage 19:====================================>                 (82 + 40) / 122][Stage 19:============================================>        (102 + 20) / 122][Stage 19:================================================>    (112 + 10) / 122][Stage 19:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.867488944 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488794658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:=================================>                    (74 + 44) / 118][Stage 20:========================================>             (89 + 29) / 118][Stage 20:================================================>    (107 + 11) / 118][Stage 20:====================================================> (115 + 3) / 118]                                                                                [Stage 21:=================================>                    (74 + 45) / 119][Stage 21:====================================>                 (81 + 38) / 119][Stage 21:==========================================>           (94 + 25) / 119][Stage 21:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.288886954 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436153843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=====================================>                (79 + 36) / 115][Stage 22:=======================================>              (84 + 31) / 115][Stage 22:===========================================>          (93 + 22) / 115][Stage 22:===============================================>     (104 + 11) / 115][Stage 22:====================================================> (112 + 3) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:======================================>               (82 + 34) / 116][Stage 23:============================================>         (95 + 21) / 116][Stage 23:==================================================>   (108 + 8) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.950074673 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46924779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (72 + 46) / 118][Stage 24:=================================>                    (73 + 45) / 118][Stage 24:=====================================>                (82 + 36) / 118][Stage 24:========================================>             (89 + 29) / 118][Stage 24:===========================================>          (94 + 24) / 118][Stage 24:==================================================>   (111 + 7) / 118][Stage 24:=====================================================>(116 + 2) / 118]                                                                                [Stage 25:=================================>                    (73 + 46) / 119][Stage 25:==================================>                   (76 + 43) / 119][Stage 25:=======================================>              (88 + 31) / 119][Stage 25:==============================================>      (105 + 14) / 119][Stage 25:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.457445692 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530320663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:===========================>                          (61 + 59) / 120][Stage 26:================================>                     (73 + 47) / 120][Stage 26:======================================>               (86 + 34) / 120][Stage 26:================================================>    (109 + 11) / 120][Stage 26:=====================================================>(118 + 2) / 120]                                                                                [Stage 27:============================>                         (64 + 57) / 121][Stage 27:===============================>                      (71 + 50) / 121][Stage 27:==========================================>           (95 + 26) / 121][Stage 27:==================================================>   (114 + 7) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.633757001 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484452325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=============================>                        (62 + 51) / 113][Stage 28:==================================>                   (73 + 40) / 113][Stage 28:===========================================>          (91 + 22) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:============================>                         (61 + 53) / 114][Stage 29:==================================>                   (73 + 41) / 114][Stage 29:==========================================>           (90 + 24) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.72377747 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461808956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (83 + 32) / 115][Stage 30:==========================================>           (90 + 25) / 115][Stage 30:==================================================>   (108 + 7) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:========================================>             (86 + 30) / 116][Stage 31:==============================================>       (99 + 17) / 116][Stage 31:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.749668247 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470552572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:==============================>                       (63 + 50) / 113][Stage 32:==================================>                   (73 + 40) / 113][Stage 32:====================================>                 (77 + 36) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:==================================================>   (105 + 8) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:===============================>                      (67 + 47) / 114][Stage 33:=====================================>                (80 + 34) / 114][Stage 33:=============================================>        (96 + 18) / 114][Stage 33:=================================================>    (105 + 9) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.011786958 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43552149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (70 + 43) / 113][Stage 34:=======================================>              (83 + 30) / 113][Stage 34:=============================================>        (95 + 18) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:=====================================>                (80 + 34) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:==============================================>      (100 + 14) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.693304607 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433409551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (71 + 42) / 113][Stage 36:=====================================>                (79 + 34) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:===================================================>  (108 + 5) / 113][Stage 36:====================================================> (110 + 3) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:=======================================>              (83 + 31) / 114][Stage 37:=============================================>        (97 + 17) / 114][Stage 37:===============================================>     (102 + 12) / 114][Stage 37:===================================================>  (109 + 5) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.712527828 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502856702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:==============================>                       (63 + 50) / 113][Stage 38:=====================================>                (78 + 35) / 113][Stage 38:================================================>    (103 + 10) / 113][Stage 38:====================================================> (109 + 4) / 113]                                                                                [Stage 39:==============================>                       (64 + 50) / 114][Stage 39:===================================>                  (75 + 39) / 114][Stage 39:=============================================>        (97 + 17) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.340351236 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428302456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==================================>                   (73 + 40) / 113][Stage 40:=======================================>              (83 + 30) / 113][Stage 40:============================================>         (94 + 19) / 113][Stage 40:================================================>    (103 + 10) / 113][Stage 40:===================================================>  (108 + 5) / 113][Stage 40:====================================================> (109 + 4) / 113][Stage 40:====================================================> (110 + 3) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:====================================>                 (77 + 37) / 114][Stage 41:===========================================>          (91 + 23) / 114][Stage 41:==============================================>       (98 + 16) / 114][Stage 41:==================================================>   (107 + 7) / 114][Stage 41:====================================================> (111 + 3) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.217911047 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526426195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:===========================>                          (62 + 59) / 121][Stage 42:================================>                     (72 + 49) / 121][Stage 42:=========================================>            (92 + 29) / 121][Stage 42:==============================================>      (106 + 15) / 121][Stage 42:=====================================================>(120 + 1) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:=============================>                        (67 + 55) / 122][Stage 43:======================================>               (87 + 35) / 122][Stage 43:================================================>    (111 + 11) / 122][Stage 43:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.537177768 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483471513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:==============================>                       (68 + 53) / 121][Stage 44:====================================>                 (82 + 39) / 121][Stage 44:============================================>        (102 + 19) / 121][Stage 44:====================================================> (117 + 4) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:=============================>                        (66 + 56) / 122][Stage 45:==================================>                   (77 + 45) / 122][Stage 45:==============================================>      (108 + 14) / 122][Stage 45:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.281775764 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381846758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:======================================>               (83 + 32) / 115][Stage 46:=========================================>            (89 + 26) / 115][Stage 46:==============================================>       (99 + 16) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:======================================>               (82 + 34) / 116][Stage 47:========================================>             (88 + 28) / 116][Stage 47:==============================================>      (101 + 15) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.057493545 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419638202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:====================================>                 (77 + 36) / 113][Stage 48:=========================================>            (86 + 27) / 113][Stage 48:=============================================>        (96 + 17) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:====================================>                 (77 + 37) / 114][Stage 49:=========================================>            (88 + 26) / 114][Stage 49:===============================================>     (102 + 12) / 114][Stage 49:====================================================> (110 + 4) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.202011491 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50008875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:================================>                     (69 + 44) / 113][Stage 50:=========================================>            (87 + 26) / 113][Stage 50:==================================================>   (105 + 8) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:==============================>                       (65 + 49) / 114][Stage 51:===================================>                  (74 + 40) / 114][Stage 51:========================================>             (86 + 28) / 114][Stage 51:================================================>    (104 + 10) / 114][Stage 51:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.45536153 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419945484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:==================================>                   (75 + 43) / 118][Stage 52:========================================>             (88 + 30) / 118][Stage 52:==============================================>      (104 + 14) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:===================================>                  (78 + 41) / 119][Stage 53:=========================================>            (91 + 28) / 119][Stage 53:===============================================>     (107 + 12) / 119][Stage 53:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.383581327 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418356006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (74 + 44) / 118][Stage 54:====================================>                 (79 + 39) / 118][Stage 54:==========================================>           (92 + 26) / 118][Stage 54:==============================================>      (103 + 15) / 118][Stage 54:=====================================================>(116 + 2) / 118][Stage 54:=====================================================>(117 + 1) / 118]                                                                                [Stage 55:=================================>                    (73 + 46) / 119][Stage 55:==================================>                   (75 + 44) / 119][Stage 55:======================================>               (85 + 34) / 119][Stage 55:============================================>         (99 + 20) / 119][Stage 55:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.587346309 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449816894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:============================>                         (64 + 56) / 120][Stage 56:===================================>                  (78 + 42) / 120][Stage 56:============================================>         (98 + 22) / 120][Stage 56:================================================>    (109 + 11) / 120][Stage 56:=====================================================>(118 + 2) / 120]                                                                                [Stage 57:===========================>                          (61 + 60) / 121][Stage 57:=============================>                        (67 + 54) / 121][Stage 57:=====================================>                (83 + 38) / 121][Stage 57:==========================================>           (96 + 25) / 121][Stage 57:================================================>    (111 + 10) / 121][Stage 57:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.521741565 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457962311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:================================>                     (73 + 48) / 121][Stage 58:===================================>                  (80 + 41) / 121][Stage 58:===========================================>          (98 + 23) / 121][Stage 58:==================================================>   (113 + 8) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:============================>                         (65 + 57) / 122][Stage 59:=================================>                    (75 + 47) / 122][Stage 59:========================================>             (91 + 31) / 122][Stage 59:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.47757671 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443797918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:============================>                         (60 + 53) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:==========================================>           (89 + 24) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:==============================>                       (65 + 49) / 114][Stage 61:====================================>                 (76 + 38) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:====================================================> (110 + 4) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.565074262 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435852962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (60 + 53) / 113][Stage 62:==================================>                   (72 + 41) / 113][Stage 62:==========================================>           (89 + 24) / 113][Stage 62:==============================================>      (100 + 13) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:==============================>                       (64 + 50) / 114][Stage 63:=======================================>              (83 + 31) / 114][Stage 63:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.174756728 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451661636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (68 + 52) / 120][Stage 64:=====================================>                (84 + 36) / 120][Stage 64:=============================================>       (102 + 18) / 120][Stage 64:=====================================================>(118 + 2) / 120]                                                                                [Stage 65:=============================>                        (67 + 54) / 121][Stage 65:===================================>                  (79 + 42) / 121][Stage 65:============================================>         (99 + 22) / 121][Stage 65:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.133841071 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375555848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:=========================================>            (89 + 26) / 115][Stage 66:============================================>         (94 + 21) / 115][Stage 66:==================================================>   (107 + 8) / 115][Stage 66:===================================================>  (110 + 5) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:===========================================>          (94 + 22) / 116][Stage 67:==================================================>   (109 + 7) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.892167414 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407814956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (74 + 41) / 115][Stage 68:===========================================>          (92 + 23) / 115][Stage 68:=================================================>    (106 + 9) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:==================================>                   (75 + 41) / 116][Stage 69:===========================================>          (94 + 22) / 116][Stage 69:===============================================>     (104 + 12) / 116][Stage 69:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.854407514 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444002762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:==============================>                       (63 + 50) / 113][Stage 70:====================================>                 (77 + 36) / 113][Stage 70:==============================================>       (98 + 15) / 113]                                                                                [Stage 71:=============================>                        (62 + 52) / 114][Stage 71:=================================>                    (71 + 43) / 114][Stage 71:=============================================>        (97 + 17) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.958278338 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442692163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:==============================>                       (63 + 50) / 113][Stage 72:=======================================>              (82 + 31) / 113][Stage 72:==============================================>       (98 + 15) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:===============================================>     (103 + 11) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.461817064 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397641622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===================================>                  (75 + 38) / 113][Stage 74:=========================================>            (87 + 26) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:=====================================>                (79 + 35) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:==================================================>   (107 + 7) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.162878769 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428029051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:=============================>                        (65 + 55) / 120][Stage 76:========================================>             (90 + 30) / 120][Stage 76:================================================>    (109 + 11) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:=================================>                    (74 + 47) / 121][Stage 77:==========================================>           (96 + 25) / 121][Stage 77:===============================================>     (109 + 12) / 121][Stage 77:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.297502502 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391741406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===================================>                  (74 + 39) / 113][Stage 78:==========================================>           (88 + 25) / 113][Stage 78:==============================================>       (97 + 16) / 113][Stage 78:===================================================>  (108 + 5) / 113][Stage 78:====================================================> (110 + 3) / 113]                                                                                [Stage 79:===================================>                  (74 + 40) / 114][Stage 79:==========================================>           (90 + 24) / 114][Stage 79:===============================================>     (102 + 12) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.201461505 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48494347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===================================>                  (74 + 39) / 113][Stage 80:=========================================>            (86 + 27) / 113][Stage 80:==============================================>       (97 + 16) / 113][Stage 80:===================================================>  (108 + 5) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:====================================>                 (78 + 36) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:================================================>    (104 + 10) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.067424884 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408423121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:===============================>                      (65 + 48) / 113][Stage 82:======================================>               (81 + 32) / 113][Stage 82:===============================================>     (101 + 12) / 113][Stage 82:===================================================>  (108 + 5) / 113]                                                                                [Stage 83:=============================>                        (62 + 52) / 114][Stage 83:==================================>                   (72 + 42) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263112833 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371271816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (74 + 39) / 113][Stage 84:========================================>             (84 + 29) / 113][Stage 84:============================================>         (93 + 20) / 113][Stage 84:==================================================>   (105 + 8) / 113][Stage 84:====================================================> (110 + 3) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:====================================>                 (76 + 38) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:=============================================>        (95 + 19) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.385498693 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424074577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:===============================>                      (69 + 51) / 120][Stage 86:========================================>             (90 + 30) / 120][Stage 86:==================================================>   (112 + 8) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=================================>                    (74 + 47) / 121][Stage 87:===========================================>          (98 + 23) / 121][Stage 87:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.115499082 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433047534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:===========================>                          (62 + 59) / 121][Stage 88:==================================>                   (78 + 43) / 121][Stage 88:==========================================>           (96 + 25) / 121][Stage 88:================================================>    (110 + 11) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:============================>                         (65 + 57) / 122][Stage 89:================================>                     (73 + 49) / 122][Stage 89:==========================================>           (97 + 25) / 122][Stage 89:==================================================>   (115 + 7) / 122][Stage 89:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.554664121 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368554879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:====================================>                 (77 + 36) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:===============================================>      (99 + 14) / 113][Stage 90:===================================================>  (108 + 5) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:====================================>                 (76 + 38) / 114][Stage 91:========================================>             (86 + 28) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:=================================================>    (105 + 9) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.987696023 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408946005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (60 + 53) / 113][Stage 92:==================================>                   (72 + 41) / 113][Stage 92:============================================>         (94 + 19) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:================================>                     (69 + 45) / 114][Stage 93:============================================>         (94 + 20) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.176686118 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409250485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:===============================>                      (71 + 49) / 120][Stage 94:=======================================>              (87 + 33) / 120][Stage 94:==================================================>   (113 + 7) / 120][Stage 94:=====================================================>(118 + 2) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:====================================>                 (81 + 40) / 121][Stage 95:=========================================>            (94 + 27) / 121][Stage 95:==================================================>   (114 + 7) / 121][Stage 95:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.353309217 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37325984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (76 + 42) / 118][Stage 96:=========================================>            (91 + 27) / 118][Stage 96:==============================================>      (104 + 14) / 118][Stage 96:===================================================>  (113 + 5) / 118]                                                                                [Stage 97:=================================>                    (74 + 45) / 119][Stage 97:=====================================>                (83 + 36) / 119][Stage 97:============================================>         (98 + 21) / 119][Stage 97:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.285956069 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387531755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===============================>                      (67 + 48) / 115][Stage 98:====================================>                 (78 + 37) / 115][Stage 98:============================================>         (95 + 20) / 115][Stage 98:===================================================>  (110 + 5) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:====================================>                 (78 + 38) / 116][Stage 99:=============================================>        (97 + 19) / 116][Stage 99:==================================================>   (109 + 7) / 116][Stage 99:===================================================>  (111 + 5) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.134407231 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397278833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:==============================>                      (65 + 48) / 113][Stage 100:==================================>                  (74 + 39) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:===============================================>    (103 + 10) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:===========================>                         (59 + 55) / 114][Stage 101:===============================>                     (68 + 46) / 114][Stage 101:=======================================>             (84 + 30) / 114][Stage 101:==============================================>     (101 + 13) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.534085789 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401959771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (74 + 44) / 118][Stage 102:=====================================>               (84 + 34) / 118][Stage 102:===============================================>    (108 + 10) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:=================================>                   (75 + 44) / 119][Stage 103:=====================================>               (84 + 35) / 119][Stage 103:==============================================>     (107 + 12) / 119][Stage 103:===================================================> (116 + 3) / 119][Stage 103:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.16875745 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37991686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===================================>                 (76 + 37) / 113][Stage 104:=========================================>           (88 + 25) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:======================================>              (82 + 32) / 114][Stage 105:=========================================>           (89 + 25) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.462246508 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360482928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (80 + 35) / 115][Stage 106:=======================================>             (85 + 30) / 115][Stage 106:=============================================>       (98 + 17) / 115][Stage 106:===============================================>    (105 + 10) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:=====================================>               (82 + 34) / 116][Stage 107:==========================================>          (92 + 24) / 116][Stage 107:=============================================>       (99 + 17) / 116][Stage 107:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.810590073 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405459152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:=============================>                       (67 + 54) / 121][Stage 108:====================================>                (83 + 38) / 121][Stage 108:============================================>       (104 + 17) / 121][Stage 108:==================================================>  (115 + 6) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:==============================>                      (71 + 51) / 122][Stage 109:==========================================>          (97 + 25) / 122][Stage 109:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.388682107 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343292355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (82 + 33) / 115][Stage 110:=========================================>           (90 + 25) / 115][Stage 110:===============================================>    (104 + 11) / 115][Stage 110:==================================================>  (110 + 5) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:========================================>            (88 + 28) / 116][Stage 111:============================================>       (100 + 16) / 116][Stage 111:===================================================> (113 + 3) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.159115277 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341017737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (80 + 35) / 115][Stage 112:========================================>            (88 + 27) / 115][Stage 112:==============================================>     (103 + 12) / 115][Stage 112:==================================================>  (109 + 6) / 115][Stage 112:====================================================>(114 + 1) / 115]                                                                                [Stage 113:=====================================>               (82 + 34) / 116][Stage 113:=======================================>             (86 + 30) / 116][Stage 113:=============================================>      (102 + 14) / 116][Stage 113:===================================================> (113 + 3) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.245889712 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373226906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===================================>                 (76 + 39) / 115][Stage 114:========================================>            (87 + 28) / 115][Stage 114:=============================================>      (101 + 14) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:===============================>                     (68 + 48) / 116][Stage 115:======================================>              (85 + 31) / 116][Stage 115:============================================>        (97 + 19) / 116][Stage 115:===============================================>    (105 + 11) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.120019882 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357241893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (72 + 41) / 113][Stage 116:========================================>            (86 + 27) / 113][Stage 116:==========================================>          (91 + 22) / 113][Stage 116:=============================================>       (98 + 15) / 113][Stage 116:==================================================>  (108 + 5) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:======================================>              (83 + 31) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:==============================================>     (102 + 12) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.355976484 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340587179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (82 + 33) / 115][Stage 118:========================================>            (88 + 27) / 115][Stage 118:============================================>        (97 + 18) / 115][Stage 118:==================================================>  (110 + 5) / 115]                                                                                [Stage 119:======================================>              (84 + 32) / 116][Stage 119:=========================================>           (90 + 26) / 116][Stage 119:=============================================>      (102 + 14) / 116][Stage 119:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.843546932 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486438368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:===================================>                 (75 + 38) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:=================================>                   (72 + 42) / 114][Stage 121:=======================================>             (86 + 28) / 114][Stage 121:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.149290209 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361564673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===============================>                     (71 + 47) / 118][Stage 122:=================================>                   (75 + 43) / 118][Stage 122:======================================>              (85 + 33) / 118][Stage 122:=========================================>           (92 + 26) / 118][Stage 122:===============================================>    (107 + 11) / 118][Stage 122:==================================================>  (113 + 5) / 118]                                                                                [Stage 123:================================>                    (74 + 45) / 119][Stage 123:==================================>                  (78 + 41) / 119][Stage 123:=======================================>             (89 + 30) / 119][Stage 123:===========================================>         (98 + 21) / 119][Stage 123:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.571370187 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358399034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===============================>                     (71 + 47) / 118][Stage 124:=================================>                   (74 + 44) / 118][Stage 124:====================================>                (82 + 36) / 118][Stage 124:=============================================>      (103 + 15) / 118][Stage 124:====================================================>(117 + 1) / 118]                                                                                [Stage 125:================================>                    (74 + 45) / 119][Stage 125:======================================>              (86 + 33) / 119][Stage 125:==============================================>     (106 + 13) / 119][Stage 125:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.098368979 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418165135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:===============================>                     (71 + 50) / 121][Stage 126:========================================>            (93 + 28) / 121][Stage 126:==============================================>     (109 + 12) / 121][Stage 126:====================================================>(119 + 2) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:============================>                        (66 + 56) / 122][Stage 127:====================================>                (85 + 37) / 122][Stage 127:===========================================>        (102 + 20) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.199542149 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358944136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (80 + 33) / 113][Stage 128:==========================================>          (91 + 22) / 113][Stage 128:=============================================>       (97 + 16) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:========================================>            (88 + 26) / 114][Stage 129:============================================>        (96 + 18) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.911498454 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368418694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===================================>                 (75 + 38) / 113][Stage 130:========================================>            (86 + 27) / 113][Stage 130:=============================================>       (97 + 16) / 113][Stage 130:================================================>    (104 + 9) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:=====================================>               (80 + 34) / 114][Stage 131:===========================================>         (93 + 21) / 114][Stage 131:=================================================>   (106 + 8) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.097100135 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375055311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:=================================>                   (74 + 44) / 118][Stage 132:======================================>              (86 + 32) / 118][Stage 132:============================================>       (100 + 18) / 118][Stage 132:===================================================> (114 + 4) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:=====================================>               (84 + 35) / 119][Stage 133:============================================>       (101 + 18) / 119][Stage 133:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.086233745 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375385472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===================================>                 (76 + 39) / 115][Stage 134:========================================>            (88 + 27) / 115][Stage 134:=================================================>   (107 + 8) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:===============================>                     (68 + 48) / 116][Stage 135:===================================>                 (78 + 38) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:================================================>    (107 + 9) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.039021526 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398020125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=============================>                       (67 + 53) / 120][Stage 136:====================================>                (83 + 37) / 120][Stage 136:===============================================>    (109 + 11) / 120][Stage 136:====================================================>(119 + 1) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:==============================>                      (70 + 51) / 121][Stage 137:=======================================>             (91 + 30) / 121][Stage 137:==============================================>     (109 + 12) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.019761058 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350618102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (80 + 33) / 113][Stage 138:=========================================>           (88 + 25) / 113][Stage 138:==============================================>      (99 + 14) / 113][Stage 138:====================================================>(111 + 2) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:==================================>                  (74 + 40) / 114][Stage 139:========================================>            (87 + 27) / 114][Stage 139:===========================================>         (93 + 21) / 114][Stage 139:================================================>    (105 + 9) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.049669733 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395854867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (63 + 58) / 121][Stage 140:==================================>                  (79 + 42) / 121][Stage 140:==========================================>          (96 + 25) / 121][Stage 140:===================================================> (118 + 3) / 121]                                                                                [Stage 141:===========================>                         (64 + 58) / 122][Stage 141:==================================>                  (80 + 42) / 122][Stage 141:===========================================>        (102 + 20) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.991526118 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392017789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (61 + 59) / 120][Stage 142:===============================>                     (72 + 48) / 120][Stage 142:=========================================>           (94 + 26) / 120][Stage 142:===============================================>    (110 + 10) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:=============================>                       (68 + 53) / 121][Stage 143:======================================>              (89 + 32) / 121][Stage 143:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.988167364 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376734655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:===============================>                     (67 + 46) / 113][Stage 144:=====================================>               (81 + 32) / 113][Stage 144:==============================================>     (100 + 13) / 113][Stage 144:===================================================> (109 + 4) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:===================================>                 (76 + 38) / 114][Stage 145:==========================================>          (91 + 23) / 114][Stage 145:===================================================> (110 + 4) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263259599 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342139507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:====================================>                (80 + 35) / 115][Stage 146:=========================================>           (89 + 26) / 115][Stage 146:=============================================>       (99 + 16) / 115][Stage 146:==================================================>  (110 + 5) / 115]                                                                                [Stage 147:=====================================>               (83 + 33) / 116][Stage 147:==========================================>          (93 + 23) / 116][Stage 147:==============================================>     (104 + 12) / 116][Stage 147:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.978737518 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404358387 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 60) / 121][Stage 148:=============================>                       (68 + 53) / 121][Stage 148:=======================================>             (90 + 31) / 121][Stage 148:===============================================>    (110 + 11) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=============================>                       (68 + 54) / 122][Stage 149:====================================>                (85 + 37) / 122][Stage 149:=============================================>      (107 + 15) / 122][Stage 149:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.228534181 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352365265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===================================>                 (75 + 38) / 113][Stage 150:========================================>            (86 + 27) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:==================================================>  (107 + 6) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:======================================>              (83 + 31) / 114][Stage 151:===========================================>         (94 + 20) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:==================================================>  (109 + 5) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.141202996 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39989571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:============================>                        (65 + 55) / 120][Stage 152:====================================>                (82 + 38) / 120][Stage 152:==========================================>          (97 + 23) / 120][Stage 152:===================================================> (116 + 4) / 120]                                                                                [Stage 153:===========================>                         (63 + 58) / 121][Stage 153:================================>                    (75 + 46) / 121][Stage 153:=========================================>           (94 + 27) / 121][Stage 153:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.135173283 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338246791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:====================================>                (80 + 35) / 115][Stage 154:=======================================>             (85 + 30) / 115][Stage 154:============================================>        (97 + 18) / 115][Stage 154:====================================================>(113 + 2) / 115]                                                                                [Stage 155:=====================================>               (81 + 35) / 116][Stage 155:========================================>            (89 + 27) / 116][Stage 155:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.44615979 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449882835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (82 + 33) / 115][Stage 156:==========================================>          (92 + 23) / 115][Stage 156:===============================================>    (105 + 10) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:=======================================>             (86 + 30) / 116][Stage 157:============================================>       (100 + 16) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.61645894 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361909484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:================================>                    (73 + 45) / 118][Stage 158:=========================================>           (93 + 25) / 118][Stage 158:===============================================>    (108 + 10) / 118][Stage 158:====================================================>(117 + 1) / 118]                                                                                [Stage 159:================================>                    (74 + 45) / 119][Stage 159:=======================================>             (88 + 31) / 119][Stage 159:==================================================>  (113 + 6) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.012993957 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365886784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:=================================>                   (74 + 44) / 118][Stage 160:======================================>              (85 + 33) / 118][Stage 160:=============================================>      (103 + 15) / 118][Stage 160:====================================================>(117 + 1) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:==================================>                  (78 + 41) / 119][Stage 161:=======================================>             (89 + 30) / 119][Stage 161:=================================================>   (111 + 8) / 119][Stage 161:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.023866219 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402278053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:========================================>            (91 + 29) / 120][Stage 162:==================================================>  (114 + 6) / 120]                                                                                [Stage 163:============================>                        (64 + 57) / 121][Stage 163:================================>                    (75 + 46) / 121][Stage 163:=====================================>               (85 + 36) / 121][Stage 163:==============================================>     (108 + 13) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.049473096 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382234739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:============================>                        (61 + 52) / 113][Stage 164:=================================>                   (72 + 41) / 113][Stage 164:===========================================>         (93 + 20) / 113][Stage 164:=================================================>   (105 + 8) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:==============================>                      (66 + 48) / 114][Stage 165:======================================>              (83 + 31) / 114][Stage 165:===========================================>         (93 + 21) / 114][Stage 165:==================================================>  (108 + 6) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.460535492 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388070859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:================================>                    (69 + 44) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:==============================================>     (102 + 11) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:============================>                        (62 + 52) / 114][Stage 167:====================================>                (78 + 36) / 114][Stage 167:===========================================>         (94 + 20) / 114][Stage 167:================================================>    (105 + 9) / 114][Stage 167:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.530691057 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377287782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (61 + 52) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:==========================================>          (91 + 22) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==================================>                  (74 + 40) / 114][Stage 169:===========================================>         (94 + 20) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.952681323 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377625383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (60 + 53) / 113][Stage 170:===============================>                     (67 + 46) / 113][Stage 170:===========================================>         (92 + 21) / 113][Stage 170:==============================================>     (101 + 12) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:=================================>                   (71 + 43) / 114][Stage 171:========================================>            (88 + 26) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.159986904 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348938552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (79 + 34) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:=================================================>   (106 + 7) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:==================================>                  (74 + 40) / 114][Stage 173:=====================================>               (81 + 33) / 114][Stage 173:===========================================>         (94 + 20) / 114][Stage 173:=================================================>   (106 + 8) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.094595989 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395691359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:===========================>                         (62 + 59) / 121][Stage 174:=================================>                   (76 + 45) / 121][Stage 174:============================================>       (103 + 18) / 121][Stage 174:==================================================>  (115 + 6) / 121]                                                                                [Stage 175:============================>                        (65 + 57) / 122][Stage 175:=================================>                   (77 + 45) / 122][Stage 175:==========================================>         (100 + 22) / 122][Stage 175:===================================================> (118 + 4) / 122][Stage 175:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.136297242 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401066958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:==============================>                      (68 + 52) / 120][Stage 176:==================================>                  (79 + 41) / 120][Stage 176:=========================================>           (95 + 25) / 120][Stage 176:===================================================> (116 + 4) / 120]                                                                                [Stage 177:============================>                        (64 + 57) / 121][Stage 177:======================================>              (87 + 34) / 121][Stage 177:============================================>       (104 + 17) / 121][Stage 177:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.099599959 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383109124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:===============================>                     (68 + 45) / 113][Stage 178:===========================================>         (92 + 21) / 113][Stage 178:===================================================> (109 + 4) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:================================>                    (70 + 44) / 114][Stage 179:=============================================>       (97 + 17) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.972850502 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334724159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (84 + 31) / 115][Stage 180:============================================>        (97 + 18) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:======================================>              (85 + 31) / 116][Stage 181:============================================>        (97 + 19) / 116][Stage 181:================================================>    (107 + 9) / 116][Stage 181:===================================================> (113 + 3) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.504451909 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390609484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===================================>                 (76 + 37) / 113][Stage 182:==========================================>          (90 + 23) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:===================================>                 (76 + 38) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.864610026 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401788581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (64 + 56) / 120][Stage 184:=================================>                   (75 + 45) / 120][Stage 184:========================================>            (91 + 29) / 120][Stage 184:==================================================>  (114 + 6) / 120]                                                                                [Stage 185:===========================>                         (63 + 58) / 121][Stage 185:================================>                    (74 + 47) / 121][Stage 185:=========================================>           (94 + 27) / 121][Stage 185:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.085007385 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353952596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===================================>                 (76 + 37) / 113][Stage 186:========================================>            (87 + 26) / 113][Stage 186:==============================================>      (99 + 14) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:===================================>                 (77 + 37) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:===============================================>    (104 + 10) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.802301274 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355809116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==================================>                  (74 + 39) / 113][Stage 188:=======================================>             (84 + 29) / 113][Stage 188:===========================================>         (93 + 20) / 113][Stage 188:==============================================>     (102 + 11) / 113][Stage 188:===================================================> (109 + 4) / 113]                                                                                [Stage 189:====================================>                (78 + 36) / 114][Stage 189:==========================================>          (91 + 23) / 114][Stage 189:=============================================>      (100 + 14) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.803745086 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509156471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (61 + 59) / 120][Stage 190:================================>                    (74 + 46) / 120][Stage 190:===========================================>         (98 + 22) / 120][Stage 190:==================================================>  (114 + 6) / 120]                                                                                [Stage 191:============================>                        (64 + 57) / 121][Stage 191:==================================>                  (78 + 43) / 121][Stage 191:==============================================>     (109 + 12) / 121][Stage 191:====================================================>(119 + 2) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.221695823 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357043156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (73 + 45) / 118][Stage 192:====================================>                (82 + 36) / 118][Stage 192:============================================>        (99 + 19) / 118][Stage 192:===================================================> (114 + 4) / 118]                                                                                [Stage 193:==================================>                  (77 + 42) / 119][Stage 193:========================================>            (90 + 29) / 119][Stage 193:=============================================>      (105 + 14) / 119][Stage 193:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.975732259 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366019675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===================================>                 (76 + 37) / 113][Stage 194:==========================================>          (90 + 23) / 113][Stage 194:==============================================>     (101 + 12) / 113][Stage 194:==================================================>  (108 + 5) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:======================================>              (83 + 31) / 114][Stage 195:===========================================>         (94 + 20) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.027172009 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397932826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:============================>                        (60 + 53) / 113][Stage 196:======================================>              (82 + 31) / 113][Stage 196:============================================>        (95 + 18) / 113][Stage 196:==================================================>  (108 + 5) / 113]                                                                                [Stage 197:============================>                        (62 + 52) / 114][Stage 197:================================>                    (70 + 44) / 114][Stage 197:============================================>        (96 + 18) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.11060663 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388122769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:====================================>                (82 + 36) / 118][Stage 198:===========================================>         (97 + 21) / 118][Stage 198:===============================================>    (108 + 10) / 118]                                                                                [Stage 199:=================================>                   (76 + 43) / 119][Stage 199:=======================================>             (88 + 31) / 119][Stage 199:==============================================>     (107 + 12) / 119][Stage 199:===================================================> (116 + 3) / 119][Stage 199:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.101191659 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364758996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==============================>                      (67 + 48) / 115][Stage 200:====================================>                (79 + 36) / 115][Stage 200:===========================================>         (94 + 21) / 115][Stage 200:=================================================>   (108 + 7) / 115]                                                                                [Stage 201:================================>                    (72 + 44) / 116][Stage 201:=========================================>           (90 + 26) / 116][Stage 201:=================================================>   (109 + 7) / 116][Stage 201:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.803774648 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 12:11:34 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:49858) dropped. RpcEnv already stopped.
17/05/22 12:11:34 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:59726) dropped. RpcEnv already stopped.
17/05/22 12:11:34 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:49858) dropped. RpcEnv already stopped.
17/05/22 12:11:34 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:59726) dropped. RpcEnv already stopped.

real	10m0.087s
user	11m18.888s
sys	0m36.408s
