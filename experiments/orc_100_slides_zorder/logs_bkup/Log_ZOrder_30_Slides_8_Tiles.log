Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 04:16:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:16:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:16:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:16:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 04:16:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:17:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522041658-0412).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.382082697 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========>                                             (19 + 96) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.604376248 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.653469874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==============================>                        (63 + 52) / 115][Stage 2:===================================>                   (74 + 41) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:============================================>          (93 + 22) / 115][Stage 2:================================================>     (103 + 12) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:======================================================>(113 + 2) / 115]                                                                                [Stage 3:======================================>                (82 + 34) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:=============================================>         (97 + 19) / 116][Stage 3:===============================================>      (101 + 15) / 116][Stage 3:================================================>     (105 + 11) / 116][Stage 3:=====================================================> (112 + 4) / 116][Stage 3:=====================================================> (113 + 3) / 116][Stage 3:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.643016773 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.750272931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (63 + 52) / 115][Stage 4:===============================>                       (66 + 49) / 115][Stage 4:==================================>                    (72 + 43) / 115][Stage 4:===================================>                   (75 + 40) / 115][Stage 4:==========================================>            (88 + 27) / 115][Stage 4:==============================================>        (97 + 18) / 115][Stage 4:=================================================>    (105 + 10) / 115][Stage 4:====================================================>  (109 + 6) / 115][Stage 4:=====================================================> (111 + 4) / 115][Stage 4:======================================================>(114 + 1) / 115]                                                                                [Stage 5:=============================>                         (63 + 53) / 116][Stage 5:===================================>                   (75 + 41) / 116][Stage 5:=======================================>               (84 + 32) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:============================================>          (94 + 22) / 116][Stage 5:==============================================>        (99 + 17) / 116][Stage 5:===============================================>      (102 + 14) / 116][Stage 5:===============================================>      (103 + 13) / 116][Stage 5:===================================================>   (108 + 8) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.276872288 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.729187302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (56 + 64) / 120][Stage 6:===========================>                           (61 + 59) / 120][Stage 6:===============================>                       (69 + 51) / 120][Stage 6:=================================>                     (74 + 46) / 120][Stage 6:=====================================>                 (81 + 39) / 120][Stage 6:===========================================>           (95 + 25) / 120][Stage 6:======================================================>(118 + 2) / 120]                                                                                [Stage 7:===========================>                           (60 + 61) / 121][Stage 7:==============================>                        (66 + 55) / 121][Stage 7:===================================>                   (77 + 44) / 121][Stage 7:======================================>                (84 + 37) / 121][Stage 7:============================================>          (97 + 24) / 121][Stage 7:====================================================>  (115 + 6) / 121][Stage 7:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.393438526 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.588592442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:=============================>                         (61 + 52) / 113][Stage 8:==================================>                    (71 + 42) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:=================================>                     (69 + 45) / 114][Stage 9:=====================================>                 (77 + 37) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.443154819 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489636354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (80 + 35) / 115][Stage 10:======================================>               (83 + 32) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:===============================================>     (103 + 12) / 115][Stage 10:==================================================>   (108 + 7) / 115][Stage 10:===================================================>  (110 + 5) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:=====================================>                (80 + 36) / 116][Stage 11:======================================>               (82 + 34) / 116][Stage 11:=========================================>            (89 + 27) / 116][Stage 11:==============================================>      (101 + 15) / 116][Stage 11:===============================================>     (105 + 11) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.523268326 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590043886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (66 + 49) / 115][Stage 12:================================>                     (70 + 45) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:==========================================>           (91 + 24) / 115][Stage 12:==============================================>      (100 + 15) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:==================================================>   (108 + 7) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:===============================>                      (67 + 49) / 116][Stage 13:===================================>                  (77 + 39) / 116][Stage 13:=========================================>            (90 + 26) / 116][Stage 13:===========================================>          (93 + 23) / 116][Stage 13:==============================================>       (99 + 17) / 116][Stage 13:==============================================>      (101 + 15) / 116][Stage 13:===============================================>     (104 + 12) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.50154181 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.688464471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (59 + 61) / 120][Stage 14:===========================>                          (61 + 59) / 120][Stage 14:===============================>                      (70 + 50) / 120][Stage 14:==========================================>           (94 + 26) / 120][Stage 14:==================================================>   (113 + 7) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:==========================>                           (59 + 62) / 121][Stage 15:===========================>                          (62 + 59) / 121][Stage 15:================================>                     (72 + 49) / 121][Stage 15:=====================================>                (83 + 38) / 121][Stage 15:=========================================>            (92 + 29) / 121][Stage 15:==============================================>      (106 + 15) / 121][Stage 15:===================================================>  (115 + 6) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.330233259 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541616366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:================================>                     (68 + 45) / 113][Stage 16:=========================================>            (87 + 26) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:===========================>                          (58 + 56) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:=====================================>                (79 + 35) / 114][Stage 17:===========================================>          (91 + 23) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.271865223 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590827967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:===============================>                      (65 + 48) / 113][Stage 18:=======================================>              (83 + 30) / 113][Stage 18:==============================================>      (100 + 13) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:=============================>                        (62 + 52) / 114][Stage 19:===================================>                  (75 + 39) / 114][Stage 19:==============================================>      (100 + 14) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:=====================================================>(112 + 2) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.016070858 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473938407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===================================>                  (74 + 39) / 113][Stage 20:=========================================>            (87 + 26) / 113][Stage 20:===============================================>      (99 + 14) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:====================================================> (109 + 4) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (77 + 37) / 114][Stage 21:=========================================>            (88 + 26) / 114][Stage 21:==============================================>       (99 + 15) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.336544468 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=86,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537341486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:=============================>                        (66 + 54) / 120][Stage 22:======================================>               (86 + 34) / 120][Stage 22:==============================================>      (105 + 15) / 120][Stage 22:===================================================>  (114 + 6) / 120][Stage 22:=====================================================>(118 + 2) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:=========================>                            (58 + 63) / 121][Stage 23:===============================>                      (70 + 51) / 121][Stage 23:=======================================>              (88 + 33) / 121][Stage 23:=============================================>       (105 + 16) / 121][Stage 23:===============================================>     (109 + 12) / 121][Stage 23:===================================================>  (116 + 5) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.627801278 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489191588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (60 + 53) / 113][Stage 24:==================================>                   (72 + 41) / 113][Stage 24:=============================================>        (96 + 17) / 113][Stage 24:===================================================>  (108 + 5) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (58 + 56) / 114][Stage 25:==============================>                       (65 + 49) / 114][Stage 25:=====================================>                (79 + 35) / 114][Stage 25:=============================================>        (96 + 18) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.043255773 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456288412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:===================================>                  (78 + 40) / 118][Stage 26:======================================>               (85 + 33) / 118][Stage 26:==========================================>           (92 + 26) / 118][Stage 26:===============================================>     (106 + 12) / 118][Stage 26:===================================================>  (112 + 6) / 118][Stage 26:====================================================> (115 + 3) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:=================================>                    (74 + 45) / 119][Stage 27:=======================================>              (87 + 32) / 119][Stage 27:==============================================>      (104 + 15) / 119][Stage 27:===================================================>  (114 + 5) / 119][Stage 27:====================================================> (115 + 4) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.716356369 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440147345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=================================>                    (74 + 44) / 118][Stage 28:=====================================>                (82 + 36) / 118][Stage 28:===========================================>          (94 + 24) / 118][Stage 28:==================================================>   (110 + 8) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:=================================>                    (74 + 45) / 119][Stage 29:====================================>                 (80 + 39) / 119][Stage 29:=========================================>            (92 + 27) / 119][Stage 29:===============================================>     (107 + 12) / 119][Stage 29:====================================================> (116 + 3) / 119][Stage 29:=====================================================>(117 + 2) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.833910766 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428504957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===================================>                  (75 + 38) / 113][Stage 30:=========================================>            (86 + 27) / 113][Stage 30:=============================================>        (95 + 18) / 113][Stage 30:==================================================>   (105 + 8) / 113][Stage 30:====================================================> (109 + 4) / 113]                                                                                [Stage 31:======================================>               (81 + 33) / 114][Stage 31:=========================================>            (87 + 27) / 114][Stage 31:==============================================>       (98 + 16) / 114][Stage 31:===================================================>  (108 + 6) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:====================================================> (111 + 3) / 114][Stage 31:=====================================================>(112 + 2) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.648488218 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44396114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=================================>                    (73 + 45) / 118][Stage 32:==========================================>           (92 + 26) / 118][Stage 32:==================================================>   (110 + 8) / 118]                                                                                [Stage 33:=================================>                    (74 + 45) / 119][Stage 33:====================================>                 (81 + 38) / 119][Stage 33:============================================>         (98 + 21) / 119][Stage 33:================================================>    (108 + 11) / 119][Stage 33:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.612410323 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446133308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (79 + 34) / 113][Stage 34:=========================================>            (87 + 26) / 113][Stage 34:============================================>         (93 + 20) / 113][Stage 34:===============================================>      (99 + 14) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:====================================================> (109 + 4) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:=====================================>                (80 + 34) / 114][Stage 35:==========================================>           (90 + 24) / 114][Stage 35:=============================================>        (97 + 17) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.829069788 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43440188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===================================>                  (74 + 39) / 113][Stage 36:========================================>             (85 + 28) / 113][Stage 36:=============================================>        (95 + 18) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:====================================================> (109 + 4) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:====================================>                 (78 + 36) / 114][Stage 37:======================================>               (82 + 32) / 114][Stage 37:============================================>         (93 + 21) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 8.013950743 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509294566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:===========================>                          (62 + 58) / 120][Stage 38:===================================>                  (78 + 42) / 120][Stage 38:============================================>        (101 + 19) / 120][Stage 38:===================================================>  (115 + 5) / 120]                                                                                [Stage 39:===========================>                          (62 + 59) / 121][Stage 39:==============================>                       (68 + 53) / 121][Stage 39:=====================================>                (85 + 36) / 121][Stage 39:=============================================>       (105 + 16) / 121][Stage 39:=====================================================>(119 + 2) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.433738033 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486708272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:=====================================>                (79 + 36) / 115][Stage 40:============================================>         (94 + 21) / 115][Stage 40:===================================================>  (110 + 5) / 115]                                                                                [Stage 41:====================================>                 (79 + 37) / 116][Stage 41:===========================================>          (93 + 23) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.774217735 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.535949614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (65 + 56) / 121][Stage 42:=================================>                    (75 + 46) / 121][Stage 42:=========================================>            (93 + 28) / 121][Stage 42:===============================================>     (109 + 12) / 121][Stage 42:===================================================>  (115 + 6) / 121]                                                                                [Stage 43:===========================>                          (62 + 60) / 122][Stage 43:===============================>                      (72 + 50) / 122][Stage 43:========================================>             (92 + 30) / 122][Stage 43:==============================================>      (108 + 14) / 122][Stage 43:===================================================>  (116 + 6) / 122][Stage 43:====================================================> (118 + 4) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.59353185 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446948869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (60 + 53) / 113][Stage 44:==================================>                   (72 + 41) / 113][Stage 44:============================================>         (93 + 20) / 113][Stage 44:====================================================> (109 + 4) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:===============================>                      (66 + 48) / 114][Stage 45:========================================>             (86 + 28) / 114][Stage 45:===============================================>     (103 + 11) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.831025232 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44475412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (57 + 56) / 113][Stage 46:==============================>                       (63 + 50) / 113][Stage 46:======================================>               (80 + 33) / 113][Stage 46:==============================================>      (100 + 13) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===========================>                          (59 + 55) / 114][Stage 47:==============================>                       (64 + 50) / 114][Stage 47:====================================>                 (76 + 38) / 114][Stage 47:===========================================>          (92 + 22) / 114][Stage 47:===================================================>  (108 + 6) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.622595816 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490796367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:=============================>                        (65 + 55) / 120][Stage 48:====================================>                 (81 + 39) / 120][Stage 48:===========================================>          (96 + 24) / 120][Stage 48:==================================================>   (113 + 7) / 120]                                                                                [Stage 49:===========================>                          (62 + 59) / 121][Stage 49:===============================>                      (70 + 51) / 121][Stage 49:=========================================>            (94 + 27) / 121][Stage 49:==================================================>   (113 + 8) / 121][Stage 49:====================================================> (118 + 3) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.111541152 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439825598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===================================>                  (75 + 38) / 113][Stage 50:=======================================>              (82 + 31) / 113][Stage 50:==========================================>           (88 + 25) / 113][Stage 50:=============================================>        (95 + 18) / 113][Stage 50:===================================================>  (108 + 5) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:====================================>                 (78 + 36) / 114][Stage 51:==========================================>           (89 + 25) / 114][Stage 51:==============================================>      (100 + 14) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.398376152 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422908809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 40) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:===============================================>     (101 + 12) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:==================================>                   (73 + 41) / 114][Stage 53:======================================>               (81 + 33) / 114][Stage 53:==========================================>           (89 + 25) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.037111952 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421303922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (73 + 45) / 118][Stage 54:==================================>                   (75 + 43) / 118][Stage 54:======================================>               (85 + 33) / 118][Stage 54:=============================================>        (99 + 19) / 118][Stage 54:==================================================>   (110 + 8) / 118][Stage 54:===================================================>  (113 + 5) / 118]                                                                                [Stage 55:==================================>                   (75 + 44) / 119][Stage 55:====================================>                 (81 + 38) / 119][Stage 55:=======================================>              (87 + 32) / 119][Stage 55:===========================================>          (95 + 24) / 119][Stage 55:================================================>    (109 + 10) / 119][Stage 55:===================================================>  (114 + 5) / 119][Stage 55:=====================================================>(117 + 2) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.466689831 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422997908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==============================>                       (64 + 51) / 115][Stage 56:===================================>                  (76 + 39) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:===============================================>     (104 + 11) / 115][Stage 56:==================================================>   (107 + 8) / 115][Stage 56:====================================================> (112 + 3) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:================================>                     (70 + 46) / 116][Stage 57:======================================>               (83 + 33) / 116][Stage 57:============================================>         (96 + 20) / 116][Stage 57:==============================================>      (102 + 14) / 116][Stage 57:================================================>    (106 + 10) / 116][Stage 57:=================================================>    (107 + 9) / 116][Stage 57:====================================================> (113 + 3) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.224212596 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464545857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===============================>                      (69 + 51) / 120][Stage 58:====================================>                 (80 + 40) / 120][Stage 58:==========================================>           (94 + 26) / 120][Stage 58:==================================================>   (112 + 8) / 120]                                                                                [Stage 59:============================>                         (63 + 58) / 121][Stage 59:=================================>                    (75 + 46) / 121][Stage 59:=========================================>            (93 + 28) / 121][Stage 59:==============================================>      (107 + 14) / 121][Stage 59:==================================================>   (114 + 7) / 121][Stage 59:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.072814009 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41882665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (74 + 44) / 118][Stage 60:==================================>                   (76 + 42) / 118][Stage 60:======================================>               (84 + 34) / 118][Stage 60:============================================>         (98 + 20) / 118][Stage 60:=====================================================>(116 + 2) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:==================================>                   (75 + 44) / 119][Stage 61:=======================================>              (87 + 32) / 119][Stage 61:============================================>         (99 + 20) / 119][Stage 61:==================================================>   (112 + 7) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.926355927 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400768136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (70 + 43) / 113][Stage 62:=======================================>              (83 + 30) / 113][Stage 62:============================================>         (93 + 20) / 113][Stage 62:===============================================>      (99 + 14) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:====================================>                 (77 + 37) / 114][Stage 63:==========================================>           (89 + 25) / 114][Stage 63:============================================>         (94 + 20) / 114][Stage 63:==================================================>   (107 + 7) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.381953441 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397376401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===================================>                  (75 + 38) / 113][Stage 64:=========================================>            (86 + 27) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:==================================================>   (106 + 7) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:======================================>               (82 + 32) / 114][Stage 65:==========================================>           (90 + 24) / 114][Stage 65:============================================>         (93 + 21) / 114][Stage 65:=================================================>    (105 + 9) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(112 + 2) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.416109055 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484412916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (62 + 59) / 121][Stage 66:================================>                     (72 + 49) / 121][Stage 66:=======================================>              (88 + 33) / 121][Stage 66:================================================>    (111 + 10) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:==============================>                       (69 + 53) / 122][Stage 67:====================================>                 (82 + 40) / 122][Stage 67:===========================================>          (98 + 24) / 122][Stage 67:====================================================> (118 + 4) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.084162377 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431802481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:=============================>                        (66 + 54) / 120][Stage 68:================================>                     (72 + 48) / 120][Stage 68:============================================>        (100 + 20) / 120][Stage 68:==================================================>   (113 + 7) / 120][Stage 68:=====================================================>(119 + 1) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:===============================>                      (70 + 51) / 121][Stage 69:========================================>             (90 + 31) / 121][Stage 69:==============================================>      (106 + 15) / 121][Stage 69:===================================================>  (115 + 6) / 121][Stage 69:====================================================> (118 + 3) / 121][Stage 69:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.728439436 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435651776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==================================>                   (74 + 41) / 115][Stage 70:========================================>             (87 + 28) / 115][Stage 70:=============================================>        (97 + 18) / 115][Stage 70:==================================================>   (108 + 7) / 115][Stage 70:====================================================> (112 + 3) / 115]                                                                                [Stage 71:================================>                     (70 + 46) / 116][Stage 71:======================================>               (83 + 33) / 116][Stage 71:===========================================>          (93 + 23) / 116][Stage 71:==================================================>   (109 + 7) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:====================================================> (113 + 3) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.881227341 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366326672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:=============================================>        (96 + 19) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:===================================================>  (110 + 5) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:=======================================>              (85 + 31) / 116][Stage 73:==========================================>           (91 + 25) / 116][Stage 73:===============================================>     (105 + 11) / 116][Stage 73:===================================================>  (110 + 6) / 116][Stage 73:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.353514424 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423090543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:=============================>                        (61 + 52) / 113][Stage 74:==================================>                   (72 + 41) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:================================>                     (68 + 46) / 114][Stage 75:========================================>             (85 + 29) / 114][Stage 75:==================================================>   (107 + 7) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.099414839 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431522978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:=============================>                        (65 + 56) / 121][Stage 76:=================================>                    (75 + 46) / 121][Stage 76:===========================================>         (100 + 21) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:===============================>                      (71 + 51) / 122][Stage 77:======================================>               (87 + 35) / 122][Stage 77:================================================>    (112 + 10) / 122][Stage 77:=====================================================>(120 + 2) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.501972881 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430150871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==============================>                       (65 + 50) / 115][Stage 78:=====================================>                (80 + 35) / 115][Stage 78:============================================>         (94 + 21) / 115][Stage 78:==================================================>   (107 + 8) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:=================================>                    (72 + 44) / 116][Stage 79:======================================>               (82 + 34) / 116][Stage 79:=============================================>        (98 + 18) / 116][Stage 79:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.886529493 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364931406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=====================================>                (79 + 36) / 115][Stage 80:=======================================>              (84 + 31) / 115][Stage 80:============================================>         (95 + 20) / 115][Stage 80:==================================================>   (107 + 8) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:======================================>               (83 + 33) / 116][Stage 81:========================================>             (87 + 29) / 116][Stage 81:==============================================>       (99 + 17) / 116][Stage 81:===============================================>     (104 + 12) / 116][Stage 81:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.922348196 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414208426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:=================================>                    (70 + 43) / 113][Stage 82:===========================================>          (90 + 23) / 113][Stage 82:===================================================>  (107 + 6) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:==============================>                       (65 + 49) / 114][Stage 83:====================================>                 (76 + 38) / 114][Stage 83:==============================================>      (100 + 14) / 114][Stage 83:====================================================> (111 + 3) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.807261235 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406868795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:=================================>                    (73 + 45) / 118][Stage 84:======================================>               (84 + 34) / 118][Stage 84:=============================================>        (99 + 19) / 118][Stage 84:===================================================>  (113 + 5) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:==================================>                   (75 + 44) / 119][Stage 85:========================================>             (90 + 29) / 119][Stage 85:==============================================>      (105 + 14) / 119][Stage 85:====================================================> (116 + 3) / 119][Stage 85:=====================================================>(117 + 2) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.182371997 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418082361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (61 + 59) / 120][Stage 86:====================================>                 (80 + 40) / 120][Stage 86:=============================================>       (102 + 18) / 120][Stage 86:====================================================> (117 + 3) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:==============================>                       (69 + 52) / 121][Stage 87:=====================================>                (85 + 36) / 121][Stage 87:=============================================>       (103 + 18) / 121][Stage 87:===================================================>  (116 + 5) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.556554107 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383944142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:=================================>                    (74 + 44) / 118][Stage 88:=====================================>                (83 + 35) / 118][Stage 88:============================================>         (98 + 20) / 118][Stage 88:===================================================>  (113 + 5) / 118]                                                                                [Stage 89:==================================>                   (76 + 43) / 119][Stage 89:=======================================>              (86 + 33) / 119][Stage 89:============================================>        (100 + 19) / 119][Stage 89:===================================================>  (113 + 6) / 119][Stage 89:=====================================================>(117 + 2) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.802633344 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387175355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:=================================>                    (74 + 44) / 118][Stage 90:====================================>                 (79 + 39) / 118][Stage 90:===========================================>          (94 + 24) / 118][Stage 90:==================================================>   (111 + 7) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:==================================>                   (75 + 44) / 119][Stage 91:=====================================>                (82 + 37) / 119][Stage 91:==========================================>           (93 + 26) / 119][Stage 91:===================================================>  (114 + 5) / 119][Stage 91:====================================================> (116 + 3) / 119][Stage 91:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.382503858 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380315486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (70 + 43) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:=============================================>        (96 + 17) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:==================================>                   (72 + 42) / 114][Stage 93:=========================================>            (88 + 26) / 114][Stage 93:=============================================>        (96 + 18) / 114][Stage 93:================================================>    (104 + 10) / 114][Stage 93:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.977394562 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379192861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===================================>                  (75 + 38) / 113][Stage 94:=========================================>            (87 + 26) / 113][Stage 94:===============================================>     (102 + 11) / 113][Stage 94:====================================================> (109 + 4) / 113]                                                                                [Stage 95:=====================================>                (80 + 34) / 114][Stage 95:============================================>         (93 + 21) / 114][Stage 95:===============================================>     (103 + 11) / 114][Stage 95:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.790679402 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387738716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (75 + 43) / 118][Stage 96:====================================>                 (80 + 38) / 118][Stage 96:===========================================>          (94 + 24) / 118][Stage 96:================================================>    (108 + 10) / 118]                                                                                [Stage 97:=================================>                    (74 + 45) / 119][Stage 97:===================================>                  (78 + 41) / 119][Stage 97:=====================================>                (82 + 37) / 119][Stage 97:==========================================>           (93 + 26) / 119][Stage 97:===================================================>  (113 + 6) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.795637342 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412141274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:===============================>                      (71 + 50) / 121][Stage 98:==========================================>           (95 + 26) / 121][Stage 98:=================================================>    (112 + 9) / 121][Stage 98:=====================================================>(120 + 1) / 121]                                                                                [Stage 99:===========================>                          (62 + 60) / 122][Stage 99:================================>                     (73 + 49) / 122][Stage 99:=====================================>                (84 + 38) / 122][Stage 99:==============================================>      (108 + 14) / 122][Stage 99:====================================================> (118 + 4) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.49018114 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368993599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (80 + 33) / 113][Stage 100:========================================>            (86 + 27) / 113][Stage 100:===========================================>         (93 + 20) / 113][Stage 100:=================================================>   (105 + 8) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===================================>                 (77 + 37) / 114][Stage 101:======================================>              (82 + 32) / 114][Stage 101:============================================>        (95 + 19) / 114][Stage 101:================================================>    (105 + 9) / 114][Stage 101:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.029979365 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399380022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:============================>                        (60 + 53) / 113][Stage 102:===============================>                     (68 + 45) / 113][Stage 102:=====================================>               (79 + 34) / 113][Stage 102:==============================================>      (99 + 14) / 113]                                                                                [Stage 103:===========================>                         (59 + 55) / 114][Stage 103:===============================>                     (68 + 46) / 114][Stage 103:=======================================>             (85 + 29) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.695511265 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38406906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:==================================>                  (77 + 41) / 118][Stage 104:======================================>              (85 + 33) / 118][Stage 104:===========================================>         (96 + 22) / 118][Stage 104:=================================================>   (110 + 8) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:=================================>                   (76 + 43) / 119][Stage 105:=====================================>               (84 + 35) / 119][Stage 105:========================================>            (92 + 27) / 119][Stage 105:===============================================>    (108 + 11) / 119][Stage 105:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.224641849 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399358241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===================================>                 (77 + 38) / 115][Stage 106:===========================================>         (95 + 20) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:=========================================>           (91 + 25) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.862104475 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448110758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:====================================>                (77 + 36) / 113][Stage 108:=========================================>           (88 + 25) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:=================================================>   (106 + 7) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:==================================>                  (74 + 40) / 114][Stage 109:=======================================>             (84 + 30) / 114][Stage 109:==============================================>      (99 + 15) / 114][Stage 109:==================================================>  (109 + 5) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.185452465 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409579242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:============================>                        (65 + 55) / 120][Stage 110:==============================>                      (70 + 50) / 120][Stage 110:=====================================>               (86 + 34) / 120][Stage 110:=============================================>      (106 + 14) / 120][Stage 110:====================================================>(118 + 2) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:=============================>                       (68 + 53) / 121][Stage 111:=====================================>               (85 + 36) / 121][Stage 111:=============================================>      (105 + 16) / 121][Stage 111:=================================================>   (114 + 7) / 121][Stage 111:====================================================>(119 + 2) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.813308485 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360239202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (77 + 36) / 113][Stage 112:=========================================>           (88 + 25) / 113][Stage 112:==============================================>     (100 + 13) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:===================================>                 (76 + 38) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=============================================>      (100 + 14) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.021294453 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353359432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===================================>                 (75 + 38) / 113][Stage 114:========================================>            (86 + 27) / 113][Stage 114:=============================================>       (98 + 15) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===================================>                 (76 + 38) / 114][Stage 115:=======================================>             (84 + 30) / 114][Stage 115:===========================================>         (94 + 20) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.925641603 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398567536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (61 + 59) / 120][Stage 116:==================================>                  (77 + 43) / 120][Stage 116:===========================================>         (98 + 22) / 120][Stage 116:==================================================>  (114 + 6) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:===================================>                 (80 + 41) / 121][Stage 117:======================================>              (89 + 32) / 121][Stage 117:=============================================>      (106 + 15) / 121][Stage 117:====================================================>(119 + 2) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.277696508 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363119012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:================================>                    (73 + 45) / 118][Stage 118:=================================>                   (75 + 43) / 118][Stage 118:=======================================>             (87 + 31) / 118][Stage 118:============================================>        (99 + 19) / 118][Stage 118:===============================================>    (107 + 11) / 118][Stage 118:====================================================>(117 + 1) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:=================================>                   (76 + 43) / 119][Stage 119:====================================>                (82 + 37) / 119][Stage 119:========================================>            (92 + 27) / 119][Stage 119:==================================================>  (113 + 6) / 119][Stage 119:===================================================> (116 + 3) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.293940801 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355560561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===================================>                 (76 + 37) / 113][Stage 120:========================================>            (87 + 26) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:==================================================>  (107 + 6) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:====================================>                (78 + 36) / 114][Stage 121:========================================>            (87 + 27) / 114][Stage 121:===========================================>         (94 + 20) / 114][Stage 121:==============================================>     (103 + 11) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.142188445 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356603564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (77 + 36) / 113][Stage 122:========================================>            (87 + 26) / 113][Stage 122:============================================>        (94 + 19) / 113][Stage 122:===============================================>    (103 + 10) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:==================================>                  (75 + 39) / 114][Stage 123:=======================================>             (86 + 28) / 114][Stage 123:===========================================>         (93 + 21) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:==================================================>  (108 + 6) / 114][Stage 123:====================================================>(112 + 2) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.752673425 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377319307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:===================================>                 (78 + 37) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:=================================================>   (108 + 7) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (69 + 47) / 116][Stage 125:===================================>                 (78 + 38) / 116][Stage 125:===========================================>         (96 + 20) / 116][Stage 125:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.849524156 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406971567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:============================>                        (64 + 57) / 121][Stage 126:=================================>                   (77 + 44) / 121][Stage 126:=========================================>           (95 + 26) / 121][Stage 126:====================================================>(120 + 1) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:==========================>                          (62 + 60) / 122][Stage 127:====================================>                (83 + 39) / 122][Stage 127:==========================================>          (97 + 25) / 122][Stage 127:===============================================>    (112 + 10) / 122][Stage 127:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.146807465 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386810805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (73 + 45) / 118][Stage 128:=====================================>               (83 + 35) / 118][Stage 128:============================================>       (101 + 17) / 118][Stage 128:===================================================> (114 + 4) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:===================================>                 (80 + 39) / 119][Stage 129:============================================>       (101 + 18) / 119][Stage 129:====================================================>(117 + 2) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.901652509 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360723359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:======================================>              (84 + 31) / 115][Stage 130:=========================================>           (90 + 25) / 115][Stage 130:=============================================>      (100 + 15) / 115][Stage 130:===================================================> (111 + 4) / 115]                                                                                [Stage 131:======================================>              (85 + 31) / 116][Stage 131:========================================>            (88 + 28) / 116][Stage 131:===========================================>         (96 + 20) / 116][Stage 131:==============================================>     (103 + 13) / 116][Stage 131:=================================================>   (109 + 7) / 116][Stage 131:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.916221179 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416508564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:===============================>                     (71 + 50) / 121][Stage 132:==========================================>          (98 + 23) / 121][Stage 132:==================================================>  (116 + 5) / 121][Stage 132:====================================================>(120 + 1) / 121]                                                                                [Stage 133:=============================>                       (67 + 55) / 122][Stage 133:==================================>                  (79 + 43) / 122][Stage 133:==========================================>          (97 + 25) / 122][Stage 133:===============================================>    (111 + 11) / 122][Stage 133:====================================================>(120 + 2) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.105981765 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337741926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (80 + 35) / 115][Stage 134:========================================>            (87 + 28) / 115][Stage 134:===========================================>         (95 + 20) / 115][Stage 134:==============================================>     (102 + 13) / 115][Stage 134:==================================================>  (110 + 5) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=======================================>             (87 + 29) / 116][Stage 135:============================================>        (97 + 19) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:===============================================>    (105 + 11) / 116][Stage 135:================================================>    (107 + 9) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.865728638 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405250638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:===============================>                     (71 + 49) / 120][Stage 136:========================================>            (91 + 29) / 120][Stage 136:=================================================>   (111 + 9) / 120]                                                                                [Stage 137:===========================>                         (62 + 59) / 121][Stage 137:=============================>                       (68 + 53) / 121][Stage 137:=====================================>               (86 + 35) / 121][Stage 137:==============================================>     (108 + 13) / 121][Stage 137:===================================================> (118 + 3) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.840083301 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362264104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:===================================>                 (80 + 38) / 118][Stage 138:=========================================>           (93 + 25) / 118][Stage 138:=================================================>   (110 + 8) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:==================================>                  (77 + 42) / 119][Stage 139:====================================>                (82 + 37) / 119][Stage 139:=========================================>           (94 + 25) / 119][Stage 139:=============================================>      (104 + 15) / 119][Stage 139:===================================================> (116 + 3) / 119][Stage 139:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.688989047 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364322872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==================================>                  (76 + 42) / 118][Stage 140:======================================>              (85 + 33) / 118][Stage 140:=============================================>      (103 + 15) / 118][Stage 140:===================================================> (114 + 4) / 118][Stage 140:====================================================>(117 + 1) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (77 + 42) / 119][Stage 141:=======================================>             (89 + 30) / 119][Stage 141:============================================>        (99 + 20) / 119][Stage 141:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.572101572 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337667624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (82 + 33) / 115][Stage 142:===========================================>         (95 + 20) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:======================================>              (84 + 32) / 116][Stage 143:==========================================>          (92 + 24) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.870017613 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396531722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (61 + 60) / 121][Stage 144:==============================>                      (70 + 51) / 121][Stage 144:====================================>                (83 + 38) / 121][Stage 144:==============================================>     (108 + 13) / 121]                                                                                [Stage 145:==========================>                          (62 + 60) / 122][Stage 145:=============================>                       (69 + 53) / 122][Stage 145:===================================>                 (82 + 40) / 122][Stage 145:===============================================>    (111 + 11) / 122][Stage 145:===================================================> (119 + 3) / 122][Stage 145:====================================================>(120 + 2) / 122][Stage 145:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.183738775 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388512908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:==============================>                      (66 + 47) / 113][Stage 146:==========================================>          (90 + 23) / 113][Stage 146:===============================================>    (103 + 10) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:===============================>                     (68 + 46) / 114][Stage 147:=======================================>             (86 + 28) / 114][Stage 147:==============================================>     (101 + 13) / 114][Stage 147:===================================================> (111 + 3) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.277267249 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404051731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:=============================>                       (67 + 53) / 120][Stage 148:====================================>                (83 + 37) / 120][Stage 148:=============================================>      (105 + 15) / 120][Stage 148:===================================================> (117 + 3) / 120]                                                                                [Stage 149:============================>                        (64 + 57) / 121][Stage 149:===============================>                     (73 + 48) / 121][Stage 149:==========================================>          (96 + 25) / 121][Stage 149:===================================================> (118 + 3) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.251233219 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375507175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==============================>                      (66 + 49) / 115][Stage 150:===================================>                 (78 + 37) / 115][Stage 150:=========================================>           (91 + 24) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:===============================>                     (68 + 48) / 116][Stage 151:===================================>                 (78 + 38) / 116][Stage 151:==========================================>          (93 + 23) / 116][Stage 151:==============================================>     (103 + 13) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.891375088 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347177121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (80 + 35) / 115][Stage 152:=======================================>             (85 + 30) / 115][Stage 152:=============================================>       (99 + 16) / 115][Stage 152:================================================>    (106 + 9) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=====================================>               (82 + 34) / 116][Stage 153:========================================>            (88 + 28) / 116][Stage 153:=============================================>      (102 + 14) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:===================================================> (112 + 4) / 116][Stage 153:===================================================> (113 + 3) / 116][Stage 153:====================================================>(114 + 2) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.416014805 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35949551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:===================================>                 (79 + 39) / 118][Stage 154:==========================================>          (94 + 24) / 118][Stage 154:==================================================>  (112 + 6) / 118][Stage 154:====================================================>(116 + 2) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:===================================>                 (80 + 39) / 119][Stage 155:=======================================>             (89 + 30) / 119][Stage 155:=============================================>      (103 + 16) / 119][Stage 155:==================================================>  (114 + 5) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.867997433 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369745871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (71 + 44) / 115][Stage 156:========================================>            (87 + 28) / 115][Stage 156:=============================================>       (98 + 17) / 115][Stage 156:===================================================> (112 + 3) / 115]                                                                                [Stage 157:===================================>                 (77 + 39) / 116][Stage 157:=======================================>             (87 + 29) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.874961692 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336305456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:====================================>                (80 + 35) / 115][Stage 158:======================================>              (84 + 31) / 115][Stage 158:============================================>        (97 + 18) / 115][Stage 158:==============================================>     (103 + 12) / 115][Stage 158:==================================================>  (109 + 6) / 115]                                                                                [Stage 159:=======================================>             (86 + 30) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:=================================================>   (108 + 8) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.889375588 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351600357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=================================>                   (72 + 41) / 113][Stage 160:======================================>              (82 + 31) / 113][Stage 160:============================================>        (94 + 19) / 113][Stage 160:==============================================>      (99 + 14) / 113][Stage 160:===================================================> (109 + 4) / 113][Stage 160:===================================================> (110 + 3) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:=====================================>               (80 + 34) / 114][Stage 161:=========================================>           (90 + 24) / 114][Stage 161:============================================>        (96 + 18) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:=================================================>   (106 + 8) / 114][Stage 161:===================================================> (110 + 4) / 114][Stage 161:===================================================> (111 + 3) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.415848398 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360165011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:======================================>              (82 + 31) / 113][Stage 162:=========================================>           (88 + 25) / 113][Stage 162:============================================>        (95 + 18) / 113][Stage 162:===============================================>    (103 + 10) / 113][Stage 162:===================================================> (109 + 4) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:======================================>              (82 + 32) / 114][Stage 163:==========================================>          (91 + 23) / 114][Stage 163:==============================================>     (101 + 13) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.456328026 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358423103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:==================================>                  (77 + 41) / 118][Stage 164:=======================================>             (88 + 30) / 118][Stage 164:============================================>        (99 + 19) / 118][Stage 164:==================================================>  (113 + 5) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:=====================================>               (84 + 35) / 119][Stage 165:===========================================>         (98 + 21) / 119][Stage 165:=================================================>   (112 + 7) / 119][Stage 165:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.677106992 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397848602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:============================>                        (64 + 57) / 121][Stage 166:===============================>                     (73 + 48) / 121][Stage 166:============================================>       (103 + 18) / 121][Stage 166:=================================================>   (114 + 7) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:===========================>                         (64 + 58) / 122][Stage 167:================================>                    (74 + 48) / 122][Stage 167:=========================================>           (96 + 26) / 122][Stage 167:===============================================>    (112 + 10) / 122][Stage 167:===================================================> (119 + 3) / 122][Stage 167:====================================================>(120 + 2) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.906285299 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392588581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:===============================>                     (68 + 45) / 113][Stage 168:=====================================>               (79 + 34) / 113][Stage 168:=============================================>       (98 + 15) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:============================>                        (62 + 52) / 114][Stage 169:==============================>                      (66 + 48) / 114][Stage 169:======================================>              (82 + 32) / 114][Stage 169:=============================================>       (97 + 17) / 114][Stage 169:==================================================>  (109 + 5) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.3465466 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361695136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:===================================>                 (78 + 40) / 118][Stage 170:========================================>            (90 + 28) / 118][Stage 170:============================================>       (102 + 16) / 118][Stage 170:==================================================>  (112 + 6) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:======================================>              (86 + 33) / 119][Stage 171:==========================================>          (95 + 24) / 119][Stage 171:============================================>       (102 + 17) / 119][Stage 171:====================================================>(117 + 2) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.875126237 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395822753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:============================>                        (65 + 56) / 121][Stage 172:====================================>                (84 + 37) / 121][Stage 172:=============================================>      (107 + 14) / 121][Stage 172:===================================================> (118 + 3) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:===========================>                         (64 + 58) / 122][Stage 173:==================================>                  (79 + 43) / 122][Stage 173:==========================================>          (98 + 24) / 122][Stage 173:=================================================>   (114 + 8) / 122][Stage 173:====================================================>(120 + 2) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.754659669 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368872804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (70 + 45) / 115][Stage 174:=======================================>             (85 + 30) / 115][Stage 174:==========================================>          (93 + 22) / 115][Stage 174:=================================================>   (107 + 8) / 115]                                                                                [Stage 175:===============================>                     (69 + 47) / 116][Stage 175:=====================================>               (82 + 34) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:=============================================>      (102 + 14) / 116][Stage 175:===============================================>    (106 + 10) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.247071324 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406547416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 61) / 121][Stage 176:============================>                        (64 + 57) / 121][Stage 176:==================================>                  (79 + 42) / 121][Stage 176:=========================================>           (94 + 27) / 121][Stage 176:===================================================> (117 + 4) / 121]                                                                                [Stage 177:==========================>                          (61 + 61) / 122][Stage 177:============================>                        (66 + 56) / 122][Stage 177:=================================>                   (77 + 45) / 122][Stage 177:============================================>       (105 + 17) / 122][Stage 177:===================================================> (118 + 4) / 122][Stage 177:====================================================>(120 + 2) / 122][Stage 177:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.658746459 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334128223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (82 + 33) / 115][Stage 178:========================================>            (87 + 28) / 115][Stage 178:==========================================>          (93 + 22) / 115][Stage 178:=================================================>   (107 + 8) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:=====================================>               (81 + 35) / 116][Stage 179:========================================>            (88 + 28) / 116][Stage 179:===========================================>         (95 + 21) / 116][Stage 179:==============================================>     (103 + 13) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:===================================================> (113 + 3) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.07020495 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354199324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (77 + 36) / 113][Stage 180:========================================>            (86 + 27) / 113][Stage 180:==============================================>      (99 + 14) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:====================================>                (78 + 36) / 114][Stage 181:========================================>            (87 + 27) / 114][Stage 181:=============================================>       (98 + 16) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.301145391 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39539719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:================================>                    (73 + 45) / 118][Stage 182:====================================>                (81 + 37) / 118][Stage 182:========================================>            (90 + 28) / 118][Stage 182:=============================================>      (103 + 15) / 118][Stage 182:==================================================>  (112 + 6) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:==================================>                  (78 + 41) / 119][Stage 183:=====================================>               (84 + 35) / 119][Stage 183:========================================>            (92 + 27) / 119][Stage 183:===============================================>    (109 + 10) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.504018643 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444292905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:======================================>              (84 + 31) / 115][Stage 184:========================================>            (88 + 27) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:=======================================>             (87 + 29) / 116][Stage 185:=============================================>       (99 + 17) / 116][Stage 185:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.696031834 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361510952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:=================================>                   (75 + 43) / 118][Stage 186:====================================>                (81 + 37) / 118][Stage 186:=========================================>           (93 + 25) / 118][Stage 186:=============================================>      (103 + 15) / 118]                                                                                [Stage 187:================================>                    (74 + 45) / 119][Stage 187:==================================>                  (78 + 41) / 119][Stage 187:=====================================>               (85 + 34) / 119][Stage 187:=========================================>           (94 + 25) / 119][Stage 187:=================================================>   (112 + 7) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.725354427 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376837294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:==============================>                      (65 + 48) / 113][Stage 188:=====================================>               (79 + 34) / 113][Stage 188:================================================>    (104 + 9) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:============================>                        (61 + 53) / 114][Stage 189:==================================>                  (74 + 40) / 114][Stage 189:==========================================>          (92 + 22) / 114][Stage 189:==============================================>     (103 + 11) / 114][Stage 189:===================================================> (111 + 3) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.340919352 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351413071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (77 + 36) / 113][Stage 190:========================================>            (87 + 26) / 113][Stage 190:============================================>        (94 + 19) / 113][Stage 190:==============================================>     (101 + 12) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:======================================>              (82 + 32) / 114][Stage 191:=========================================>           (89 + 25) / 114][Stage 191:============================================>        (96 + 18) / 114][Stage 191:=============================================>      (100 + 14) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.206562937 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339706964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===================================>                 (75 + 38) / 113][Stage 192:=======================================>             (85 + 28) / 113][Stage 192:============================================>        (94 + 19) / 113][Stage 192:===============================================>    (103 + 10) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:===================================>                 (77 + 37) / 114][Stage 193:========================================>            (88 + 26) / 114][Stage 193:==============================================>      (99 + 15) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.940558523 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=62", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=62,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382629495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==============================>                      (67 + 48) / 115][Stage 194:===================================>                 (76 + 39) / 115][Stage 194:========================================>            (87 + 28) / 115][Stage 194:==============================================>     (102 + 13) / 115][Stage 194:=================================================>   (108 + 7) / 115][Stage 194:====================================================>(113 + 2) / 115]                                                                                [Stage 195:==================================>                  (76 + 40) / 116][Stage 195:=======================================>             (86 + 30) / 116][Stage 195:============================================>        (97 + 19) / 116][Stage 195:==============================================>     (103 + 13) / 116][Stage 195:=================================================>   (108 + 8) / 116][Stage 195:==================================================>  (111 + 5) / 116][Stage 195:===================================================> (112 + 4) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.311011924 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37138553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (72 + 46) / 118][Stage 196:=================================>                   (75 + 43) / 118][Stage 196:======================================>              (86 + 32) / 118][Stage 196:============================================>        (99 + 19) / 118][Stage 196:==================================================>  (112 + 6) / 118][Stage 196:====================================================>(117 + 1) / 118]                                                                                [Stage 197:================================>                    (74 + 45) / 119][Stage 197:=================================>                   (76 + 43) / 119][Stage 197:=====================================>               (85 + 34) / 119][Stage 197:===========================================>         (97 + 22) / 119][Stage 197:==============================================>     (106 + 13) / 119][Stage 197:====================================================>(117 + 2) / 119][Stage 197:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.215661931 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366737371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (78 + 35) / 113][Stage 198:==========================================>          (91 + 22) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:==================================>                  (75 + 39) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:==============================================>      (99 + 15) / 114][Stage 199:===================================================> (110 + 4) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.149121111 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392882375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (62 + 59) / 121][Stage 200:===============================>                     (73 + 48) / 121][Stage 200:=====================================>               (85 + 36) / 121][Stage 200:=============================================>      (107 + 14) / 121]                                                                                [Stage 201:==========================>                          (62 + 60) / 122][Stage 201:==============================>                      (70 + 52) / 122][Stage 201:======================================>              (89 + 33) / 122][Stage 201:=============================================>      (107 + 15) / 122][Stage 201:====================================================>(120 + 2) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.087124669 seconds
res203: Int = 0

scala> 

scala> :quit

real	12m25.194s
user	12m39.200s
sys	1m42.404s
