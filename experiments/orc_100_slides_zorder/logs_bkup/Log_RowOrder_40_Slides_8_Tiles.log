Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 05:53:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:54:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:54:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:54:01 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 05:54:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:54:14 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522055403-0421).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.356920804 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.648271186 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partition Index = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.669045991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (57 + 56) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:====================================>                  (75 + 38) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:=========================================>             (86 + 27) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:===============================================>       (97 + 16) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:=============================>                         (61 + 53) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:=======================================>               (81 + 33) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:===========================================>           (91 + 23) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 5.414239745 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partition Index = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.68543559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=======================>                               (49 + 64) / 113][Stage 4:=========================>                             (52 + 61) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:======================================>                (80 + 33) / 113][Stage 4:==============================================>        (96 + 17) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:=====================================================> (109 + 4) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:=================================>                     (70 + 44) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(112 + 2) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.586867664 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  pa rtitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 1 8  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.6604059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 60) / 120][Stage 6:============================>                          (62 + 58) / 120][Stage 6:================================>                      (71 + 49) / 120][Stage 6:====================================>                  (80 + 40) / 120][Stage 6:==========================================>            (92 + 28) / 120][Stage 6:=================================================>    (109 + 11) / 120][Stage 6:======================================================>(119 + 1) / 120]                                                                                [Stage 7:============================>                          (62 + 59) / 121][Stage 7:===============================>                       (69 + 52) / 121][Stage 7:========================================>              (89 + 32) / 121][Stage 7:=========================================>             (92 + 29) / 121][Stage 7:================================================>     (108 + 13) / 121][Stage 7:====================================================>  (115 + 6) / 121][Stage 7:======================================================>(119 + 2) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.970699897 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partition Index = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516927888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:===========================================>           (90 + 25) / 115][Stage 8:===============================================>      (102 + 13) / 115][Stage 8:====================================================>  (110 + 5) / 115][Stage 8:======================================================>(113 + 2) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:======================================>                (81 + 35) / 116][Stage 9:========================================>              (85 + 31) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.260663914 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partition Index = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.571536923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (66 + 49) / 115][Stage 10:=================================>                    (72 + 43) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:=============================================>        (96 + 19) / 115][Stage 10:================================================>    (105 + 10) / 115][Stage 10:==================================================>   (108 + 7) / 115][Stage 10:====================================================> (111 + 4) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:==================================>                   (75 + 41) / 116][Stage 11:========================================>             (86 + 30) / 116][Stage 11:=============================================>       (100 + 16) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:====================================================> (112 + 4) / 116][Stage 11:====================================================> (113 + 3) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.318662995 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex  = 60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566867926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (54 + 59) / 113][Stage 12:===========================>                          (57 + 56) / 113][Stage 12:================================>                     (68 + 45) / 113][Stage 12:=======================================>              (82 + 31) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:==============================================>       (97 + 16) / 113][Stage 12:===================================================>  (108 + 5) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:===============================>                      (67 + 47) / 114][Stage 13:=======================================>              (84 + 30) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:======================================================(114 + 0) / 114]                                                                                Time elapsed: 4.454992984 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partition Index = 166  OR  partitionIndex = 152 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.580368975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:==================================>                   (76 + 42) / 118][Stage 14:=========================================>            (90 + 28) / 118][Stage 14:==============================================>      (104 + 14) / 118][Stage 14:====================================================> (115 + 3) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:==================================>                   (76 + 43) / 119][Stage 15:=========================================>            (91 + 28) / 119][Stage 15:===============================================>     (107 + 12) / 119][Stage 15:====================================================> (115 + 4) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.947556745 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partition Index = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502765317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (74 + 44) / 118][Stage 16:======================================>               (84 + 34) / 118][Stage 16:============================================>         (97 + 21) / 118][Stage 16:===============================================>     (106 + 12) / 118][Stage 16:====================================================> (115 + 3) / 118]                                                                                [Stage 17:=================================>                    (74 + 45) / 119][Stage 17:======================================>               (84 + 35) / 119][Stage 17:===========================================>          (95 + 24) / 119][Stage 17:=============================================>       (102 + 17) / 119]                                                                                Time elapsed: 3.727503325 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  p artitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex  = 77  OR  partitionIndex = 78 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524182513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:=====================================>                (83 + 37) / 120][Stage 18:=============================================>       (104 + 16) / 120][Stage 18:==================================================>   (112 + 8) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:===============================>                      (71 + 50) / 121][Stage 19:=====================================>                (85 + 36) / 121][Stage 19:===========================================>         (100 + 21) / 121][Stage 19:===================================================>  (116 + 5) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.952341309 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partition Index = 213  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.653363696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:==============================>                       (68 + 52) / 120][Stage 20:====================================>                 (80 + 40) / 120][Stage 20:==============================================>      (105 + 15) / 120][Stage 20:===================================================>  (115 + 5) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:=============================>                        (67 + 54) / 121][Stage 21:=======================================>              (89 + 32) / 121][Stage 21:============================================>        (102 + 19) / 121][Stage 21:==============================================>      (106 + 15) / 121][Stage 21:=====================================================>(119 + 2) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.109455152 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partition Index = 144  OR  partitionIndex = 130 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471804167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (76 + 42) / 118][Stage 22:==========================================>           (93 + 25) / 118][Stage 22:==================================================>   (111 + 7) / 118][Stage 22:=====================================================>(116 + 2) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (76 + 43) / 119][Stage 23:======================================>               (85 + 34) / 119][Stage 23:============================================>        (101 + 18) / 119][Stage 23:=====================================================>(117 + 2) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.853139837 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionInde x = 97  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480237017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (70 + 45) / 115][Stage 24:====================================>                 (78 + 37) / 115][Stage 24:===========================================>          (93 + 22) / 115][Stage 24:==================================================>   (107 + 8) / 115]                                                                                [Stage 25:===================================>                  (77 + 39) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:===============================================>     (105 + 11) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.094824146 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  p artitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex  = 36  OR  partitionIndex = 37 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479658495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==============================>                       (66 + 49) / 115][Stage 26:==================================>                   (74 + 41) / 115][Stage 26:============================================>         (94 + 21) / 115][Stage 26:===============================================>     (102 + 13) / 115][Stage 26:===================================================>  (110 + 5) / 115][Stage 26:====================================================> (112 + 3) / 115]                                                                                [Stage 27:===================================>                  (76 + 40) / 116][Stage 27:========================================>             (88 + 28) / 116][Stage 27:===============================================>     (103 + 13) / 116][Stage 27:===============================================>     (105 + 11) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:====================================================> (113 + 3) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.914105236 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partition Index = 180  OR  partitionIndex = 181 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577932907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:============================>                         (63 + 57) / 120][Stage 28:==================================>                   (77 + 43) / 120][Stage 28:============================================>         (99 + 21) / 120][Stage 28:=====================================================>(118 + 2) / 120]                                                                                [Stage 29:============================>                         (63 + 58) / 121][Stage 29:===============================>                      (70 + 51) / 121][Stage 29:=======================================>              (88 + 33) / 121][Stage 29:============================================>        (102 + 19) / 121][Stage 29:===================================================>  (115 + 6) / 121][Stage 29:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.641207857 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  pa rtitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex =  31  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441653619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:>                                                       (0 + 0) / 115][Stage 30:======================================>               (81 + 34) / 115][Stage 30:=========================================>            (88 + 27) / 115][Stage 30:==============================================>      (100 + 15) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:======================================>               (83 + 33) / 116][Stage 31:========================================>             (88 + 28) / 116][Stage 31:=============================================>       (100 + 16) / 116][Stage 31:===============================================>     (103 + 13) / 116][Stage 31:==================================================>   (108 + 8) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.032321908 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partition Index = 162  OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409044183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (79 + 36) / 115][Stage 32:======================================>               (82 + 33) / 115][Stage 32:==============================================>       (98 + 17) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:=====================================================>(113 + 2) / 115]                                                                                [Stage 33:=====================================>                (81 + 35) / 116][Stage 33:=========================================>            (90 + 26) / 116][Stage 33:==============================================>       (99 + 17) / 116][Stage 33:===================================================>  (111 + 5) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.146602155 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  p artitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex  = 109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435450578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==================================>                   (73 + 40) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:===================================================>  (107 + 6) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:===================================>                  (75 + 39) / 114][Stage 35:=======================================>              (84 + 30) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:==============================================>       (98 + 16) / 114][Stage 35:=================================================>    (105 + 9) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.613642205 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  p artitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex  = 32  OR  partitionIndex = 33 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406313454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (82 + 33) / 115][Stage 36:=========================================>            (88 + 27) / 115][Stage 36:==============================================>      (101 + 14) / 115][Stage 36:====================================================> (111 + 4) / 115][Stage 36:====================================================> (112 + 3) / 115][Stage 36:=====================================================>(113 + 2) / 115]                                                                                [Stage 37:======================================>               (82 + 34) / 116][Stage 37:=======================================>              (85 + 31) / 116][Stage 37:============================================>         (96 + 20) / 116][Stage 37:===============================================>     (103 + 13) / 116][Stage 37:=================================================>    (107 + 9) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.22662659 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partition Index = 154  OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484685434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:============================>                         (59 + 54) / 113][Stage 38:===============================>                      (66 + 47) / 113][Stage 38:=========================================>            (86 + 27) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:===================================================>  (107 + 6) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:=============================>                        (62 + 52) / 114][Stage 39:===================================>                  (75 + 39) / 114][Stage 39:============================================>         (94 + 20) / 114][Stage 39:==================================================>   (107 + 7) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.001296054 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  pa rtitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex =  46  OR  partitionIndex = 32 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498352123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:============================>                         (63 + 57) / 120][Stage 40:================================>                     (72 + 48) / 120][Stage 40:============================================>         (98 + 22) / 120][Stage 40:===============================================>     (108 + 12) / 120][Stage 40:=====================================================>(119 + 1) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:==============================>                       (69 + 52) / 121][Stage 41:======================================>               (86 + 35) / 121][Stage 41:===============================================>     (108 + 13) / 121][Stage 41:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.232537922 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  p artitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex  = 53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485874678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:=====================================>                (81 + 37) / 118][Stage 42:=============================================>       (102 + 16) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:=====================================>                (82 + 37) / 119][Stage 43:============================================>        (101 + 18) / 119][Stage 43:=================================================>    (110 + 9) / 119][Stage 43:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.464615936 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partition Index = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468677897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:=================================>                    (70 + 43) / 113][Stage 44:=======================================>              (82 + 31) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:=============================>                        (62 + 52) / 114][Stage 45:===================================>                  (75 + 39) / 114][Stage 45:============================================>         (93 + 21) / 114][Stage 45:==============================================>       (99 + 15) / 114][Stage 45:==================================================>   (107 + 7) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.305154704 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partition Index = 148  OR  partitionIndex = 134 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44428177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (62 + 51) / 113][Stage 46:================================>                     (69 + 44) / 113][Stage 46:===========================================>          (91 + 22) / 113][Stage 46:===================================================>  (107 + 6) / 113]                                                                                [Stage 47:=============================>                        (62 + 52) / 114][Stage 47:================================>                     (68 + 46) / 114][Stage 47:=========================================>            (88 + 26) / 114][Stage 47:==============================================>      (101 + 13) / 114][Stage 47:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.972563454 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex  = 41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417530534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:====================================>                 (77 + 36) / 113][Stage 48:=========================================>            (87 + 26) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:===============================================>      (99 + 14) / 113][Stage 48:==================================================>   (105 + 8) / 113][Stage 48:===================================================>  (108 + 5) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:======================================>               (81 + 33) / 114][Stage 49:===========================================>          (92 + 22) / 114][Stage 49:==============================================>      (100 + 14) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:====================================================> (111 + 3) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.84133628 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIn dex = 8  OR  partitionIndex = 9 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460700028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:===================================>                  (77 + 41) / 118][Stage 50:=======================================>              (86 + 32) / 118][Stage 50:===============================================>     (106 + 12) / 118][Stage 50:===================================================>  (112 + 6) / 118]                                                                                [Stage 51:==================================>                   (76 + 43) / 119][Stage 51:=====================================>                (83 + 36) / 119][Stage 51:=============================================>       (102 + 17) / 119][Stage 51:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.643357738 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partition Index = 196  OR  partitionIndex = 182 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45826472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (65 + 50) / 115][Stage 52:======================================>               (81 + 34) / 115][Stage 52:==============================================>       (99 + 16) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:====================================>                 (79 + 37) / 116][Stage 53:=========================================>            (90 + 26) / 116][Stage 53:===============================================>     (104 + 12) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.09885851 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partition Index = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463259918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:===============================>                      (70 + 50) / 120][Stage 54:========================================>             (91 + 29) / 120][Stage 54:================================================>    (110 + 10) / 120][Stage 54:====================================================> (117 + 3) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:=============================>                        (66 + 55) / 121][Stage 55:====================================>                 (82 + 39) / 121][Stage 55:========================================>             (91 + 30) / 121][Stage 55:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.050862378 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  p artitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionInde x = 92  OR  partitionIndex = 93 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432465648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (71 + 44) / 115][Stage 56:==========================================>           (90 + 25) / 115][Stage 56:==============================================>      (101 + 14) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:=====================================>                (80 + 36) / 116][Stage 57:=========================================>            (89 + 27) / 116][Stage 57:==================================================>   (108 + 8) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.902257148 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partition Index = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409042165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=================================>                    (73 + 45) / 118][Stage 58:====================================>                 (80 + 38) / 118][Stage 58:==========================================>           (93 + 25) / 118][Stage 58:==============================================>      (104 + 14) / 118][Stage 58:===================================================>  (113 + 5) / 118]                                                                                [Stage 59:==================================>                   (75 + 44) / 119][Stage 59:======================================>               (85 + 34) / 119][Stage 59:===========================================>          (95 + 24) / 119][Stage 59:====================================================> (116 + 3) / 119][Stage 59:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.723755669 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  p artitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex  = 90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458708962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (82 + 31) / 113][Stage 60:==========================================>           (89 + 24) / 113][Stage 60:===============================================>     (102 + 11) / 113][Stage 60:===================================================>  (107 + 6) / 113]                                                                                [Stage 61:======================================>               (81 + 33) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:==============================================>      (100 + 14) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.194148254 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR   partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionInd ex = 112  OR  partitionIndex = 8 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436864724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:==============================>                       (64 + 49) / 113][Stage 62:=======================================>              (82 + 31) / 113][Stage 62:===============================================>     (102 + 11) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:====================================>                 (76 + 38) / 114][Stage 63:==========================================>           (89 + 25) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.876897078 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR   partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex  = 67  OR  partitionIndex = 81 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405837313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:=================================>                    (74 + 44) / 118][Stage 64:========================================>             (88 + 30) / 118][Stage 64:============================================>        (100 + 18) / 118][Stage 64:===================================================>  (113 + 5) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:==================================>                   (76 + 43) / 119][Stage 65:=====================================>                (82 + 37) / 119][Stage 65:=========================================>            (91 + 28) / 119][Stage 65:===============================================>     (106 + 13) / 119][Stage 65:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.985846389 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  p artitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex  = 71  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448818026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:=============================>                        (65 + 56) / 121][Stage 66:===================================>                  (80 + 41) / 121][Stage 66:==============================================>      (106 + 15) / 121][Stage 66:=====================================================>(119 + 2) / 121]                                                                                [Stage 67:===========================>                          (63 + 59) / 122][Stage 67:==================================>                   (79 + 43) / 122][Stage 67:==========================================>           (95 + 27) / 122][Stage 67:===================================================>  (117 + 5) / 122][Stage 67:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.644597108 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  p artitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex  = 98  OR  partitionIndex = 99 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443656529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:===============================>                      (70 + 51) / 121][Stage 68:=========================================>            (92 + 29) / 121][Stage 68:===================================================>  (116 + 5) / 121][Stage 68:=====================================================>(119 + 2) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:=============================>                        (66 + 56) / 122][Stage 69:=====================================>                (85 + 37) / 122][Stage 69:===========================================>         (101 + 21) / 122][Stage 69:==================================================>   (114 + 8) / 122][Stage 69:=====================================================>(120 + 2) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.906885348 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  p artitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex  = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414579125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:====================================>                 (77 + 36) / 113][Stage 70:=========================================>            (86 + 27) / 113][Stage 70:==============================================>       (98 + 15) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:=====================================>                (79 + 35) / 114][Stage 71:===========================================>          (92 + 22) / 114][Stage 71:==============================================>      (100 + 14) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.201485523 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  p artitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionInde x = 100  OR  partitionIndex = 101 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425879705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:================================>                     (67 + 46) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:============================================>         (94 + 19) / 113][Stage 72:=====================================================>(111 + 2) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:===============================>                      (66 + 48) / 114][Stage 73:=====================================>                (79 + 35) / 114][Stage 73:============================================>         (94 + 20) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.790716174 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partition Index = 147  OR  partitionIndex = 148 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441720041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:=============================>                        (67 + 54) / 121][Stage 74:=======================================>              (89 + 32) / 121][Stage 74:==============================================>      (107 + 14) / 121]                                                                                [Stage 75:===========================>                          (61 + 61) / 122][Stage 75:==============================>                       (70 + 52) / 122][Stage 75:=====================================>                (84 + 38) / 122][Stage 75:==============================================>      (106 + 16) / 122][Stage 75:====================================================> (118 + 4) / 122][Stage 75:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.315688195 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  p artitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex  = 99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392111665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===================================>                  (74 + 39) / 113][Stage 76:=========================================>            (86 + 27) / 113][Stage 76:=============================================>        (96 + 17) / 113][Stage 76:====================================================> (109 + 4) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:==========================================>           (89 + 25) / 114][Stage 77:=============================================>        (95 + 19) / 114][Stage 77:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.925732798 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partition Index = 140  OR  partitionIndex = 126 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396899881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:=================================>                    (73 + 45) / 118][Stage 78:=======================================>              (86 + 32) / 118][Stage 78:=============================================>       (101 + 17) / 118][Stage 78:====================================================> (114 + 4) / 118][Stage 78:=====================================================>(117 + 1) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:==================================>                   (77 + 42) / 119][Stage 79:=======================================>              (87 + 32) / 119][Stage 79:============================================>        (101 + 18) / 119][Stage 79:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.066632544 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partition Index = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430740903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (83 + 32) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:==============================================>       (98 + 17) / 115][Stage 80:===================================================>  (109 + 6) / 115]                                                                                [Stage 81:=====================================>                (80 + 36) / 116][Stage 81:=========================================>            (89 + 27) / 116][Stage 81:===============================================>     (104 + 12) / 116][Stage 81:====================================================> (112 + 4) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.877765766 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex  = 51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399796372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (72 + 43) / 115][Stage 82:========================================>             (87 + 28) / 115][Stage 82:==============================================>      (100 + 15) / 115][Stage 82:===================================================>  (110 + 5) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:=================================>                    (71 + 45) / 116][Stage 83:======================================>               (82 + 34) / 116][Stage 83:========================================>             (87 + 29) / 116][Stage 83:==========================================>           (92 + 24) / 116][Stage 83:=================================================>    (107 + 9) / 116][Stage 83:===================================================>  (111 + 5) / 116][Stage 83:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 9.080272463 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partition Index = 120  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389521356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  p artitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex =  20  OR  partitionIndex = 6 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383998456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (71 + 42) / 113][Stage 84:======================================>               (80 + 33) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:===============================================>     (101 + 12) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:====================================>                 (77 + 37) / 114][Stage 85:========================================>             (86 + 28) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:===============================================>     (103 + 11) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.547255556 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partition Index = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406090835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (67 + 48) / 115][Stage 86:==================================>                   (74 + 41) / 115][Stage 86:==========================================>           (91 + 24) / 115][Stage 86:===============================================>     (102 + 13) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:==================================>                   (74 + 42) / 116][Stage 87:=========================================>            (89 + 27) / 116][Stage 87:=============================================>       (100 + 16) / 116][Stage 87:====================================================> (112 + 4) / 116][Stage 87:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.174968414 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partition Index = 163  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383887775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (74 + 39) / 113][Stage 88:==========================================>           (88 + 25) / 113][Stage 88:============================================>         (94 + 19) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:=====================================================>(111 + 2) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:========================================>             (85 + 29) / 114][Stage 89:============================================>         (94 + 20) / 114][Stage 89:==============================================>      (101 + 13) / 114][Stage 89:====================================================> (111 + 3) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.426765457 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  p artitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIn dex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351217419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=======================================>              (85 + 30) / 115][Stage 90:=============================================>        (96 + 19) / 115][Stage 90:===============================================>     (102 + 13) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:=======================================>              (84 + 32) / 116][Stage 91:========================================>             (88 + 28) / 116][Stage 91:===============================================>     (104 + 12) / 116][Stage 91:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.684571319 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partition Index = 132  OR  partitionIndex = 133 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37686289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (81 + 32) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:===============================================>     (101 + 12) / 113][Stage 92:====================================================> (110 + 3) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:====================================>                 (77 + 37) / 114][Stage 93:=========================================>            (87 + 27) / 114][Stage 93:=============================================>        (96 + 18) / 114][Stage 93:================================================>    (104 + 10) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.28221824 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partition Index = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39353457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (72 + 43) / 115][Stage 94:=======================================>              (85 + 30) / 115][Stage 94:===============================================>     (102 + 13) / 115][Stage 94:=================================================>    (106 + 9) / 115][Stage 94:=====================================================>(113 + 2) / 115]                                                                                [Stage 95:==============================>                       (65 + 51) / 116][Stage 95:======================================>               (83 + 33) / 116][Stage 95:=============================================>        (98 + 18) / 116][Stage 95:===================================================>  (110 + 6) / 116][Stage 95:=====================================================>(114 + 2) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.235099251 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partition Index = 123  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415918391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (61 + 59) / 120][Stage 96:================================>                     (72 + 48) / 120][Stage 96:========================================>             (91 + 29) / 120][Stage 96:====================================================> (116 + 4) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:=============================>                        (66 + 55) / 121][Stage 97:=====================================>                (84 + 37) / 121][Stage 97:=============================================>       (103 + 18) / 121][Stage 97:=================================================>    (112 + 9) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.344563148 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partition Index = 135  OR  partitionIndex = 149 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372336814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===================================>                  (75 + 38) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:=============================================>        (95 + 18) / 113][Stage 98:================================================>    (103 + 10) / 113]                                                                                [Stage 99:====================================>                 (77 + 37) / 114][Stage 99:==========================================>           (89 + 25) / 114][Stage 99:==============================================>      (101 + 13) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.125020418 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  p artitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex  = 84  OR  partitionIndex = 70 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375254325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:>                                                      (0 + 0) / 118][Stage 100:================================>                    (72 + 46) / 118][Stage 100:=================================>                   (75 + 43) / 118][Stage 100:=======================================>             (88 + 30) / 118][Stage 100:=================================================>   (111 + 7) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:====================================>                (83 + 36) / 119][Stage 101:===========================================>        (100 + 19) / 119][Stage 101:==================================================>  (113 + 6) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.668006165 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partition Index = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404428889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:=================================>                   (71 + 42) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:==============================================>     (102 + 11) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:==============================>                      (66 + 48) / 114][Stage 103:=========================================>           (89 + 25) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.524695771 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  p artitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex  = 70  OR  partitionIndex = 71 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39073226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (74 + 39) / 113][Stage 104:========================================>            (86 + 27) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:==================================================>  (107 + 6) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:=======================================>             (84 + 30) / 114][Stage 105:=========================================>           (90 + 24) / 114][Stage 105:==============================================>     (102 + 12) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.242783802 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partition Index = 174  OR  partitionIndex = 160 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424967523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:================================>                    (70 + 43) / 113][Stage 106:=======================================>             (84 + 29) / 113][Stage 106:=================================================>   (105 + 8) / 113]                                                                                [Stage 107:===========================>                         (60 + 54) / 114][Stage 107:=================================>                   (72 + 42) / 114][Stage 107:========================================>            (87 + 27) / 114][Stage 107:==============================================>     (103 + 11) / 114][Stage 107:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.56859309 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  p artitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex  = 56  OR  partitionIndex = 12 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352441023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=====================================>               (82 + 33) / 115][Stage 108:=========================================>           (89 + 26) / 115][Stage 108:===============================================>    (104 + 11) / 115][Stage 108:===================================================> (112 + 3) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:=======================================>             (86 + 30) / 116][Stage 109:==========================================>          (94 + 22) / 116][Stage 109:==============================================>     (103 + 13) / 116][Stage 109:================================================>    (107 + 9) / 116][Stage 109:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 7.037514385 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  p artitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex  = 78  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384290757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (79 + 34) / 113][Stage 110:==========================================>          (90 + 23) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=====================================>               (80 + 34) / 114][Stage 111:=========================================>           (89 + 25) / 114][Stage 111:=============================================>      (100 + 14) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.42870023 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  p artitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionInde x = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370340588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:=================================>                   (74 + 44) / 118][Stage 112:=====================================>               (84 + 34) / 118][Stage 112:==============================================>     (105 + 13) / 118][Stage 112:====================================================>(116 + 2) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:==================================>                  (78 + 41) / 119][Stage 113:========================================>            (92 + 27) / 119][Stage 113:============================================>       (102 + 17) / 119][Stage 113:==================================================>  (114 + 5) / 119][Stage 113:===================================================> (116 + 3) / 119][Stage 113:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.373398697 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR   partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partition Index = 200  OR  partitionIndex = 186 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391051181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (60 + 53) / 113][Stage 114:================================>                    (69 + 44) / 113][Stage 114:============================================>        (95 + 18) / 113][Stage 114:===================================================> (110 + 3) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:==============================>                      (65 + 49) / 114][Stage 115:===================================>                 (77 + 37) / 114][Stage 115:==============================================>     (102 + 12) / 114][Stage 115:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.605432765 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex  = 75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397598626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (64 + 56) / 120][Stage 116:=================================>                   (76 + 44) / 120][Stage 116:=========================================>           (95 + 25) / 120][Stage 116:=================================================>   (112 + 8) / 120][Stage 116:====================================================>(119 + 1) / 120]                                                                                [Stage 117:===========================>                         (63 + 58) / 121][Stage 117:==============================>                      (70 + 51) / 121][Stage 117:====================================>                (83 + 38) / 121][Stage 117:===========================================>        (101 + 20) / 121][Stage 117:==================================================>  (116 + 5) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.975588013 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partition Index = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386530186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===============================>                     (68 + 47) / 115][Stage 118:=======================================>             (85 + 30) / 115][Stage 118:==============================================>     (102 + 13) / 115][Stage 118:===================================================> (111 + 4) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:==================================>                  (76 + 40) / 116][Stage 119:===========================================>         (95 + 21) / 116][Stage 119:===============================================>    (106 + 10) / 116][Stage 119:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.001713661 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partition Index = 165  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398279748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:============================>                        (64 + 56) / 120][Stage 120:====================================>                (83 + 37) / 120][Stage 120:=============================================>      (105 + 15) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:===================================>                 (81 + 40) / 121][Stage 121:==========================================>          (98 + 23) / 121][Stage 121:===================================================> (117 + 4) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.432548627 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partition Index = 170  OR  partitionIndex = 156 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410883073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:==============================>                      (70 + 51) / 121][Stage 122:=====================================>               (85 + 36) / 121][Stage 122:==============================================>     (108 + 13) / 121][Stage 122:====================================================>(119 + 2) / 121]                                                                                [Stage 123:===========================>                         (63 + 59) / 122][Stage 123:================================>                    (75 + 47) / 122][Stage 123:=========================================>           (96 + 26) / 122][Stage 123:==============================================>     (110 + 12) / 122][Stage 123:====================================================>(120 + 2) / 122][Stage 123:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.068463139 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partition Index = 185  OR  partitionIndex = 199 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337181329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=======================================>             (85 + 30) / 115][Stage 124:============================================>        (96 + 19) / 115][Stage 124:==================================================>  (110 + 5) / 115][Stage 124:===================================================> (112 + 3) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:======================================>              (84 + 32) / 116][Stage 125:==========================================>          (92 + 24) / 116][Stage 125:============================================>       (100 + 16) / 116][Stage 125:==================================================>  (111 + 5) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.065331371 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partition Index = 218  OR  partitionIndex = 219 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351144079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=======================================>             (84 + 29) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:===============================================>    (103 + 10) / 113][Stage 126:====================================================>(111 + 2) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:=======================================>             (85 + 29) / 114][Stage 127:==========================================>          (91 + 23) / 114][Stage 127:=================================================>   (107 + 7) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.127170414 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  par titionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412868761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:===========================>                         (62 + 58) / 120][Stage 128:==================================>                  (78 + 42) / 120][Stage 128:===========================================>         (98 + 22) / 120][Stage 128:==================================================>  (114 + 6) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:===============================>                     (73 + 48) / 121][Stage 129:========================================>            (93 + 28) / 121][Stage 129:==============================================>     (109 + 12) / 121][Stage 129:===================================================> (118 + 3) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.183114081 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partition Index = 234  OR  partitionIndex = 220 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412396619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:===========================>                         (63 + 57) / 120][Stage 130:================================>                    (74 + 46) / 120][Stage 130:===========================================>        (101 + 19) / 120]                                                                                [Stage 131:===========================>                         (62 + 59) / 121][Stage 131:================================>                    (75 + 46) / 121][Stage 131:==========================================>          (97 + 24) / 121][Stage 131:==================================================>  (115 + 6) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.812885834 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partition Index = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352298063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (80 + 33) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:==============================================>      (99 + 14) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:======================================>              (83 + 31) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.98603099 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  p artitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionInde x = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386729927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (60 + 53) / 113][Stage 134:================================>                    (70 + 43) / 113][Stage 134:=======================================>             (84 + 29) / 113][Stage 134:=================================================>   (105 + 8) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:==============================>                      (65 + 49) / 114][Stage 135:======================================>              (83 + 31) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(112 + 2) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.834150091 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partition Index = 137  OR  partitionIndex = 138 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405090153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:==============================>                      (69 + 52) / 121][Stage 136:====================================>                (84 + 37) / 121][Stage 136:============================================>       (104 + 17) / 121][Stage 136:==================================================>  (116 + 5) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:==========================>                          (62 + 60) / 122][Stage 137:================================>                    (74 + 48) / 122][Stage 137:===========================================>         (99 + 23) / 122][Stage 137:=================================================>   (114 + 8) / 122][Stage 137:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.732471075 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  p artitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex  = 57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403025326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 61) / 121][Stage 138:==============================>                      (70 + 51) / 121][Stage 138:==================================>                  (79 + 42) / 121][Stage 138:=============================================>      (105 + 16) / 121][Stage 138:====================================================>(119 + 2) / 121]                                                                                [Stage 139:==========================>                          (62 + 60) / 122][Stage 139:===============================>                     (73 + 49) / 122][Stage 139:==========================================>          (98 + 24) / 122][Stage 139:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.572474914 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex =  5  OR  partitionIndex = 19 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369789647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==============================>                      (67 + 48) / 115][Stage 140:====================================>                (80 + 35) / 115][Stage 140:=============================================>      (100 + 15) / 115][Stage 140:====================================================>(113 + 2) / 115]                                                                                [Stage 141:====================================>                (79 + 37) / 116][Stage 141:=========================================>           (91 + 25) / 116][Stage 141:===============================================>    (105 + 11) / 116][Stage 141:==================================================>  (110 + 6) / 116][Stage 141:==================================================>  (111 + 5) / 116][Stage 141:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.20617377 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partition Index = 190  OR  partitionIndex = 191 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377283013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==============================>                      (66 + 49) / 115][Stage 142:===================================>                 (76 + 39) / 115][Stage 142:===========================================>         (95 + 20) / 115][Stage 142:==================================================>  (110 + 5) / 115]                                                                                [Stage 143:================================>                    (71 + 45) / 116][Stage 143:======================================>              (85 + 31) / 116][Stage 143:===============================================>    (106 + 10) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.697373696 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partition Index = 153  OR  partitionIndex = 167 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436010684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:=================================>                   (75 + 43) / 118][Stage 144:=======================================>             (89 + 29) / 118][Stage 144:=============================================>      (104 + 14) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:=================================>                   (75 + 44) / 119][Stage 145:=====================================>               (85 + 34) / 119][Stage 145:===========================================>         (97 + 22) / 119][Stage 145:===============================================>    (109 + 10) / 119][Stage 145:===================================================> (116 + 3) / 119][Stage 145:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.397641977 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  p artitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex  = 55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355148375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==================================>                  (73 + 40) / 113][Stage 146:=========================================>           (89 + 24) / 113][Stage 146:============================================>        (94 + 19) / 113][Stage 146:=================================================>   (105 + 8) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===================================>                 (76 + 38) / 114][Stage 147:=======================================>             (86 + 28) / 114][Stage 147:==========================================>          (92 + 22) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:==================================================>  (108 + 6) / 114][Stage 147:==================================================>  (109 + 5) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.875207007 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  p artitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex  = 54  OR  partitionIndex = 40 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377732315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===============================>                     (68 + 47) / 115][Stage 148:======================================>              (83 + 32) / 115][Stage 148:==========================================>          (92 + 23) / 115][Stage 148:=================================================>   (108 + 7) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:================================>                    (72 + 44) / 116][Stage 149:====================================>                (79 + 37) / 116][Stage 149:==========================================>          (94 + 22) / 116][Stage 149:==============================================>     (103 + 13) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:===================================================> (113 + 3) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.7422428 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partition Index = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368801683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (70 + 43) / 113][Stage 150:=====================================>               (81 + 32) / 113][Stage 150:========================================>            (87 + 26) / 113][Stage 150:=============================================>       (97 + 16) / 113][Stage 150:===============================================>    (103 + 10) / 113][Stage 150:===================================================> (109 + 4) / 113]                                                                                [Stage 151:=======================================>             (84 + 30) / 114][Stage 151:==========================================>          (92 + 22) / 114][Stage 151:==============================================>     (103 + 11) / 114][Stage 151:==================================================>  (109 + 5) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.361144281 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partition Index = 226  OR  partitionIndex = 212 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39289557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (61 + 59) / 120][Stage 152:================================>                    (73 + 47) / 120][Stage 152:======================================>              (88 + 32) / 120][Stage 152:=============================================>      (106 + 14) / 120]                                                                                [Stage 153:===========================>                         (62 + 59) / 121][Stage 153:===============================>                     (73 + 48) / 121][Stage 153:=====================================>               (85 + 36) / 121][Stage 153:==========================================>         (100 + 21) / 121][Stage 153:====================================================>(119 + 2) / 121][Stage 153:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.805984357 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partition Index = 156  OR  partitionIndex = 157 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331387109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:======================================>              (83 + 32) / 115][Stage 154:========================================>            (88 + 27) / 115][Stage 154:===============================================>    (105 + 10) / 115][Stage 154:===================================================> (111 + 4) / 115][Stage 154:===================================================> (112 + 3) / 115]                                                                                [Stage 155:=======================================>             (87 + 29) / 116][Stage 155:===========================================>         (95 + 21) / 116][Stage 155:==============================================>     (103 + 13) / 116][Stage 155:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.145205687 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionInde x = 66  OR  partitionIndex = 67 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353084067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (79 + 34) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:===================================================> (109 + 4) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:=======================================>             (84 + 30) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.169656635 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex  = 103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370114748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===============================>                     (68 + 47) / 115][Stage 158:====================================>                (79 + 36) / 115][Stage 158:============================================>        (96 + 19) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:===================================>                 (77 + 39) / 116][Stage 159:==========================================>          (92 + 24) / 116][Stage 159:============================================>        (98 + 18) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.244734825 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  par titionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21   OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337718252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (84 + 31) / 115][Stage 160:============================================>        (96 + 19) / 115][Stage 160:==================================================>  (109 + 6) / 115][Stage 160:====================================================>(114 + 1) / 115]                                                                                [Stage 161:=====================================>               (82 + 34) / 116][Stage 161:========================================>            (88 + 28) / 116][Stage 161:===========================================>         (95 + 21) / 116][Stage 161:============================================>       (100 + 16) / 116][Stage 161:==============================================>     (104 + 12) / 116][Stage 161:==================================================>  (111 + 5) / 116][Stage 161:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 7.313213328 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  p artitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex  = 76  OR  partitionIndex = 62 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382535693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (60 + 53) / 113][Stage 162:================================>                    (69 + 44) / 113][Stage 162:=======================================>             (84 + 29) / 113][Stage 162:==================================================>  (108 + 5) / 113]                                                                                [Stage 163:============================>                        (61 + 53) / 114][Stage 163:=================================>                   (73 + 41) / 114][Stage 163:============================================>        (95 + 19) / 114][Stage 163:==============================================>     (101 + 13) / 114][Stage 163:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.58547501 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  p artitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex  = 90  OR  partitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345948741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (79 + 36) / 115][Stage 164:=======================================>             (85 + 30) / 115][Stage 164:============================================>        (97 + 18) / 115][Stage 164:=================================================>   (107 + 8) / 115][Stage 164:====================================================>(113 + 2) / 115]                                                                                [Stage 165:=====================================>               (81 + 35) / 116][Stage 165:========================================>            (88 + 28) / 116][Stage 165:===========================================>         (95 + 21) / 116][Stage 165:================================================>    (107 + 9) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.859077022 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex  = 62  OR  partitionIndex = 63 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349608875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (78 + 35) / 113][Stage 166:=====================================>               (81 + 32) / 113][Stage 166:============================================>        (95 + 18) / 113][Stage 166:==============================================>     (101 + 12) / 113][Stage 166:===================================================> (110 + 3) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:====================================>                (78 + 36) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:=============================================>       (98 + 16) / 114][Stage 167:=================================================>   (106 + 8) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.048603583 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  p artitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex  = 95  OR  partitionIndex = 109 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367468799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (78 + 35) / 113][Stage 168:=======================================>             (85 + 28) / 113][Stage 168:============================================>        (95 + 18) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:======================================>              (82 + 32) / 114][Stage 169:=============================================>       (97 + 17) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.169671879 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35359669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (73 + 45) / 118][Stage 170:===================================>                 (78 + 40) / 118][Stage 170:======================================>              (85 + 33) / 118][Stage 170:===============================================>    (108 + 10) / 118][Stage 170:===================================================> (114 + 4) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:===================================>                 (80 + 39) / 119][Stage 171:========================================>            (91 + 28) / 119][Stage 171:============================================>        (99 + 20) / 119][Stage 171:=================================================>   (112 + 7) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.645823079 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partition Index = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40105068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 60) / 121][Stage 172:==============================>                      (70 + 51) / 121][Stage 172:=======================================>             (90 + 31) / 121][Stage 172:===============================================>    (110 + 11) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:==============================>                      (70 + 52) / 122][Stage 173:=====================================>               (86 + 36) / 122][Stage 173:============================================>       (105 + 17) / 122][Stage 173:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.168827967 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partition Index = 221  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361347477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:================================>                    (73 + 45) / 118][Stage 174:=======================================>             (88 + 30) / 118][Stage 174:=============================================>      (104 + 14) / 118][Stage 174:===================================================> (115 + 3) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:=================================>                   (76 + 43) / 119][Stage 175:======================================>              (87 + 32) / 119][Stage 175:=============================================>      (105 + 14) / 119][Stage 175:====================================================>(117 + 2) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.556384489 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  p artitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex =  11  OR  partitionIndex = 25 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383178476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:============================>                        (60 + 53) / 113][Stage 176:===================================>                 (75 + 38) / 113][Stage 176:=============================================>       (98 + 15) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:============================>                        (61 + 53) / 114][Stage 177:===============================>                     (67 + 47) / 114][Stage 177:======================================>              (82 + 32) / 114][Stage 177:=======================================>             (86 + 28) / 114][Stage 177:===================================================> (110 + 4) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.986732585 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  p artitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex  = 68  OR  partitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404168691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:=============================>                       (62 + 51) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:==================================================>  (108 + 5) / 113][Stage 178:===================================================> (110 + 3) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:================================>                    (69 + 45) / 114][Stage 179:=========================================>           (89 + 25) / 114][Stage 179:==============================================>     (103 + 11) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.651709573 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partition Index = 191  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43170397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (60 + 53) / 113][Stage 180:==================================>                  (74 + 39) / 113][Stage 180:============================================>        (94 + 19) / 113][Stage 180:==================================================>  (108 + 5) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===========================>                         (59 + 55) / 114][Stage 181:===============================>                     (68 + 46) / 114][Stage 181:=======================================>             (85 + 29) / 114][Stage 181:================================================>    (105 + 9) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.496976838 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  pa rtitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex =  35  OR  partitionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406044918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:==============================>                      (69 + 51) / 120][Stage 182:=======================================>             (90 + 30) / 120][Stage 182:==================================================>  (115 + 5) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:=============================>                       (68 + 53) / 121][Stage 183:========================================>            (92 + 29) / 121][Stage 183:===============================================>    (111 + 10) / 121][Stage 183:====================================================>(119 + 2) / 121][Stage 183:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.830800197 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex =  45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391060324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:==============================>                      (70 + 50) / 120][Stage 184:=====================================>               (86 + 34) / 120][Stage 184:===========================================>         (98 + 22) / 120][Stage 184:==================================================>  (115 + 5) / 120]                                                                                [Stage 185:===========================>                         (63 + 58) / 121][Stage 185:================================>                    (75 + 46) / 121][Stage 185:========================================>            (92 + 29) / 121][Stage 185:===============================================>    (111 + 10) / 121][Stage 185:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.612409373 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex  = 48  OR  partitionIndex = 4 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382570474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:==============================>                      (70 + 50) / 120][Stage 186:=======================================>             (89 + 31) / 120][Stage 186:===========================================>        (101 + 19) / 120][Stage 186:==================================================>  (114 + 6) / 120]                                                                                [Stage 187:===========================>                         (63 + 58) / 121][Stage 187:===============================>                     (73 + 48) / 121][Stage 187:======================================>              (88 + 33) / 121][Stage 187:=================================================>   (113 + 8) / 121][Stage 187:====================================================>(119 + 2) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.835088674 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partition Index = 230  OR  partitionIndex = 216 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365679234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:==================================>                  (76 + 42) / 118][Stage 188:========================================>            (90 + 28) / 118][Stage 188:================================================>    (109 + 9) / 118][Stage 188:===================================================> (115 + 3) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:====================================>                (81 + 38) / 119][Stage 189:======================================>              (87 + 32) / 119][Stage 189:============================================>        (99 + 20) / 119][Stage 189:===================================================> (115 + 4) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.488147948 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partition Index = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3898582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:============================>                        (65 + 55) / 120][Stage 190:=================================>                   (75 + 45) / 120][Stage 190:===========================================>        (100 + 20) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:===============================>                     (73 + 48) / 121][Stage 191:========================================>            (92 + 29) / 121][Stage 191:=================================================>   (114 + 7) / 121][Stage 191:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.292848399 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partition Index = 179  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541131044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:============================>                        (65 + 55) / 120][Stage 192:=====================================>               (85 + 35) / 120][Stage 192:===========================================>         (99 + 21) / 120][Stage 192:===================================================> (117 + 3) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:============================>                        (66 + 55) / 121][Stage 193:===================================>                 (82 + 39) / 121][Stage 193:===========================================>        (101 + 20) / 121][Stage 193:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.464238624 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partition Index = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361283278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (74 + 39) / 113][Stage 194:=========================================>           (88 + 25) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:===================================================> (109 + 4) / 113]                                                                                [Stage 195:=========================================>           (89 + 25) / 114][Stage 195:============================================>        (95 + 19) / 114][Stage 195:==================================================>  (109 + 5) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.101939942 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partition Index = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413013444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:===========================>                         (62 + 59) / 121][Stage 196:================================>                    (75 + 46) / 121][Stage 196:==========================================>          (96 + 25) / 121][Stage 196:=================================================>   (113 + 8) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (67 + 55) / 122][Stage 197:======================================>              (88 + 34) / 122][Stage 197:==============================================>     (109 + 13) / 122][Stage 197:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.367443849 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partition Index = 133  OR  partitionIndex = 147 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378823141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:=============================>                       (62 + 51) / 113][Stage 198:====================================>                (77 + 36) / 113][Stage 198:==============================================>     (102 + 11) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:===============================>                     (68 + 46) / 114][Stage 199:=========================================>           (90 + 24) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.840904258 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m36.951s
user	12m23.888s
sys	1m33.980s
