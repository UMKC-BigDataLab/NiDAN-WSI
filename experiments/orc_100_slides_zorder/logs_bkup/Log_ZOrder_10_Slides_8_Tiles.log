Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 00:42:05 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:42:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:42:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:42:21 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 00:42:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:42:34 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522004223-0396).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.348415435 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (25 + 90) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.717824666 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.752207273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (40 + 78) / 118][Stage 2:===================>                                   (41 + 77) / 118][Stage 2:=================================>                     (71 + 47) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:====================================>                  (78 + 40) / 118][Stage 2:========================================>              (87 + 31) / 118][Stage 2:==========================================>            (92 + 26) / 118][Stage 2:===============================================>      (103 + 15) / 118][Stage 2:====================================================>  (113 + 5) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:===================================>                   (77 + 42) / 119][Stage 3:=====================================>                 (81 + 38) / 119][Stage 3:========================================>              (87 + 32) / 119][Stage 3:==========================================>            (92 + 27) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:=====================================================> (115 + 4) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.745761393 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.676405205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (58 + 55) / 113][Stage 4:==============================>                        (62 + 51) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:===============================>                       (66 + 48) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.285971746 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513820793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=====================================>                 (79 + 36) / 115][Stage 6:=======================================>               (83 + 32) / 115][Stage 6:=============================================>         (95 + 20) / 115][Stage 6:=================================================>    (105 + 10) / 115][Stage 6:===================================================>   (108 + 7) / 115][Stage 6:=====================================================> (112 + 3) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:======================================>                (81 + 35) / 116][Stage 7:========================================>              (85 + 31) / 116][Stage 7:=============================================>         (96 + 20) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:================================================>     (104 + 12) / 116][Stage 7:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.821702433 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496099888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:=======================================>               (83 + 32) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:==============================================>       (100 + 15) / 115][Stage 8:==================================================>    (106 + 9) / 115][Stage 8:====================================================>  (110 + 5) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:==========================================>            (90 + 26) / 116][Stage 9:============================================>          (94 + 22) / 116][Stage 9:==============================================>       (100 + 16) / 116][Stage 9:=================================================>    (106 + 10) / 116]                                                                                Time elapsed: 3.617107302 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522214686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (71 + 47) / 118][Stage 10:================================>                     (72 + 46) / 118][Stage 10:====================================>                 (79 + 39) / 118][Stage 10:=====================================>                (82 + 36) / 118][Stage 10:======================================>               (84 + 34) / 118][Stage 10:========================================>             (89 + 29) / 118][Stage 10:=============================================>        (99 + 19) / 118][Stage 10:==================================================>   (111 + 7) / 118]                                                                                [Stage 11:================================>                     (72 + 47) / 119][Stage 11:==================================>                   (76 + 43) / 119][Stage 11:=====================================>                (83 + 36) / 119][Stage 11:=======================================>              (87 + 32) / 119][Stage 11:========================================>             (89 + 30) / 119][Stage 11:============================================>         (98 + 21) / 119][Stage 11:=================================================>    (110 + 9) / 119][Stage 11:===================================================>  (114 + 5) / 119][Stage 11:=====================================================>(117 + 2) / 119][Stage 11:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.312766604 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.575471262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (74 + 44) / 118][Stage 12:=====================================>                (83 + 35) / 118][Stage 12:========================================>             (88 + 30) / 118][Stage 12:=============================================>        (99 + 19) / 118][Stage 12:==================================================>   (111 + 7) / 118]                                                                                [Stage 13:================================>                     (72 + 47) / 119][Stage 13:=================================>                    (74 + 45) / 119][Stage 13:======================================>               (85 + 34) / 119][Stage 13:========================================>             (90 + 29) / 119][Stage 13:============================================>         (99 + 20) / 119][Stage 13:==================================================>   (112 + 7) / 119][Stage 13:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.17440456 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569698134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:==============================>                       (67 + 53) / 120][Stage 14:====================================>                 (82 + 38) / 120][Stage 14:============================================>        (100 + 20) / 120][Stage 14:==================================================>   (112 + 8) / 120][Stage 14:====================================================> (117 + 3) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:===============================>                      (71 + 50) / 121][Stage 15:=========================================>            (92 + 29) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:===================================================>  (115 + 6) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.284023047 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546722081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:==============================>                       (68 + 52) / 120][Stage 16:====================================>                 (82 + 38) / 120][Stage 16:============================================>         (98 + 22) / 120][Stage 16:====================================================> (117 + 3) / 120][Stage 16:=====================================================>(119 + 1) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:==============================>                       (68 + 53) / 121][Stage 17:====================================>                 (81 + 40) / 121][Stage 17:=========================================>            (92 + 29) / 121][Stage 17:===============================================>     (108 + 13) / 121][Stage 17:================================================>    (111 + 10) / 121][Stage 17:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.131715391 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532773162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:============================>                         (63 + 57) / 120][Stage 18:================================>                     (72 + 48) / 120][Stage 18:========================================>             (91 + 29) / 120][Stage 18:==============================================>      (106 + 14) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:==============================>                       (68 + 53) / 121][Stage 19:====================================>                 (81 + 40) / 121][Stage 19:============================================>        (101 + 20) / 121][Stage 19:================================================>    (110 + 11) / 121][Stage 19:====================================================> (118 + 3) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.086995089 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507022985 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:>                                                       (0 + 0) / 115][Stage 20:===============================>                      (67 + 48) / 115][Stage 20:======================================>               (83 + 32) / 115][Stage 20:===========================================>          (93 + 22) / 115][Stage 20:=================================================>    (106 + 9) / 115][Stage 20:====================================================> (111 + 4) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:===============================>                      (67 + 49) / 116][Stage 21:======================================>               (82 + 34) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:==================================================>   (109 + 7) / 116][Stage 21:====================================================> (113 + 3) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.575923411 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530258058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=====================================>                (79 + 34) / 113][Stage 22:===========================================>          (91 + 22) / 113][Stage 22:=============================================>        (95 + 18) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:======================================>               (82 + 32) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:==============================================>      (100 + 14) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.963460346 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519201702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (59 + 61) / 120][Stage 24:===============================>                      (70 + 50) / 120][Stage 24:=====================================>                (84 + 36) / 120][Stage 24:=============================================>       (104 + 16) / 120][Stage 24:===================================================>  (114 + 6) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:=============================>                        (65 + 56) / 121][Stage 25:==================================>                   (78 + 43) / 121][Stage 25:===========================================>          (97 + 24) / 121][Stage 25:================================================>    (111 + 10) / 121][Stage 25:==================================================>   (114 + 7) / 121][Stage 25:=====================================================>(119 + 2) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.358273332 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=118", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=118,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509596509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:===========================>                          (61 + 59) / 120][Stage 26:=================================>                    (74 + 46) / 120][Stage 26:==========================================>           (94 + 26) / 120][Stage 26:================================================>    (109 + 11) / 120][Stage 26:=====================================================>(118 + 2) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:============================>                         (63 + 58) / 121][Stage 27:====================================>                 (81 + 40) / 121][Stage 27:============================================>        (102 + 19) / 121][Stage 27:==================================================>   (114 + 7) / 121][Stage 27:=====================================================>(119 + 2) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.281722645 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457685855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (71 + 44) / 115][Stage 28:========================================>             (87 + 28) / 115][Stage 28:==============================================>      (100 + 15) / 115][Stage 28:===================================================>  (109 + 6) / 115]                                                                                [Stage 29:==============================>                       (66 + 50) / 116][Stage 29:==================================>                   (75 + 41) / 116][Stage 29:=========================================>            (89 + 27) / 116][Stage 29:=============================================>        (97 + 19) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===============================================>     (103 + 13) / 116][Stage 29:=====================================================>(114 + 2) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.176171279 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518876043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (66 + 49) / 115][Stage 30:====================================>                 (77 + 38) / 115][Stage 30:============================================>         (94 + 21) / 115][Stage 30:===================================================>  (109 + 6) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:================================>                     (69 + 47) / 116][Stage 31:======================================>               (83 + 33) / 116][Stage 31:=============================================>        (97 + 19) / 116][Stage 31:================================================>    (106 + 10) / 116][Stage 31:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.355349822 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59321917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:===========================>                          (61 + 60) / 121][Stage 32:================================>                     (73 + 48) / 121][Stage 32:======================================>               (86 + 35) / 121][Stage 32:==============================================>      (106 + 15) / 121][Stage 32:===================================================>  (116 + 5) / 121][Stage 32:=====================================================>(119 + 2) / 121]                                                                                [Stage 33:===========================>                          (62 + 60) / 122][Stage 33:================================>                     (73 + 49) / 122][Stage 33:=========================================>            (93 + 29) / 122][Stage 33:==============================================>      (106 + 16) / 122][Stage 33:================================================>    (112 + 10) / 122][Stage 33:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.462192868 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506432405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (61 + 59) / 120][Stage 34:==============================>                       (67 + 53) / 120][Stage 34:=========================================>            (92 + 28) / 120][Stage 34:==================================================>   (112 + 8) / 120][Stage 34:=====================================================>(119 + 1) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:=============================>                        (65 + 56) / 121][Stage 35:====================================>                 (81 + 40) / 121][Stage 35:==============================================>      (106 + 15) / 121][Stage 35:====================================================> (117 + 4) / 121][Stage 35:=====================================================>(119 + 2) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.759313423 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459407078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==============================>                       (64 + 51) / 115][Stage 36:==================================>                   (73 + 42) / 115][Stage 36:=========================================>            (89 + 26) / 115][Stage 36:==================================================>   (108 + 7) / 115]                                                                                [Stage 37:================================>                     (69 + 47) / 116][Stage 37:========================================>             (86 + 30) / 116][Stage 37:===============================================>     (103 + 13) / 116][Stage 37:====================================================> (113 + 3) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.987507759 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484205373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:====================================>                 (76 + 37) / 113][Stage 38:===========================================>          (90 + 23) / 113][Stage 38:====================================================> (109 + 4) / 113]                                                                                [Stage 39:=============================>                        (63 + 51) / 114][Stage 39:====================================>                 (76 + 38) / 114][Stage 39:============================================>         (94 + 20) / 114][Stage 39:==================================================>   (107 + 7) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:=====================================================>(112 + 2) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.597193318 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455457453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (72 + 43) / 115][Stage 40:========================================>             (86 + 29) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:====================================================> (111 + 4) / 115]                                                                                [Stage 41:=================================>                    (72 + 44) / 116][Stage 41:======================================>               (83 + 33) / 116][Stage 41:============================================>         (95 + 21) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(114 + 2) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.329386055 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47445698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===================================>                  (75 + 40) / 115][Stage 42:=========================================>            (89 + 26) / 115][Stage 42:===============================================>     (104 + 11) / 115][Stage 42:====================================================> (112 + 3) / 115]                                                                                [Stage 43:==================================>                   (75 + 41) / 116][Stage 43:=========================================>            (90 + 26) / 116][Stage 43:=================================================>    (107 + 9) / 116][Stage 43:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.915646639 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487635239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:=============================>                        (65 + 55) / 120][Stage 44:====================================>                 (81 + 39) / 120][Stage 44:=============================================>       (104 + 16) / 120][Stage 44:===================================================>  (114 + 6) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:==============================>                       (68 + 53) / 121][Stage 45:===========================================>         (100 + 21) / 121][Stage 45:=================================================>    (112 + 9) / 121][Stage 45:=====================================================>(119 + 2) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.52027552 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461345961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:===============================>                      (69 + 51) / 120][Stage 46:======================================>               (85 + 35) / 120][Stage 46:===================================================>  (115 + 5) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:==============================>                       (68 + 53) / 121][Stage 47:====================================>                 (82 + 39) / 121][Stage 47:============================================>        (101 + 20) / 121][Stage 47:====================================================> (117 + 4) / 121][Stage 47:=====================================================>(119 + 2) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.474043355 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428416455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (71 + 42) / 113][Stage 48:=====================================>                (79 + 34) / 113][Stage 48:=========================================>            (87 + 26) / 113][Stage 48:=============================================>        (95 + 18) / 113][Stage 48:================================================>    (103 + 10) / 113][Stage 48:====================================================> (109 + 4) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:====================================>                 (78 + 36) / 114][Stage 49:========================================>             (86 + 28) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:================================================>    (104 + 10) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:====================================================> (111 + 3) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.45373579 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461097822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:=======================================>              (86 + 32) / 118][Stage 50:===========================================>          (96 + 22) / 118][Stage 50:================================================>    (108 + 10) / 118][Stage 50:====================================================> (115 + 3) / 118]                                                                                [Stage 51:==================================>                   (75 + 44) / 119][Stage 51:=====================================>                (82 + 37) / 119][Stage 51:=========================================>            (91 + 28) / 119][Stage 51:================================================>    (108 + 11) / 119][Stage 51:====================================================> (115 + 4) / 119][Stage 51:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.747994451 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403480758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:====================================>                 (76 + 37) / 113][Stage 52:=======================================>              (83 + 30) / 113][Stage 52:==============================================>      (100 + 13) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:====================================>                 (78 + 36) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:==================================================>   (107 + 7) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.024412 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400250054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (71 + 42) / 113][Stage 54:=========================================>            (86 + 27) / 113][Stage 54:=============================================>        (95 + 18) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:====================================================> (110 + 3) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:====================================>                 (76 + 38) / 114][Stage 55:==========================================>           (89 + 25) / 114][Stage 55:============================================>         (94 + 20) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:===================================================>  (109 + 5) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.418386606 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448623664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (61 + 60) / 121][Stage 56:===============================>                      (70 + 51) / 121][Stage 56:=========================================>            (92 + 29) / 121][Stage 56:==================================================>   (113 + 8) / 121]                                                                                [Stage 57:===========================>                          (62 + 60) / 122][Stage 57:============================>                         (65 + 57) / 122][Stage 57:=====================================>                (85 + 37) / 122][Stage 57:=============================================>       (105 + 17) / 122][Stage 57:====================================================> (118 + 4) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.85964158 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468812413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:============================>                         (64 + 56) / 120][Stage 58:===================================>                  (78 + 42) / 120][Stage 58:=============================================>       (102 + 18) / 120][Stage 58:===================================================>  (115 + 5) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:=============================>                        (67 + 54) / 121][Stage 59:===================================>                  (79 + 42) / 121][Stage 59:=============================================>       (105 + 16) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.638443483 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453386491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (60 + 53) / 113][Stage 60:=================================>                    (70 + 43) / 113][Stage 60:===========================================>          (92 + 21) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=============================>                        (63 + 51) / 114][Stage 61:===================================>                  (74 + 40) / 114][Stage 61:============================================>         (94 + 20) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.786693158 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437215408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:===============================>                      (66 + 47) / 113][Stage 62:========================================>             (84 + 29) / 113][Stage 62:=================================================>    (104 + 9) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:====================================>                 (76 + 38) / 114][Stage 63:============================================>         (94 + 20) / 114][Stage 63:====================================================> (110 + 4) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.601239512 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431420379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:==============================>                       (63 + 50) / 113][Stage 64:=====================================>                (78 + 35) / 113][Stage 64:===============================================>      (99 + 14) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:=============================>                        (62 + 52) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:===========================================>          (92 + 22) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.656326492 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387706717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==================================>                   (73 + 40) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:===========================================>          (91 + 22) / 113][Stage 66:=================================================>    (104 + 9) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:======================================>               (81 + 33) / 114][Stage 67:===========================================>          (91 + 23) / 114][Stage 67:=============================================>        (96 + 18) / 114][Stage 67:===================================================>  (108 + 6) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.292668531 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395132148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (73 + 40) / 113][Stage 68:======================================>               (81 + 32) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:=================================================>    (104 + 9) / 113][Stage 68:===================================================>  (107 + 6) / 113]                                                                                [Stage 69:====================================>                 (78 + 36) / 114][Stage 69:========================================>             (86 + 28) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:==============================================>      (101 + 13) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 9.598417555 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450529187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==============================>                       (64 + 51) / 115][Stage 70:===================================>                  (76 + 39) / 115][Stage 70:==========================================>           (90 + 25) / 115][Stage 70:=================================================>    (106 + 9) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:================================>                     (70 + 46) / 116][Stage 71:======================================>               (82 + 34) / 116][Stage 71:============================================>         (96 + 20) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.865129259 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388601339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (70 + 43) / 113][Stage 72:======================================>               (80 + 33) / 113][Stage 72:===========================================>          (90 + 23) / 113][Stage 72:==============================================>       (97 + 16) / 113][Stage 72:==================================================>   (105 + 8) / 113]                                                                                [Stage 73:=====================================>                (79 + 35) / 114][Stage 73:==========================================>           (89 + 25) / 114][Stage 73:============================================>         (94 + 20) / 114][Stage 73:================================================>    (104 + 10) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.105130784 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371614874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=====================================>                (78 + 35) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:==============================================>      (100 + 13) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:====================================>                 (77 + 37) / 114][Stage 75:==========================================>           (89 + 25) / 114][Stage 75:=============================================>        (97 + 17) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:===================================================>  (109 + 5) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.454702821 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455491455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:============================>                         (64 + 57) / 121][Stage 76:==================================>                   (77 + 44) / 121][Stage 76:============================================>        (101 + 20) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:==============================>                       (69 + 53) / 122][Stage 77:======================================>               (86 + 36) / 122][Stage 77:==============================================>      (108 + 14) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.91329967 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421994347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:==============================>                       (63 + 50) / 113][Stage 78:=====================================>                (79 + 34) / 113][Stage 78:=================================================>    (104 + 9) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===================================>                  (74 + 40) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:=================================================>    (105 + 9) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.797279983 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=217", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=217,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418511402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (64 + 56) / 120][Stage 80:===================================>                  (78 + 42) / 120][Stage 80:==========================================>           (94 + 26) / 120][Stage 80:===================================================>  (115 + 5) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:============================>                         (64 + 57) / 121][Stage 81:=================================>                    (76 + 45) / 121][Stage 81:=============================================>       (103 + 18) / 121][Stage 81:===================================================>  (116 + 5) / 121][Stage 81:====================================================> (118 + 3) / 121][Stage 81:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.292832337 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405542324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==================================>                   (73 + 42) / 115][Stage 82:=========================================>            (88 + 27) / 115][Stage 82:==============================================>      (100 + 15) / 115][Stage 82:====================================================> (112 + 3) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:================================>                     (70 + 46) / 116][Stage 83:=====================================>                (81 + 35) / 116][Stage 83:=============================================>        (98 + 18) / 116][Stage 83:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.871836193 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404443203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (60 + 53) / 113][Stage 84:===============================>                      (66 + 47) / 113][Stage 84:=====================================>                (79 + 34) / 113][Stage 84:================================================>    (103 + 10) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:==============================>                       (65 + 49) / 114][Stage 85:======================================>               (82 + 32) / 114][Stage 85:=============================================>        (95 + 19) / 114][Stage 85:==================================================>   (107 + 7) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.721527497 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401254058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:===============================>                      (65 + 48) / 113][Stage 86:===================================>                  (74 + 39) / 113][Stage 86:===========================================>          (91 + 22) / 113][Stage 86:===================================================>  (108 + 5) / 113]                                                                                [Stage 87:=============================>                        (62 + 52) / 114][Stage 87:=================================>                    (70 + 44) / 114][Stage 87:========================================>             (85 + 29) / 114][Stage 87:===================================================>  (109 + 5) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.870848553 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424127211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (61 + 60) / 121][Stage 88:===============================>                      (70 + 51) / 121][Stage 88:=========================================>            (92 + 29) / 121][Stage 88:=================================================>    (112 + 9) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:==============================>                       (70 + 52) / 122][Stage 89:======================================>               (87 + 35) / 122][Stage 89:================================================>    (112 + 10) / 122][Stage 89:====================================================> (119 + 3) / 122][Stage 89:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.075420748 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432245182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (62 + 59) / 121][Stage 90:================================>                     (73 + 48) / 121][Stage 90:===========================================>          (97 + 24) / 121][Stage 90:==================================================>   (114 + 7) / 121]                                                                                [Stage 91:===========================>                          (63 + 59) / 122][Stage 91:================================>                     (74 + 48) / 122][Stage 91:==========================================>           (95 + 27) / 122][Stage 91:==================================================>   (114 + 8) / 122][Stage 91:====================================================> (119 + 3) / 122][Stage 91:=====================================================>(120 + 2) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.619698494 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393327066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (72 + 43) / 115][Stage 92:=======================================>              (84 + 31) / 115][Stage 92:===============================================>     (102 + 13) / 115][Stage 92:====================================================> (112 + 3) / 115]                                                                                [Stage 93:====================================>                 (78 + 38) / 116][Stage 93:========================================>             (86 + 30) / 116][Stage 93:==================================================>   (109 + 7) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.841248513 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409016689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (61 + 60) / 121][Stage 94:================================>                     (72 + 49) / 121][Stage 94:=========================================>            (93 + 28) / 121][Stage 94:====================================================> (117 + 4) / 121][Stage 94:=====================================================>(120 + 1) / 121]                                                                                [Stage 95:===========================>                          (63 + 59) / 122][Stage 95:==================================>                   (78 + 44) / 122][Stage 95:=============================================>       (104 + 18) / 122][Stage 95:===================================================>  (117 + 5) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.964023252 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38141823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (75 + 43) / 118][Stage 96:======================================>               (84 + 34) / 118][Stage 96:=======================================>              (87 + 31) / 118][Stage 96:================================================>    (108 + 10) / 118][Stage 96:=====================================================>(117 + 1) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:=================================>                    (74 + 45) / 119][Stage 97:======================================>               (85 + 34) / 119][Stage 97:===========================================>          (95 + 24) / 119][Stage 97:==================================================>   (111 + 8) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.808211628 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405546564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:=============================>                        (62 + 51) / 113][Stage 98:======================================>               (81 + 32) / 113][Stage 98:==============================================>       (98 + 15) / 113]                                                                                [Stage 99:===========================>                          (59 + 55) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:==============================================>       (99 + 15) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:====================================================> (111 + 3) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.241424613 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398300474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:=============================>                       (62 + 51) / 113][Stage 100:===================================>                 (75 + 38) / 113][Stage 100:============================================>        (95 + 18) / 113][Stage 100:===================================================> (109 + 4) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:=================================>                   (72 + 42) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.162194481 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438954993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:=============================>                       (66 + 54) / 120][Stage 102:=====================================>               (85 + 35) / 120][Stage 102:===========================================>         (99 + 21) / 120][Stage 102:===================================================> (116 + 4) / 120][Stage 102:====================================================>(119 + 1) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:==============================>                      (69 + 52) / 121][Stage 103:====================================>                (83 + 38) / 121][Stage 103:==========================================>         (100 + 21) / 121][Stage 103:===================================================> (118 + 3) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.328134601 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404498723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:===============================>                     (68 + 45) / 113][Stage 104:============================================>        (95 + 18) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:===============================>                     (67 + 47) / 114][Stage 105:==========================================>          (91 + 23) / 114][Stage 105:===============================================>    (104 + 10) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.565585763 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407659588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==============================>                      (66 + 49) / 115][Stage 106:==================================>                  (75 + 40) / 115][Stage 106:=========================================>           (89 + 26) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:===============================>                     (69 + 47) / 116][Stage 107:======================================>              (84 + 32) / 116][Stage 107:============================================>        (97 + 19) / 116][Stage 107:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.810313934 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399887297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (61 + 59) / 120][Stage 108:================================>                    (74 + 46) / 120][Stage 108:===========================================>         (99 + 21) / 120][Stage 108:====================================================>(118 + 2) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:============================>                        (66 + 55) / 121][Stage 109:===================================>                 (81 + 40) / 121][Stage 109:===========================================>        (102 + 19) / 121][Stage 109:===================================================> (117 + 4) / 121][Stage 109:===================================================> (118 + 3) / 121][Stage 109:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.894996922 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386715498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===================================>                 (77 + 38) / 115][Stage 110:=========================================>           (91 + 24) / 115][Stage 110:=================================================>   (108 + 7) / 115]                                                                                [Stage 111:=====================================>               (81 + 35) / 116][Stage 111:==========================================>          (94 + 22) / 116][Stage 111:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.563238159 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384881935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (66 + 47) / 113][Stage 112:========================================>            (87 + 26) / 113][Stage 112:=================================================>   (105 + 8) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:================================>                    (70 + 44) / 114][Stage 113:==========================================>          (92 + 22) / 114][Stage 113:==============================================>     (101 + 13) / 114][Stage 113:===================================================> (111 + 3) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.636311768 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360896241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:===================================>                 (79 + 39) / 118][Stage 114:========================================>            (91 + 27) / 118][Stage 114:=============================================>      (103 + 15) / 118][Stage 114:===================================================> (115 + 3) / 118][Stage 114:====================================================>(117 + 1) / 118]                                                                                [Stage 115:=================================>                   (75 + 44) / 119][Stage 115:=====================================>               (85 + 34) / 119][Stage 115:=========================================>           (94 + 25) / 119][Stage 115:==============================================>     (107 + 12) / 119][Stage 115:===================================================> (115 + 4) / 119][Stage 115:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.120031268 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376097963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===================================>                 (76 + 39) / 115][Stage 116:===========================================>         (95 + 20) / 115][Stage 116:=============================================>      (101 + 14) / 115]                                                                                [Stage 117:=================================>                   (74 + 42) / 116][Stage 117:======================================>              (85 + 31) / 116][Stage 117:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.582897569 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39482791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:=============================>                       (67 + 54) / 121][Stage 118:=====================================>               (85 + 36) / 121][Stage 118:============================================>       (103 + 18) / 121][Stage 118:====================================================>(119 + 2) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:============================>                        (66 + 56) / 122][Stage 119:====================================>                (83 + 39) / 122][Stage 119:============================================>       (104 + 18) / 122][Stage 119:==================================================>  (116 + 6) / 122][Stage 119:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.836200899 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35354967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=======================================>             (86 + 29) / 115][Stage 120:===========================================>         (95 + 20) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=====================================>               (82 + 34) / 116][Stage 121:==========================================>          (93 + 23) / 116][Stage 121:================================================>    (107 + 9) / 116][Stage 121:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.663425226 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358813318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==================================>                  (74 + 39) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:============================================>        (95 + 18) / 113][Stage 122:=================================================>   (106 + 7) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:=================================>                   (72 + 42) / 114][Stage 123:========================================>            (87 + 27) / 114][Stage 123:=============================================>       (97 + 17) / 114][Stage 123:================================================>    (105 + 9) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.99130944 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363608365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===================================>                 (75 + 38) / 113][Stage 124:========================================>            (86 + 27) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:=================================================>   (105 + 8) / 113][Stage 124:==================================================>  (108 + 5) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===================================>                 (77 + 37) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:===========================================>         (94 + 20) / 114][Stage 125:==============================================>     (102 + 12) / 114][Stage 125:===================================================> (111 + 3) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.879323298 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360496721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===================================>                 (75 + 38) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:=============================================>       (97 + 16) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:=====================================>               (80 + 34) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.932097477 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402214062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:==============================>                      (68 + 52) / 120][Stage 128:==================================>                  (78 + 42) / 120][Stage 128:=========================================>           (95 + 25) / 120][Stage 128:===================================================> (117 + 3) / 120][Stage 128:====================================================>(119 + 1) / 120]                                                                                [Stage 129:============================>                        (66 + 55) / 121][Stage 129:==================================>                  (79 + 42) / 121][Stage 129:=========================================>           (95 + 26) / 121][Stage 129:==================================================>  (115 + 6) / 121][Stage 129:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.367820793 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376526004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==============================>                      (67 + 48) / 115][Stage 130:===================================>                 (78 + 37) / 115][Stage 130:===========================================>         (95 + 20) / 115][Stage 130:================================================>    (106 + 9) / 115]                                                                                [Stage 131:=================================>                   (74 + 42) / 116][Stage 131:=====================================>               (81 + 35) / 116][Stage 131:============================================>        (97 + 19) / 116][Stage 131:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.764734096 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350281646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (81 + 32) / 113][Stage 132:===========================================>         (93 + 20) / 113][Stage 132:==============================================>     (100 + 13) / 113][Stage 132:====================================================>(111 + 2) / 113]                                                                                [Stage 133:======================================>              (83 + 31) / 114][Stage 133:=========================================>           (89 + 25) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.04305712 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380984891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:=============================>                       (62 + 51) / 113][Stage 134:==================================>                  (73 + 40) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:=================================================>   (105 + 8) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:===================================>                 (76 + 38) / 114][Stage 135:=========================================>           (90 + 24) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.694247681 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402975703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:============================>                        (65 + 56) / 121][Stage 136:===============================>                     (73 + 48) / 121][Stage 136:==========================================>          (96 + 25) / 121][Stage 136:==================================================>  (115 + 6) / 121][Stage 136:====================================================>(120 + 1) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:===========================>                         (64 + 58) / 122][Stage 137:====================================>                (83 + 39) / 122][Stage 137:=================================================>   (113 + 9) / 122][Stage 137:===================================================> (119 + 3) / 122][Stage 137:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.649355184 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467054635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==================================>                  (75 + 40) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:===============================================>    (105 + 10) / 115][Stage 138:===================================================> (111 + 4) / 115]                                                                                [Stage 139:===================================>                 (78 + 38) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.761035173 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386399419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=================================>                   (72 + 41) / 113][Stage 140:==========================================>          (90 + 23) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:============================>                        (61 + 53) / 114][Stage 141:==================================>                  (74 + 40) / 114][Stage 141:====================================>                (79 + 35) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.861587867 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355109534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===================================>                 (75 + 38) / 113][Stage 142:========================================>            (86 + 27) / 113][Stage 142:==============================================>      (99 + 14) / 113][Stage 142:==================================================>  (108 + 5) / 113]                                                                                [Stage 143:====================================>                (78 + 36) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:==============================================>      (99 + 15) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:==================================================>  (109 + 5) / 114][Stage 143:===================================================> (111 + 3) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.922429784 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=72", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=72,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402219022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (61 + 59) / 120][Stage 144:==============================>                      (70 + 50) / 120][Stage 144:=====================================>               (86 + 34) / 120][Stage 144:=================================================>   (112 + 8) / 120][Stage 144:====================================================>(119 + 1) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:==============================>                      (70 + 51) / 121][Stage 145:======================================>              (89 + 32) / 121][Stage 145:==============================================>     (108 + 13) / 121][Stage 145:====================================================>(119 + 2) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.894420257 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38656164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:===============================>                     (67 + 46) / 113][Stage 146:==========================================>          (90 + 23) / 113][Stage 146:=================================================>   (106 + 7) / 113]                                                                                [Stage 147:============================>                        (62 + 52) / 114][Stage 147:====================================>                (78 + 36) / 114][Stage 147:==========================================>          (92 + 22) / 114][Stage 147:================================================>    (105 + 9) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.532778774 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392068408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:============================>                        (65 + 55) / 120][Stage 148:========================================>            (91 + 29) / 120][Stage 148:=================================================>   (111 + 9) / 120]                                                                                [Stage 149:===========================>                         (62 + 59) / 121][Stage 149:================================>                    (74 + 47) / 121][Stage 149:=========================================>           (94 + 27) / 121][Stage 149:=================================================>   (114 + 7) / 121][Stage 149:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.434603893 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359996401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:===================================>                 (80 + 38) / 118][Stage 150:=======================================>             (89 + 29) / 118][Stage 150:============================================>       (101 + 17) / 118][Stage 150:===================================================> (114 + 4) / 118]                                                                                [Stage 151:=================================>                   (75 + 44) / 119][Stage 151:====================================>                (82 + 37) / 119][Stage 151:===========================================>         (97 + 22) / 119][Stage 151:==================================================>  (114 + 5) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.638457629 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401722882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:============================>                        (66 + 55) / 121][Stage 152:=====================================>               (85 + 36) / 121][Stage 152:==============================================>     (109 + 12) / 121][Stage 152:====================================================>(119 + 2) / 121]                                                                                [Stage 153:============================>                        (66 + 56) / 122][Stage 153:==================================>                  (80 + 42) / 122][Stage 153:========================================>            (93 + 29) / 122][Stage 153:=================================================>   (113 + 9) / 122][Stage 153:====================================================>(120 + 2) / 122][Stage 153:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.348557698 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350702788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=================================>                   (71 + 42) / 113][Stage 154:=====================================>               (81 + 32) / 113][Stage 154:=============================================>       (97 + 16) / 113][Stage 154:================================================>    (104 + 9) / 113][Stage 154:===================================================> (109 + 4) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=======================================>             (84 + 30) / 114][Stage 155:==========================================>          (92 + 22) / 114][Stage 155:===============================================>    (104 + 10) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.231501861 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351508189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (76 + 37) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:============================================>        (95 + 18) / 113][Stage 156:==================================================>  (107 + 6) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:========================================>            (87 + 27) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:==============================================>     (101 + 13) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.196992531 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393027849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:===========================>                         (63 + 57) / 120][Stage 158:==================================>                  (79 + 41) / 120][Stage 158:=========================================>           (93 + 27) / 120][Stage 158:=================================================>   (113 + 7) / 120]                                                                                [Stage 159:=============================>                       (68 + 53) / 121][Stage 159:================================>                    (74 + 47) / 121][Stage 159:========================================>            (93 + 28) / 121][Stage 159:===================================================> (117 + 4) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.645827763 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347167083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:====================================>                (78 + 35) / 113][Stage 160:==========================================>          (90 + 23) / 113][Stage 160:=============================================>       (98 + 15) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:========================================>            (87 + 27) / 114][Stage 161:============================================>        (95 + 19) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:====================================================>(112 + 2) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.497374728 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398971518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:====================================>                (82 + 38) / 120][Stage 162:=============================================>      (105 + 15) / 120][Stage 162:====================================================>(118 + 2) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:=============================>                       (67 + 54) / 121][Stage 163:=================================>                   (77 + 44) / 121][Stage 163:============================================>       (103 + 18) / 121][Stage 163:===================================================> (117 + 4) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.264111621 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396065334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:============================>                        (64 + 56) / 120][Stage 164:===================================>                 (80 + 40) / 120][Stage 164:=============================================>      (105 + 15) / 120][Stage 164:====================================================>(118 + 2) / 120]                                                                                [Stage 165:===========================>                         (63 + 58) / 121][Stage 165:===============================>                     (73 + 48) / 121][Stage 165:========================================>            (93 + 28) / 121][Stage 165:=================================================>   (112 + 9) / 121][Stage 165:==================================================>  (116 + 5) / 121][Stage 165:===================================================> (118 + 3) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.475154268 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397522496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:================================>                    (69 + 44) / 113][Stage 166:=========================================>           (88 + 25) / 113][Stage 166:==================================================>  (108 + 5) / 113]                                                                                [Stage 167:============================>                        (61 + 53) / 114][Stage 167:=================================>                   (72 + 42) / 114][Stage 167:==========================================>          (92 + 22) / 114][Stage 167:=================================================>   (106 + 8) / 114][Stage 167:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.501447437 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353141952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (74 + 39) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:=================================================>   (105 + 8) / 113][Stage 168:====================================================>(111 + 2) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:======================================>              (83 + 31) / 114][Stage 169:==========================================>          (91 + 23) / 114][Stage 169:==============================================>     (102 + 12) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.341926727 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347206743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==================================>                  (74 + 39) / 113][Stage 170:========================================>            (87 + 26) / 113][Stage 170:=============================================>       (97 + 16) / 113][Stage 170:=================================================>   (106 + 7) / 113]                                                                                [Stage 171:=====================================>               (80 + 34) / 114][Stage 171:=========================================>           (90 + 24) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.948283617 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367625193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (76 + 39) / 115][Stage 172:========================================>            (87 + 28) / 115][Stage 172:===============================================>    (105 + 10) / 115]                                                                                [Stage 173:==================================>                  (75 + 41) / 116][Stage 173:=========================================>           (91 + 25) / 116][Stage 173:==============================================>     (104 + 12) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.658426777 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329553418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:====================================>                (80 + 35) / 115][Stage 174:=========================================>           (90 + 25) / 115][Stage 174:==============================================>     (103 + 12) / 115][Stage 174:=================================================>   (107 + 8) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:=====================================>               (82 + 34) / 116][Stage 175:======================================>              (84 + 32) / 116][Stage 175:==========================================>          (93 + 23) / 116][Stage 175:==============================================>     (104 + 12) / 116][Stage 175:==================================================>  (111 + 5) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.212338656 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403881006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=======================================>             (85 + 30) / 115][Stage 176:==========================================>          (93 + 22) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:===========================================>         (95 + 21) / 116][Stage 177:==============================================>     (104 + 12) / 116][Stage 177:================================================>    (107 + 9) / 116][Stage 177:==================================================>  (111 + 5) / 116][Stage 177:====================================================>(114 + 2) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.823815813 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384785659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (60 + 53) / 113][Stage 178:==================================>                  (74 + 39) / 113][Stage 178:=========================================>           (88 + 25) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:============================>                        (62 + 52) / 114][Stage 179:================================>                    (70 + 44) / 114][Stage 179:==========================================>          (91 + 23) / 114][Stage 179:=================================================>   (107 + 7) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.876720348 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388392163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (73 + 45) / 118][Stage 180:=================================>                   (75 + 43) / 118][Stage 180:=========================================>           (92 + 26) / 118][Stage 180:==============================================>     (105 + 13) / 118][Stage 180:===================================================> (114 + 4) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:==================================>                  (77 + 42) / 119][Stage 181:=====================================>               (84 + 35) / 119][Stage 181:=========================================>           (94 + 25) / 119][Stage 181:===============================================>    (108 + 11) / 119][Stage 181:===================================================> (116 + 3) / 119][Stage 181:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.125755991 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396036815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (74 + 44) / 118][Stage 182:======================================>              (86 + 32) / 118][Stage 182:============================================>        (99 + 19) / 118][Stage 182:===============================================>    (108 + 10) / 118]                                                                                [Stage 183:================================>                    (73 + 46) / 119][Stage 183:==================================>                  (78 + 41) / 119][Stage 183:========================================>            (91 + 28) / 119][Stage 183:==============================================>     (106 + 13) / 119][Stage 183:==================================================>  (113 + 6) / 119][Stage 183:===================================================> (116 + 3) / 119][Stage 183:====================================================>(117 + 2) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.127101414 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.326755155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=======================================>             (85 + 30) / 115][Stage 184:==========================================>          (93 + 22) / 115][Stage 184:===============================================>    (105 + 10) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:=========================================>           (90 + 26) / 116][Stage 185:==============================================>     (103 + 13) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:====================================================>(114 + 2) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.384468306 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=73", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=73,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334048445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:====================================>                (80 + 35) / 115][Stage 186:========================================>            (88 + 27) / 115][Stage 186:=================================================>   (107 + 8) / 115][Stage 186:===================================================> (112 + 3) / 115]                                                                                [Stage 187:======================================>              (84 + 32) / 116][Stage 187:=========================================>           (91 + 25) / 116][Stage 187:==============================================>     (104 + 12) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.723312916 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396384696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (64 + 57) / 121][Stage 188:=================================>                   (76 + 45) / 121][Stage 188:=========================================>           (95 + 26) / 121][Stage 188:==================================================>  (115 + 6) / 121]                                                                                [Stage 189:============================>                        (65 + 57) / 122][Stage 189:===============================>                     (72 + 50) / 122][Stage 189:======================================>              (88 + 34) / 122][Stage 189:=================================================>   (113 + 9) / 122][Stage 189:==================================================>  (117 + 5) / 122][Stage 189:===================================================> (119 + 3) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.144331915 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384146239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:=========================================>           (89 + 24) / 113][Stage 190:===================================================> (109 + 4) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:==============================>                      (65 + 49) / 114][Stage 191:======================================>              (83 + 31) / 114][Stage 191:==============================================>     (101 + 13) / 114][Stage 191:===================================================> (110 + 4) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.954671228 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367452494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==============================>                      (67 + 48) / 115][Stage 192:=====================================>               (81 + 34) / 115][Stage 192:=============================================>       (98 + 17) / 115][Stage 192:==================================================>  (110 + 5) / 115]                                                                                [Stage 193:===================================>                 (77 + 39) / 116][Stage 193:========================================>            (88 + 28) / 116][Stage 193:=============================================>       (99 + 17) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:===================================================> (113 + 3) / 116][Stage 193:====================================================>(114 + 2) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.785041223 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39938164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:=============================>                       (66 + 54) / 120][Stage 194:===================================>                 (80 + 40) / 120][Stage 194:===========================================>        (100 + 20) / 120][Stage 194:====================================================>(118 + 2) / 120]                                                                                [Stage 195:===========================>                         (63 + 58) / 121][Stage 195:=================================>                   (77 + 44) / 121][Stage 195:==========================================>          (97 + 24) / 121][Stage 195:=================================================>   (114 + 7) / 121][Stage 195:===================================================> (117 + 4) / 121][Stage 195:====================================================>(119 + 2) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.849858851 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410109656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:==============================>                      (64 + 49) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:==============================================>     (101 + 12) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:===============================>                     (67 + 47) / 114][Stage 197:====================================>                (79 + 35) / 114][Stage 197:=============================================>       (98 + 16) / 114][Stage 197:==================================================>  (108 + 6) / 114][Stage 197:====================================================>(112 + 2) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.960138539 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3847408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (77 + 36) / 113][Stage 198:========================================>            (87 + 26) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:=================================================>   (106 + 7) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:==================================>                  (75 + 39) / 114][Stage 199:=====================================>               (80 + 34) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:============================================>        (96 + 18) / 114][Stage 199:==============================================>     (102 + 12) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.677671908 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404530688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:===========================>                         (63 + 58) / 121][Stage 200:===================================>                 (80 + 41) / 121][Stage 200:==========================================>          (98 + 23) / 121][Stage 200:==================================================>  (115 + 6) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:================================>                    (75 + 47) / 122][Stage 201:=======================================>             (90 + 32) / 122][Stage 201:============================================>       (105 + 17) / 122][Stage 201:==================================================>  (116 + 6) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.990564746 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 00:54:01 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:45050) dropped. RpcEnv already stopped.
17/05/22 00:54:01 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:45050) dropped. RpcEnv already stopped.

real	11m59.137s
user	12m18.984s
sys	1m35.716s
