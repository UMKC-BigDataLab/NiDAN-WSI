Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 06:55:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:55:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:55:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:55:45 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 06:55:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:55:58 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522065547-0427).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.407007205 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=====================>                                 (44 + 71) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.690043167 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR   partitionIndex = 226  OR  partitionIndex = 212 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.815348063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================>                                     (36 + 77) / 113][Stage 2:=======================>                               (49 + 64) / 113][Stage 2:===========================>                           (56 + 57) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:================================>                      (66 + 47) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:==============================>                        (64 + 50) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:===========================================>           (91 + 23) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.258100075 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.614331102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:========================================>              (85 + 30) / 115][Stage 4:==========================================>            (89 + 26) / 115][Stage 4:============================================>          (93 + 22) / 115][Stage 4:==============================================>       (100 + 15) / 115][Stage 4:====================================================>  (110 + 5) / 115]                                                                                [Stage 5:=======================================>               (83 + 33) / 116][Stage 5:=======================================>               (84 + 32) / 116][Stage 5:===========================================>           (91 + 25) / 116][Stage 5:==============================================>       (100 + 16) / 116][Stage 5:====================================================>  (110 + 6) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.8835354 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.620027521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (55 + 58) / 113][Stage 6:===========================>                           (56 + 57) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:=================================>                     (68 + 45) / 113][Stage 6:====================================>                  (76 + 37) / 113][Stage 6:==========================================>            (88 + 25) / 113][Stage 6:================================================>      (99 + 14) / 113][Stage 6:=====================================================> (109 + 4) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:==============================>                        (64 + 50) / 114][Stage 7:================================>                      (68 + 46) / 114][Stage 7:======================================>                (80 + 34) / 114][Stage 7:============================================>          (92 + 22) / 114][Stage 7:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.619311335 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515167346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (78 + 37) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:============================================>          (92 + 23) / 115][Stage 8:===============================================>      (101 + 14) / 115][Stage 8:====================================================>  (109 + 6) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:=====================================>                 (80 + 36) / 116][Stage 9:=========================================>             (87 + 29) / 116][Stage 9:=============================================>         (97 + 19) / 116][Stage 9:===============================================>      (103 + 13) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.45824644 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  p artitionIndex = 2  OR  partitionIndex = 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512706818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (69 + 44) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:=========================================>            (87 + 26) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:===================================================>  (107 + 6) / 113][Stage 10:=====================================================>(111 + 2) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:====================================>                 (78 + 36) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.294616277 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576545454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (65 + 50) / 115][Stage 12:==================================>                   (73 + 42) / 115][Stage 12:===========================================>          (93 + 22) / 115][Stage 12:==============================================>       (98 + 17) / 115][Stage 12:===============================================>     (103 + 12) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:===================================================>  (110 + 5) / 115]                                                                                [Stage 13:===============================>                      (67 + 49) / 116][Stage 13:=====================================>                (80 + 36) / 116][Stage 13:============================================>         (96 + 20) / 116][Stage 13:==============================================>      (101 + 15) / 116][Stage 13:===============================================>     (105 + 11) / 116][Stage 13:==================================================>   (109 + 7) / 116][Stage 13:====================================================> (113 + 3) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.352306335 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  p artitionIndex = 99  OR  partitionIndex = 113 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465434178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:====================================>                 (78 + 37) / 115][Stage 14:=======================================>              (84 + 31) / 115][Stage 14:===========================================>          (92 + 23) / 115][Stage 14:=============================================>        (96 + 19) / 115][Stage 14:===============================================>     (102 + 13) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:====================================================> (112 + 3) / 115]                                                                                [Stage 15:======================================>               (83 + 33) / 116][Stage 15:========================================>             (87 + 29) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.707003588 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.642531379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (65 + 55) / 120][Stage 16:===================================>                  (79 + 41) / 120][Stage 16:==========================================>           (94 + 26) / 120][Stage 16:============================================>        (101 + 19) / 120][Stage 16:===================================================>  (115 + 5) / 120]                                                                                [Stage 17:============================>                         (64 + 57) / 121][Stage 17:================================>                     (73 + 48) / 121][Stage 17:=====================================>                (84 + 37) / 121][Stage 17:=============================================>       (104 + 17) / 121][Stage 17:===================================================>  (115 + 6) / 121][Stage 17:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.067994873 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506200676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (57 + 56) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:=================================>                    (71 + 42) / 113][Stage 18:==========================================>           (89 + 24) / 113][Stage 18:=================================================>    (104 + 9) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:=================================>                    (70 + 44) / 114][Stage 19:=========================================>            (87 + 27) / 114][Stage 19:==================================================>   (106 + 8) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.966998972 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472630023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (72 + 41) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:============================================>         (94 + 19) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=======================================>              (83 + 31) / 114][Stage 21:==========================================>           (90 + 24) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.360532176 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540659874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:=============================>                        (62 + 51) / 113][Stage 22:===================================>                  (75 + 38) / 113][Stage 22:==============================================>       (98 + 15) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===============================>                      (66 + 48) / 114][Stage 23:=======================================>              (83 + 31) / 114][Stage 23:==============================================>      (101 + 13) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.00126181 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  p artitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502036443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (57 + 56) / 113][Stage 24:==============================>                       (63 + 50) / 113][Stage 24:=====================================>                (79 + 34) / 113][Stage 24:==============================================>       (98 + 15) / 113][Stage 24:===================================================>  (107 + 6) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:=============================>                        (63 + 51) / 114][Stage 25:==================================>                   (73 + 41) / 114][Stage 25:=============================================>        (95 + 19) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.875450546 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR   partitionIndex = 108  OR  partitionIndex = 64 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457831813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:===================================>                  (77 + 41) / 118][Stage 26:========================================>             (88 + 30) / 118][Stage 26:================================================>    (107 + 11) / 118]                                                                                [Stage 27:=================================>                    (74 + 45) / 119][Stage 27:======================================>               (85 + 34) / 119][Stage 27:==============================================>      (105 + 14) / 119][Stage 27:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.173639466 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  p artitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49229955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (63 + 50) / 113][Stage 28:=====================================>                (78 + 35) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:=============================>                        (63 + 51) / 114][Stage 29:===================================>                  (74 + 40) / 114][Stage 29:============================================>         (94 + 20) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.614280622 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452291575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (70 + 43) / 113][Stage 30:======================================>               (81 + 32) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:==================================================>   (105 + 8) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:======================================>               (82 + 32) / 114][Stage 31:============================================>         (94 + 20) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.136471927 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  p artitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497739529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:================================>                     (72 + 49) / 121][Stage 32:========================================>             (91 + 30) / 121][Stage 32:====================================================> (117 + 4) / 121][Stage 32:=====================================================>(120 + 1) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:============================>                         (65 + 57) / 122][Stage 33:================================>                     (74 + 48) / 122][Stage 33:=======================================>              (89 + 33) / 122][Stage 33:================================================>    (112 + 10) / 122][Stage 33:===================================================>  (117 + 5) / 122][Stage 33:====================================================> (119 + 3) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.067859343 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 141 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47139894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===============================>                      (67 + 48) / 115][Stage 34:=====================================>                (79 + 36) / 115][Stage 34:==============================================>      (101 + 14) / 115][Stage 34:====================================================> (111 + 4) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:===================================>                  (77 + 39) / 116][Stage 35:==========================================>           (91 + 25) / 116][Stage 35:================================================>    (106 + 10) / 116][Stage 35:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.085934232 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501235421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:============================>                         (63 + 57) / 120][Stage 36:=================================>                    (74 + 46) / 120][Stage 36:=====================================>                (84 + 36) / 120][Stage 36:=================================================>    (111 + 9) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:=============================>                        (67 + 54) / 121][Stage 37:=====================================>                (85 + 36) / 121][Stage 37:==========================================>           (95 + 26) / 121][Stage 37:=================================================>    (112 + 9) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.627637612 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  p artitionIndex = 15  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482158956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:=============================>                        (67 + 54) / 121][Stage 38:===================================>                  (80 + 41) / 121][Stage 38:=============================================>       (104 + 17) / 121][Stage 38:=====================================================>(119 + 2) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:=============================>                        (67 + 55) / 122][Stage 39:=======================================>              (89 + 33) / 122][Stage 39:============================================>        (102 + 20) / 122][Stage 39:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.306985724 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  p artitionIndex = 11  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545303171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (72 + 43) / 115][Stage 40:==========================================>           (90 + 25) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:===============================>                      (68 + 48) / 116][Stage 41:====================================>                 (79 + 37) / 116][Stage 41:============================================>         (96 + 20) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.728075134 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446573616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (74 + 44) / 118][Stage 42:====================================>                 (79 + 39) / 118][Stage 42:=======================================>              (87 + 31) / 118][Stage 42:============================================>         (97 + 21) / 118][Stage 42:==================================================>   (110 + 8) / 118][Stage 42:====================================================> (115 + 3) / 118]                                                                                [Stage 43:==================================>                   (75 + 44) / 119][Stage 43:===================================>                  (78 + 41) / 119][Stage 43:=====================================>                (83 + 36) / 119][Stage 43:==========================================>           (94 + 25) / 119][Stage 43:===============================================>     (106 + 13) / 119][Stage 43:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.011534398 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR   partitionIndex = 217  OR  partitionIndex = 231 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465116778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (79 + 36) / 115][Stage 44:========================================>             (86 + 29) / 115][Stage 44:============================================>         (95 + 20) / 115][Stage 44:==================================================>   (108 + 7) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:======================================>               (82 + 34) / 116][Stage 45:========================================>             (88 + 28) / 116][Stage 45:==============================================>      (102 + 14) / 116][Stage 45:===================================================>  (111 + 5) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.919719892 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  p artitionIndex = 13  OR  partitionIndex = 27 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455326125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:===============================>                      (70 + 50) / 120][Stage 46:=========================================>            (92 + 28) / 120][Stage 46:===============================================>     (107 + 13) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:===============================>                      (70 + 51) / 121][Stage 47:=======================================>              (89 + 32) / 121][Stage 47:================================================>    (110 + 11) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.103234091 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411774318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=====================================>                (79 + 34) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:====================================================> (109 + 4) / 113]                                                                                [Stage 49:====================================>                 (76 + 38) / 114][Stage 49:=========================================>            (87 + 27) / 114][Stage 49:=============================================>        (97 + 17) / 114][Stage 49:==================================================>   (107 + 7) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.009323778 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47717636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:===========================>                          (62 + 59) / 121][Stage 50:==================================>                   (77 + 44) / 121][Stage 50:============================================>        (101 + 20) / 121][Stage 50:===================================================>  (116 + 5) / 121]                                                                                [Stage 51:===========================>                          (61 + 61) / 122][Stage 51:==============================>                       (68 + 54) / 122][Stage 51:======================================>               (88 + 34) / 122][Stage 51:=============================================>       (105 + 17) / 122][Stage 51:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.463979822 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  p artitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402552907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:====================================>                 (76 + 37) / 113][Stage 52:===========================================>          (90 + 23) / 113][Stage 52:==============================================>       (98 + 15) / 113][Stage 52:==================================================>   (105 + 8) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:====================================>                 (76 + 38) / 114][Stage 53:======================================>               (81 + 33) / 114][Stage 53:===========================================>          (91 + 23) / 114][Stage 53:==============================================>      (101 + 13) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.822939418 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411110876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 38) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:===================================================>  (108 + 5) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:======================================>               (82 + 32) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:==============================================>       (99 + 15) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:=====================================================>(112 + 2) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.400580949 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR   partitionIndex = 110  OR  partitionIndex = 96 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4388635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:============================>                         (64 + 57) / 121][Stage 56:========================================>             (91 + 30) / 121][Stage 56:==================================================>   (114 + 7) / 121][Stage 56:====================================================> (117 + 4) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=============================>                        (67 + 55) / 122][Stage 57:====================================>                 (82 + 40) / 122][Stage 57:============================================>        (103 + 19) / 122][Stage 57:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.423051122 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40858016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:===================================>                  (78 + 40) / 118][Stage 58:======================================>               (84 + 34) / 118][Stage 58:===========================================>          (95 + 23) / 118][Stage 58:=================================================>    (109 + 9) / 118][Stage 58:=====================================================>(116 + 2) / 118]                                                                                [Stage 59:==================================>                   (75 + 44) / 119][Stage 59:===================================>                  (78 + 41) / 119][Stage 59:=======================================>              (88 + 31) / 119][Stage 59:============================================>         (99 + 20) / 119][Stage 59:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.807822335 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR   partitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499581323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=============================>                        (65 + 56) / 121][Stage 60:================================>                     (72 + 49) / 121][Stage 60:=========================================>            (93 + 28) / 121][Stage 60:================================================>    (111 + 10) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:=================================>                    (76 + 46) / 122][Stage 61:==========================================>           (95 + 27) / 122][Stage 61:================================================>    (112 + 10) / 122][Stage 61:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.509818796 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  p artitionIndex = 80  OR  partitionIndex = 66 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372054535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:=========================================>            (89 + 26) / 115][Stage 62:===============================================>     (104 + 11) / 115][Stage 62:====================================================> (111 + 4) / 115]                                                                                [Stage 63:=======================================>              (84 + 32) / 116][Stage 63:===========================================>          (94 + 22) / 116][Stage 63:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.696414889 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470711819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:============================>                         (64 + 57) / 121][Stage 64:=====================================>                (83 + 38) / 121][Stage 64:==============================================>      (106 + 15) / 121][Stage 64:=====================================================>(120 + 1) / 121]                                                                                [Stage 65:===========================>                          (61 + 61) / 122][Stage 65:=============================>                        (67 + 55) / 122][Stage 65:===================================>                  (81 + 41) / 122][Stage 65:========================================>             (91 + 31) / 122][Stage 65:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.582584571 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415560021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (73 + 45) / 118][Stage 66:====================================>                 (79 + 39) / 118][Stage 66:=============================================>       (102 + 16) / 118][Stage 66:====================================================> (114 + 4) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:=====================================>                (83 + 36) / 119][Stage 67:==========================================>           (93 + 26) / 119][Stage 67:===================================================>  (113 + 6) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.327189735 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443722382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:=================================>                    (71 + 42) / 113][Stage 68:========================================>             (85 + 28) / 113][Stage 68:===============================================>     (101 + 12) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:=============================>                        (62 + 52) / 114][Stage 69:===================================>                  (75 + 39) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.563592641 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  pa rtitionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41489346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (71 + 42) / 113][Stage 70:======================================>               (81 + 32) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:==============================================>       (97 + 16) / 113][Stage 70:====================================================> (109 + 4) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:====================================>                 (76 + 38) / 114][Stage 71:========================================>             (85 + 29) / 114][Stage 71:=============================================>        (96 + 18) / 114][Stage 71:==================================================>   (107 + 7) / 114][Stage 71:====================================================> (111 + 3) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.244137842 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  p artitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400706399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===================================>                  (74 + 39) / 113][Stage 72:========================================>             (84 + 29) / 113][Stage 72:==============================================>       (97 + 16) / 113][Stage 72:====================================================> (109 + 4) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:==================================>                   (73 + 41) / 114][Stage 73:=======================================>              (84 + 30) / 114][Stage 73:=============================================>        (95 + 19) / 114][Stage 73:=================================================>    (105 + 9) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.375245961 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  p artitionIndex = 56  OR  partitionIndex = 12 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397163029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (75 + 43) / 118][Stage 74:======================================>               (84 + 34) / 118][Stage 74:=========================================>            (91 + 27) / 118][Stage 74:================================================>    (108 + 10) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:==================================>                   (76 + 43) / 119][Stage 75:========================================>             (90 + 29) / 119][Stage 75:==============================================>      (104 + 15) / 119][Stage 75:===================================================>  (114 + 5) / 119][Stage 75:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.64065621 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427877977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 59) / 120][Stage 76:===============================>                      (71 + 49) / 120][Stage 76:===========================================>          (96 + 24) / 120][Stage 76:===================================================>  (114 + 6) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=================================>                    (74 + 47) / 121][Stage 77:========================================>             (90 + 31) / 121][Stage 77:==============================================>      (107 + 14) / 121][Stage 77:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.427343076 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421174118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:==================================>                   (73 + 40) / 113][Stage 78:=============================================>        (96 + 17) / 113][Stage 78:==================================================>   (106 + 7) / 113]                                                                                [Stage 79:============================>                         (61 + 53) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:=====================================>                (79 + 35) / 114][Stage 79:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.247760018 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419459354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (60 + 53) / 113][Stage 80:================================>                     (69 + 44) / 113][Stage 80:===========================================>          (90 + 23) / 113][Stage 80:===================================================>  (108 + 5) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:=================================>                    (70 + 44) / 114][Stage 81:========================================>             (85 + 29) / 114][Stage 81:==============================================>      (101 + 13) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.449018263 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42508743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:=============================>                        (67 + 54) / 121][Stage 82:======================================>               (86 + 35) / 121][Stage 82:==============================================>      (107 + 14) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:============================>                         (64 + 58) / 122][Stage 83:==================================>                   (79 + 43) / 122][Stage 83:===========================================>          (98 + 24) / 122][Stage 83:==================================================>   (115 + 7) / 122][Stage 83:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.584380476 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406378456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (64 + 51) / 115][Stage 84:====================================>                 (77 + 38) / 115][Stage 84:==========================================>           (91 + 24) / 115][Stage 84:=================================================>    (106 + 9) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:=================================>                    (71 + 45) / 116][Stage 85:========================================>             (86 + 30) / 116][Stage 85:=============================================>       (100 + 16) / 116][Stage 85:===================================================>  (110 + 6) / 116][Stage 85:====================================================> (112 + 4) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.614555906 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 143 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419091313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=============================>                        (62 + 51) / 113][Stage 86:====================================>                 (77 + 36) / 113][Stage 86:============================================>         (93 + 20) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:================================>                     (68 + 46) / 114][Stage 87:=========================================>            (88 + 26) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.176509199 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR   partitionIndex = 106  OR  partitionIndex = 92 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419671856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:>                                                       (0 + 0) / 120][Stage 88:===========================>                          (60 + 60) / 120][Stage 88:=============================>                        (66 + 54) / 120][Stage 88:=====================================>                (84 + 36) / 120][Stage 88:===============================================>     (108 + 12) / 120][Stage 88:=====================================================>(118 + 2) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:=============================>                        (65 + 56) / 121][Stage 89:=======================================>              (89 + 32) / 121][Stage 89:================================================>    (110 + 11) / 121][Stage 89:=====================================================>(119 + 2) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.798789044 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358226898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=====================================>                (80 + 35) / 115][Stage 90:============================================>         (94 + 21) / 115][Stage 90:===============================================>     (104 + 11) / 115][Stage 90:===================================================>  (110 + 5) / 115]                                                                                [Stage 91:======================================>               (82 + 34) / 116][Stage 91:==========================================>           (91 + 25) / 116][Stage 91:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.545241395 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395015345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (64 + 51) / 115][Stage 92:=====================================>                (80 + 35) / 115][Stage 92:===========================================>          (93 + 22) / 115][Stage 92:===============================================>     (103 + 12) / 115]                                                                                [Stage 93:==================================>                   (75 + 41) / 116][Stage 93:==========================================>           (92 + 24) / 116][Stage 93:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.568435723 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 207 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35535009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (83 + 32) / 115][Stage 94:==========================================>           (91 + 24) / 115][Stage 94:===============================================>     (104 + 11) / 115][Stage 94:====================================================> (112 + 3) / 115]                                                                                [Stage 95:=======================================>              (84 + 32) / 116][Stage 95:=========================================>            (89 + 27) / 116][Stage 95:==============================================>      (101 + 15) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.9187004 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386178379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (69 + 46) / 115][Stage 96:========================================>             (86 + 29) / 115][Stage 96:============================================>         (95 + 20) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:===================================================>  (110 + 5) / 115]                                                                                [Stage 97:===============================>                      (68 + 48) / 116][Stage 97:===================================>                  (77 + 39) / 116][Stage 97:========================================>             (88 + 28) / 116][Stage 97:===============================================>     (103 + 13) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.004790971 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  p artitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399830479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=============================>                        (61 + 52) / 113][Stage 98:===================================>                  (74 + 39) / 113][Stage 98:===========================================>          (92 + 21) / 113][Stage 98:==================================================>   (106 + 7) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:====================================>                 (76 + 38) / 114][Stage 99:==============================================>       (98 + 16) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.493374749 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  p artitionIndex = 30  OR  partitionIndex = 42 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414712383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (63 + 57) / 120][Stage 100:================================>                    (74 + 46) / 120][Stage 100:===========================================>         (99 + 21) / 120][Stage 100:===============================================>    (109 + 11) / 120]                                                                                [Stage 101:============================>                        (66 + 55) / 121][Stage 101:====================================>                (83 + 38) / 121][Stage 101:=============================================>      (106 + 15) / 121][Stage 101:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.18247607 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36222033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:====================================>                (80 + 35) / 115][Stage 102:========================================>            (88 + 27) / 115][Stage 102:===============================================>    (105 + 10) / 115][Stage 102:==================================================>  (110 + 5) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:=========================================>           (90 + 26) / 116][Stage 103:===============================================>    (105 + 11) / 116][Stage 103:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.712090767 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426364536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (65 + 55) / 120][Stage 104:========================================>            (92 + 28) / 120][Stage 104:=================================================>   (112 + 8) / 120]                                                                                [Stage 105:===========================>                         (62 + 59) / 121][Stage 105:===============================>                     (72 + 49) / 121][Stage 105:==========================================>          (98 + 23) / 121][Stage 105:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.22290421 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394472885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==============================>                      (67 + 48) / 115][Stage 106:=====================================>               (81 + 34) / 115][Stage 106:==========================================>          (93 + 22) / 115][Stage 106:==================================================>  (110 + 5) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:================================>                    (72 + 44) / 116][Stage 107:=======================================>             (87 + 29) / 116][Stage 107:============================================>       (100 + 16) / 116][Stage 107:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.800147325 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382198909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:====================================>                (81 + 37) / 118][Stage 108:========================================>            (90 + 28) / 118][Stage 108:============================================>       (101 + 17) / 118][Stage 108:==================================================>  (113 + 5) / 118]                                                                                [Stage 109:=================================>                   (76 + 43) / 119][Stage 109:====================================>                (83 + 36) / 119][Stage 109:==========================================>          (96 + 23) / 119][Stage 109:=================================================>   (111 + 8) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.72787654 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370927197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (73 + 45) / 118][Stage 110:====================================>                (81 + 37) / 118][Stage 110:============================================>        (98 + 20) / 118][Stage 110:=================================================>   (110 + 8) / 118][Stage 110:====================================================>(116 + 2) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:==================================>                  (78 + 41) / 119][Stage 111:=======================================>             (89 + 30) / 119][Stage 111:============================================>       (102 + 17) / 119][Stage 111:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.296193468 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351058439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (77 + 36) / 113][Stage 112:=========================================>           (88 + 25) / 113][Stage 112:==============================================>      (99 + 14) / 113][Stage 112:==================================================>  (107 + 6) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:=====================================>               (81 + 33) / 114][Stage 113:==========================================>          (92 + 22) / 114][Stage 113:==============================================>     (103 + 11) / 114][Stage 113:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.146560436 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367365327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:===================================>                 (78 + 40) / 118][Stage 114:=========================================>           (93 + 25) / 118][Stage 114:===============================================>    (107 + 11) / 118][Stage 114:====================================================>(116 + 2) / 118]                                                                                [Stage 115:=================================>                   (75 + 44) / 119][Stage 115:======================================>              (87 + 32) / 119][Stage 115:=============================================>      (104 + 15) / 119][Stage 115:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.235282835 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357161357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (81 + 32) / 113][Stage 116:==========================================>          (91 + 22) / 113][Stage 116:=============================================>       (96 + 17) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:===================================================> (110 + 3) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:==================================>                  (75 + 39) / 114][Stage 117:=======================================>             (84 + 30) / 114][Stage 117:=============================================>       (97 + 17) / 114][Stage 117:==============================================>     (101 + 13) / 114][Stage 117:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.349623529 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387453565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:==============================>                      (66 + 47) / 113][Stage 118:=====================================>               (80 + 33) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:==============================>                      (65 + 49) / 114][Stage 119:======================================>              (82 + 32) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:=================================================>   (106 + 8) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.373778541 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  p artitionIndex = 91  OR  partitionIndex = 105 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404267335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 61) / 121][Stage 120:==============================>                      (69 + 52) / 121][Stage 120:=======================================>             (90 + 31) / 121][Stage 120:===============================================>    (111 + 10) / 121]                                                                                [Stage 121:==========================>                          (62 + 60) / 122][Stage 121:=============================>                       (69 + 53) / 122][Stage 121:=====================================>               (86 + 36) / 122][Stage 121:=================================================>   (113 + 9) / 122][Stage 121:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.302401796 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399201921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (61 + 59) / 120][Stage 122:================================>                    (73 + 47) / 120][Stage 122:===========================================>        (101 + 19) / 120][Stage 122:===================================================> (116 + 4) / 120]                                                                                [Stage 123:=============================>                       (67 + 54) / 121][Stage 123:==================================>                  (79 + 42) / 121][Stage 123:===========================================>         (99 + 22) / 121][Stage 123:==================================================>  (115 + 6) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.324682242 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  p artitionIndex = 74  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397174854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:==============================>                      (70 + 50) / 120][Stage 124:=====================================>               (84 + 36) / 120][Stage 124:=================================================>   (113 + 7) / 120][Stage 124:====================================================>(119 + 1) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:============================>                        (66 + 55) / 121][Stage 125:=====================================>               (85 + 36) / 121][Stage 125:===========================================>         (99 + 22) / 121][Stage 125:==================================================>  (115 + 6) / 121][Stage 125:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.588505672 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  pa rtitionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398858719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:====================================>                (81 + 37) / 118][Stage 126:===========================================>         (96 + 22) / 118][Stage 126:===================================================> (115 + 3) / 118]                                                                                [Stage 127:=================================>                   (75 + 44) / 119][Stage 127:======================================>              (86 + 33) / 119][Stage 127:=============================================>      (104 + 15) / 119][Stage 127:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.106541012 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411674257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:==============================>                      (64 + 49) / 113][Stage 128:=======================================>             (84 + 29) / 113][Stage 128:==========================================>          (91 + 22) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:===============================>                     (68 + 46) / 114][Stage 129:======================================>              (82 + 32) / 114][Stage 129:==============================================>     (101 + 13) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.319921654 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR   partitionIndex = 93  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412875341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:==========================>                          (61 + 60) / 121][Stage 130:=================================>                   (77 + 44) / 121][Stage 130:======================================>              (89 + 32) / 121][Stage 130:===============================================>    (111 + 10) / 121]                                                                                [Stage 131:===========================>                         (64 + 58) / 122][Stage 131:=================================>                   (78 + 44) / 122][Stage 131:==========================================>         (100 + 22) / 122][Stage 131:=================================================>   (115 + 7) / 122][Stage 131:===================================================> (119 + 3) / 122][Stage 131:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.696001011 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR   partitionIndex = 120  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396330953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 109)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
-------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33343873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (82 + 33) / 115][Stage 132:=============================================>       (99 + 16) / 115][Stage 132:==================================================>  (109 + 6) / 115]                                                                                [Stage 133:======================================>              (85 + 31) / 116][Stage 133:==========================================>          (93 + 23) / 116][Stage 133:=================================================>   (108 + 8) / 116][Stage 133:===================================================> (113 + 3) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.85276588 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  p artitionIndex = 9  OR  partitionIndex = 23 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3368876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 34) / 115][Stage 134:========================================>            (87 + 28) / 115][Stage 134:==============================================>     (102 + 13) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:=======================================>             (87 + 29) / 116][Stage 135:===========================================>         (95 + 21) / 116][Stage 135:================================================>    (107 + 9) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.21994267 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391944561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===============================>                     (68 + 47) / 115][Stage 136:=====================================>               (82 + 33) / 115][Stage 136:==========================================>          (92 + 23) / 115][Stage 136:==============================================>     (103 + 12) / 115][Stage 136:====================================================>(113 + 2) / 115]                                                                                [Stage 137:===============================>                     (68 + 48) / 116][Stage 137:=======================================>             (87 + 29) / 116][Stage 137:=============================================>      (101 + 15) / 116][Stage 137:=================================================>   (108 + 8) / 116][Stage 137:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.920767821 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  p artitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350622901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (77 + 36) / 113][Stage 138:=========================================>           (89 + 24) / 113][Stage 138:=============================================>       (96 + 17) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:===================================================> (110 + 3) / 113]                                                                                [Stage 139:========================================>            (88 + 26) / 114][Stage 139:============================================>        (95 + 19) / 114][Stage 139:==============================================>      (99 + 15) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.358322197 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332582629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:======================================>              (84 + 31) / 115][Stage 140:==========================================>          (92 + 23) / 115][Stage 140:==================================================>  (109 + 6) / 115][Stage 140:====================================================>(113 + 2) / 115][Stage 140:====================================================>(114 + 1) / 115]                                                                                [Stage 141:======================================>              (85 + 31) / 116][Stage 141:==========================================>          (93 + 23) / 116][Stage 141:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.722288626 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  p artitionIndex = 32  OR  partitionIndex = 33 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383025316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:=========================================>           (88 + 25) / 113][Stage 142:=================================================>   (106 + 7) / 113]                                                                                [Stage 143:=============================>                       (64 + 50) / 114][Stage 143:=================================>                   (71 + 43) / 114][Stage 143:=========================================>           (90 + 24) / 114][Stage 143:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.06304066 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  p artitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368286272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (73 + 45) / 118][Stage 144:=======================================>             (87 + 31) / 118][Stage 144:===========================================>         (96 + 22) / 118][Stage 144:===============================================>    (108 + 10) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:====================================>                (81 + 38) / 119][Stage 145:=========================================>           (94 + 25) / 119][Stage 145:===============================================>    (108 + 11) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.345587485 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385633403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:================================>                    (69 + 44) / 113][Stage 146:===========================================>         (93 + 20) / 113][Stage 146:=================================================>   (106 + 7) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:=============================>                       (63 + 51) / 114][Stage 147:==================================>                  (75 + 39) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.267341339 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR   partitionIndex = 200  OR  partitionIndex = 186 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336834022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=====================================>               (81 + 34) / 115][Stage 148:========================================>            (88 + 27) / 115][Stage 148:============================================>        (97 + 18) / 115][Stage 148:===================================================> (111 + 4) / 115]                                                                                [Stage 149:=======================================>             (86 + 30) / 116][Stage 149:=============================================>       (99 + 17) / 116][Stage 149:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.586593096 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 152 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385856064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==================================>                  (75 + 40) / 115][Stage 150:==========================================>          (93 + 22) / 115][Stage 150:===============================================>    (105 + 10) / 115][Stage 150:===================================================> (112 + 3) / 115]                                                                                [Stage 151:==================================>                  (75 + 41) / 116][Stage 151:==========================================>          (93 + 23) / 116][Stage 151:==============================================>     (104 + 12) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.866923895 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333442312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (79 + 36) / 115][Stage 152:=======================================>             (86 + 29) / 115][Stage 152:=============================================>       (99 + 16) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:===================================================> (112 + 3) / 115]                                                                                [Stage 153:=======================================>             (86 + 30) / 116][Stage 153:============================================>        (98 + 18) / 116][Stage 153:==================================================>  (110 + 6) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.896754803 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  pa rtitionIndex = 20  OR  partitionIndex = 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363265699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:=====================================>               (84 + 34) / 118][Stage 154:============================================>       (102 + 16) / 118][Stage 154:==================================================>  (112 + 6) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (75 + 44) / 119][Stage 155:======================================>              (86 + 33) / 119][Stage 155:=============================================>      (103 + 16) / 119][Stage 155:=================================================>   (112 + 7) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.465808224 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336570021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:>                                                      (0 + 0) / 115][Stage 156:======================================>              (83 + 32) / 115][Stage 156:============================================>        (96 + 19) / 115][Stage 156:=================================================>   (107 + 8) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:=======================================>             (87 + 29) / 116][Stage 157:==============================================>     (104 + 12) / 116][Stage 157:===================================================> (113 + 3) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.898785668 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398382221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:============================>                        (65 + 55) / 120][Stage 158:=====================================>               (85 + 35) / 120][Stage 158:===========================================>         (99 + 21) / 120][Stage 158:=================================================>   (112 + 8) / 120]                                                                                [Stage 159:===========================>                         (62 + 59) / 121][Stage 159:==================================>                  (78 + 43) / 121][Stage 159:===========================================>        (102 + 19) / 121][Stage 159:==================================================>  (116 + 5) / 121][Stage 159:====================================================>(119 + 2) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.7576599 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369554538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:===================================>                 (80 + 38) / 118][Stage 160:=========================================>           (93 + 25) / 118][Stage 160:===============================================>    (107 + 11) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:==================================>                  (78 + 41) / 119][Stage 161:=======================================>             (88 + 31) / 119][Stage 161:===============================================>    (109 + 10) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.416628107 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402884496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (64 + 57) / 121][Stage 162:==================================>                  (79 + 42) / 121][Stage 162:===========================================>         (99 + 22) / 121][Stage 162:==================================================>  (115 + 6) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:=================================>                   (77 + 45) / 122][Stage 163:===========================================>        (103 + 19) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.340894067 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386360267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:==============================>                      (64 + 49) / 113][Stage 164:===================================>                 (75 + 38) / 113][Stage 164:=============================================>       (96 + 17) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:==============================>                      (66 + 48) / 114][Stage 165:=======================================>             (85 + 29) / 114][Stage 165:=============================================>      (100 + 14) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.14551634 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  p artitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397829281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==============================>                      (66 + 49) / 115][Stage 166:==================================>                  (74 + 41) / 115][Stage 166:=======================================>             (85 + 30) / 115][Stage 166:=============================================>      (101 + 14) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:====================================>                (80 + 36) / 116][Stage 167:===========================================>         (95 + 21) / 116][Stage 167:===============================================>    (106 + 10) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.853331726 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375108835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (66 + 49) / 115][Stage 168:===================================>                 (76 + 39) / 115][Stage 168:=========================================>           (91 + 24) / 115][Stage 168:=============================================>      (101 + 14) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:==============================>                      (67 + 49) / 116][Stage 169:=====================================>               (81 + 35) / 116][Stage 169:============================================>       (100 + 16) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.754627783 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  p artitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368058255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==================================>                  (74 + 41) / 115][Stage 170:==========================================>          (93 + 22) / 115][Stage 170:================================================>    (106 + 9) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:===================================>                 (78 + 38) / 116][Stage 171:============================================>        (98 + 18) / 116][Stage 171:==============================================>     (104 + 12) / 116][Stage 171:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.960356805 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404715042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 59) / 120][Stage 172:==============================>                      (70 + 50) / 120][Stage 172:====================================>                (83 + 37) / 120][Stage 172:===============================================>    (110 + 10) / 120][Stage 172:====================================================>(119 + 1) / 120]                                                                                [Stage 173:===========================>                         (63 + 58) / 121][Stage 173:===============================>                     (71 + 50) / 121][Stage 173:========================================>            (93 + 28) / 121][Stage 173:==============================================>     (108 + 13) / 121][Stage 173:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.412852867 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  p artitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400200508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 60) / 121][Stage 174:===============================>                     (72 + 49) / 121][Stage 174:========================================>            (93 + 28) / 121][Stage 174:===============================================>    (111 + 10) / 121][Stage 174:===================================================> (118 + 3) / 121]                                                                                [Stage 175:===========================>                         (64 + 58) / 122][Stage 175:===================================>                 (81 + 41) / 122][Stage 175:=========================================>           (95 + 27) / 122][Stage 175:==================================================>  (117 + 5) / 122][Stage 175:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.514317786 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR   partitionIndex = 228  OR  partitionIndex = 184 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347613296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (80 + 33) / 113][Stage 176:==========================================>          (91 + 22) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:===================================================> (109 + 4) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===================================>                 (77 + 37) / 114][Stage 177:=========================================>           (90 + 24) / 114][Stage 177:==============================================>     (101 + 13) / 114][Stage 177:==================================================>  (109 + 5) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.239641725 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392706908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:===============================>                     (71 + 49) / 120][Stage 178:======================================>              (87 + 33) / 120][Stage 178:===========================================>        (100 + 20) / 120][Stage 178:====================================================>(118 + 2) / 120]                                                                                [Stage 179:===========================>                         (62 + 59) / 121][Stage 179:===============================>                     (72 + 49) / 121][Stage 179:===========================================>         (99 + 22) / 121][Stage 179:=================================================>   (113 + 8) / 121][Stage 179:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.55226954 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393256769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (74 + 44) / 118][Stage 180:=====================================>               (84 + 34) / 118][Stage 180:===========================================>         (97 + 21) / 118][Stage 180:==================================================>  (112 + 6) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:====================================>                (82 + 37) / 119][Stage 181:=========================================>           (93 + 26) / 119][Stage 181:==============================================>     (107 + 12) / 119][Stage 181:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.282836136 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR   partitionIndex = 112  OR  partitionIndex = 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377333243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:============================>                        (61 + 52) / 113][Stage 182:===================================>                 (75 + 38) / 113][Stage 182:==============================================>      (99 + 14) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:===============================>                     (68 + 46) / 114][Stage 183:=====================================>               (81 + 33) / 114][Stage 183:===============================================>    (104 + 10) / 114][Stage 183:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.182277723 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  p artitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333453474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (80 + 35) / 115][Stage 184:========================================>            (87 + 28) / 115][Stage 184:==============================================>     (103 + 12) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:======================================>              (85 + 31) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.484071947 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356580923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (74 + 44) / 118][Stage 186:======================================>              (86 + 32) / 118][Stage 186:============================================>       (100 + 18) / 118][Stage 186:===================================================> (115 + 3) / 118]                                                                                [Stage 187:=================================>                   (75 + 44) / 119][Stage 187:====================================>                (83 + 36) / 119][Stage 187:============================================>       (101 + 18) / 119][Stage 187:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.199170796 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116  OR  partitionIndex = 72 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341517519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (80 + 33) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:==============================================>      (99 + 14) / 113][Stage 188:=================================================>   (105 + 8) / 113]                                                                                [Stage 189:=======================================>             (84 + 30) / 114][Stage 189:===========================================>         (94 + 20) / 114][Stage 189:===============================================>    (104 + 10) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.118667962 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39310053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:===============================>                     (73 + 48) / 121][Stage 190:========================================>            (92 + 29) / 121][Stage 190:==================================================>  (115 + 6) / 121]                                                                                [Stage 191:==========================>                          (61 + 61) / 122][Stage 191:=============================>                       (68 + 54) / 122][Stage 191:====================================>                (85 + 37) / 122][Stage 191:=============================================>      (107 + 15) / 122][Stage 191:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.350661022 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364228746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==================================>                  (74 + 41) / 115][Stage 192:==========================================>          (92 + 23) / 115][Stage 192:=================================================>   (107 + 8) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=======================================>             (86 + 30) / 116][Stage 193:===========================================>         (95 + 21) / 116][Stage 193:=================================================>   (109 + 7) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.851271783 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415535516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (62 + 59) / 121][Stage 194:================================>                    (74 + 47) / 121][Stage 194:========================================>            (93 + 28) / 121][Stage 194:===============================================>    (110 + 11) / 121]                                                                                [Stage 195:==========================>                          (62 + 60) / 122][Stage 195:===============================>                     (73 + 49) / 122][Stage 195:=========================================>           (95 + 27) / 122][Stage 195:===============================================>    (112 + 10) / 122][Stage 195:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.49555099 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406889371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:============================>                        (64 + 57) / 121][Stage 196:===================================>                 (82 + 39) / 121][Stage 196:=============================================>      (106 + 15) / 121][Stage 196:====================================================>(120 + 1) / 121]                                                                                [Stage 197:==========================>                          (62 + 60) / 122][Stage 197:==============================>                      (71 + 51) / 122][Stage 197:======================================>              (88 + 34) / 122][Stage 197:============================================>       (104 + 18) / 122][Stage 197:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.41949427 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR   partitionIndex = 97  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354762939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:==================================>                  (76 + 42) / 118][Stage 198:========================================>            (90 + 28) / 118][Stage 198:============================================>       (101 + 17) / 118][Stage 198:===================================================> (115 + 3) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:=================================>                   (75 + 44) / 119][Stage 199:====================================>                (82 + 37) / 119][Stage 199:=========================================>           (93 + 26) / 119][Stage 199:============================================>       (102 + 17) / 119][Stage 199:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.649128904 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 07:05:49 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.41:41216) dropped. RpcEnv already stopped.
17/05/22 07:05:49 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.41:41216) dropped. RpcEnv already stopped.

real	10m21.718s
user	12m1.652s
sys	0m55.192s
