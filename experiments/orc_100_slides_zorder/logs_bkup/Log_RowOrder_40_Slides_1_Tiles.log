Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 04:50:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:51:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:51:01 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:51:02 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 04:51:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:51:14 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522045104-0415).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.442448511 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==>                                                    (5 + 110) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.809981553 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.88178627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======================>                               (52 + 69) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:============================>                          (63 + 58) / 121][Stage 2:==============================>                        (67 + 54) / 121][Stage 2:====================================>                  (80 + 41) / 121][Stage 2:=============================================>        (102 + 19) / 121][Stage 2:===================================================>   (114 + 7) / 121]                                                                                [Stage 3:===========================>                           (61 + 61) / 122][Stage 3:===========================>                           (62 + 60) / 122][Stage 3:================================>                      (71 + 51) / 122][Stage 3:======================================>                (86 + 36) / 122][Stage 3:============================================>          (98 + 24) / 122][Stage 3:=================================================>    (111 + 11) / 122]                                                                                Time elapsed: 4.383480909 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.771651194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (58 + 62) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:===============================>                       (68 + 52) / 120][Stage 4:==================================>                    (75 + 45) / 120][Stage 4:======================================>                (83 + 37) / 120][Stage 4:=========================================>             (91 + 29) / 120][Stage 4:==================================================>    (111 + 9) / 120][Stage 4:======================================================>(118 + 2) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:===============================>                       (69 + 52) / 121][Stage 5:=======================================>               (87 + 34) / 121][Stage 5:==============================================>       (105 + 16) / 121][Stage 5:=================================================>    (111 + 10) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.322445924 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.698935126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (71 + 42) / 113][Stage 6:=====================================>                 (77 + 36) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:===================================================>   (105 + 8) / 113][Stage 6:=====================================================> (109 + 4) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:===================================>                   (74 + 40) / 114][Stage 7:=========================================>             (87 + 27) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:===============================================>       (98 + 16) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:===================================================>   (107 + 7) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.495804288 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560347716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===================================>                   (72 + 41) / 113][Stage 8:=======================================>               (82 + 31) / 113][Stage 8:===========================================>           (89 + 24) / 113][Stage 8:================================================>      (99 + 14) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:===================================>                   (74 + 40) / 114][Stage 9:=======================================>               (81 + 33) / 114][Stage 9:==========================================>            (89 + 25) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:===============================================>      (101 + 13) / 114][Stage 9:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.2268949 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501546183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (69 + 44) / 113][Stage 10:=====================================>                (78 + 35) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:==========================================>           (89 + 24) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:=================================================>    (104 + 9) / 113]                                                                                [Stage 11:====================================>                 (77 + 37) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:==========================================>           (89 + 25) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.86082075 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587864565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:>                                                       (0 + 0) / 113][Stage 12:===========================>                          (57 + 56) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:===============================>                      (66 + 47) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:===========================================>          (90 + 23) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:===============================================>     (101 + 12) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:==================================>                   (72 + 42) / 114][Stage 13:========================================>             (86 + 28) / 114][Stage 13:============================================>         (94 + 20) / 114][Stage 13:==============================================>       (99 + 15) / 114][Stage 13:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.191916558 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.55383187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:==================================>                   (72 + 41) / 113][Stage 14:=======================================>              (82 + 31) / 113][Stage 14:=========================================>            (87 + 26) / 113][Stage 14:==============================================>       (98 + 15) / 113][Stage 14:===================================================>  (107 + 6) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:===========================>                          (58 + 56) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:===================================>                  (75 + 39) / 114][Stage 15:===========================================>          (91 + 23) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.988845832 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549887374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:==================================>                   (72 + 41) / 113][Stage 16:=========================================>            (87 + 26) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (58 + 56) / 114][Stage 17:============================>                         (60 + 54) / 114][Stage 17:===================================>                  (75 + 39) / 114][Stage 17:=============================================>        (97 + 17) / 114][Stage 17:===================================================>  (108 + 6) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.838158854 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452589969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===================================>                  (74 + 39) / 113][Stage 18:=======================================>              (82 + 31) / 113][Stage 18:===========================================>          (90 + 23) / 113][Stage 18:==============================================>      (100 + 13) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:====================================>                 (77 + 37) / 114][Stage 19:==========================================>           (90 + 24) / 114][Stage 19:==============================================>       (99 + 15) / 114][Stage 19:===================================================>  (108 + 6) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.859829358 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544033151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (57 + 56) / 113][Stage 20:================================>                     (69 + 44) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:========================================>             (85 + 29) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.980771694 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529647353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:=============================>                        (65 + 56) / 121][Stage 22:=================================>                    (75 + 46) / 121][Stage 22:========================================>             (91 + 30) / 121][Stage 22:================================================>    (111 + 10) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:=============================>                        (66 + 56) / 122][Stage 23:======================================>               (88 + 34) / 122][Stage 23:=============================================>       (104 + 18) / 122]                                                                                Time elapsed: 3.235871649 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505492677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (60 + 53) / 113][Stage 24:================================>                     (69 + 44) / 113][Stage 24:==========================================>           (89 + 24) / 113][Stage 24:=================================================>    (104 + 9) / 113][Stage 24:====================================================> (110 + 3) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:=============================>                        (63 + 51) / 114][Stage 25:=======================================>              (84 + 30) / 114][Stage 25:===========================================>          (91 + 23) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.537813639 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45819729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (73 + 45) / 118][Stage 26:===================================>                  (78 + 40) / 118][Stage 26:=======================================>              (87 + 31) / 118][Stage 26:=============================================>       (101 + 17) / 118][Stage 26:===================================================>  (112 + 6) / 118][Stage 26:=====================================================>(116 + 2) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (76 + 43) / 119][Stage 27:=====================================>                (83 + 36) / 119][Stage 27:========================================>             (89 + 30) / 119][Stage 27:============================================>        (100 + 19) / 119][Stage 27:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.74589266 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480209638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (63 + 50) / 113][Stage 28:===================================>                  (74 + 39) / 113][Stage 28:=========================================>            (86 + 27) / 113][Stage 28:==================================================>   (106 + 7) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:===================================>                  (74 + 40) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.019192587 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505214956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (67 + 54) / 121][Stage 30:======================================>               (87 + 34) / 121][Stage 30:================================================>    (111 + 10) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (68 + 54) / 122][Stage 31:=======================================>              (89 + 33) / 122][Stage 31:===============================================>     (110 + 12) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.136839631 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4304132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (74 + 39) / 113][Stage 32:=========================================>            (87 + 26) / 113][Stage 32:================================================>    (103 + 10) / 113][Stage 32:===================================================>  (108 + 5) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:=========================================>            (88 + 26) / 114][Stage 33:=============================================>        (97 + 17) / 114][Stage 33:===================================================>  (108 + 6) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.16239085 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457520207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:==================================>                   (76 + 42) / 118][Stage 34:=============================================>       (102 + 16) / 118][Stage 34:=====================================================>(116 + 2) / 118]                                                                                [Stage 35:==================================>                   (75 + 44) / 119][Stage 35:=======================================>              (88 + 31) / 119][Stage 35:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.822096345 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521182298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:============================>                         (63 + 57) / 120][Stage 36:===================================>                  (79 + 41) / 120][Stage 36:============================================>         (99 + 21) / 120][Stage 36:===================================================>  (115 + 5) / 120]                                                                                [Stage 37:==========================>                           (60 + 61) / 121][Stage 37:===========================>                          (61 + 60) / 121][Stage 37:================================>                     (73 + 48) / 121][Stage 37:===========================================>          (97 + 24) / 121][Stage 37:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.073836018 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421406784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=====================================>                (80 + 35) / 115][Stage 38:=======================================>              (84 + 31) / 115][Stage 38:===========================================>          (93 + 22) / 115][Stage 38:==============================================>       (99 + 16) / 115][Stage 38:===================================================>  (110 + 5) / 115]                                                                                [Stage 39:======================================>               (83 + 33) / 116][Stage 39:===========================================>          (94 + 22) / 116][Stage 39:================================================>    (106 + 10) / 116][Stage 39:====================================================> (113 + 3) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.139181275 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42796991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:=================================>                    (74 + 44) / 118][Stage 40:===================================>                  (78 + 40) / 118][Stage 40:=======================================>              (87 + 31) / 118][Stage 40:===============================================>     (105 + 13) / 118][Stage 40:====================================================> (115 + 3) / 118]                                                                                [Stage 41:=================================>                    (73 + 46) / 119][Stage 41:==================================>                   (76 + 43) / 119][Stage 41:=======================================>              (86 + 33) / 119][Stage 41:==========================================>           (93 + 26) / 119][Stage 41:================================================>    (109 + 10) / 119][Stage 41:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.632767842 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533717827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:============================>                         (64 + 56) / 120][Stage 42:=====================================>                (84 + 36) / 120][Stage 42:==============================================>      (106 + 14) / 120][Stage 42:===================================================>  (114 + 6) / 120][Stage 42:=====================================================>(118 + 2) / 120]                                                                                [Stage 43:===========================>                          (62 + 59) / 121][Stage 43:=================================>                    (75 + 46) / 121][Stage 43:==========================================>           (96 + 25) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.215816975 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455866239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:================================>                     (67 + 46) / 113][Stage 44:========================================>             (84 + 29) / 113][Stage 44:==================================================>   (105 + 8) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:================================>                     (69 + 45) / 114][Stage 45:=======================================>              (84 + 30) / 114][Stage 45:===============================================>     (102 + 12) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.114838934 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460715258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:==============================>                       (67 + 53) / 120][Stage 46:====================================>                 (82 + 38) / 120][Stage 46:===============================================>     (108 + 12) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:===============================>                      (71 + 50) / 121][Stage 47:=========================================>            (94 + 27) / 121][Stage 47:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.981021364 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489797373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:=============================>                        (66 + 55) / 121][Stage 48:=====================================>                (84 + 37) / 121][Stage 48:================================================>    (111 + 10) / 121][Stage 48:=====================================================>(120 + 1) / 121]                                                                                [Stage 49:===========================>                          (62 + 60) / 122][Stage 49:==============================>                       (70 + 52) / 122][Stage 49:=====================================>                (85 + 37) / 122][Stage 49:==============================================>      (108 + 14) / 122][Stage 49:==================================================>   (114 + 8) / 122][Stage 49:=====================================================>(120 + 2) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.634582943 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424707696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (70 + 45) / 115][Stage 50:========================================>             (87 + 28) / 115][Stage 50:==============================================>       (99 + 16) / 115][Stage 50:===================================================>  (110 + 5) / 115]                                                                                [Stage 51:==================================>                   (75 + 41) / 116][Stage 51:========================================>             (86 + 30) / 116][Stage 51:==============================================>      (102 + 14) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.153506222 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43601268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:===============================>                      (66 + 47) / 113][Stage 52:=======================================>              (82 + 31) / 113][Stage 52:===============================================>      (99 + 14) / 113][Stage 52:====================================================> (109 + 4) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:==============================>                       (64 + 50) / 114][Stage 53:==================================>                   (73 + 41) / 114][Stage 53:=============================================>        (96 + 18) / 114][Stage 53:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.079258949 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396867325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:====================================>                 (77 + 36) / 113][Stage 54:========================================>             (85 + 28) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:===================================================>  (108 + 5) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:==================================>                   (73 + 41) / 114][Stage 55:=======================================>              (84 + 30) / 114][Stage 55:=============================================>        (95 + 19) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.149214603 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397008926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:==================================>                   (75 + 43) / 118][Stage 56:=======================================>              (87 + 31) / 118][Stage 56:============================================>         (98 + 20) / 118][Stage 56:==================================================>   (111 + 7) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:===================================>                  (79 + 40) / 119][Stage 57:============================================>         (99 + 20) / 119][Stage 57:==================================================>   (112 + 7) / 119][Stage 57:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.341580421 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538628444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:====================================>                 (78 + 37) / 115][Stage 58:============================================>         (94 + 21) / 115][Stage 58:================================================>    (105 + 10) / 115]                                                                                [Stage 59:===================================>                  (76 + 40) / 116][Stage 59:=========================================>            (89 + 27) / 116][Stage 59:===============================================>     (104 + 12) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.666070315 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401732244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===================================>                  (75 + 38) / 113][Stage 60:========================================>             (85 + 28) / 113][Stage 60:===========================================>          (91 + 22) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:====================================>                 (76 + 38) / 114][Stage 61:=========================================>            (87 + 27) / 114][Stage 61:==============================================>      (101 + 13) / 114][Stage 61:===================================================>  (109 + 5) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.098343058 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443255747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:==================================>                   (76 + 42) / 118][Stage 62:=====================================>                (82 + 36) / 118][Stage 62:==========================================>           (92 + 26) / 118][Stage 62:=============================================>       (102 + 16) / 118][Stage 62:=====================================================>(116 + 2) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:==================================>                   (76 + 43) / 119][Stage 63:=======================================>              (88 + 31) / 119][Stage 63:=============================================>       (103 + 16) / 119][Stage 63:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.650041372 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362405729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:======================================>               (82 + 33) / 115][Stage 64:===========================================>          (92 + 23) / 115][Stage 64:=============================================>        (97 + 18) / 115][Stage 64:=================================================>    (106 + 9) / 115]                                                                                [Stage 65:======================================>               (83 + 33) / 116][Stage 65:==========================================>           (91 + 25) / 116][Stage 65:===============================================>     (104 + 12) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.930087752 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458565148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:=============================>                        (65 + 56) / 121][Stage 66:=====================================>                (85 + 36) / 121][Stage 66:============================================>         (99 + 22) / 121][Stage 66:==================================================>   (114 + 7) / 121]                                                                                [Stage 67:===========================>                          (62 + 60) / 122][Stage 67:===============================>                      (72 + 50) / 122][Stage 67:==========================================>           (95 + 27) / 122][Stage 67:===============================================>     (109 + 13) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.224513272 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404965736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:===================================>                  (78 + 40) / 118][Stage 68:========================================>             (88 + 30) / 118][Stage 68:===============================================>     (105 + 13) / 118][Stage 68:====================================================> (115 + 3) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:==================================>                   (77 + 42) / 119][Stage 69:========================================>             (89 + 30) / 119][Stage 69:============================================>         (99 + 20) / 119][Stage 69:==============================================>      (105 + 14) / 119][Stage 69:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.220657995 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443525388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==============================>                       (65 + 50) / 115][Stage 70:====================================>                 (77 + 38) / 115][Stage 70:=============================================>        (97 + 18) / 115][Stage 70:==================================================>   (107 + 8) / 115]                                                                                [Stage 71:===================================>                  (77 + 39) / 116][Stage 71:=============================================>        (98 + 18) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.624360823 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434266672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (61 + 60) / 121][Stage 72:=============================>                        (65 + 56) / 121][Stage 72:==========================================>           (96 + 25) / 121][Stage 72:==================================================>   (113 + 8) / 121][Stage 72:=====================================================>(120 + 1) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:=============================>                        (66 + 56) / 122][Stage 73:=======================================>              (89 + 33) / 122][Stage 73:===============================================>     (110 + 12) / 122][Stage 73:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.113218689 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362668169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (81 + 34) / 115][Stage 74:========================================>             (87 + 28) / 115][Stage 74:=============================================>        (97 + 18) / 115][Stage 74:==================================================>   (107 + 8) / 115]                                                                                [Stage 75:=======================================>              (85 + 31) / 116][Stage 75:=============================================>        (97 + 19) / 116][Stage 75:==================================================>   (109 + 7) / 116][Stage 75:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.859680109 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562535716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:============================>                         (59 + 54) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:=========================================>            (86 + 27) / 113][Stage 76:================================================>    (103 + 10) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:================================>                     (68 + 46) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:===============================================>     (102 + 12) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.27139833 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414276732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (71 + 44) / 115][Stage 78:===========================================>          (93 + 22) / 115][Stage 78:==================================================>   (107 + 8) / 115][Stage 78:====================================================> (112 + 3) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:================================>                     (69 + 47) / 116][Stage 79:=========================================>            (89 + 27) / 116][Stage 79:===============================================>     (104 + 12) / 116][Stage 79:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.965081621 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417655945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:============================>                         (63 + 57) / 120][Stage 80:===================================>                  (79 + 41) / 120][Stage 80:=============================================>       (104 + 16) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:===============================>                      (70 + 51) / 121][Stage 81:============================================>         (99 + 22) / 121][Stage 81:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.981897867 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363435492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (82 + 33) / 115][Stage 82:=======================================>              (85 + 30) / 115][Stage 82:============================================>         (95 + 20) / 115][Stage 82:===================================================>  (110 + 5) / 115]                                                                                [Stage 83:========================================>             (87 + 29) / 116][Stage 83:============================================>         (95 + 21) / 116][Stage 83:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 2.869894045 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541406632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (62 + 59) / 121][Stage 84:===============================>                      (71 + 50) / 121][Stage 84:=========================================>            (94 + 27) / 121][Stage 84:==================================================>   (113 + 8) / 121][Stage 84:=====================================================>(120 + 1) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:==============================>                       (68 + 54) / 122][Stage 85:===================================>                  (80 + 42) / 122][Stage 85:===========================================>         (101 + 21) / 122][Stage 85:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.137287436 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362877069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=====================================>                (79 + 36) / 115][Stage 86:======================================>               (83 + 32) / 115][Stage 86:============================================>         (94 + 21) / 115][Stage 86:================================================>    (105 + 10) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:=======================================>              (84 + 32) / 116][Stage 87:=========================================>            (90 + 26) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.92510432 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428923169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (67 + 53) / 120][Stage 88:========================================>             (91 + 29) / 120][Stage 88:==================================================>   (112 + 8) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:=============================>                        (66 + 55) / 121][Stage 89:=====================================>                (83 + 38) / 121][Stage 89:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.97625014 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381039441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:==================================>                   (75 + 43) / 118][Stage 90:=======================================>              (87 + 31) / 118][Stage 90:==================================================>   (110 + 8) / 118][Stage 90:=====================================================>(117 + 1) / 118]                                                                                [Stage 91:===================================>                  (78 + 41) / 119][Stage 91:========================================>             (90 + 29) / 119][Stage 91:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.921070242 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388451509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:=================================>                    (73 + 45) / 118][Stage 92:===================================>                  (77 + 41) / 118][Stage 92:=======================================>              (87 + 31) / 118][Stage 92:============================================>        (100 + 18) / 118][Stage 92:================================================>    (107 + 11) / 118][Stage 92:=====================================================>(116 + 2) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:===================================>                  (79 + 40) / 119][Stage 93:=========================================>            (91 + 28) / 119][Stage 93:===============================================>     (106 + 13) / 119][Stage 93:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.547557847 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377105144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (80 + 33) / 113][Stage 94:============================================>         (93 + 20) / 113][Stage 94:===============================================>     (101 + 12) / 113][Stage 94:====================================================> (110 + 3) / 113]                                                                                [Stage 95:==================================>                   (73 + 41) / 114][Stage 95:=========================================>            (87 + 27) / 114][Stage 95:==============================================>      (100 + 14) / 114][Stage 95:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.717426018 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410409355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:=============================>                        (65 + 55) / 120][Stage 96:=======================================>              (87 + 33) / 120][Stage 96:=============================================>       (104 + 16) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:==============================>                       (69 + 52) / 121][Stage 97:=====================================>                (85 + 36) / 121][Stage 97:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.990759232 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35064328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (83 + 32) / 115][Stage 98:============================================>         (95 + 20) / 115][Stage 98:===============================================>     (103 + 12) / 115][Stage 98:====================================================> (111 + 4) / 115]                                                                                [Stage 99:========================================>             (87 + 29) / 116][Stage 99:============================================>         (96 + 20) / 116][Stage 99:=================================================>    (107 + 9) / 116][Stage 99:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.88655376 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403084166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:=================================>                   (71 + 42) / 113][Stage 100:======================================>              (83 + 30) / 113][Stage 100:===============================================>    (103 + 10) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:============================>                        (62 + 52) / 114][Stage 101:==================================>                  (75 + 39) / 114][Stage 101:=======================================>             (86 + 28) / 114]                                                                                Time elapsed: 3.074743901 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44731018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==============================>                      (70 + 51) / 121][Stage 102:======================================>              (89 + 32) / 121][Stage 102:=============================================>      (106 + 15) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:============================>                        (65 + 57) / 122][Stage 103:===================================>                 (81 + 41) / 122][Stage 103:===========================================>         (99 + 23) / 122][Stage 103:==================================================>  (117 + 5) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.281199351 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379895715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:=================================>                   (75 + 43) / 118][Stage 104:=====================================>               (83 + 35) / 118][Stage 104:=========================================>           (93 + 25) / 118][Stage 104:===============================================>    (108 + 10) / 118][Stage 104:====================================================>(116 + 2) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:================================>                    (74 + 45) / 119][Stage 105:==================================>                  (78 + 41) / 119][Stage 105:=======================================>             (89 + 30) / 119][Stage 105:============================================>       (102 + 17) / 119][Stage 105:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.535871092 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354689175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (79 + 36) / 115][Stage 106:=======================================>             (85 + 30) / 115][Stage 106:===========================================>         (95 + 20) / 115][Stage 106:==============================================>     (103 + 12) / 115][Stage 106:====================================================>(113 + 2) / 115]                                                                                [Stage 107:=======================================>             (87 + 29) / 116][Stage 107:=============================================>       (99 + 17) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.175711794 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412632083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:>                                                      (0 + 0) / 113][Stage 108:===========================>                         (58 + 55) / 113][Stage 108:============================>                        (61 + 52) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:==================================================>  (108 + 5) / 113]                                                                                [Stage 109:===============================>                     (67 + 47) / 114][Stage 109:=================================>                   (72 + 42) / 114][Stage 109:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 2.990068022 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425722694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:===========================>                         (63 + 57) / 120][Stage 110:====================================>                (82 + 38) / 120][Stage 110:=============================================>      (106 + 14) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:============================>                        (64 + 57) / 121][Stage 111:====================================>                (84 + 37) / 121][Stage 111:==============================================>     (108 + 13) / 121][Stage 111:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.998134892 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3609785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (79 + 34) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:=================================================>   (105 + 8) / 113][Stage 112:====================================================>(111 + 2) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:==================================>                  (75 + 39) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.118619125 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341095701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=======================================>             (85 + 30) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=======================================>             (86 + 30) / 116][Stage 115:==========================================>          (92 + 24) / 116][Stage 115:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.577668896 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339032993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=======================================>             (85 + 30) / 115][Stage 116:==========================================>          (93 + 22) / 115][Stage 116:===============================================>    (105 + 10) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:======================================>              (85 + 31) / 116][Stage 117:============================================>        (98 + 18) / 116][Stage 117:==================================================>  (111 + 5) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.793115323 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369581253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:=================================>                   (74 + 44) / 118][Stage 118:====================================>                (81 + 37) / 118][Stage 118:=======================================>             (88 + 30) / 118][Stage 118:================================================>    (109 + 9) / 118][Stage 118:===================================================> (114 + 4) / 118][Stage 118:====================================================>(117 + 1) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:==================================>                  (78 + 41) / 119][Stage 119:======================================>              (86 + 33) / 119][Stage 119:==========================================>          (95 + 24) / 119][Stage 119:=============================================>      (105 + 14) / 119][Stage 119:==================================================>  (114 + 5) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.719396304 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349604615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:======================================>              (83 + 32) / 115][Stage 120:=============================================>       (98 + 17) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=====================================>               (82 + 34) / 116][Stage 121:==========================================>          (93 + 23) / 116][Stage 121:==============================================>     (103 + 13) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.718801748 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340984761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=======================================>             (86 + 29) / 115][Stage 122:=============================================>      (100 + 15) / 115][Stage 122:================================================>    (106 + 9) / 115][Stage 122:===================================================> (112 + 3) / 115]                                                                                [Stage 123:========================================>            (89 + 27) / 116][Stage 123:==============================================>     (103 + 13) / 116][Stage 123:=================================================>   (109 + 7) / 116][Stage 123:===================================================> (112 + 4) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.164881101 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353565069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==================================>                  (74 + 39) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(111 + 2) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===================================>                 (77 + 37) / 114][Stage 125:========================================>            (88 + 26) / 114][Stage 125:============================================>        (96 + 18) / 114][Stage 125:================================================>    (105 + 9) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.37108309 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356926543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:======================================>              (84 + 31) / 115][Stage 126:========================================>            (88 + 27) / 115][Stage 126:===========================================>         (95 + 20) / 115][Stage 126:===================================================> (112 + 3) / 115]                                                                                [Stage 127:=====================================>               (83 + 33) / 116][Stage 127:=========================================>           (90 + 26) / 116][Stage 127:============================================>       (100 + 16) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.75557909 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389700472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=============================>                       (64 + 51) / 115][Stage 128:==================================>                  (75 + 40) / 115][Stage 128:==========================================>          (92 + 23) / 115][Stage 128:===============================================>    (105 + 10) / 115][Stage 128:==================================================>  (109 + 6) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:==================================>                  (75 + 41) / 116][Stage 129:=========================================>           (91 + 25) / 116][Stage 129:================================================>    (107 + 9) / 116][Stage 129:====================================================>(114 + 2) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.272528701 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392643703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=============================>                       (64 + 51) / 115][Stage 130:====================================>                (79 + 36) / 115][Stage 130:=============================================>       (99 + 16) / 115][Stage 130:===================================================> (112 + 3) / 115]                                                                                [Stage 131:=================================>                   (73 + 43) / 116][Stage 131:===========================================>         (96 + 20) / 116][Stage 131:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.614200572 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408379904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:============================>                        (65 + 56) / 121][Stage 132:==================================>                  (79 + 42) / 121][Stage 132:===========================================>        (102 + 19) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:=================================>                   (77 + 45) / 122][Stage 133:=========================================>           (95 + 27) / 122][Stage 133:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.009409205 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352915607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (70 + 43) / 113][Stage 134:======================================>              (82 + 31) / 113][Stage 134:============================================>        (95 + 18) / 113][Stage 134:=================================================>   (105 + 8) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:=======================================>             (86 + 28) / 114][Stage 135:==========================================>          (91 + 23) / 114][Stage 135:=============================================>      (100 + 14) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.018358738 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365768677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:===================================>                 (78 + 40) / 118][Stage 136:==========================================>          (94 + 24) / 118][Stage 136:===============================================>    (108 + 10) / 118]                                                                                [Stage 137:================================>                    (72 + 47) / 119][Stage 137:====================================>                (83 + 36) / 119][Stage 137:============================================>        (99 + 20) / 119][Stage 137:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.836162921 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383702787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:=============================>                       (62 + 51) / 113][Stage 138:==================================>                  (74 + 39) / 113][Stage 138:===========================================>         (92 + 21) / 113][Stage 138:==============================================>     (102 + 11) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:=================================>                   (73 + 41) / 114][Stage 139:============================================>        (95 + 19) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.340449741 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40238876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (61 + 59) / 120][Stage 140:==============================>                      (68 + 52) / 120][Stage 140:=======================================>             (89 + 31) / 120][Stage 140:===============================================>    (110 + 10) / 120][Stage 140:====================================================>(119 + 1) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:=============================>                       (68 + 53) / 121][Stage 141:=======================================>             (90 + 31) / 121][Stage 141:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.974593863 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361806201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:=====================================>               (83 + 35) / 118][Stage 142:==========================================>          (95 + 23) / 118][Stage 142:===================================================> (114 + 4) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:=================================>                   (76 + 43) / 119][Stage 143:====================================>                (82 + 37) / 119][Stage 143:==========================================>          (95 + 24) / 119][Stage 143:===============================================>    (109 + 10) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.383034246 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372403083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (66 + 49) / 115][Stage 144:===================================>                 (76 + 39) / 115][Stage 144:============================================>        (96 + 19) / 115][Stage 144:==================================================>  (109 + 6) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:====================================>                (79 + 37) / 116][Stage 145:=========================================>           (90 + 26) / 116][Stage 145:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.843173004 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33615496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:======================================>              (84 + 31) / 115][Stage 146:===========================================>         (95 + 20) / 115][Stage 146:================================================>    (106 + 9) / 115][Stage 146:==================================================>  (110 + 5) / 115]                                                                                [Stage 147:======================================>              (85 + 31) / 116][Stage 147:============================================>        (97 + 19) / 116][Stage 147:==================================================>  (110 + 6) / 116][Stage 147:===================================================> (113 + 3) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.990472341 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400457412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:===========================>                         (62 + 59) / 121][Stage 148:==============================>                      (69 + 52) / 121][Stage 148:============================================>       (104 + 17) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=============================>                       (69 + 53) / 122][Stage 149:====================================>                (83 + 39) / 122][Stage 149:===========================================>        (102 + 20) / 122][Stage 149:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.054976154 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3616555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:==================================>                  (77 + 41) / 118][Stage 150:============================================>        (98 + 20) / 118][Stage 150:=================================================>   (110 + 8) / 118]                                                                                [Stage 151:=================================>                   (75 + 44) / 119][Stage 151:====================================>                (83 + 36) / 119][Stage 151:===========================================>        (100 + 19) / 119][Stage 151:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.915227244 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343707169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (82 + 33) / 115][Stage 152:========================================>            (87 + 28) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:===================================================> (111 + 4) / 115]                                                                                [Stage 153:======================================>              (84 + 32) / 116][Stage 153:==========================================>          (92 + 24) / 116][Stage 153:=================================================>   (108 + 8) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.747296163 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397728261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=============================>                       (66 + 54) / 120][Stage 154:=================================>                   (76 + 44) / 120][Stage 154:==========================================>          (97 + 23) / 120][Stage 154:===================================================> (117 + 3) / 120]                                                                                [Stage 155:===========================>                         (63 + 58) / 121][Stage 155:================================>                    (74 + 47) / 121][Stage 155:=======================================>             (91 + 30) / 121][Stage 155:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.913936377 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350054914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:====================================>                (77 + 36) / 113][Stage 156:========================================>            (87 + 26) / 113][Stage 156:=============================================>       (96 + 17) / 113][Stage 156:==================================================>  (108 + 5) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:=======================================>             (84 + 30) / 114][Stage 157:==========================================>          (92 + 22) / 114][Stage 157:=================================================>   (107 + 7) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.143436557 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397918842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:===========================>                         (63 + 57) / 120][Stage 158:=====================================>               (85 + 35) / 120][Stage 158:=============================================>      (105 + 15) / 120][Stage 158:====================================================>(119 + 1) / 120]                                                                                [Stage 159:==========================>                          (61 + 60) / 121][Stage 159:============================>                        (65 + 56) / 121][Stage 159:====================================>                (83 + 38) / 121][Stage 159:============================================>       (104 + 17) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.949658115 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36455123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (80 + 33) / 113][Stage 160:=========================================>           (89 + 24) / 113][Stage 160:===============================================>    (103 + 10) / 113][Stage 160:===================================================> (110 + 3) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===================================>                 (76 + 38) / 114][Stage 161:========================================>            (88 + 26) / 114][Stage 161:=============================================>       (98 + 16) / 114][Stage 161:=================================================>   (107 + 7) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.031371215 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347169002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (81 + 34) / 115][Stage 162:=========================================>           (89 + 26) / 115][Stage 162:==============================================>     (102 + 13) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:======================================>              (85 + 31) / 116][Stage 163:==========================================>          (93 + 23) / 116][Stage 163:================================================>    (107 + 9) / 116][Stage 163:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.684652373 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370939595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==============================>                      (67 + 48) / 115][Stage 164:======================================>              (84 + 31) / 115][Stage 164:=============================================>      (100 + 15) / 115][Stage 164:==================================================>  (109 + 6) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:==============================>                      (67 + 49) / 116][Stage 165:======================================>              (84 + 32) / 116][Stage 165:=============================================>      (102 + 14) / 116][Stage 165:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.967544641 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378698706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:=============================>                       (63 + 50) / 113][Stage 166:=================================>                   (72 + 41) / 113][Stage 166:===========================================>         (93 + 20) / 113][Stage 166:=================================================>   (106 + 7) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:=================================>                   (73 + 41) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.109456478 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365865375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (74 + 39) / 113][Stage 168:======================================>              (83 + 30) / 113][Stage 168:============================================>        (95 + 18) / 113][Stage 168:==================================================>  (107 + 6) / 113]                                                                                [Stage 169:====================================>                (78 + 36) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:===================================================> (110 + 4) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.070666644 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39531801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (70 + 45) / 115][Stage 170:========================================>            (88 + 27) / 115][Stage 170:=============================================>       (99 + 16) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:==================================>                  (75 + 41) / 116][Stage 171:===========================================>         (96 + 20) / 116][Stage 171:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.658286965 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397107338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:=============================>                       (68 + 53) / 121][Stage 172:======================================>              (88 + 33) / 121][Stage 172:===============================================>    (110 + 11) / 121][Stage 172:====================================================>(119 + 2) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:==============================>                      (70 + 52) / 122][Stage 173:======================================>              (89 + 33) / 122][Stage 173:===============================================>    (111 + 11) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.088763973 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349924332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (79 + 34) / 113][Stage 174:=========================================>           (89 + 24) / 113][Stage 174:=============================================>       (97 + 16) / 113][Stage 174:==================================================>  (107 + 6) / 113]                                                                                [Stage 175:=====================================>               (81 + 33) / 114][Stage 175:==========================================>          (91 + 23) / 114][Stage 175:==============================================>     (103 + 11) / 114][Stage 175:=================================================>   (107 + 7) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.051552566 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345179494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:=========================================>           (89 + 26) / 115][Stage 176:=============================================>       (99 + 16) / 115][Stage 176:==================================================>  (109 + 6) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:=========================================>           (91 + 25) / 116][Stage 177:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.684379725 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367677341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:=====================================>               (83 + 35) / 118][Stage 178:============================================>       (102 + 16) / 118][Stage 178:===================================================> (114 + 4) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:=====================================>               (85 + 34) / 119][Stage 179:===========================================>         (98 + 21) / 119][Stage 179:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.975151564 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381308515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (83 + 32) / 115][Stage 180:==========================================>          (93 + 22) / 115][Stage 180:=================================================>   (107 + 8) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:======================================>              (84 + 32) / 116][Stage 181:=========================================>           (90 + 26) / 116][Stage 181:==============================================>     (103 + 13) / 116][Stage 181:=================================================>   (108 + 8) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.811924283 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426985234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 61) / 121][Stage 182:=============================>                       (68 + 53) / 121][Stage 182:====================================>                (83 + 38) / 121][Stage 182:=================================================>   (113 + 8) / 121][Stage 182:====================================================>(119 + 2) / 121]                                                                                [Stage 183:==========================>                          (61 + 61) / 122][Stage 183:=============================>                       (69 + 53) / 122][Stage 183:===================================>                 (81 + 41) / 122][Stage 183:==========================================>         (100 + 22) / 122][Stage 183:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.150323768 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360796274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==================================>                  (74 + 39) / 113][Stage 184:========================================>            (87 + 26) / 113][Stage 184:============================================>        (95 + 18) / 113][Stage 184:=================================================>   (105 + 8) / 113]                                                                                [Stage 185:====================================>                (78 + 36) / 114][Stage 185:========================================>            (88 + 26) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:===================================================> (111 + 3) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.020225477 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395231869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:============================>                        (66 + 55) / 121][Stage 186:====================================>                (83 + 38) / 121][Stage 186:===============================================>    (110 + 11) / 121]                                                                                [Stage 187:===========================>                         (63 + 59) / 122][Stage 187:=================================>                   (76 + 46) / 122][Stage 187:==========================================>          (97 + 25) / 122][Stage 187:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.019925634 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353059543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (80 + 35) / 115][Stage 188:=======================================>             (86 + 29) / 115][Stage 188:============================================>        (97 + 18) / 115][Stage 188:===================================================> (111 + 4) / 115]                                                                                [Stage 189:=======================================>             (87 + 29) / 116][Stage 189:============================================>        (98 + 18) / 116][Stage 189:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.633012397 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363485465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:====================================>                (82 + 36) / 118][Stage 190:=============================================>      (104 + 14) / 118][Stage 190:===================================================> (114 + 4) / 118]                                                                                [Stage 191:================================>                    (74 + 45) / 119][Stage 191:=====================================>               (85 + 34) / 119][Stage 191:=============================================>      (104 + 15) / 119][Stage 191:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.002273544 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33177628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=======================================>             (85 + 30) / 115][Stage 192:===========================================>         (95 + 20) / 115][Stage 192:================================================>    (106 + 9) / 115]                                                                                [Stage 193:======================================>              (85 + 31) / 116][Stage 193:==========================================>          (92 + 24) / 116][Stage 193:==============================================>     (103 + 13) / 116][Stage 193:====================================================>(114 + 2) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.110823548 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411485252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:===============================>                     (72 + 49) / 121][Stage 194:=====================================>               (86 + 35) / 121][Stage 194:=============================================>      (105 + 16) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:============================>                        (65 + 57) / 122][Stage 195:==================================>                  (80 + 42) / 122][Stage 195:=========================================>           (96 + 26) / 122][Stage 195:===============================================>    (112 + 10) / 122][Stage 195:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.31599097 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499433577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===================================>                 (76 + 39) / 115][Stage 196:=======================================>             (85 + 30) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:====================================>                (79 + 37) / 116][Stage 197:==========================================>          (92 + 24) / 116][Stage 197:=================================================>   (108 + 8) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.383118572 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34705192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=======================================>             (85 + 30) / 115][Stage 198:=========================================>           (91 + 24) / 115][Stage 198:===============================================>    (104 + 11) / 115][Stage 198:===================================================> (111 + 4) / 115]                                                                                [Stage 199:======================================>              (85 + 31) / 116][Stage 199:==========================================>          (92 + 24) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.871932288 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352997543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (71 + 42) / 113][Stage 200:=======================================>             (85 + 28) / 113][Stage 200:=============================================>       (97 + 16) / 113][Stage 200:==================================================>  (108 + 5) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:==================================>                  (74 + 40) / 114][Stage 201:=====================================>               (80 + 34) / 114][Stage 201:============================================>        (96 + 18) / 114][Stage 201:================================================>    (105 + 9) / 114][Stage 201:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.20714162 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.858s
user	11m30.640s
sys	0m28.052s
