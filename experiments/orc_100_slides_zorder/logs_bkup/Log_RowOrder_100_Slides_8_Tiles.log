Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 10:14:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:14:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:14:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:14:58 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 10:15:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:15:10 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523101500-0553).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.372432299 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======>                                              (15 + 100) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.472301071 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex  = 93  OR  partitionIndex = 107 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.644951023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:============================>                          (58 + 55) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:==================================>                    (71 + 42) / 113][Stage 2:=========================================>             (86 + 27) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(111 + 2) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:================================>                      (68 + 46) / 114][Stage 3:==================================>                    (72 + 42) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:============================================>          (93 + 21) / 114][Stage 3:================================================>     (103 + 11) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.080336192 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  pa rtitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex =  95  OR  partitionIndex = 109 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.717736898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================>                                 (48 + 73) / 121][Stage 4:========================>                              (53 + 68) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:=============================>                         (64 + 57) / 121][Stage 4:===============================>                       (69 + 52) / 121][Stage 4:=================================>                     (74 + 47) / 121][Stage 4:=========================================>             (92 + 29) / 121][Stage 4:====================================================>  (115 + 6) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:============================>                          (63 + 59) / 122][Stage 5:===============================>                       (69 + 53) / 122][Stage 5:=====================================>                 (84 + 38) / 122][Stage 5:==============================================>       (105 + 17) / 122][Stage 5:=================================================>    (111 + 11) / 122][Stage 5:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.025492725 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.6382683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:===============================>                       (64 + 49) / 113][Stage 6:====================================>                  (74 + 39) / 113][Stage 6:===========================================>           (89 + 24) / 113][Stage 6:===============================================>       (98 + 15) / 113][Stage 6:====================================================>  (107 + 6) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:===================================>                   (74 + 40) / 114][Stage 7:===========================================>           (90 + 24) / 114][Stage 7:================================================>     (103 + 11) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.770814143 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIn dex = 207  OR  partitionIndex = 208 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617764455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:============================>                          (63 + 58) / 121][Stage 8:======================================>                (84 + 37) / 121][Stage 8:=============================================>         (99 + 22) / 121][Stage 8:===================================================>   (113 + 8) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:===============================>                       (69 + 53) / 122][Stage 9:=================================>                     (75 + 47) / 122][Stage 9:=======================================>               (88 + 34) / 122][Stage 9:=============================================>        (102 + 20) / 122][Stage 9:===================================================>   (115 + 7) / 122][Stage 9:=====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.660854088 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex  = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477360202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===================================>                  (76 + 39) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:========================================>             (86 + 29) / 115][Stage 10:===========================================>          (92 + 23) / 115][Stage 10:===================================================>  (110 + 5) / 115]                                                                                [Stage 11:======================================>               (82 + 34) / 116][Stage 11:==========================================>           (91 + 25) / 116][Stage 11:=============================================>       (100 + 16) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.476923385 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIn dex = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.635363511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (65 + 56) / 121][Stage 12:=====================================>                (85 + 36) / 121][Stage 12:============================================>        (102 + 19) / 121][Stage 12:================================================>    (110 + 11) / 121][Stage 12:====================================================> (118 + 3) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (64 + 58) / 122][Stage 13:================================>                     (73 + 49) / 122][Stage 13:=======================================>              (89 + 33) / 122][Stage 13:============================================>        (103 + 19) / 122][Stage 13:===================================================>  (116 + 6) / 122][Stage 13:=====================================================>(120 + 2) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.572271849 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  p artitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex  = 112  OR  partitionIndex = 8 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568825817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===========================>                          (62 + 58) / 120][Stage 14:===============================>                      (71 + 49) / 120][Stage 14:=========================================>            (93 + 27) / 120][Stage 14:=============================================>       (104 + 16) / 120][Stage 14:====================================================> (117 + 3) / 120]                                                                                [Stage 15:==========================>                           (60 + 61) / 121][Stage 15:============================>                         (63 + 58) / 121][Stage 15:==================================>                   (77 + 44) / 121][Stage 15:===========================================>          (97 + 24) / 121][Stage 15:================================================>    (110 + 11) / 121][Stage 15:===================================================>  (116 + 5) / 121][Stage 15:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.239474827 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex =  113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435595886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:======================================>               (83 + 32) / 115][Stage 16:============================================>         (95 + 20) / 115][Stage 16:===============================================>     (104 + 11) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:======================================>               (83 + 33) / 116][Stage 17:==========================================>           (92 + 24) / 116][Stage 17:================================================>    (106 + 10) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.855694828 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIn dex = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519492557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===============================>                      (68 + 47) / 115][Stage 18:====================================>                 (78 + 37) / 115][Stage 18:=============================================>        (96 + 19) / 115][Stage 18:===============================================>     (104 + 11) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:==============================>                       (66 + 50) / 116][Stage 19:======================================>               (83 + 33) / 116][Stage 19:===========================================>          (94 + 22) / 116][Stage 19:=================================================>    (107 + 9) / 116]                                                                                Time elapsed: 3.269773776 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  pa rtitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionInde x = 104  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539119801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:==================================>                   (73 + 40) / 113][Stage 20:==========================================>           (89 + 24) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:==============================>                       (65 + 49) / 114][Stage 21:=====================================>                (79 + 35) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.00300319 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex =  41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503123384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (75 + 43) / 118][Stage 22:======================================>               (84 + 34) / 118][Stage 22:===========================================>          (94 + 24) / 118][Stage 22:===================================================>  (112 + 6) / 118]                                                                                [Stage 23:=================================>                    (74 + 45) / 119][Stage 23:====================================>                 (80 + 39) / 119][Stage 23:========================================>             (89 + 30) / 119][Stage 23:===============================================>     (106 + 13) / 119][Stage 23:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.764668473 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIn dex = 234  OR  partitionIndex = 220 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (68 + 45) / 113][Stage 24:======================================>               (80 + 33) / 113][Stage 24:===========================================>          (91 + 22) / 113][Stage 24:==============================================>      (100 + 13) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:================================>                     (68 + 46) / 114][Stage 25:========================================>             (86 + 28) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.619813285 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex  = 74  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579531691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:============================>                         (59 + 54) / 113][Stage 26:===================================>                  (74 + 39) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:====================================================> (109 + 4) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:====================================>                 (78 + 36) / 114][Stage 27:===========================================>          (92 + 22) / 114][Stage 27:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.819146968 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex  = 108  OR  partitionIndex = 64 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507655339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:============================>                         (64 + 57) / 121][Stage 28:======================================>               (86 + 35) / 121][Stage 28:===================================================>  (115 + 6) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:============================>                         (64 + 58) / 122][Stage 29:==================================>                   (77 + 45) / 122][Stage 29:========================================>             (91 + 31) / 122][Stage 29:================================================>    (111 + 11) / 122][Stage 29:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.763843477 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIn dex = 159  OR  partitionIndex = 173 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487132913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===============================>                      (67 + 48) / 115][Stage 30:=======================================>              (84 + 31) / 115][Stage 30:============================================>         (95 + 20) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:======================================>               (82 + 34) / 116][Stage 31:=============================================>       (100 + 16) / 116][Stage 31:==================================================>   (109 + 7) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:====================================================> (113 + 3) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.506580739 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIn dex = 166  OR  partitionIndex = 152 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500981877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:============================>                         (63 + 57) / 120][Stage 32:==================================>                   (77 + 43) / 120][Stage 32:=========================================>            (92 + 28) / 120][Stage 32:================================================>    (109 + 11) / 120][Stage 32:===================================================>  (114 + 6) / 120][Stage 32:=====================================================>(119 + 1) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:==============================>                       (68 + 53) / 121][Stage 33:====================================>                 (81 + 40) / 121][Stage 33:=============================================>       (103 + 18) / 121][Stage 33:=================================================>    (112 + 9) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.796087249 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR  p artitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex =  67  OR  partitionIndex = 81 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424936272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:====================================>                 (78 + 37) / 115][Stage 34:======================================>               (83 + 32) / 115][Stage 34:===========================================>          (93 + 22) / 115][Stage 34:=================================================>    (106 + 9) / 115][Stage 34:===================================================>  (110 + 5) / 115][Stage 34:=====================================================>(113 + 2) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:======================================>               (83 + 33) / 116][Stage 35:========================================>             (86 + 30) / 116][Stage 35:=============================================>        (98 + 18) / 116][Stage 35:===============================================>     (104 + 12) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.624306799 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIn dex = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44305487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:=====================================>                (81 + 37) / 118][Stage 36:=========================================>            (91 + 27) / 118][Stage 36:==============================================>      (103 + 15) / 118][Stage 36:==================================================>   (110 + 8) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:=================================>                    (74 + 45) / 119][Stage 37:====================================>                 (81 + 38) / 119][Stage 37:============================================>        (100 + 19) / 119][Stage 37:================================================>    (108 + 11) / 119][Stage 37:====================================================> (116 + 3) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.273821795 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex =  32  OR  partitionIndex = 33 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463791957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (69 + 46) / 115][Stage 38:=======================================>              (84 + 31) / 115][Stage 38:===============================================>     (103 + 12) / 115][Stage 38:====================================================> (112 + 3) / 115]                                                                                [Stage 39:================================>                     (69 + 47) / 116][Stage 39:===================================>                  (76 + 40) / 116][Stage 39:========================================>             (87 + 29) / 116][Stage 39:===============================================>     (103 + 13) / 116][Stage 39:=================================================>    (107 + 9) / 116][Stage 39:==================================================>   (108 + 8) / 116][Stage 39:===================================================>  (111 + 5) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.211998826 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex  = 97  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458023138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===================================>                  (74 + 39) / 113][Stage 40:========================================>             (85 + 28) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:=================================================>    (104 + 9) / 113][Stage 40:====================================================> (109 + 4) / 113]                                                                                [Stage 41:=====================================>                (80 + 34) / 114][Stage 41:=============================================>        (95 + 19) / 114][Stage 41:================================================>    (104 + 10) / 114][Stage 41:=====================================================>(112 + 2) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.366771147 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex =  77  OR  partitionIndex = 78 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476804159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:===================================>                  (78 + 40) / 118][Stage 42:=============================================>       (101 + 17) / 118][Stage 42:====================================================> (115 + 3) / 118]                                                                                [Stage 43:=================================>                    (74 + 45) / 119][Stage 43:=====================================>                (83 + 36) / 119][Stage 43:============================================>         (99 + 20) / 119][Stage 43:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.035954054 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIn dex = 148  OR  partitionIndex = 134 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441225984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===============================>                      (67 + 48) / 115][Stage 44:===================================>                  (76 + 39) / 115][Stage 44:========================================>             (87 + 28) / 115][Stage 44:==============================================>      (101 + 14) / 115][Stage 44:====================================================> (111 + 4) / 115]                                                                                [Stage 45:====================================>                 (78 + 38) / 116][Stage 45:=======================================>              (85 + 31) / 116][Stage 45:==============================================>      (102 + 14) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.026154268 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIn dex = 232  OR  partitionIndex = 128 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466945667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 121][Stage 46:==========================>                           (60 + 61) / 121][Stage 46:============================>                         (64 + 57) / 121][Stage 46:==================================>                   (77 + 44) / 121][Stage 46:===========================================>          (98 + 23) / 121][Stage 46:=====================================================>(119 + 2) / 121]                                                                                [Stage 47:============================>                         (64 + 58) / 122][Stage 47:===================================>                  (80 + 42) / 122][Stage 47:==========================================>           (97 + 25) / 122][Stage 47:==================================================>   (113 + 9) / 122][Stage 47:====================================================> (118 + 4) / 122][Stage 47:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.375037461 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIn dex = 137  OR  partitionIndex = 138 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453421323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==============================>                       (65 + 50) / 115][Stage 48:==================================>                   (73 + 42) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:==============================================>      (101 + 14) / 115][Stage 48:=================================================>    (106 + 9) / 115][Stage 48:===================================================>  (110 + 5) / 115][Stage 48:====================================================> (111 + 4) / 115]                                                                                [Stage 49:===================================>                  (76 + 40) / 116][Stage 49:============================================>         (95 + 21) / 116][Stage 49:==================================================>   (109 + 7) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.360915767 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex =  33  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475571835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:================================>                     (67 + 46) / 113][Stage 50:======================================>               (80 + 33) / 113][Stage 50:=============================================>        (96 + 17) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:==================================>                   (73 + 41) / 114][Stage 51:==========================================>           (90 + 24) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.058543539 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIn dex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427995041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===================================>                  (76 + 39) / 115][Stage 52:=========================================>            (88 + 27) / 115][Stage 52:==============================================>       (98 + 17) / 115][Stage 52:====================================================> (112 + 3) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:======================================>               (83 + 33) / 116][Stage 53:=============================================>       (100 + 16) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.018880263 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIn dex = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417615468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (73 + 45) / 118][Stage 54:==================================>                   (75 + 43) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:=========================================>            (90 + 28) / 118][Stage 54:===============================================>     (106 + 12) / 118]                                                                                [Stage 55:=================================>                    (74 + 45) / 119][Stage 55:==================================>                   (76 + 43) / 119][Stage 55:====================================>                 (80 + 39) / 119][Stage 55:=========================================>            (92 + 27) / 119][Stage 55:===============================================>     (106 + 13) / 119][Stage 55:==================================================>   (111 + 8) / 119][Stage 55:==================================================>   (112 + 7) / 119][Stage 55:===================================================>  (114 + 5) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.607838271 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIn dex = 192  OR  partitionIndex = 193 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432552256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:=============================>                        (61 + 52) / 113][Stage 56:======================================>               (81 + 32) / 113][Stage 56:==============================================>      (100 + 13) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:===============================>                      (66 + 48) / 114][Stage 57:=================================>                    (71 + 43) / 114][Stage 57:===========================================>          (91 + 23) / 114][Stage 57:===============================================>     (102 + 12) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.590447807 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432083375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (74 + 44) / 118][Stage 58:====================================>                 (80 + 38) / 118][Stage 58:=========================================>            (91 + 27) / 118][Stage 58:=============================================>       (101 + 17) / 118][Stage 58:===================================================>  (113 + 5) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:==================================>                   (77 + 42) / 119][Stage 59:=======================================>              (86 + 33) / 119][Stage 59:===========================================>          (95 + 24) / 119][Stage 59:===============================================>     (106 + 13) / 119]                                                                                Time elapsed: 4.770159195 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIn dex = 204  OR  partitionIndex = 190 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524849154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:============================>                         (64 + 57) / 121][Stage 60:=================================>                    (75 + 46) / 121][Stage 60:=============================================>       (104 + 17) / 121][Stage 60:====================================================> (118 + 3) / 121]                                                                                [Stage 61:===========================>                          (63 + 59) / 122][Stage 61:===============================>                      (72 + 50) / 122][Stage 61:=========================================>            (93 + 29) / 122][Stage 61:==================================================>   (113 + 9) / 122][Stage 61:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.205330471 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex =  28  OR  partitionIndex = 14 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46505192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:>                                                       (0 + 0) / 113][Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (62 + 51) / 113][Stage 62:====================================>                 (76 + 37) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:================================================>    (103 + 10) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:======================================>               (81 + 33) / 114][Stage 63:===========================================>          (91 + 23) / 114][Stage 63:==============================================>       (99 + 15) / 114][Stage 63:===================================================>  (108 + 6) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.655740304 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIn dex = 230  OR  partitionIndex = 216 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388837435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (70 + 43) / 113][Stage 64:=====================================>                (79 + 34) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:==============================================>       (98 + 15) / 113][Stage 64:=====================================================>(111 + 2) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:======================================>               (81 + 33) / 114][Stage 65:=============================================>        (97 + 17) / 114][Stage 65:================================================>    (104 + 10) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.437465073 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  pa rtitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5   OR  partitionIndex = 19 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389362696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (71 + 42) / 113][Stage 66:====================================>                 (77 + 36) / 113][Stage 66:==========================================>           (89 + 24) / 113][Stage 66:==============================================>       (97 + 16) / 113][Stage 66:===================================================>  (107 + 6) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:====================================>                 (76 + 38) / 114][Stage 67:=======================================>              (83 + 31) / 114][Stage 67:===========================================>          (91 + 23) / 114][Stage 67:==============================================>       (99 + 15) / 114][Stage 67:==================================================>   (107 + 7) / 114][Stage 67:====================================================> (111 + 3) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.579257138 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIn dex = 122  OR  partitionIndex = 123 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39035012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===================================>                  (75 + 38) / 113][Stage 68:=========================================>            (87 + 26) / 113][Stage 68:=============================================>        (95 + 18) / 113][Stage 68:==================================================>   (105 + 8) / 113][Stage 68:====================================================> (110 + 3) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:===================================>                  (75 + 39) / 114][Stage 69:========================================>             (85 + 29) / 114][Stage 69:==============================================>       (99 + 15) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.382355835 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423552547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===================================>                  (74 + 39) / 113][Stage 70:=======================================>              (83 + 30) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:==================================================>   (105 + 8) / 113]                                                                                [Stage 71:======================================>               (81 + 33) / 114][Stage 71:============================================>         (93 + 21) / 114][Stage 71:================================================>    (104 + 10) / 114][Stage 71:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.820788362 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIn dex = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376005494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:>                                                       (0 + 0) / 115][Stage 72:======================================>               (81 + 34) / 115][Stage 72:========================================>             (86 + 29) / 115][Stage 72:==============================================>       (98 + 17) / 115][Stage 72:===================================================>  (109 + 6) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:======================================>               (83 + 33) / 116][Stage 73:=========================================>            (89 + 27) / 116][Stage 73:===============================================>     (104 + 12) / 116][Stage 73:===================================================>  (110 + 6) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.128101834 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 216  OR  partitionIndex = 217 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430250948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:============================>                         (60 + 53) / 113][Stage 74:==================================>                   (73 + 40) / 113][Stage 74:==============================================>       (97 + 16) / 113][Stage 74:====================================================> (109 + 4) / 113]                                                                                [Stage 75:=============================>                        (62 + 52) / 114][Stage 75:===================================>                  (75 + 39) / 114][Stage 75:==========================================>           (90 + 24) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.671319593 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIn dex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444254313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 60) / 121][Stage 76:================================>                     (73 + 48) / 121][Stage 76:=========================================>            (92 + 29) / 121][Stage 76:===================================================>  (116 + 5) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:==============================>                       (68 + 54) / 122][Stage 77:==================================>                   (77 + 45) / 122][Stage 77:===========================================>          (98 + 24) / 122][Stage 77:==================================================>   (114 + 8) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.183146838 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIn dex = 153  OR  partitionIndex = 167 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445589497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:============================>                         (63 + 58) / 121][Stage 78:================================>                     (73 + 48) / 121][Stage 78:=========================================>            (92 + 29) / 121][Stage 78:===================================================>  (115 + 6) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (66 + 56) / 122][Stage 79:==================================>                   (78 + 44) / 122][Stage 79:==============================================>      (107 + 15) / 122][Stage 79:====================================================> (118 + 4) / 122][Stage 79:=====================================================>(120 + 2) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.068308601 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  pa rtitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6   OR  partitionIndex = 7 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414170576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (67 + 46) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:==================================================>   (106 + 7) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:==============================>                       (65 + 49) / 114][Stage 81:==========================================>           (90 + 24) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.976481444 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIn dex = 124  OR  partitionIndex = 125 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381485871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===================================>                  (75 + 38) / 113][Stage 82:=========================================>            (86 + 27) / 113][Stage 82:=============================================>        (96 + 17) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:===================================>                  (75 + 39) / 114][Stage 83:=========================================>            (88 + 26) / 114][Stage 83:==============================================>       (98 + 16) / 114][Stage 83:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.923825494 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionInd ex = 105  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444069293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (62 + 59) / 121][Stage 84:===============================>                      (71 + 50) / 121][Stage 84:========================================>             (91 + 30) / 121][Stage 84:================================================>    (111 + 10) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:============================>                         (65 + 57) / 122][Stage 85:===================================>                  (81 + 41) / 122][Stage 85:============================================>        (103 + 19) / 122][Stage 85:====================================================> (118 + 4) / 122][Stage 85:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.77622183 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIn dex = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424321269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=======================================>              (84 + 31) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:==================================================>   (108 + 7) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=======================================>              (84 + 32) / 116][Stage 87:============================================>         (96 + 20) / 116][Stage 87:=================================================>    (107 + 9) / 116][Stage 87:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.709608723 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  pa rtitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex =  48  OR  partitionIndex = 4 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403313561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (67 + 46) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:===============================================>     (101 + 12) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:================================>                     (68 + 46) / 114][Stage 89:=====================================>                (80 + 34) / 114][Stage 89:==============================================>       (98 + 16) / 114][Stage 89:=====================================================>(112 + 2) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.94552595 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173  OR   partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIn dex = 176  OR  partitionIndex = 132 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420743637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:====================================>                 (81 + 39) / 120][Stage 90:============================================>        (101 + 19) / 120][Stage 90:===================================================>  (115 + 5) / 120]                                                                                [Stage 91:============================>                         (64 + 57) / 121][Stage 91:=================================>                    (75 + 46) / 121][Stage 91:=========================================>            (93 + 28) / 121][Stage 91:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.747847492 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIn dex = 133  OR  partitionIndex = 147 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378965302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (81 + 32) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:==============================================>       (98 + 15) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:====================================================> (109 + 4) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:====================================>                 (77 + 37) / 114][Stage 93:==========================================>           (89 + 25) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.439646577 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIn dex = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400993534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (70 + 45) / 115][Stage 94:=========================================>            (88 + 27) / 115][Stage 94:===============================================>     (102 + 13) / 115][Stage 94:====================================================> (111 + 4) / 115]                                                                                [Stage 95:=====================================>                (81 + 35) / 116][Stage 95:=============================================>        (98 + 18) / 116][Stage 95:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.673702166 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  pa rtitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex =  15  OR  partitionIndex = 29 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366713643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (80 + 33) / 113][Stage 96:===========================================>          (92 + 21) / 113][Stage 96:==============================================>       (98 + 15) / 113][Stage 96:===================================================>  (107 + 6) / 113]                                                                                [Stage 97:=====================================>                (80 + 34) / 114][Stage 97:========================================>             (86 + 28) / 114][Stage 97:============================================>         (94 + 20) / 114][Stage 97:===============================================>     (102 + 12) / 114][Stage 97:=================================================>    (105 + 9) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.228622248 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIn dex = 190  OR  partitionIndex = 191 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414541638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (61 + 59) / 120][Stage 98:===============================>                      (69 + 51) / 120][Stage 98:=====================================>                (83 + 37) / 120][Stage 98:============================================>        (101 + 19) / 120]                                                                                [Stage 99:===========================>                          (61 + 60) / 121][Stage 99:===============================>                      (70 + 51) / 121][Stage 99:===========================================>          (97 + 24) / 121][Stage 99:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.703019427 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  part itionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17   OR  partitionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379204984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:===================================>                 (79 + 39) / 118][Stage 100:=======================================>             (88 + 30) / 118][Stage 100:==============================================>     (106 + 12) / 118][Stage 100:===================================================> (115 + 3) / 118]                                                                                [Stage 101:=================================>                   (75 + 44) / 119][Stage 101:=====================================>               (84 + 35) / 119][Stage 101:==========================================>          (95 + 24) / 119][Stage 101:===============================================>    (109 + 10) / 119][Stage 101:===================================================> (116 + 3) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.048823342 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex =  81  OR  partitionIndex = 82 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352838179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=====================================>               (81 + 34) / 115][Stage 102:=========================================>           (90 + 25) / 115][Stage 102:============================================>        (96 + 19) / 115][Stage 102:===============================================>    (104 + 11) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:=====================================>               (81 + 35) / 116][Stage 103:=======================================>             (87 + 29) / 116][Stage 103:===========================================>         (95 + 21) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.132681426 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421143678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:==============================>                      (68 + 52) / 120][Stage 104:====================================>                (82 + 38) / 120][Stage 104:===============================================>    (110 + 10) / 120][Stage 104:====================================================>(119 + 1) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:==============================>                      (70 + 51) / 121][Stage 105:==================================>                  (78 + 43) / 121][Stage 105:=============================================>      (106 + 15) / 121][Stage 105:====================================================>(119 + 2) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.503424249 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex =  53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360110561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===================================>                 (76 + 37) / 113][Stage 106:=======================================>             (84 + 29) / 113][Stage 106:==========================================>          (91 + 22) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:==================================>                  (75 + 39) / 114][Stage 107:======================================>              (82 + 32) / 114][Stage 107:============================================>        (96 + 18) / 114][Stage 107:===============================================>    (104 + 10) / 114][Stage 107:==================================================>  (108 + 6) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.456142934 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  pa rtitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex =  82  OR  partitionIndex = 94 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420773858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:=================================>                   (71 + 42) / 113][Stage 108:======================================>              (82 + 31) / 113][Stage 108:==============================================>     (102 + 11) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:===============================>                     (68 + 46) / 114][Stage 109:=======================================>             (85 + 29) / 114][Stage 109:=============================================>      (100 + 14) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.837005718 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR   partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIn dex = 136  OR  partitionIndex = 122 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418965552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:============================>                        (66 + 55) / 121][Stage 110:====================================>                (84 + 37) / 121][Stage 110:==============================================>     (108 + 13) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:==============================>                      (70 + 52) / 122][Stage 111:======================================>              (88 + 34) / 122][Stage 111:=================================================>   (114 + 8) / 122][Stage 111:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.130732705 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  pa rtitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex =  70  OR  partitionIndex = 71 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394183391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:==============================>                      (70 + 50) / 120][Stage 112:=====================================>               (85 + 35) / 120][Stage 112:===================================================> (116 + 4) / 120]                                                                                [Stage 113:============================>                        (64 + 57) / 121][Stage 113:=================================>                   (77 + 44) / 121][Stage 113:=========================================>           (95 + 26) / 121][Stage 113:==================================================>  (116 + 5) / 121][Stage 113:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.080296983 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIn dex = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357078072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (74 + 39) / 113][Stage 114:======================================>              (83 + 30) / 113][Stage 114:===========================================>         (93 + 20) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:===================================================> (109 + 4) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:==================================>                  (74 + 40) / 114][Stage 115:======================================>              (83 + 31) / 114][Stage 115:==============================================>      (99 + 15) / 114][Stage 115:==============================================>     (102 + 12) / 114][Stage 115:==================================================>  (109 + 5) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.401868934 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 92  OR  partitionIndex = 93 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363495032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:====================================>                (82 + 36) / 118][Stage 116:========================================>            (90 + 28) / 118][Stage 116:============================================>        (99 + 19) / 118][Stage 116:=================================================>   (111 + 7) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:===================================>                 (79 + 40) / 119][Stage 117:========================================>            (92 + 27) / 119][Stage 117:=============================================>      (104 + 15) / 119][Stage 117:===============================================>    (108 + 11) / 119][Stage 117:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.574503757 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379279264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=================================>                   (73 + 42) / 115][Stage 118:=========================================>           (89 + 26) / 115][Stage 118:===============================================>    (105 + 10) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:================================>                    (72 + 44) / 116][Stage 119:========================================>            (88 + 28) / 116][Stage 119:=============================================>      (101 + 15) / 116][Stage 119:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.641796582 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIn dex = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388132252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:==================================>                  (74 + 39) / 113][Stage 120:==============================================>      (99 + 14) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:============================>                        (62 + 52) / 114][Stage 121:======================================>              (82 + 32) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:==================================================>  (108 + 6) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.678235285 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex =  47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339408154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (81 + 34) / 115][Stage 122:=======================================>             (86 + 29) / 115][Stage 122:=============================================>      (100 + 15) / 115][Stage 122:=================================================>   (107 + 8) / 115][Stage 122:====================================================>(113 + 2) / 115]                                                                                [Stage 123:=====================================>               (82 + 34) / 116][Stage 123:==========================================>          (93 + 23) / 116][Stage 123:============================================>       (100 + 16) / 116][Stage 123:===============================================>    (106 + 10) / 116][Stage 123:=================================================>   (108 + 8) / 116][Stage 123:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.930379295 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  pa rtitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex =  38  OR  partitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39367229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:===========================>                         (62 + 58) / 120][Stage 124:===================================>                 (80 + 40) / 120][Stage 124:=============================================>      (104 + 16) / 120][Stage 124:====================================================>(119 + 1) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:===============================>                     (71 + 50) / 121][Stage 125:=====================================>               (85 + 36) / 121][Stage 125:===========================================>        (101 + 20) / 121][Stage 125:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.661062389 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIn dex = 149  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364383115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (74 + 39) / 113][Stage 126:========================================>            (86 + 27) / 113][Stage 126:============================================>        (94 + 19) / 113][Stage 126:==============================================>     (101 + 12) / 113][Stage 126:===================================================> (110 + 3) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:=================================>                   (72 + 42) / 114][Stage 127:=======================================>             (84 + 30) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.314632211 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  pa rtitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex =  60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374773989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:>                                                      (0 + 0) / 113][Stage 128:====================================>                (78 + 35) / 113][Stage 128:=======================================>             (85 + 28) / 113][Stage 128:=============================================>       (97 + 16) / 113][Stage 128:==================================================>  (108 + 5) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:=====================================>               (80 + 34) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:=================================================>   (107 + 7) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.891713064 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  par titionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31   OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388668693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:=============================>                       (62 + 51) / 113][Stage 130:======================================>              (83 + 30) / 113][Stage 130:=============================================>       (97 + 16) / 113][Stage 130:==================================================>  (108 + 5) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:===============================>                     (68 + 46) / 114][Stage 131:========================================>            (88 + 26) / 114][Stage 131:==============================================>     (101 + 13) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.663100501 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIn dex = 163  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40608583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:=============================>                       (62 + 51) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:===========================================>         (93 + 20) / 113][Stage 132:==================================================>  (107 + 6) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:================================>                    (70 + 44) / 114][Stage 133:=======================================>             (84 + 30) / 114][Stage 133:================================================>    (105 + 9) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.615456962 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex =  102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374778508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==============================>                      (66 + 49) / 115][Stage 134:=====================================>               (81 + 34) / 115][Stage 134:============================================>        (97 + 18) / 115][Stage 134:=================================================>   (108 + 7) / 115][Stage 134:===================================================> (111 + 4) / 115]                                                                                [Stage 135:===============================>                     (70 + 46) / 116][Stage 135:=======================================>             (87 + 29) / 116][Stage 135:===============================================>    (105 + 11) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.952669444 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIn dex = 226  OR  partitionIndex = 212 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379216903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==============================>                      (66 + 49) / 115][Stage 136:======================================>              (83 + 32) / 115][Stage 136:=============================================>       (98 + 17) / 115][Stage 136:===================================================> (111 + 4) / 115]                                                                                [Stage 137:===============================>                     (70 + 46) / 116][Stage 137:=========================================>           (90 + 26) / 116][Stage 137:=============================================>       (99 + 17) / 116][Stage 137:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.889891561 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIn dex = 221  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394909814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:============================>                        (64 + 56) / 120][Stage 138:=======================================>             (90 + 30) / 120][Stage 138:=================================================>   (112 + 8) / 120]                                                                                [Stage 139:============================>                        (65 + 56) / 121][Stage 139:===============================>                     (72 + 49) / 121][Stage 139:=========================================>           (94 + 27) / 121][Stage 139:=================================================>   (113 + 8) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.482200171 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR   partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIn dex = 218  OR  partitionIndex = 219 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360603803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (78 + 35) / 113][Stage 140:==========================================>          (91 + 22) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:==================================================>  (108 + 5) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===================================>                 (77 + 37) / 114][Stage 141:======================================>              (83 + 31) / 114][Stage 141:============================================>        (95 + 19) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.941789548 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333743776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (83 + 32) / 115][Stage 142:===========================================>         (95 + 20) / 115][Stage 142:==============================================>     (103 + 12) / 115][Stage 142:===================================================> (112 + 3) / 115]                                                                                [Stage 143:=======================================>             (86 + 30) / 116][Stage 143:===========================================>         (95 + 21) / 116][Stage 143:==============================================>     (104 + 12) / 116][Stage 143:==================================================>  (111 + 5) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.006052115 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIn dex = 217  OR  partitionIndex = 231 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373314204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=============================>                       (65 + 50) / 115][Stage 144:==================================>                  (75 + 40) / 115][Stage 144:===========================================>         (94 + 21) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=================================>                   (73 + 43) / 116][Stage 145:======================================>              (85 + 31) / 116][Stage 145:===============================================>    (105 + 11) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.7717812 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393666649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 59) / 120][Stage 146:===============================>                     (71 + 49) / 120][Stage 146:========================================>            (91 + 29) / 120][Stage 146:=================================================>   (113 + 7) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:=============================>                       (68 + 53) / 121][Stage 147:===================================>                 (82 + 39) / 121][Stage 147:============================================>       (103 + 18) / 121][Stage 147:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.655033568 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIn dex = 214  OR  partitionIndex = 215 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362128148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:==================================>                  (76 + 42) / 118][Stage 148:=========================================>           (92 + 26) / 118][Stage 148:=============================================>      (103 + 15) / 118][Stage 148:===================================================> (115 + 3) / 118]                                                                                [Stage 149:================================>                    (73 + 46) / 119][Stage 149:==================================>                  (78 + 41) / 119][Stage 149:========================================>            (91 + 28) / 119][Stage 149:============================================>       (102 + 17) / 119][Stage 149:=================================================>   (112 + 7) / 119][Stage 149:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.795839222 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIn dex = 187  OR  partitionIndex = 201 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418008308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:============================>                        (64 + 57) / 121][Stage 150:===================================>                 (80 + 41) / 121][Stage 150:===========================================>        (101 + 20) / 121][Stage 150:===================================================> (117 + 4) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:===============================>                     (72 + 50) / 122][Stage 151:=====================================>               (86 + 36) / 122][Stage 151:============================================>       (105 + 17) / 122][Stage 151:==================================================>  (116 + 6) / 122][Stage 151:====================================================>(120 + 2) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.74077573 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  p artitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex =  24  OR  partitionIndex = 10 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379822945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===============================>                     (68 + 47) / 115][Stage 152:=====================================>               (82 + 33) / 115][Stage 152:=============================================>      (101 + 14) / 115][Stage 152:===================================================> (112 + 3) / 115]                                                                                [Stage 153:==============================>                      (67 + 49) / 116][Stage 153:=================================>                   (74 + 42) / 116][Stage 153:==========================================>          (93 + 23) / 116][Stage 153:===============================================>    (105 + 11) / 116][Stage 153:==================================================>  (111 + 5) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.840605136 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 220  OR  partitionIndex = 221 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376843615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:============================>                        (60 + 53) / 113][Stage 154:===================================>                 (76 + 37) / 113][Stage 154:==========================================>          (91 + 22) / 113][Stage 154:================================================>    (104 + 9) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:==============================>                      (66 + 48) / 114][Stage 155:======================================>              (82 + 32) / 114][Stage 155:============================================>        (95 + 19) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.806111615 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 4 6  OR  partitionIndex = 32 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347892082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==================================>                  (73 + 40) / 113][Stage 156:=======================================>             (85 + 28) / 113][Stage 156:===========================================>         (93 + 20) / 113][Stage 156:==================================================>  (108 + 5) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:=====================================>               (81 + 33) / 114][Stage 157:==========================================>          (91 + 23) / 114][Stage 157:============================================>        (96 + 18) / 114][Stage 157:================================================>    (105 + 9) / 114][Stage 157:===================================================> (110 + 4) / 114][Stage 157:====================================================>(112 + 2) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.140037336 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  p artitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex  = 65  OR  partitionIndex = 79 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335092681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (82 + 33) / 115][Stage 158:==========================================>          (92 + 23) / 115][Stage 158:===============================================>    (104 + 11) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:======================================>              (84 + 32) / 116][Stage 159:===========================================>         (95 + 21) / 116][Stage 159:==============================================>     (103 + 13) / 116][Stage 159:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.984735666 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIn dex = 131  OR  partitionIndex = 145 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364863857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=============================>                       (65 + 50) / 115][Stage 160:====================================>                (79 + 36) / 115][Stage 160:==========================================>          (92 + 23) / 115][Stage 160:=================================================>   (107 + 8) / 115]                                                                                [Stage 161:=================================>                   (74 + 42) / 116][Stage 161:============================================>        (97 + 19) / 116][Stage 161:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.570274369 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIn dex = 213  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355731427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (70 + 43) / 113][Stage 162:=====================================>               (79 + 34) / 113][Stage 162:===========================================>         (92 + 21) / 113][Stage 162:================================================>    (104 + 9) / 113][Stage 162:==================================================>  (108 + 5) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:=====================================>               (80 + 34) / 114][Stage 163:============================================>        (96 + 18) / 114][Stage 163:==============================================>     (103 + 11) / 114][Stage 163:===================================================> (110 + 4) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.241847994 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex =  59  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398788506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:=============================>                       (67 + 54) / 121][Stage 164:===================================>                 (80 + 41) / 121][Stage 164:============================================>       (104 + 17) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:===========================>                         (63 + 59) / 122][Stage 165:==============================>                      (71 + 51) / 122][Stage 165:==========================================>          (98 + 24) / 122][Stage 165:==================================================>  (116 + 6) / 122][Stage 165:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.989391424 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  pa rtitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex =  86  OR  partitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377047696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (65 + 48) / 113][Stage 166:===================================>                 (75 + 38) / 113][Stage 166:=============================================>       (98 + 15) / 113][Stage 166:====================================================>(111 + 2) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:===============================>                     (67 + 47) / 114][Stage 167:===================================>                 (77 + 37) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:=================================================>   (107 + 7) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.749146314 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIn dex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513555676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=================================>                   (73 + 42) / 115][Stage 168:==========================================>          (92 + 23) / 115][Stage 168:===============================================>    (105 + 10) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:===================================>                 (78 + 38) / 116][Stage 169:============================================>        (97 + 19) / 116][Stage 169:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.778191958 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR   partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIn dex = 126  OR  partitionIndex = 127 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350210969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (77 + 36) / 113][Stage 170:===========================================>         (92 + 21) / 113][Stage 170:==============================================>     (102 + 11) / 113]                                                                                [Stage 171:====================================>                (79 + 35) / 114][Stage 171:=========================================>           (89 + 25) / 114][Stage 171:=============================================>       (98 + 16) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.061591493 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex =  51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335747283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (82 + 33) / 115][Stage 172:=========================================>           (90 + 25) / 115][Stage 172:==============================================>     (103 + 12) / 115][Stage 172:==================================================>  (110 + 5) / 115][Stage 172:===================================================> (111 + 4) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:======================================>              (84 + 32) / 116][Stage 173:========================================>            (88 + 28) / 116][Stage 173:===========================================>         (95 + 21) / 116][Stage 173:=============================================>      (101 + 15) / 116][Stage 173:================================================>    (107 + 9) / 116][Stage 173:===================================================> (112 + 4) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.256183318 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex =  84  OR  partitionIndex = 70 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364721456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (73 + 40) / 113][Stage 174:======================================>              (83 + 30) / 113][Stage 174:===========================================>         (93 + 20) / 113][Stage 174:==============================================>     (101 + 12) / 113][Stage 174:====================================================>(111 + 2) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:=================================>                   (71 + 43) / 114][Stage 175:======================================>              (83 + 31) / 114][Stage 175:=========================================>           (90 + 24) / 114][Stage 175:==============================================>      (99 + 15) / 114][Stage 175:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.63793435 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIn dex = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36287493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (73 + 45) / 118][Stage 176:===================================>                 (80 + 38) / 118][Stage 176:========================================>            (91 + 27) / 118][Stage 176:=============================================>      (104 + 14) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:===================================>                 (80 + 39) / 119][Stage 177:==========================================>          (95 + 24) / 119][Stage 177:=============================================>      (104 + 15) / 119][Stage 177:==================================================>  (114 + 5) / 119][Stage 177:===================================================> (115 + 4) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.8937384 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIn dex = 174  OR  partitionIndex = 160 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385768924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:================================>                    (69 + 44) / 113][Stage 178:=======================================>             (85 + 28) / 113][Stage 178:=================================================>   (106 + 7) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:==============================>                      (65 + 49) / 114][Stage 179:==================================>                  (75 + 39) / 114][Stage 179:=============================================>       (98 + 16) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.367997459 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIn dex = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41246877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:==========================>                          (61 + 59) / 120][Stage 180:==================================>                  (78 + 42) / 120][Stage 180:==========================================>          (96 + 24) / 120][Stage 180:==================================================>  (114 + 6) / 120]                                                                                [Stage 181:============================>                        (65 + 56) / 121][Stage 181:==================================>                  (78 + 43) / 121][Stage 181:==========================================>          (98 + 23) / 121][Stage 181:===================================================> (117 + 4) / 121][Stage 181:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.512966568 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIn dex = 170  OR  partitionIndex = 156 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404112763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==============================>                      (66 + 49) / 115][Stage 182:===================================>                 (76 + 39) / 115][Stage 182:===========================================>         (95 + 20) / 115][Stage 182:==================================================>  (109 + 6) / 115]                                                                                [Stage 183:====================================>                (79 + 37) / 116][Stage 183:============================================>        (97 + 19) / 116][Stage 183:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.618275822 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIn dex = 152  OR  partitionIndex = 153 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400940833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:============================>                        (65 + 55) / 120][Stage 184:===================================>                 (81 + 39) / 120][Stage 184:==========================================>          (97 + 23) / 120][Stage 184:=================================================>   (111 + 9) / 120][Stage 184:====================================================>(118 + 2) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:============================>                        (66 + 55) / 121][Stage 185:==================================>                  (79 + 42) / 121][Stage 185:==========================================>         (100 + 21) / 121][Stage 185:===================================================> (118 + 3) / 121][Stage 185:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.575973835 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIn dex = 199  OR  partitionIndex = 200 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334351918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=====================================>               (82 + 33) / 115][Stage 186:=========================================>           (89 + 26) / 115][Stage 186:============================================>        (96 + 19) / 115][Stage 186:=================================================>   (108 + 7) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:=====================================>               (82 + 34) / 116][Stage 187:=========================================>           (91 + 25) / 116][Stage 187:=================================================>   (108 + 8) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.712026084 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIn dex = 196  OR  partitionIndex = 182 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330916926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (82 + 33) / 115][Stage 188:==========================================>          (92 + 23) / 115][Stage 188:================================================>    (106 + 9) / 115][Stage 188:===================================================> (111 + 4) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:======================================>              (84 + 32) / 116][Stage 189:==========================================>          (92 + 24) / 116][Stage 189:===============================================>    (106 + 10) / 116][Stage 189:====================================================>(114 + 2) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.117975233 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIn dex = 138  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395720356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:===========================>                         (63 + 57) / 120][Stage 190:======================================>              (87 + 33) / 120][Stage 190:============================================>       (103 + 17) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:===============================>                     (73 + 48) / 121][Stage 191:=========================================>           (94 + 27) / 121][Stage 191:===============================================>    (110 + 11) / 121][Stage 191:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.318021482 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349129806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==================================>                  (74 + 39) / 113][Stage 192:========================================>            (87 + 26) / 113][Stage 192:==============================================>     (100 + 13) / 113][Stage 192:===================================================> (109 + 4) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:==================================>                  (75 + 39) / 114][Stage 193:=======================================>             (85 + 29) / 114][Stage 193:=============================================>       (97 + 17) / 114][Stage 193:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.826231092 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117  OR  partitionIndex = 118  OR   partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIn dex = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356219948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (72 + 41) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:============================================>        (94 + 19) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:=====================================>               (80 + 34) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:==============================================>     (102 + 12) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.227532086 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  pa rtitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex =  61  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417260065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (61 + 60) / 121][Stage 196:===============================>                     (73 + 48) / 121][Stage 196:=======================================>             (90 + 31) / 121][Stage 196:==============================================>     (108 + 13) / 121][Stage 196:====================================================>(120 + 1) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (68 + 54) / 122][Stage 197:===================================>                 (81 + 41) / 122][Stage 197:==========================================>         (100 + 22) / 122][Stage 197:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.669759551 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex =  44  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415227078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (61 + 52) / 113][Stage 198:==================================>                  (74 + 39) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:===================================>                 (77 + 37) / 114][Stage 199:==========================================>          (92 + 22) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.519597448 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371101956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===============================>                     (68 + 47) / 115][Stage 200:======================================>              (84 + 31) / 115][Stage 200:===========================================>         (94 + 21) / 115][Stage 200:==================================================>  (109 + 6) / 115][Stage 200:====================================================>(114 + 1) / 115]                                                                                [Stage 201:===============================>                     (70 + 46) / 116][Stage 201:=======================================>             (87 + 29) / 116][Stage 201:============================================>        (98 + 18) / 116][Stage 201:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.872985083 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/23 10:26:18 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:39932) dropped. RpcEnv already stopped.
17/05/23 10:26:18 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:39932) dropped. RpcEnv already stopped.

real	11m38.611s
user	12m25.868s
sys	1m27.292s
