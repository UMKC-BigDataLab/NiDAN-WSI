Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/21 23:41:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:41:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:41:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:41:27 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/21 23:41:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/21 23:41:40 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170521234129-0390).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.332679566 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===================>                                   (40 + 75) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.374516217 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.846626373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (51 + 62) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:===============================>                       (64 + 49) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (56 + 58) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:==============================>                        (64 + 50) / 114][Stage 3:===================================>                   (73 + 41) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.694501386 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.716761682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:============================================>          (92 + 21) / 113][Stage 4:================================================>     (102 + 11) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:================================>                      (67 + 47) / 114][Stage 5:====================================>                  (75 + 39) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:=================================================>    (104 + 10) / 114]                                                                                Time elapsed: 4.110895694 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564525093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==================================>                    (71 + 42) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:========================================>              (84 + 29) / 113][Stage 6:==========================================>            (88 + 25) / 113][Stage 6:===============================================>       (98 + 15) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:=====================================================> (110 + 3) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:======================================>                (80 + 34) / 114][Stage 7:========================================>              (83 + 31) / 114][Stage 7:=============================================>         (95 + 19) / 114][Stage 7:===================================================>   (106 + 8) / 114][Stage 7:====================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.240911544 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543737059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (72 + 46) / 118][Stage 8:===================================>                   (76 + 42) / 118][Stage 8:=======================================>               (84 + 34) / 118][Stage 8:===========================================>           (94 + 24) / 118][Stage 8:==============================================>        (99 + 19) / 118][Stage 8:===============================================>      (104 + 14) / 118][Stage 8:==================================================>    (109 + 9) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:===================================>                   (77 + 42) / 119][Stage 9:========================================>              (87 + 32) / 119][Stage 9:===========================================>           (95 + 24) / 119][Stage 9:==============================================>       (102 + 17) / 119][Stage 9:================================================>     (107 + 12) / 119][Stage 9:===================================================>   (111 + 8) / 119][Stage 9:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.565084938 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509979426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:>                                                       (0 + 0) / 118][Stage 10:================================>                     (72 + 46) / 118][Stage 10:=================================>                    (74 + 44) / 118][Stage 10:====================================>                 (79 + 39) / 118][Stage 10:=========================================>            (91 + 27) / 118][Stage 10:==============================================>      (103 + 15) / 118][Stage 10:=================================================>    (109 + 9) / 118][Stage 10:===================================================>  (113 + 5) / 118]                                                                                [Stage 11:=================================>                    (73 + 46) / 119][Stage 11:===================================>                  (78 + 41) / 119][Stage 11:=======================================>              (87 + 32) / 119][Stage 11:===========================================>          (95 + 24) / 119][Stage 11:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.878090498 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526575385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (69 + 44) / 113][Stage 12:=====================================>                (79 + 34) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:=============================================>        (96 + 17) / 113][Stage 12:===============================================>     (101 + 12) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:===================================>                  (74 + 40) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:===================================================>  (108 + 6) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.045749159 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525249668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:================================>                     (67 + 46) / 113][Stage 14:======================================>               (81 + 32) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:====================================>                 (78 + 36) / 114][Stage 15:=============================================>        (97 + 17) / 114][Stage 15:=================================================>    (105 + 9) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.751403323 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637518149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:===========================>                          (58 + 55) / 113][Stage 16:=================================>                    (70 + 43) / 113][Stage 16:========================================>             (85 + 28) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:====================================>                 (78 + 36) / 114][Stage 17:==============================================>      (101 + 13) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.821582342 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437337045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (82 + 33) / 115][Stage 18:===========================================>          (92 + 23) / 115][Stage 18:================================================>    (105 + 10) / 115][Stage 18:====================================================> (111 + 4) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:======================================>               (83 + 33) / 116][Stage 19:===========================================>          (93 + 23) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:===================================================>  (111 + 5) / 116][Stage 19:====================================================> (112 + 4) / 116][Stage 19:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.526764143 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461346442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=====================================>                (80 + 35) / 115][Stage 20:========================================>             (87 + 28) / 115][Stage 20:===============================================>     (103 + 12) / 115][Stage 20:====================================================> (111 + 4) / 115]                                                                                [Stage 21:=======================================>              (85 + 31) / 116][Stage 21:==========================================>           (92 + 24) / 116][Stage 21:=================================================>    (107 + 9) / 116][Stage 21:===================================================>  (111 + 5) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.332497364 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.535114651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:============================================>         (93 + 20) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:=============================>                        (62 + 52) / 114][Stage 23:====================================>                 (77 + 37) / 114][Stage 23:==============================================>       (98 + 16) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.230634009 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507292517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:==============================>                       (64 + 49) / 113][Stage 24:===================================>                  (74 + 39) / 113][Stage 24:=============================================>        (95 + 18) / 113][Stage 24:====================================================> (110 + 3) / 113]                                                                                [Stage 25:=============================>                        (62 + 52) / 114][Stage 25:===================================>                  (75 + 39) / 114][Stage 25:=============================================>        (95 + 19) / 114][Stage 25:===============================================>     (102 + 12) / 114][Stage 25:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.348631898 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520558716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (61 + 59) / 120][Stage 26:================================>                     (72 + 48) / 120][Stage 26:========================================>             (90 + 30) / 120][Stage 26:================================================>    (109 + 11) / 120][Stage 26:===================================================>  (115 + 5) / 120][Stage 26:=====================================================>(118 + 2) / 120]                                                                                [Stage 27:===========================>                          (62 + 59) / 121][Stage 27:==================================>                   (77 + 44) / 121][Stage 27:==========================================>           (95 + 26) / 121][Stage 27:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.495840463 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50593368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:===========================>                          (62 + 59) / 121][Stage 28:===============================>                      (70 + 51) / 121][Stage 28:========================================>             (90 + 31) / 121][Stage 28:===============================================>     (109 + 12) / 121]                                                                                [Stage 29:===========================>                          (63 + 59) / 122][Stage 29:==============================>                       (70 + 52) / 122][Stage 29:==========================================>           (95 + 27) / 122][Stage 29:================================================>    (112 + 10) / 122][Stage 29:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.388015089 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474805186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (72 + 43) / 115][Stage 30:======================================>               (82 + 33) / 115][Stage 30:===============================================>     (102 + 13) / 115][Stage 30:====================================================> (112 + 3) / 115]                                                                                [Stage 31:==================================>                   (75 + 41) / 116][Stage 31:=========================================>            (90 + 26) / 116][Stage 31:=============================================>       (100 + 16) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.138047716 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481578586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (60 + 53) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:=============================================>        (95 + 18) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:============================>                         (61 + 53) / 114][Stage 33:=======================================>              (83 + 31) / 114][Stage 33:=================================================>    (105 + 9) / 114][Stage 33:====================================================> (111 + 3) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.377469947 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485860907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (70 + 43) / 113][Stage 34:=====================================>                (79 + 34) / 113][Stage 34:=============================================>        (95 + 18) / 113][Stage 34:================================================>    (103 + 10) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:======================================>               (81 + 33) / 114][Stage 35:==========================================>           (89 + 25) / 114][Stage 35:=============================================>        (97 + 17) / 114][Stage 35:===================================================>  (108 + 6) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.236232477 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514817964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:=============================>                        (67 + 54) / 121][Stage 36:=======================================>              (88 + 33) / 121][Stage 36:==================================================>   (113 + 8) / 121]                                                                                [Stage 37:===========================>                          (62 + 60) / 122][Stage 37:===============================>                      (71 + 51) / 122][Stage 37:========================================>             (91 + 31) / 122][Stage 37:===============================================>     (110 + 12) / 122][Stage 37:====================================================> (118 + 4) / 122][Stage 37:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.4084966 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505568826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:=================================>                    (75 + 45) / 120][Stage 38:=======================================>              (88 + 32) / 120][Stage 38:=================================================>    (111 + 9) / 120][Stage 38:=====================================================>(119 + 1) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:=============================>                        (66 + 55) / 121][Stage 39:==================================>                   (77 + 44) / 121][Stage 39:===========================================>         (100 + 21) / 121][Stage 39:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.25265015 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48533337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (61 + 60) / 121][Stage 40:===============================>                      (71 + 50) / 121][Stage 40:==========================================>           (96 + 25) / 121][Stage 40:===================================================>  (115 + 6) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:=================================>                    (75 + 47) / 122][Stage 41:========================================>             (92 + 30) / 122][Stage 41:================================================>    (112 + 10) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.136514075 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441222458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==================================>                   (72 + 41) / 113][Stage 42:=======================================>              (83 + 30) / 113][Stage 42:===========================================>          (92 + 21) / 113][Stage 42:================================================>    (103 + 10) / 113][Stage 42:====================================================> (109 + 4) / 113]                                                                                [Stage 43:===================================>                  (75 + 39) / 114][Stage 43:======================================>               (82 + 32) / 114][Stage 43:============================================>         (93 + 21) / 114][Stage 43:==================================================>   (106 + 8) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.175533296 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448440197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (60 + 53) / 113][Stage 44:=====================================>                (78 + 35) / 113][Stage 44:===============================================>      (99 + 14) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:==================================>                   (73 + 41) / 114][Stage 45:============================================>         (94 + 20) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.032442464 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455658758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:===============================>                      (70 + 51) / 121][Stage 46:====================================>                 (82 + 39) / 121][Stage 46:============================================>        (102 + 19) / 121][Stage 46:====================================================> (118 + 3) / 121]                                                                                [Stage 47:===========================>                          (61 + 61) / 122][Stage 47:=====================================>                (85 + 37) / 122][Stage 47:============================================>        (103 + 19) / 122][Stage 47:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.207025846 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484234915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:================================>                     (73 + 47) / 120][Stage 48:===========================================>          (97 + 23) / 120][Stage 48:================================================>    (110 + 10) / 120][Stage 48:====================================================> (117 + 3) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:==============================>                       (68 + 53) / 121][Stage 49:=====================================>                (85 + 36) / 121][Stage 49:==============================================>      (106 + 15) / 121][Stage 49:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.332492558 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474671237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (63 + 57) / 120][Stage 50:================================>                     (72 + 48) / 120][Stage 50:========================================>             (90 + 30) / 120][Stage 50:=============================================>       (104 + 16) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=============================>                        (67 + 54) / 121][Stage 51:===================================>                  (80 + 41) / 121][Stage 51:==========================================>           (96 + 25) / 121][Stage 51:==================================================>   (113 + 8) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.324699407 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398316289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (79 + 34) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:=================================================>    (104 + 9) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:===================================>                  (74 + 40) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:==============================================>      (101 + 13) / 114][Stage 53:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.031650932 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438738484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:===============================>                      (65 + 48) / 113][Stage 54:========================================>             (84 + 29) / 113][Stage 54:===================================================>  (107 + 6) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:====================================>                 (77 + 37) / 114][Stage 55:=============================================>        (95 + 19) / 114][Stage 55:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.949690089 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381196213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (82 + 33) / 115][Stage 56:==========================================>           (90 + 25) / 115][Stage 56:==============================================>       (99 + 16) / 115][Stage 56:====================================================> (112 + 3) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:========================================>             (87 + 29) / 116][Stage 57:==============================================>      (101 + 15) / 116][Stage 57:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.971725933 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.552051232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:============================>                         (60 + 53) / 113][Stage 58:===================================>                  (74 + 39) / 113][Stage 58:===========================================>          (91 + 22) / 113][Stage 58:===================================================>  (107 + 6) / 113]                                                                                [Stage 59:==============================>                       (64 + 50) / 114][Stage 59:===================================>                  (74 + 40) / 114][Stage 59:=============================================>        (96 + 18) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.060457149 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457984025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:================================>                     (67 + 46) / 113][Stage 60:========================================>             (85 + 28) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=============================>                        (63 + 51) / 114][Stage 61:====================================>                 (76 + 38) / 114][Stage 61:=========================================>            (88 + 26) / 114][Stage 61:================================================>    (104 + 10) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.243786594 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442823568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:====================================>                 (80 + 38) / 118][Stage 62:=======================================>              (86 + 32) / 118][Stage 62:============================================>         (98 + 20) / 118][Stage 62:===================================================>  (113 + 5) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:==================================>                   (77 + 42) / 119][Stage 63:=====================================>                (82 + 37) / 119][Stage 63:============================================>         (97 + 22) / 119][Stage 63:================================================>    (108 + 11) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.527270489 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488382244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:====================================>                 (77 + 36) / 113][Stage 64:=========================================>            (86 + 27) / 113][Stage 64:===========================================>          (91 + 22) / 113][Stage 64:=================================================>    (104 + 9) / 113][Stage 64:===================================================>  (108 + 5) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:=====================================>                (79 + 35) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:==============================================>       (99 + 15) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.250157289 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402848234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==================================>                   (73 + 40) / 113][Stage 66:========================================>             (85 + 28) / 113][Stage 66:==========================================>           (89 + 24) / 113][Stage 66:==============================================>       (98 + 15) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:=====================================>                (80 + 34) / 114][Stage 67:=============================================>        (96 + 18) / 114][Stage 67:===============================================>     (102 + 12) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.065977297 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382946858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (72 + 41) / 113][Stage 68:=====================================>                (79 + 34) / 113][Stage 68:===========================================>          (90 + 23) / 113][Stage 68:============================================>         (94 + 19) / 113][Stage 68:=================================================>    (104 + 9) / 113][Stage 68:===================================================>  (107 + 6) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:========================================>             (86 + 28) / 114][Stage 69:=============================================>        (97 + 17) / 114][Stage 69:==================================================>   (106 + 8) / 114][Stage 69:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.570439448 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402807856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (83 + 32) / 115][Stage 70:============================================>         (94 + 21) / 115][Stage 70:==================================================>   (108 + 7) / 115][Stage 70:=====================================================>(113 + 2) / 115]                                                                                [Stage 71:======================================>               (82 + 34) / 116][Stage 71:========================================>             (87 + 29) / 116][Stage 71:==============================================>      (102 + 14) / 116][Stage 71:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.845284894 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446142792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:==============================>                       (64 + 49) / 113][Stage 72:====================================>                 (77 + 36) / 113][Stage 72:===============================================>      (99 + 14) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:==============================>                       (65 + 49) / 114][Stage 73:========================================>             (86 + 28) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.189635464 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393735879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (74 + 41) / 115][Stage 74:=======================================>              (85 + 30) / 115][Stage 74:==============================================>      (101 + 14) / 115][Stage 74:====================================================> (112 + 3) / 115]                                                                                [Stage 75:=================================>                    (72 + 44) / 116][Stage 75:===========================================>          (94 + 22) / 116][Stage 75:================================================>    (106 + 10) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.802463551 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434929316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:===============================>                      (65 + 48) / 113][Stage 76:===========================================>          (90 + 23) / 113][Stage 76:================================================>    (103 + 10) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:=============================>                        (63 + 51) / 114][Stage 77:=======================================>              (84 + 30) / 114][Stage 77:===============================================>     (102 + 12) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.193360218 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39783358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (81 + 34) / 115][Stage 78:===========================================>          (92 + 23) / 115][Stage 78:==================================================>   (108 + 7) / 115]                                                                                [Stage 79:========================================>             (86 + 30) / 116][Stage 79:============================================>         (96 + 20) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.905488094 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379752443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:=================================>                    (74 + 44) / 118][Stage 80:=======================================>              (86 + 32) / 118][Stage 80:============================================>         (98 + 20) / 118][Stage 80:===================================================>  (113 + 5) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:==================================>                   (76 + 43) / 119][Stage 81:===================================>                  (79 + 40) / 119][Stage 81:==========================================>           (93 + 26) / 119][Stage 81:==================================================>   (111 + 8) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.441351108 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422556259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (61 + 59) / 120][Stage 82:===============================>                      (70 + 50) / 120][Stage 82:=========================================>            (92 + 28) / 120][Stage 82:================================================>    (110 + 10) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:===============================>                      (70 + 51) / 121][Stage 83:========================================>             (91 + 30) / 121][Stage 83:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.001683037 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517763252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===============================>                      (67 + 48) / 115][Stage 84:======================================>               (82 + 33) / 115][Stage 84:=============================================>        (96 + 19) / 115][Stage 84:==================================================>   (108 + 7) / 115]                                                                                [Stage 85:==================================>                   (75 + 41) / 116][Stage 85:========================================>             (87 + 29) / 116][Stage 85:==============================================>      (102 + 14) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.800500582 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349441588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:======================================>               (82 + 33) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(113 + 2) / 115]                                                                                [Stage 87:=======================================>              (85 + 31) / 116][Stage 87:===========================================>          (94 + 22) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.959733093 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419978683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (68 + 52) / 120][Stage 88:=======================================>              (88 + 32) / 120][Stage 88:============================================>        (101 + 19) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:===========================>                          (62 + 59) / 121][Stage 89:===============================>                      (70 + 51) / 121][Stage 89:=====================================>                (84 + 37) / 121][Stage 89:============================================>        (102 + 19) / 121][Stage 89:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.141633024 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375790708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==================================>                   (73 + 40) / 113][Stage 90:========================================>             (84 + 29) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:===============================================>     (102 + 11) / 113][Stage 90:==================================================>   (106 + 7) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:=========================================>            (88 + 26) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.098853334 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377290828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (81 + 32) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:==============================================>      (100 + 13) / 113][Stage 92:===================================================>  (107 + 6) / 113]                                                                                [Stage 93:======================================>               (81 + 33) / 114][Stage 93:============================================>         (94 + 20) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.889319399 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428684185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:=============================>                        (65 + 55) / 120][Stage 94:=====================================>                (84 + 36) / 120][Stage 94:================================================>    (110 + 10) / 120]                                                                                [Stage 95:============================>                         (63 + 58) / 121][Stage 95:=================================>                    (76 + 45) / 121][Stage 95:============================================>        (101 + 20) / 121][Stage 95:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.947861819 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362139471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===================================>                  (75 + 38) / 113][Stage 96:==========================================>           (88 + 25) / 113][Stage 96:============================================>         (94 + 19) / 113][Stage 96:================================================>    (103 + 10) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:===================================>                  (75 + 39) / 114][Stage 97:==========================================>           (90 + 24) / 114][Stage 97:=============================================>        (97 + 17) / 114][Stage 97:===============================================>     (103 + 11) / 114][Stage 97:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.100243974 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343245134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (84 + 31) / 115][Stage 98:===========================================>          (93 + 22) / 115][Stage 98:===================================================>  (109 + 6) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:========================================>             (87 + 29) / 116][Stage 99:===============================================>     (103 + 13) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.863676879 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346652653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:====================================>                (80 + 35) / 115][Stage 100:========================================>            (88 + 27) / 115][Stage 100:=============================================>       (99 + 16) / 115][Stage 100:====================================================>(113 + 2) / 115][Stage 100:====================================================>(114 + 1) / 115]                                                                                [Stage 101:=====================================>               (82 + 34) / 116][Stage 101:=========================================>           (91 + 25) / 116][Stage 101:================================================>    (107 + 9) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.746154333 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364879653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (72 + 41) / 113][Stage 102:======================================>              (82 + 31) / 113][Stage 102:===========================================>         (93 + 20) / 113][Stage 102:===============================================>    (103 + 10) / 113][Stage 102:===================================================> (109 + 4) / 113]                                                                                [Stage 103:======================================>              (83 + 31) / 114][Stage 103:==========================================>          (92 + 22) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:====================================================>(112 + 2) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263272301 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40989973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:===============================>                     (71 + 49) / 120][Stage 104:====================================>                (82 + 38) / 120][Stage 104:===========================================>         (98 + 22) / 120][Stage 104:===================================================> (117 + 3) / 120]                                                                                [Stage 105:============================>                        (65 + 56) / 121][Stage 105:==================================>                  (78 + 43) / 121][Stage 105:==========================================>          (98 + 23) / 121][Stage 105:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.09655072 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430543369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:============================>                        (64 + 57) / 121][Stage 106:=================================>                   (76 + 45) / 121][Stage 106:==========================================>          (97 + 24) / 121][Stage 106:===============================================>    (111 + 10) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:============================>                        (65 + 57) / 122][Stage 107:=================================>                   (77 + 45) / 122][Stage 107:=============================================>      (106 + 16) / 122]                                                                                Time elapsed: 3.208048179 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406475272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (70 + 45) / 115][Stage 108:=====================================>               (82 + 33) / 115][Stage 108:=============================================>      (100 + 15) / 115][Stage 108:===================================================> (111 + 4) / 115]                                                                                [Stage 109:================================>                    (72 + 44) / 116][Stage 109:======================================>              (84 + 32) / 116][Stage 109:============================================>        (97 + 19) / 116][Stage 109:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.773386655 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415788692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (73 + 42) / 115][Stage 110:=========================================>           (91 + 24) / 115][Stage 110:=================================================>   (107 + 8) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:================================>                    (71 + 45) / 116][Stage 111:=====================================>               (81 + 35) / 116][Stage 111:===========================================>         (96 + 20) / 116][Stage 111:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.678612187 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353631857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (80 + 35) / 115][Stage 112:========================================>            (88 + 27) / 115][Stage 112:=============================================>       (99 + 16) / 115][Stage 112:==================================================>  (110 + 5) / 115]                                                                                [Stage 113:=====================================>               (82 + 34) / 116][Stage 113:=======================================>             (87 + 29) / 116][Stage 113:===============================================>    (105 + 11) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.837627441 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350741359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (73 + 40) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:============================================>        (94 + 19) / 113][Stage 114:===============================================>    (103 + 10) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:======================================>              (83 + 31) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.030471095 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406669676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:==============================>                      (69 + 51) / 120][Stage 116:====================================>                (83 + 37) / 120][Stage 116:===========================================>         (99 + 21) / 120][Stage 116:====================================================>(118 + 2) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:==============================>                      (69 + 52) / 121][Stage 117:===================================>                 (80 + 41) / 121][Stage 117:=============================================>      (106 + 15) / 121][Stage 117:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.05763788 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3549943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=======================================>             (84 + 29) / 113][Stage 118:===========================================>         (93 + 20) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:=====================================>               (81 + 33) / 114][Stage 119:==========================================>          (92 + 22) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.097373165 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389009258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:==================================>                  (74 + 39) / 113][Stage 120:============================================>        (95 + 18) / 113][Stage 120:==================================================>  (107 + 6) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:=================================>                   (71 + 43) / 114][Stage 121:=========================================>           (89 + 25) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.076148892 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394719638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (61 + 59) / 120][Stage 122:===============================>                     (72 + 48) / 120][Stage 122:=========================================>           (94 + 26) / 120][Stage 122:===================================================> (117 + 3) / 120]                                                                                [Stage 123:===========================>                         (62 + 59) / 121][Stage 123:===============================>                     (72 + 49) / 121][Stage 123:==========================================>          (98 + 23) / 121][Stage 123:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.079723418 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38850604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:================================>                    (70 + 43) / 113][Stage 124:==========================================>          (91 + 22) / 113][Stage 124:==================================================>  (107 + 6) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:===================================>                 (76 + 38) / 114][Stage 125:===========================================>         (94 + 20) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.101864684 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4067916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:==============================>                      (70 + 51) / 121][Stage 126:=========================================>           (94 + 27) / 121][Stage 126:=================================================>   (112 + 9) / 121][Stage 126:====================================================>(120 + 1) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:===========================>                         (64 + 58) / 122][Stage 127:====================================>                (84 + 38) / 122][Stage 127:============================================>       (104 + 18) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.254090423 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41894748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 61) / 121][Stage 128:=============================>                       (67 + 54) / 121][Stage 128:=======================================>             (91 + 30) / 121][Stage 128:==============================================>     (109 + 12) / 121][Stage 128:====================================================>(119 + 2) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:============================>                        (65 + 57) / 122][Stage 129:==================================>                  (79 + 43) / 122][Stage 129:=========================================>           (96 + 26) / 122][Stage 129:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.110137137 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353722184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:======================================>              (82 + 31) / 113][Stage 130:===========================================>         (93 + 20) / 113][Stage 130:==============================================>     (101 + 12) / 113][Stage 130:==================================================>  (108 + 5) / 113]                                                                                [Stage 131:=====================================>               (81 + 33) / 114][Stage 131:=========================================>           (89 + 25) / 114][Stage 131:=============================================>       (98 + 16) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.884343174 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372599384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:================================>                    (73 + 45) / 118][Stage 132:=====================================>               (83 + 35) / 118][Stage 132:========================================>            (91 + 27) / 118][Stage 132:==============================================>     (105 + 13) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:===================================>                 (79 + 40) / 119][Stage 133:========================================>            (90 + 29) / 119][Stage 133:=================================================>   (112 + 7) / 119][Stage 133:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.224960565 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352442126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:======================================>              (83 + 30) / 113][Stage 134:==========================================>          (91 + 22) / 113][Stage 134:==============================================>     (102 + 11) / 113][Stage 134:====================================================>(111 + 2) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:=======================================>             (84 + 30) / 114][Stage 135:=============================================>       (98 + 16) / 114][Stage 135:==================================================>  (109 + 5) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.115712456 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334646767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (79 + 36) / 115][Stage 136:======================================>              (84 + 31) / 115][Stage 136:===========================================>         (95 + 20) / 115][Stage 136:==================================================>  (109 + 6) / 115]                                                                                [Stage 137:======================================>              (85 + 31) / 116][Stage 137:===========================================>         (95 + 21) / 116][Stage 137:=================================================>   (108 + 8) / 116][Stage 137:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.930299209 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402659665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (67 + 53) / 120][Stage 138:====================================>                (83 + 37) / 120][Stage 138:===============================================>    (109 + 11) / 120][Stage 138:====================================================>(119 + 1) / 120]                                                                                [Stage 139:===========================>                         (62 + 59) / 121][Stage 139:=============================>                       (68 + 53) / 121][Stage 139:=====================================>               (86 + 35) / 121][Stage 139:===============================================>    (110 + 11) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.972275354 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373628207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (64 + 51) / 115][Stage 140:====================================>                (79 + 36) / 115][Stage 140:============================================>        (97 + 18) / 115][Stage 140:====================================================>(113 + 2) / 115]                                                                                [Stage 141:==================================>                  (75 + 41) / 116][Stage 141:=========================================>           (91 + 25) / 116][Stage 141:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.532091354 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361224428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:====================================>                (81 + 37) / 118][Stage 142:==========================================>          (94 + 24) / 118][Stage 142:===============================================>    (108 + 10) / 118][Stage 142:====================================================>(117 + 1) / 118]                                                                                [Stage 143:=================================>                   (75 + 44) / 119][Stage 143:=====================================>               (85 + 34) / 119][Stage 143:===========================================>        (100 + 19) / 119][Stage 143:================================================>    (110 + 9) / 119][Stage 143:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.416043532 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428719147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=========================================>           (91 + 24) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=====================================>               (81 + 35) / 116][Stage 145:========================================>            (88 + 28) / 116][Stage 145:===============================================>    (106 + 10) / 116][Stage 145:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.652066841 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384829409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=============================>                       (63 + 50) / 113][Stage 146:==================================>                  (73 + 40) / 113][Stage 146:============================================>        (95 + 18) / 113][Stage 146:===================================================> (109 + 4) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:==============================>                      (65 + 49) / 114][Stage 147:======================================>              (82 + 32) / 114][Stage 147:=============================================>      (100 + 14) / 114][Stage 147:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.263237489 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36144623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:====================================>                (77 + 36) / 113][Stage 148:=======================================>             (84 + 29) / 113][Stage 148:==========================================>          (90 + 23) / 113][Stage 148:===============================================>    (103 + 10) / 113][Stage 148:==================================================>  (108 + 5) / 113]                                                                                [Stage 149:===================================>                 (76 + 38) / 114][Stage 149:=========================================>           (89 + 25) / 114][Stage 149:=============================================>       (97 + 17) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.11678316 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382637391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:=============================>                       (63 + 50) / 113][Stage 150:======================================>              (83 + 30) / 113][Stage 150:==============================================>     (102 + 11) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:===============================>                     (68 + 46) / 114][Stage 151:=========================================>           (89 + 25) / 114][Stage 151:==================================================>  (109 + 5) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.94868403 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380537291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=============================>                       (64 + 51) / 115][Stage 152:================================>                    (71 + 44) / 115][Stage 152:======================================>              (84 + 31) / 115][Stage 152:==============================================>     (102 + 13) / 115]                                                                                [Stage 153:===================================>                 (78 + 38) / 116][Stage 153:=======================================>             (87 + 29) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.946977697 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378855632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:================================>                    (69 + 44) / 113][Stage 154:=======================================>             (84 + 29) / 113][Stage 154:===============================================>    (103 + 10) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:=================================>                   (71 + 43) / 114][Stage 155:========================================>            (87 + 27) / 114][Stage 155:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.915129843 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399987833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:=============================>                       (67 + 54) / 121][Stage 156:====================================>                (83 + 38) / 121][Stage 156:=============================================>      (106 + 15) / 121][Stage 156:====================================================>(119 + 2) / 121]                                                                                [Stage 157:==========================>                          (61 + 61) / 122][Stage 157:============================>                        (66 + 56) / 122][Stage 157:==================================>                  (80 + 42) / 122][Stage 157:===========================================>        (101 + 21) / 122][Stage 157:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.099277486 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377042414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (71 + 44) / 115][Stage 158:=========================================>           (90 + 25) / 115][Stage 158:===============================================>    (104 + 11) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:==================================>                  (75 + 41) / 116][Stage 159:======================================>              (84 + 32) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.025910233 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362051655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:==================================>                  (77 + 41) / 118][Stage 160:=====================================>               (84 + 34) / 118][Stage 160:===========================================>         (97 + 21) / 118][Stage 160:=================================================>   (111 + 7) / 118][Stage 160:====================================================>(117 + 1) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:=================================>                   (76 + 43) / 119][Stage 161:======================================>              (87 + 32) / 119][Stage 161:===========================================>         (97 + 22) / 119][Stage 161:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.341607655 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404649875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (64 + 57) / 121][Stage 162:================================>                    (75 + 46) / 121][Stage 162:============================================>       (103 + 18) / 121][Stage 162:====================================================>(119 + 2) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:===========================>                         (63 + 59) / 122][Stage 163:====================================>                (83 + 39) / 122][Stage 163:=============================================>      (107 + 15) / 122]                                                                                Time elapsed: 2.870141847 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334540736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (83 + 32) / 115][Stage 164:===========================================>         (95 + 20) / 115][Stage 164:==================================================>  (109 + 6) / 115][Stage 164:===================================================> (112 + 3) / 115]                                                                                [Stage 165:=====================================>               (83 + 33) / 116][Stage 165:==========================================>          (93 + 23) / 116][Stage 165:==============================================>     (104 + 12) / 116][Stage 165:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.927451013 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393371337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:==========================>                          (61 + 59) / 120][Stage 166:=================================>                   (76 + 44) / 120][Stage 166:==========================================>          (97 + 23) / 120][Stage 166:====================================================>(118 + 2) / 120]                                                                                [Stage 167:===========================>                         (63 + 58) / 121][Stage 167:===================================>                 (80 + 41) / 121][Stage 167:==========================================>         (100 + 21) / 121][Stage 167:==================================================>  (116 + 5) / 121][Stage 167:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.265291996 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421923597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:=============================>                       (67 + 53) / 120][Stage 168:======================================>              (88 + 32) / 120][Stage 168:============================================>       (102 + 18) / 120][Stage 168:====================================================>(119 + 1) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:=============================>                       (67 + 54) / 121][Stage 169:====================================>                (84 + 37) / 121][Stage 169:=============================================>      (107 + 14) / 121][Stage 169:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.024620984 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397224938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:===========================>                         (63 + 57) / 120][Stage 170:==================================>                  (77 + 43) / 120][Stage 170:============================================>       (103 + 17) / 120][Stage 170:===================================================> (117 + 3) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:=============================>                       (67 + 54) / 121][Stage 171:==================================>                  (78 + 43) / 121][Stage 171:===========================================>        (102 + 19) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.925677071 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39484706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (62 + 59) / 121][Stage 172:===================================>                 (80 + 41) / 121][Stage 172:==========================================>          (98 + 23) / 121][Stage 172:=================================================>   (114 + 7) / 121]                                                                                [Stage 173:===========================>                         (64 + 58) / 122][Stage 173:=============================>                       (69 + 53) / 122][Stage 173:=====================================>               (87 + 35) / 122][Stage 173:==============================================>     (110 + 12) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.152728537 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46407862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (79 + 34) / 113][Stage 174:==========================================>          (90 + 23) / 113][Stage 174:==============================================>     (100 + 13) / 113][Stage 174:=================================================>   (106 + 7) / 113]                                                                                [Stage 175:====================================>                (79 + 35) / 114][Stage 175:=========================================>           (89 + 25) / 114][Stage 175:============================================>        (96 + 18) / 114][Stage 175:==================================================>  (109 + 5) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.984548723 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374991381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:===============================>                     (68 + 45) / 113][Stage 176:======================================>              (83 + 30) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===============================>                     (67 + 47) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:=============================================>       (97 + 17) / 114][Stage 177:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.100724008 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388148921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:=============================>                       (67 + 53) / 120][Stage 178:==================================>                  (79 + 41) / 120][Stage 178:===========================================>        (101 + 19) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:===========================>                         (62 + 59) / 121][Stage 179:===============================>                     (72 + 49) / 121][Stage 179:=====================================>               (86 + 35) / 121][Stage 179:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.045653194 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342167642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (80 + 35) / 115][Stage 180:======================================>              (84 + 31) / 115][Stage 180:=============================================>      (100 + 15) / 115][Stage 180:==================================================>  (110 + 5) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:=====================================>               (83 + 33) / 116][Stage 181:========================================>            (88 + 28) / 116][Stage 181:=============================================>      (101 + 15) / 116][Stage 181:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.816423659 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381952463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (70 + 43) / 113][Stage 182:===================================>                 (76 + 37) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:============================================>        (94 + 19) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:======================================>              (82 + 32) / 114][Stage 183:========================================>            (88 + 26) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:===============================================>    (104 + 10) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.088227567 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400549244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (62 + 59) / 121][Stage 184:===============================>                     (72 + 49) / 121][Stage 184:==========================================>         (100 + 21) / 121][Stage 184:===================================================> (118 + 3) / 121]                                                                                [Stage 185:==========================>                          (61 + 61) / 122][Stage 185:==============================>                      (71 + 51) / 122][Stage 185:========================================>            (93 + 29) / 122][Stage 185:==============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.047241953 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373480325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (70 + 45) / 115][Stage 186:=======================================>             (86 + 29) / 115][Stage 186:============================================>        (97 + 18) / 115][Stage 186:===============================================>    (105 + 10) / 115]                                                                                [Stage 187:=================================>                   (73 + 43) / 116][Stage 187:========================================>            (88 + 28) / 116][Stage 187:===============================================>    (106 + 10) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.867234157 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410663865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:=================================>                   (76 + 44) / 120][Stage 188:=======================================>             (89 + 31) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:============================>                        (66 + 55) / 121][Stage 189:=====================================>               (86 + 35) / 121][Stage 189:==============================================>     (109 + 12) / 121][Stage 189:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.833913401 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370745506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=================================>                   (73 + 42) / 115][Stage 190:========================================>            (88 + 27) / 115][Stage 190:==============================================>     (102 + 13) / 115][Stage 190:===================================================> (111 + 4) / 115]                                                                                [Stage 191:===================================>                 (77 + 39) / 116][Stage 191:===========================================>         (95 + 21) / 116][Stage 191:===============================================>    (105 + 11) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.214420773 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390217326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:============================>                        (65 + 55) / 120][Stage 192:=====================================>               (85 + 35) / 120][Stage 192:============================================>       (102 + 18) / 120][Stage 192:====================================================>(119 + 1) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:==============================>                      (70 + 51) / 121][Stage 193:===================================>                 (80 + 41) / 121][Stage 193:==========================================>          (98 + 23) / 121][Stage 193:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.993382075 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407797308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:=============================>                       (66 + 54) / 120][Stage 194:===================================>                 (80 + 40) / 120][Stage 194:==============================================>     (108 + 12) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:=============================>                       (67 + 54) / 121][Stage 195:======================================>              (88 + 33) / 121][Stage 195:=============================================>      (107 + 14) / 121]                                                                                Time elapsed: 2.948706141 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396097069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:=============================>                       (63 + 50) / 113][Stage 196:======================================>              (82 + 31) / 113][Stage 196:==============================================>     (100 + 13) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:==============================>                      (65 + 49) / 114][Stage 197:====================================>                (78 + 36) / 114][Stage 197:=============================================>       (98 + 16) / 114][Stage 197:====================================================>(112 + 2) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.111477371 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39575945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:===================================>                 (75 + 38) / 113][Stage 198:===========================================>         (93 + 20) / 113][Stage 198:==================================================>  (107 + 6) / 113]                                                                                [Stage 199:============================>                        (62 + 52) / 114][Stage 199:==================================>                  (75 + 39) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.055233935 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402219311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:============================>                        (65 + 56) / 121][Stage 200:=====================================>               (86 + 35) / 121][Stage 200:==========================================>         (100 + 21) / 121][Stage 200:=================================================>   (113 + 8) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:===========================>                         (64 + 58) / 122][Stage 201:=================================>                   (76 + 46) / 122][Stage 201:==========================================>          (97 + 25) / 122][Stage 201:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.142741463 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m47.354s
user	11m28.656s
sys	0m28.192s
