Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 05:41:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:41:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:41:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:41:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 05:41:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:42:08 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522054157-0420).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.428736981 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.326006764 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.813588085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================>                                      (35 + 83) / 118][Stage 2:==========================>                            (57 + 61) / 118][Stage 2:==============================>                        (66 + 52) / 118][Stage 2:==================================>                    (73 + 45) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=========================================>             (88 + 30) / 118][Stage 2:==============================================>        (99 + 19) / 118][Stage 2:================================================>     (106 + 12) / 118][Stage 2:=====================================================> (114 + 4) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:==========================================>            (92 + 27) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:====================================================>  (114 + 5) / 119][Stage 3:======================================================>(117 + 2) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.451143011 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.646351472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:================================>                      (67 + 46) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:==========================================>            (88 + 25) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:===================================================>   (105 + 8) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:=====================================>                 (77 + 37) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:================================================>     (102 + 12) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.985622982 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=9", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=9,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.687609559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (59 + 61) / 120][Stage 6:===========================>                           (61 + 59) / 120][Stage 6:===============================>                       (68 + 52) / 120][Stage 6:==================================>                    (76 + 44) / 120][Stage 6:=======================================>               (86 + 34) / 120][Stage 6:=============================================>         (99 + 21) / 120][Stage 6:=====================================================> (116 + 4) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:=============================>                         (64 + 57) / 121][Stage 7:================================>                      (72 + 49) / 121][Stage 7:====================================>                  (80 + 41) / 121][Stage 7:===========================================>           (95 + 26) / 121][Stage 7:==================================================>    (112 + 9) / 121][Stage 7:=====================================================> (118 + 3) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.239871313 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560646089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===============================>                       (65 + 50) / 115][Stage 8:=======================================>               (83 + 32) / 115][Stage 8:==========================================>            (88 + 27) / 115][Stage 8:===============================================>      (102 + 13) / 115][Stage 8:==================================================>    (106 + 9) / 115][Stage 8:=====================================================> (111 + 4) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:=================================>                     (70 + 46) / 116][Stage 9:=====================================>                 (79 + 37) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:===========================================>           (91 + 25) / 116][Stage 9:================================================>     (105 + 11) / 116][Stage 9:====================================================>  (111 + 5) / 116][Stage 9:======================================================>(114 + 2) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.36118797 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568043175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=============================>                        (63 + 52) / 115][Stage 10:================================>                     (69 + 46) / 115][Stage 10:=====================================>                (80 + 35) / 115][Stage 10:============================================>         (95 + 20) / 115][Stage 10:==============================================>       (98 + 17) / 115][Stage 10:==============================================>       (99 + 16) / 115][Stage 10:===============================================>     (103 + 12) / 115][Stage 10:=================================================>    (106 + 9) / 115]                                                                                [Stage 11:==============================>                       (65 + 51) / 116][Stage 11:==================================>                   (74 + 42) / 116][Stage 11:=====================================>                (81 + 35) / 116][Stage 11:==========================================>           (92 + 24) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.164907315 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504441789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (69 + 44) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:==========================================>           (89 + 24) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:==============================================>      (100 + 13) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:==================================================>   (106 + 7) / 113]                                                                                [Stage 13:====================================>                 (78 + 36) / 114][Stage 13:=========================================>            (87 + 27) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:==================================================>   (106 + 8) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.26157706 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540711738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:==============================>                       (64 + 49) / 113][Stage 14:=====================================>                (78 + 35) / 113][Stage 14:===========================================>          (90 + 23) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:====================================================> (110 + 3) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:=============================>                        (62 + 52) / 114][Stage 15:================================>                     (68 + 46) / 114][Stage 15:========================================>             (85 + 29) / 114][Stage 15:==============================================>       (99 + 15) / 114][Stage 15:==================================================>   (107 + 7) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.121548313 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498111827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:======================================>               (83 + 32) / 115][Stage 16:========================================>             (86 + 29) / 115][Stage 16:============================================>         (94 + 21) / 115][Stage 16:==============================================>      (101 + 14) / 115][Stage 16:=================================================>    (106 + 9) / 115][Stage 16:=====================================================>(113 + 2) / 115]                                                                                [Stage 17:======================================>               (82 + 34) / 116][Stage 17:=======================================>              (84 + 32) / 116][Stage 17:============================================>         (96 + 20) / 116][Stage 17:===============================================>     (103 + 13) / 116][Stage 17:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.448774237 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54119604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (61 + 59) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:========================================>             (90 + 30) / 120][Stage 18:===============================================>     (108 + 12) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:=================================>                    (74 + 47) / 121][Stage 19:=========================================>            (94 + 27) / 121][Stage 19:==================================================>   (114 + 7) / 121][Stage 19:===================================================>  (116 + 5) / 121][Stage 19:====================================================> (118 + 3) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.986332275 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551237196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:==================================>                   (75 + 43) / 118][Stage 20:=====================================>                (82 + 36) / 118][Stage 20:==========================================>           (93 + 25) / 118][Stage 20:=============================================>       (102 + 16) / 118][Stage 20:===================================================>  (112 + 6) / 118][Stage 20:=====================================================>(116 + 2) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:==================================>                   (76 + 43) / 119][Stage 21:=======================================>              (86 + 33) / 119][Stage 21:============================================>        (100 + 19) / 119][Stage 21:================================================>    (109 + 10) / 119][Stage 21:===================================================>  (113 + 6) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.817193216 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449389235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:====================================>                 (77 + 36) / 113][Stage 22:===========================================>          (90 + 23) / 113][Stage 22:===============================================>      (99 + 14) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:==================================>                   (73 + 41) / 114][Stage 23:=========================================>            (88 + 26) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.501105247 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528912037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:=============================>                        (66 + 54) / 120][Stage 24:========================================>             (89 + 31) / 120][Stage 24:================================================>    (110 + 10) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:=============================>                        (65 + 56) / 121][Stage 25:====================================>                 (82 + 39) / 121][Stage 25:===========================================>         (100 + 21) / 121][Stage 25:===============================================>     (108 + 13) / 121][Stage 25:=================================================>    (112 + 9) / 121][Stage 25:===================================================>  (116 + 5) / 121][Stage 25:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.296653501 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446654165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (70 + 43) / 113][Stage 26:========================================>             (84 + 29) / 113][Stage 26:=============================================>        (95 + 18) / 113][Stage 26:===============================================>     (102 + 11) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===================================>                  (74 + 40) / 114][Stage 27:=======================================>              (83 + 31) / 114][Stage 27:========================================>             (86 + 28) / 114][Stage 27:=============================================>        (96 + 18) / 114][Stage 27:===================================================>  (109 + 5) / 114][Stage 27:====================================================> (111 + 3) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.856808131 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=162", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=162,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419318149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (80 + 35) / 115][Stage 28:=======================================>              (85 + 30) / 115][Stage 28:==============================================>       (99 + 16) / 115][Stage 28:==================================================>   (108 + 7) / 115][Stage 28:====================================================> (111 + 4) / 115][Stage 28:=====================================================>(113 + 2) / 115]                                                                                [Stage 29:========================================>             (86 + 30) / 116][Stage 29:============================================>         (96 + 20) / 116][Stage 29:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.195506204 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512012298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (66 + 55) / 121][Stage 30:=====================================>                (83 + 38) / 121][Stage 30:===========================================>          (98 + 23) / 121][Stage 30:====================================================> (117 + 4) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:=============================>                        (66 + 56) / 122][Stage 31:=====================================>                (85 + 37) / 122][Stage 31:===========================================>         (101 + 21) / 122][Stage 31:==================================================>   (113 + 9) / 122][Stage 31:=====================================================>(120 + 2) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.261973082 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427420257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (75 + 38) / 113][Stage 32:=========================================>            (86 + 27) / 113][Stage 32:==============================================>       (97 + 16) / 113][Stage 32:==================================================>   (105 + 8) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:=======================================>              (84 + 30) / 114][Stage 33:============================================>         (93 + 21) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.268769747 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448068051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:=================================>                    (73 + 45) / 118][Stage 34:===================================>                  (78 + 40) / 118][Stage 34:========================================>             (89 + 29) / 118][Stage 34:===============================================>     (106 + 12) / 118][Stage 34:==================================================>   (110 + 8) / 118][Stage 34:====================================================> (115 + 3) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:==================================>                   (76 + 43) / 119][Stage 35:===================================>                  (79 + 40) / 119][Stage 35:======================================>               (85 + 34) / 119][Stage 35:============================================>        (101 + 18) / 119][Stage 35:================================================>    (109 + 10) / 119][Stage 35:===================================================>  (114 + 5) / 119][Stage 35:=====================================================>(117 + 2) / 119][Stage 35:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.219569015 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454204573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (71 + 47) / 118][Stage 36:==================================>                   (76 + 42) / 118][Stage 36:========================================>             (89 + 29) / 118][Stage 36:================================================>    (107 + 11) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:==================================>                   (75 + 44) / 119][Stage 37:=======================================>              (87 + 32) / 119][Stage 37:============================================>         (98 + 21) / 119][Stage 37:=====================================================>(117 + 2) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.518321537 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478540019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=================================>                    (71 + 44) / 115][Stage 38:=======================================>              (85 + 30) / 115][Stage 38:==============================================>       (99 + 16) / 115][Stage 38:==================================================>   (107 + 8) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:================================>                     (70 + 46) / 116][Stage 39:========================================>             (87 + 29) / 116][Stage 39:=============================================>       (100 + 16) / 116][Stage 39:===================================================>  (110 + 6) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.070187224 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483279036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:===============================>                      (65 + 48) / 113][Stage 40:=====================================>                (78 + 35) / 113][Stage 40:==========================================>           (88 + 25) / 113][Stage 40:==================================================>   (105 + 8) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:=================================>                    (70 + 44) / 114][Stage 41:======================================>               (82 + 32) / 114][Stage 41:==============================================>      (100 + 14) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.17344475 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495821041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:============================>                         (60 + 53) / 113][Stage 42:=====================================>                (79 + 34) / 113][Stage 42:============================================>         (94 + 19) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:==============================>                       (64 + 50) / 114][Stage 43:=====================================>                (80 + 34) / 114][Stage 43:===============================================>     (102 + 12) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.935051598 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423320424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (71 + 47) / 118][Stage 44:=====================================>                (81 + 37) / 118][Stage 44:==========================================>           (92 + 26) / 118][Stage 44:===============================================>     (106 + 12) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (76 + 43) / 119][Stage 45:=========================================>            (92 + 27) / 119][Stage 45:================================================>    (108 + 11) / 119][Stage 45:===================================================>  (114 + 5) / 119][Stage 45:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.529505138 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460217855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:============================>                         (64 + 57) / 121][Stage 46:===================================>                  (79 + 42) / 121][Stage 46:=============================================>       (105 + 16) / 121][Stage 46:====================================================> (118 + 3) / 121]                                                                                [Stage 47:===========================>                          (62 + 60) / 122][Stage 47:==============================>                       (70 + 52) / 122][Stage 47:=======================================>              (90 + 32) / 122][Stage 47:==================================================>   (113 + 9) / 122][Stage 47:=====================================================>(120 + 2) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.440572036 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46728936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===============================>                      (70 + 50) / 120][Stage 48:====================================>                 (82 + 38) / 120][Stage 48:===============================================>     (108 + 12) / 120]                                                                                [Stage 49:===========================>                          (62 + 59) / 121][Stage 49:================================>                     (72 + 49) / 121][Stage 49:=======================================>              (88 + 33) / 121][Stage 49:=================================================>    (112 + 9) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.713644794 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491628027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===============================>                      (67 + 48) / 115][Stage 50:=====================================>                (80 + 35) / 115][Stage 50:=============================================>        (97 + 18) / 115][Stage 50:==================================================>   (108 + 7) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:===============================>                      (68 + 48) / 116][Stage 51:==================================>                   (75 + 41) / 116][Stage 51:===========================================>          (93 + 23) / 116][Stage 51:===============================================>     (105 + 11) / 116][Stage 51:=================================================>    (107 + 9) / 116][Stage 51:=====================================================>(114 + 2) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.938290199 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479754685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:===========================>                          (61 + 60) / 121][Stage 52:===============================>                      (70 + 51) / 121][Stage 52:=======================================>              (88 + 33) / 121][Stage 52:=====================================================>(119 + 2) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:==============================>                       (68 + 54) / 122][Stage 53:======================================>               (87 + 35) / 122][Stage 53:============================================>        (103 + 19) / 122][Stage 53:====================================================> (119 + 3) / 122][Stage 53:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.935106063 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438716959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (72 + 43) / 115][Stage 54:========================================>             (86 + 29) / 115][Stage 54:==============================================>       (99 + 16) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:=================================>                    (71 + 45) / 116][Stage 55:=======================================>              (85 + 31) / 116][Stage 55:=============================================>        (98 + 18) / 116][Stage 55:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.919903996 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379566169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:>                                                       (0 + 0) / 115][Stage 56:======================================>               (81 + 34) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:================================================>    (105 + 10) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:======================================>               (83 + 33) / 116][Stage 57:==========================================>           (92 + 24) / 116][Stage 57:===============================================>     (103 + 13) / 116][Stage 57:==================================================>   (109 + 7) / 116][Stage 57:===================================================>  (110 + 6) / 116][Stage 57:=====================================================>(114 + 2) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.354354202 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467168301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:================================>                     (67 + 46) / 113][Stage 58:======================================>               (81 + 32) / 113][Stage 58:==============================================>      (100 + 13) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (66 + 48) / 114][Stage 59:=========================================>            (88 + 26) / 114][Stage 59:==============================================>       (99 + 15) / 114][Stage 59:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.794764567 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401500728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==================================>                   (73 + 40) / 113][Stage 60:=========================================>            (86 + 27) / 113][Stage 60:============================================>         (94 + 19) / 113][Stage 60:================================================>    (103 + 10) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=====================================>                (79 + 35) / 114][Stage 61:=========================================>            (88 + 26) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:==============================================>      (101 + 13) / 114][Stage 61:===================================================>  (108 + 6) / 114][Stage 61:====================================================> (111 + 3) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.240346696 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406903827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (79 + 34) / 113][Stage 62:==========================================>           (88 + 25) / 113][Stage 62:===============================================>      (99 + 14) / 113][Stage 62:===================================================>  (107 + 6) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===================================>                  (75 + 39) / 114][Stage 63:========================================>             (85 + 29) / 114][Stage 63:==============================================>      (100 + 14) / 114][Stage 63:===================================================>  (108 + 6) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.109085981 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427866721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (70 + 45) / 115][Stage 64:=====================================>                (79 + 36) / 115][Stage 64:=========================================>            (89 + 26) / 115][Stage 64:===============================================>     (102 + 13) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:==================================>                   (74 + 42) / 116][Stage 65:=========================================>            (90 + 26) / 116][Stage 65:==============================================>      (101 + 15) / 116][Stage 65:===============================================>     (105 + 11) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:====================================================> (113 + 3) / 116][Stage 65:=====================================================>(114 + 2) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.245184652 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400176563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===================================>                  (75 + 38) / 113][Stage 66:=========================================>            (86 + 27) / 113][Stage 66:============================================>         (93 + 20) / 113][Stage 66:================================================>    (103 + 10) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:=====================================>                (80 + 34) / 114][Stage 67:===========================================>          (91 + 23) / 114][Stage 67:===============================================>     (103 + 11) / 114][Stage 67:====================================================> (110 + 4) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.243031511 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425327972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:===================================>                  (74 + 39) / 113][Stage 68:============================================>         (94 + 19) / 113][Stage 68:===================================================>  (108 + 5) / 113]                                                                                [Stage 69:==============================>                       (64 + 50) / 114][Stage 69:====================================>                 (76 + 38) / 114][Stage 69:==============================================>      (100 + 14) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.991333232 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419403272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=============================>                        (63 + 52) / 115][Stage 70:==================================>                   (73 + 42) / 115][Stage 70:========================================>             (87 + 28) / 115][Stage 70:===============================================>     (102 + 13) / 115][Stage 70:=================================================>    (106 + 9) / 115][Stage 70:==================================================>   (107 + 8) / 115]                                                                                [Stage 71:================================>                     (70 + 46) / 116][Stage 71:=====================================>                (81 + 35) / 116][Stage 71:============================================>         (96 + 20) / 116][Stage 71:==============================================>      (102 + 14) / 116][Stage 71:===============================================>     (103 + 13) / 116][Stage 71:==================================================>   (109 + 7) / 116][Stage 71:====================================================> (112 + 4) / 116][Stage 71:=====================================================>(114 + 2) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.413363658 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442510053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:====================================>                 (77 + 36) / 113][Stage 72:==========================================>           (88 + 25) / 113][Stage 72:============================================>         (94 + 19) / 113][Stage 72:===================================================>  (107 + 6) / 113]                                                                                [Stage 73:======================================>               (81 + 33) / 114][Stage 73:===========================================>          (92 + 22) / 114][Stage 73:===============================================>     (103 + 11) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.131730137 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444619522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:============================>                         (63 + 57) / 120][Stage 74:==================================>                   (77 + 43) / 120][Stage 74:===========================================>          (97 + 23) / 120][Stage 74:====================================================> (117 + 3) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:=============================>                        (66 + 55) / 121][Stage 75:====================================>                 (82 + 39) / 121][Stage 75:=============================================>       (105 + 16) / 121][Stage 75:====================================================> (117 + 4) / 121][Stage 75:=====================================================>(119 + 2) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.628632402 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394707784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=================================>                    (73 + 45) / 118][Stage 76:=====================================>                (81 + 37) / 118][Stage 76:============================================>         (97 + 21) / 118][Stage 76:=====================================================>(116 + 2) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:===================================>                  (79 + 40) / 119][Stage 77:============================================>        (101 + 18) / 119][Stage 77:==================================================>   (112 + 7) / 119][Stage 77:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.377096548 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393219018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:==================================>                   (75 + 43) / 118][Stage 78:======================================>               (85 + 33) / 118][Stage 78:===========================================>          (96 + 22) / 118][Stage 78:====================================================> (114 + 4) / 118]                                                                                [Stage 79:==================================>                   (75 + 44) / 119][Stage 79:====================================>                 (81 + 38) / 119][Stage 79:===========================================>          (96 + 23) / 119][Stage 79:================================================>    (108 + 11) / 119][Stage 79:====================================================> (115 + 4) / 119][Stage 79:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.961614548 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41910657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:==============================>                       (69 + 52) / 121][Stage 80:======================================>               (87 + 34) / 121][Stage 80:===============================================>     (108 + 13) / 121][Stage 80:=====================================================>(119 + 2) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:=============================>                        (66 + 56) / 122][Stage 81:=====================================>                (84 + 38) / 122][Stage 81:==============================================>      (106 + 16) / 122][Stage 81:===================================================>  (116 + 6) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.83458616 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383704285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:====================================>                 (79 + 39) / 118][Stage 82:=======================================>              (87 + 31) / 118][Stage 82:============================================>         (98 + 20) / 118][Stage 82:====================================================> (115 + 3) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:=====================================>                (82 + 37) / 119][Stage 83:========================================>             (90 + 29) / 119][Stage 83:==============================================>      (105 + 14) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.539796353 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417687786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:===============================>                      (66 + 47) / 113][Stage 84:===================================>                  (74 + 39) / 113][Stage 84:==============================================>      (100 + 13) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:=============================>                        (62 + 52) / 114][Stage 85:====================================>                 (76 + 38) / 114][Stage 85:=============================================>        (95 + 19) / 114][Stage 85:===================================================>  (108 + 6) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.796560027 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409409457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (68 + 47) / 115][Stage 86:=======================================>              (85 + 30) / 115][Stage 86:==============================================>       (99 + 16) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(113 + 2) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:===============================>                      (67 + 49) / 116][Stage 87:===================================>                  (77 + 39) / 116][Stage 87:=========================================>            (90 + 26) / 116][Stage 87:=================================================>    (107 + 9) / 116][Stage 87:===================================================>  (110 + 6) / 116][Stage 87:====================================================> (113 + 3) / 116][Stage 87:=====================================================>(114 + 2) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.133940822 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388065681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:=========================================>            (89 + 26) / 115][Stage 88:===============================================>     (102 + 13) / 115][Stage 88:==================================================>   (107 + 8) / 115]                                                                                [Stage 89:=======================================>              (85 + 31) / 116][Stage 89:===========================================>          (94 + 22) / 116][Stage 89:==================================================>   (108 + 8) / 116][Stage 89:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.788479002 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401620729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:>                                                       (0 + 0) / 113][Stage 90:===========================>                          (58 + 55) / 113][Stage 90:=============================>                        (62 + 51) / 113][Stage 90:===================================>                  (74 + 39) / 113][Stage 90:============================================>         (94 + 19) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:=============================>                        (63 + 51) / 114][Stage 91:===================================>                  (74 + 40) / 114][Stage 91:==========================================>           (89 + 25) / 114][Stage 91:=================================================>    (105 + 9) / 114][Stage 91:====================================================> (111 + 3) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.994389314 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412658729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=============================>                        (62 + 51) / 113][Stage 92:===================================>                  (75 + 38) / 113][Stage 92:============================================>         (94 + 19) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:=============================>                        (62 + 52) / 114][Stage 93:====================================>                 (76 + 38) / 114][Stage 93:===========================================>          (91 + 23) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.105873191 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439236703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:=============================>                        (65 + 56) / 121][Stage 94:===================================>                  (80 + 41) / 121][Stage 94:=============================================>       (103 + 18) / 121][Stage 94:=====================================================>(120 + 1) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:=============================>                        (67 + 55) / 122][Stage 95:=====================================>                (85 + 37) / 122][Stage 95:============================================>        (102 + 20) / 122][Stage 95:====================================================> (118 + 4) / 122][Stage 95:=====================================================>(120 + 2) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.693381784 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420921298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:===============================>                      (70 + 51) / 121][Stage 96:=====================================>                (84 + 37) / 121][Stage 96:=================================================>    (112 + 9) / 121][Stage 96:=====================================================>(120 + 1) / 121]                                                                                [Stage 97:===========================>                          (61 + 61) / 122][Stage 97:=============================>                        (66 + 56) / 122][Stage 97:==================================>                   (78 + 44) / 122][Stage 97:=============================================>       (105 + 17) / 122][Stage 97:====================================================> (118 + 4) / 122][Stage 97:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.322670445 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416932344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:============================>                         (64 + 56) / 120][Stage 98:==================================>                   (77 + 43) / 120][Stage 98:==============================================>      (105 + 15) / 120][Stage 98:====================================================> (117 + 3) / 120]                                                                                [Stage 99:===========================>                          (61 + 60) / 121][Stage 99:=============================>                        (65 + 56) / 121][Stage 99:===================================>                  (80 + 41) / 121][Stage 99:=============================================>       (104 + 17) / 121][Stage 99:====================================================> (118 + 3) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.921441278 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369221254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==================================>                  (74 + 39) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:================================================>    (104 + 9) / 113][Stage 100:====================================================>(111 + 2) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:====================================>                (79 + 35) / 114][Stage 101:=========================================>           (89 + 25) / 114][Stage 101:============================================>        (95 + 19) / 114][Stage 101:=================================================>   (107 + 7) / 114][Stage 101:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.343409501 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437856239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:==============================>                      (68 + 52) / 120][Stage 102:===================================>                 (80 + 40) / 120][Stage 102:==============================================>     (108 + 12) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:===============================>                     (71 + 50) / 121][Stage 103:======================================>              (88 + 33) / 121][Stage 103:==============================================>     (108 + 13) / 121][Stage 103:===================================================> (118 + 3) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.889339946 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416403083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 61) / 121][Stage 104:===========================>                         (63 + 58) / 121][Stage 104:================================>                    (74 + 47) / 121][Stage 104:=======================================>             (91 + 30) / 121][Stage 104:=================================================>   (114 + 7) / 121][Stage 104:====================================================>(119 + 2) / 121]                                                                                [Stage 105:============================>                        (66 + 56) / 122][Stage 105:==================================>                  (80 + 42) / 122][Stage 105:===========================================>        (102 + 20) / 122][Stage 105:==================================================>  (116 + 6) / 122][Stage 105:====================================================>(120 + 2) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.580322446 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405882465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===============================>                     (68 + 47) / 115][Stage 106:=====================================>               (82 + 33) / 115][Stage 106:===========================================>         (94 + 21) / 115][Stage 106:================================================>    (106 + 9) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:=========================================>           (90 + 26) / 116][Stage 107:==============================================>     (104 + 12) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.747176881 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383436565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:=====================================>               (83 + 35) / 118][Stage 108:============================================>        (98 + 20) / 118][Stage 108:=================================================>   (110 + 8) / 118][Stage 108:====================================================>(117 + 1) / 118]                                                                                [Stage 109:================================>                    (74 + 45) / 119][Stage 109:===================================>                 (79 + 40) / 119][Stage 109:===========================================>         (97 + 22) / 119][Stage 109:=================================================>   (111 + 8) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.43213896 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388259362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=============================>                       (62 + 51) / 113][Stage 110:=================================>                   (71 + 42) / 113][Stage 110:=========================================>           (88 + 25) / 113][Stage 110:===============================================>    (103 + 10) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:=================================>                   (71 + 43) / 114][Stage 111:=========================================>           (90 + 24) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(112 + 2) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.648865512 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354099761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (77 + 36) / 113][Stage 112:=======================================>             (84 + 29) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:===============================================>    (103 + 10) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:=====================================>               (81 + 33) / 114][Stage 113:=========================================>           (89 + 25) / 114][Stage 113:============================================>        (96 + 18) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:==================================================>  (109 + 5) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.966405807 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39594963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 61) / 121][Stage 114:============================>                        (64 + 57) / 121][Stage 114:===================================>                 (81 + 40) / 121][Stage 114:=============================================>      (105 + 16) / 121][Stage 114:====================================================>(120 + 1) / 121]                                                                                [Stage 115:==========================>                          (61 + 61) / 122][Stage 115:============================>                        (66 + 56) / 122][Stage 115:==================================>                  (79 + 43) / 122][Stage 115:===========================================>        (101 + 21) / 122][Stage 115:===================================================> (119 + 3) / 122][Stage 115:====================================================>(120 + 2) / 122][Stage 115:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.316270451 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391710976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (61 + 52) / 113][Stage 116:==================================>                  (74 + 39) / 113][Stage 116:=============================================>       (97 + 16) / 113][Stage 116:==================================================>  (108 + 5) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:=================================>                   (71 + 43) / 114][Stage 117:=========================================>           (90 + 24) / 114][Stage 117:==============================================>     (101 + 13) / 114][Stage 117:====================================================>(112 + 2) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.688950038 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360561845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:=================================>                   (75 + 43) / 118][Stage 118:====================================>                (82 + 36) / 118][Stage 118:=========================================>           (93 + 25) / 118][Stage 118:================================================>    (109 + 9) / 118][Stage 118:===================================================> (115 + 3) / 118]                                                                                [Stage 119:================================>                    (74 + 45) / 119][Stage 119:==================================>                  (77 + 42) / 119][Stage 119:=====================================>               (85 + 34) / 119][Stage 119:============================================>        (99 + 20) / 119][Stage 119:===============================================>    (109 + 10) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.195305662 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365289821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:==================================>                  (77 + 41) / 118][Stage 120:=========================================>           (92 + 26) / 118][Stage 120:===============================================>    (108 + 10) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:====================================>                (82 + 37) / 119][Stage 121:===========================================>         (98 + 21) / 119][Stage 121:==============================================>     (107 + 12) / 119][Stage 121:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.472377048 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394041503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:===============================>                     (72 + 48) / 120][Stage 122:======================================>              (88 + 32) / 120][Stage 122:=================================================>   (112 + 8) / 120][Stage 122:===================================================> (117 + 3) / 120]                                                                                [Stage 123:===========================>                         (62 + 59) / 121][Stage 123:==============================>                      (70 + 51) / 121][Stage 123:====================================>                (84 + 37) / 121][Stage 123:=============================================>      (107 + 14) / 121][Stage 123:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.036690599 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33978351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (82 + 33) / 115][Stage 124:======================================>              (83 + 32) / 115][Stage 124:============================================>        (97 + 18) / 115][Stage 124:==================================================>  (110 + 5) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (83 + 33) / 116][Stage 125:==========================================>          (92 + 24) / 116][Stage 125:==============================================>     (103 + 13) / 116][Stage 125:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.898833146 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389714948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=============================>                       (64 + 51) / 115][Stage 126:===================================>                 (78 + 37) / 115][Stage 126:===========================================>         (95 + 20) / 115][Stage 126:==============================================>     (103 + 12) / 115][Stage 126:===================================================> (111 + 4) / 115][Stage 126:====================================================>(114 + 1) / 115]                                                                                [Stage 127:===============================>                     (70 + 46) / 116][Stage 127:=======================================>             (87 + 29) / 116][Stage 127:=============================================>       (99 + 17) / 116][Stage 127:==================================================>  (110 + 6) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.180651531 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396826354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (60 + 53) / 113][Stage 128:=================================>                   (72 + 41) / 113][Stage 128:===========================================>         (93 + 20) / 113][Stage 128:=================================================>   (106 + 7) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (65 + 49) / 114][Stage 129:=====================================>               (81 + 33) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.757308606 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417516328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:===========================>                         (63 + 57) / 120][Stage 130:==================================>                  (79 + 41) / 120][Stage 130:===========================================>         (98 + 22) / 120][Stage 130:=================================================>   (113 + 7) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:============================>                        (66 + 55) / 121][Stage 131:======================================>              (87 + 34) / 121][Stage 131:=============================================>      (106 + 15) / 121][Stage 131:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.578094048 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401421931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:============================>                        (65 + 56) / 121][Stage 132:=====================================>               (86 + 35) / 121][Stage 132:==============================================>     (108 + 13) / 121][Stage 132:====================================================>(120 + 1) / 121]                                                                                [Stage 133:==========================>                          (61 + 61) / 122][Stage 133:=============================>                       (67 + 55) / 122][Stage 133:====================================>                (83 + 39) / 122][Stage 133:==============================================>     (109 + 13) / 122][Stage 133:====================================================>(120 + 2) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.730875473 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339733631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (80 + 35) / 115][Stage 134:=======================================>             (85 + 30) / 115][Stage 134:=============================================>       (98 + 17) / 115][Stage 134:================================================>    (106 + 9) / 115]                                                                                [Stage 135:========================================>            (89 + 27) / 116][Stage 135:===========================================>         (95 + 21) / 116][Stage 135:===============================================>    (105 + 11) / 116][Stage 135:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.818544463 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347474978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (80 + 33) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:==============================================>     (101 + 12) / 113][Stage 136:==================================================>  (108 + 5) / 113][Stage 136:===================================================> (110 + 3) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===================================>                 (77 + 37) / 114][Stage 137:=======================================>             (85 + 29) / 114][Stage 137:============================================>        (96 + 18) / 114][Stage 137:================================================>    (105 + 9) / 114][Stage 137:==================================================>  (108 + 6) / 114][Stage 137:===================================================> (110 + 4) / 114][Stage 137:====================================================>(112 + 2) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.017473846 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349921027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (79 + 34) / 113][Stage 138:=========================================>           (89 + 24) / 113][Stage 138:============================================>        (94 + 19) / 113][Stage 138:================================================>    (104 + 9) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:==================================>                  (74 + 40) / 114][Stage 139:========================================>            (88 + 26) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.104366364 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381243399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (65 + 48) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:============================>                        (62 + 52) / 114][Stage 141:===================================>                 (76 + 38) / 114][Stage 141:================================================>    (105 + 9) / 114][Stage 141:===================================================> (111 + 3) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.724796215 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346868996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:====================================>                (77 + 36) / 113][Stage 142:=========================================>           (89 + 24) / 113][Stage 142:=============================================>       (97 + 16) / 113][Stage 142:==================================================>  (108 + 5) / 113]                                                                                [Stage 143:=====================================>               (80 + 34) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:=============================================>       (98 + 16) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:===================================================> (111 + 3) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.849594633 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359636422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:================================>                    (73 + 45) / 118][Stage 144:=======================================>             (89 + 29) / 118][Stage 144:============================================>       (102 + 16) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:=====================================>               (84 + 35) / 119][Stage 145:============================================>       (101 + 18) / 119][Stage 145:===================================================> (115 + 4) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.678281311 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366419966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===============================>                     (69 + 46) / 115][Stage 146:====================================>                (79 + 36) / 115][Stage 146:===========================================>         (94 + 21) / 115][Stage 146:=================================================>   (108 + 7) / 115][Stage 146:===================================================> (112 + 3) / 115]                                                                                [Stage 147:=================================>                   (74 + 42) / 116][Stage 147:======================================>              (84 + 32) / 116][Stage 147:=============================================>      (102 + 14) / 116][Stage 147:=================================================>   (108 + 8) / 116][Stage 147:==================================================>  (110 + 6) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.367546684 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372163627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===============================>                     (68 + 47) / 115][Stage 148:===================================>                 (78 + 37) / 115][Stage 148:==========================================>          (93 + 22) / 115][Stage 148:==================================================>  (110 + 5) / 115]                                                                                [Stage 149:===============================>                     (69 + 47) / 116][Stage 149:=======================================>             (87 + 29) / 116][Stage 149:=============================================>      (102 + 14) / 116][Stage 149:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.835358128 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387872523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:==============================>                      (64 + 49) / 113][Stage 150:=========================================>           (89 + 24) / 113][Stage 150:=================================================>   (106 + 7) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:=================================>                   (72 + 42) / 114][Stage 151:========================================>            (87 + 27) / 114][Stage 151:==============================================>     (103 + 11) / 114][Stage 151:===================================================> (110 + 4) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.993524297 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392926121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (62 + 58) / 120][Stage 152:================================>                    (74 + 46) / 120][Stage 152:=========================================>           (95 + 25) / 120][Stage 152:==================================================>  (114 + 6) / 120]                                                                                [Stage 153:===========================>                         (62 + 59) / 121][Stage 153:===============================>                     (73 + 48) / 121][Stage 153:=========================================>           (94 + 27) / 121][Stage 153:==================================================>  (115 + 6) / 121][Stage 153:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.639587236 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381959102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:================================>                    (73 + 45) / 118][Stage 154:====================================>                (82 + 36) / 118][Stage 154:=========================================>           (92 + 26) / 118][Stage 154:===============================================>    (108 + 10) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:===================================>                 (80 + 39) / 119][Stage 155:=========================================>           (94 + 25) / 119][Stage 155:===============================================>    (108 + 11) / 119][Stage 155:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.57327054 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359664922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:================================>                    (73 + 45) / 118][Stage 156:===================================>                 (79 + 39) / 118][Stage 156:=======================================>             (89 + 29) / 118][Stage 156:============================================>        (99 + 19) / 118][Stage 156:==================================================>  (112 + 6) / 118][Stage 156:====================================================>(117 + 1) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=================================>                   (75 + 44) / 119][Stage 157:===================================>                 (79 + 40) / 119][Stage 157:========================================>            (90 + 29) / 119][Stage 157:=============================================>      (103 + 16) / 119][Stage 157:==================================================>  (113 + 6) / 119][Stage 157:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.600430824 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352852258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:=======================================>             (84 + 29) / 113][Stage 158:=========================================>           (89 + 24) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:====================================================>(111 + 2) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:====================================>                (78 + 36) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:===========================================>         (93 + 21) / 114][Stage 159:==============================================>     (102 + 12) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:==================================================>  (109 + 5) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.362716435 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341162136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (83 + 32) / 115][Stage 160:=======================================>             (85 + 30) / 115][Stage 160:==============================================>     (102 + 13) / 115][Stage 160:==================================================>  (110 + 5) / 115]                                                                                [Stage 161:======================================>              (84 + 32) / 116][Stage 161:============================================>        (97 + 19) / 116][Stage 161:=================================================>   (108 + 8) / 116][Stage 161:===================================================> (113 + 3) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.967956964 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35592151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (77 + 36) / 113][Stage 162:==========================================>          (90 + 23) / 113][Stage 162:=============================================>       (96 + 17) / 113][Stage 162:=================================================>   (105 + 8) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:===================================>                 (77 + 37) / 114][Stage 163:========================================>            (88 + 26) / 114][Stage 163:=============================================>       (98 + 16) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:===================================================> (111 + 3) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.049418415 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390623633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:==========================>                          (61 + 59) / 120][Stage 164:===============================>                     (72 + 48) / 120][Stage 164:======================================>              (88 + 32) / 120][Stage 164:==================================================>  (114 + 6) / 120]                                                                                [Stage 165:===========================>                         (63 + 58) / 121][Stage 165:================================>                    (74 + 47) / 121][Stage 165:==========================================>          (97 + 24) / 121][Stage 165:==================================================>  (116 + 5) / 121][Stage 165:===================================================> (118 + 3) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.325630828 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39248682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:=================================>                   (71 + 42) / 113][Stage 166:=======================================>             (84 + 29) / 113][Stage 166:=============================================>       (98 + 15) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:=============================>                       (64 + 50) / 114][Stage 167:=================================>                   (72 + 42) / 114][Stage 167:===========================================>         (94 + 20) / 114][Stage 167:==================================================>  (109 + 5) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.741339165 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384492371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:====================================>                (78 + 35) / 113][Stage 168:==========================================>          (91 + 22) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:===============================>                     (68 + 46) / 114][Stage 169:========================================>            (87 + 27) / 114][Stage 169:================================================>    (105 + 9) / 114][Stage 169:====================================================>(112 + 2) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.333548338 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386036037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===================================>                 (77 + 38) / 115][Stage 170:=========================================>           (89 + 26) / 115][Stage 170:==============================================>     (103 + 12) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:=================================>                   (73 + 43) / 116][Stage 171:==========================================>          (94 + 22) / 116][Stage 171:==============================================>     (103 + 13) / 116][Stage 171:==================================================>  (111 + 5) / 116][Stage 171:===================================================> (113 + 3) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.824008751 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402523976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:============================>                        (66 + 55) / 121][Stage 172:=================================>                   (76 + 45) / 121][Stage 172:=========================================>           (94 + 27) / 121][Stage 172:===================================================> (118 + 3) / 121]                                                                                [Stage 173:============================>                        (65 + 57) / 122][Stage 173:======================================>              (88 + 34) / 122][Stage 173:=============================================>      (107 + 15) / 122][Stage 173:==================================================>  (117 + 5) / 122][Stage 173:====================================================>(120 + 2) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.319101149 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370375182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:==================================>                  (77 + 41) / 118][Stage 174:=======================================>             (87 + 31) / 118][Stage 174:==============================================>     (106 + 12) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (74 + 45) / 119][Stage 175:====================================>                (81 + 38) / 119][Stage 175:========================================>            (92 + 27) / 119][Stage 175:==============================================>     (106 + 13) / 119][Stage 175:===================================================> (115 + 4) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.698706917 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356639073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (74 + 44) / 118][Stage 176:==========================================>          (94 + 24) / 118][Stage 176:================================================>    (109 + 9) / 118][Stage 176:===================================================> (114 + 4) / 118]                                                                                [Stage 177:================================>                    (74 + 45) / 119][Stage 177:==================================>                  (77 + 42) / 119][Stage 177:========================================>            (92 + 27) / 119][Stage 177:============================================>       (101 + 18) / 119][Stage 177:=================================================>   (111 + 8) / 119][Stage 177:====================================================>(117 + 2) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.815949895 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360663767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==================================>                  (73 + 40) / 113][Stage 178:======================================>              (83 + 30) / 113][Stage 178:==========================================>          (91 + 22) / 113][Stage 178:===============================================>    (103 + 10) / 113][Stage 178:===================================================> (110 + 3) / 113]                                                                                [Stage 179:=====================================>               (81 + 33) / 114][Stage 179:===========================================>         (94 + 20) / 114][Stage 179:===============================================>    (104 + 10) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.918365994 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347316279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (80 + 33) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:================================================>    (104 + 9) / 113][Stage 180:====================================================>(111 + 2) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:====================================>                (78 + 36) / 114][Stage 181:=======================================>             (84 + 30) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:=================================================>   (106 + 8) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.173259363 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419705737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 59) / 120][Stage 182:================================>                    (73 + 47) / 120][Stage 182:=========================================>           (94 + 26) / 120][Stage 182:=================================================>   (113 + 7) / 120]                                                                                [Stage 183:===========================>                         (63 + 58) / 121][Stage 183:===============================>                     (73 + 48) / 121][Stage 183:=======================================>             (90 + 31) / 121][Stage 183:===============================================>    (110 + 11) / 121][Stage 183:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.870302291 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446843415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:=============================>                       (67 + 54) / 121][Stage 184:======================================>              (88 + 33) / 121][Stage 184:===============================================>    (110 + 11) / 121][Stage 184:====================================================>(120 + 1) / 121]                                                                                [Stage 185:==========================>                          (62 + 60) / 122][Stage 185:=============================>                       (68 + 54) / 122][Stage 185:=====================================>               (87 + 35) / 122][Stage 185:============================================>       (104 + 18) / 122][Stage 185:===================================================> (118 + 4) / 122][Stage 185:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.025152185 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391069515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:===========================>                         (63 + 58) / 121][Stage 186:================================>                    (75 + 46) / 121][Stage 186:===========================================>         (99 + 22) / 121][Stage 186:==================================================>  (115 + 6) / 121]                                                                                [Stage 187:===========================>                         (64 + 58) / 122][Stage 187:===============================>                     (72 + 50) / 122][Stage 187:=====================================>               (86 + 36) / 122][Stage 187:==============================================>     (110 + 12) / 122][Stage 187:===================================================> (119 + 3) / 122][Stage 187:====================================================>(120 + 2) / 122][Stage 187:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.68774438 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356550433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=================================>                   (72 + 41) / 113][Stage 188:======================================>              (83 + 30) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:===================================>                 (77 + 37) / 114][Stage 189:=======================================>             (85 + 29) / 114][Stage 189:===========================================>         (93 + 21) / 114][Stage 189:==============================================>     (102 + 12) / 114][Stage 189:===============================================>    (104 + 10) / 114][Stage 189:================================================>    (105 + 9) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.698498347 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391095376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:=============================>                       (67 + 53) / 120][Stage 190:====================================>                (82 + 38) / 120][Stage 190:=============================================>      (104 + 16) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:==============================>                      (69 + 52) / 121][Stage 191:=====================================>               (85 + 36) / 121][Stage 191:==============================================>     (108 + 13) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.068977405 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343242446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (72 + 41) / 113][Stage 192:======================================>              (82 + 31) / 113][Stage 192:===========================================>         (92 + 21) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:===================================================> (109 + 4) / 113]                                                                                [Stage 193:======================================>              (83 + 31) / 114][Stage 193:==========================================>          (92 + 22) / 114][Stage 193:==============================================>     (101 + 13) / 114][Stage 193:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.024132096 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=224", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=224,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393705305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:==============================>                      (70 + 51) / 121][Stage 194:======================================>              (89 + 32) / 121][Stage 194:===============================================>    (111 + 10) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:=============================>                       (67 + 55) / 122][Stage 195:====================================>                (83 + 39) / 122][Stage 195:==============================================>     (109 + 13) / 122][Stage 195:==================================================>  (117 + 5) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.261962075 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410113644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (61 + 60) / 121][Stage 196:==============================>                      (70 + 51) / 121][Stage 196:======================================>              (88 + 33) / 121][Stage 196:=============================================>      (106 + 15) / 121][Stage 196:====================================================>(119 + 2) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:===========================>                         (63 + 59) / 122][Stage 197:================================>                    (75 + 47) / 122][Stage 197:========================================>            (93 + 29) / 122][Stage 197:=================================================>   (113 + 9) / 122][Stage 197:====================================================>(120 + 2) / 122][Stage 197:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.275064183 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387632144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (60 + 53) / 113][Stage 198:====================================>                (77 + 36) / 113][Stage 198:======================================>              (83 + 30) / 113][Stage 198:=================================================>   (105 + 8) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:==================================>                  (74 + 40) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.701409796 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337212624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (83 + 32) / 115][Stage 200:=========================================>           (90 + 25) / 115][Stage 200:==============================================>     (102 + 13) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:======================================>              (85 + 31) / 116][Stage 201:==========================================>          (92 + 24) / 116][Stage 201:================================================>    (107 + 9) / 116][Stage 201:===================================================> (113 + 3) / 116][Stage 201:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.017642195 seconds
res203: Int = 0

scala> 

scala> :quit

real	12m6.141s
user	12m24.060s
sys	1m40.220s
