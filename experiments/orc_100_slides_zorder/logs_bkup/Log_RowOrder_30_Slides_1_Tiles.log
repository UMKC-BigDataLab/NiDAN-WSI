Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 03:25:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:25:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:25:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:25:39 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 03:25:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:25:51 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522032540-0407).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.41430504 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.821986155 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.835853826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:========================>                              (51 + 62) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:====================================>                  (74 + 39) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===============================>                       (65 + 49) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:=========================================>             (86 + 28) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:====================================================>  (109 + 5) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.918044602 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.779412154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (58 + 62) / 120][Stage 4:===========================>                           (59 + 61) / 120][Stage 4:============================>                          (62 + 58) / 120][Stage 4:================================>                      (71 + 49) / 120][Stage 4:===================================>                   (77 + 43) / 120][Stage 4:=========================================>             (91 + 29) / 120][Stage 4:================================================>     (108 + 12) / 120][Stage 4:===================================================>   (113 + 7) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (60 + 61) / 121][Stage 5:============================>                          (63 + 58) / 121][Stage 5:==============================>                        (67 + 54) / 121][Stage 5:====================================>                  (81 + 40) / 121][Stage 5:=============================================>         (99 + 22) / 121][Stage 5:====================================================>  (115 + 6) / 121][Stage 5:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.330045207 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.627699669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (59 + 61) / 120][Stage 6:============================>                          (62 + 58) / 120][Stage 6:==================================>                    (75 + 45) / 120][Stage 6:=======================================>               (86 + 34) / 120][Stage 6:=============================================>        (100 + 20) / 120][Stage 6:================================================>     (108 + 12) / 120][Stage 6:======================================================>(118 + 2) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:============================>                          (62 + 59) / 121][Stage 7:================================>                      (71 + 50) / 121][Stage 7:=======================================>               (86 + 35) / 121][Stage 7:===========================================>           (95 + 26) / 121][Stage 7:==============================================>       (105 + 16) / 121][Stage 7:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.119154392 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573547689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (72 + 46) / 118][Stage 8:==================================>                    (75 + 43) / 118][Stage 8:=======================================>               (84 + 34) / 118][Stage 8:=========================================>             (90 + 28) / 118][Stage 8:=============================================>         (98 + 20) / 118][Stage 8:=================================================>    (108 + 10) / 118][Stage 8:======================================================>(117 + 1) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:==================================>                    (74 + 45) / 119][Stage 9:=========================================>             (90 + 29) / 119][Stage 9:=============================================>         (98 + 21) / 119][Stage 9:================================================>     (106 + 13) / 119][Stage 9:===================================================>   (111 + 8) / 119][Stage 9:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.9969644 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.648936307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:=============================>                        (67 + 54) / 121][Stage 10:====================================>                 (81 + 40) / 121][Stage 10:==============================================>      (107 + 14) / 121][Stage 10:===================================================>  (115 + 6) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:================================>                     (74 + 48) / 122][Stage 11:======================================>               (88 + 34) / 122][Stage 11:===========================================>          (99 + 23) / 122][Stage 11:==============================================>      (108 + 14) / 122][Stage 11:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.830254837 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.588119236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=================================>                    (75 + 46) / 121][Stage 12:=======================================>              (89 + 32) / 121][Stage 12:==============================================>      (106 + 15) / 121][Stage 12:===================================================>  (115 + 6) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:=============================>                        (66 + 56) / 122][Stage 13:===================================>                  (81 + 41) / 122][Stage 13:==========================================>           (97 + 25) / 122][Stage 13:================================================>    (111 + 11) / 122][Stage 13:===================================================>  (117 + 5) / 122][Stage 13:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.039410123 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534097678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:===============================>                      (65 + 48) / 113][Stage 14:=======================================>              (83 + 30) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:====================================================> (110 + 3) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=================================>                    (70 + 44) / 114][Stage 15:=====================================>                (80 + 34) / 114][Stage 15:===========================================>          (92 + 22) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.978093442 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461684873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (69 + 44) / 113][Stage 16:==================================>                   (73 + 40) / 113][Stage 16:=======================================>              (83 + 30) / 113][Stage 16:============================================>         (94 + 19) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===================================>                  (74 + 40) / 114][Stage 17:=========================================>            (87 + 27) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:====================================================> (111 + 3) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.700769396 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534031195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (57 + 56) / 113][Stage 18:==============================>                       (63 + 50) / 113][Stage 18:======================================>               (80 + 33) / 113][Stage 18:==============================================>       (98 + 15) / 113][Stage 18:===================================================>  (107 + 6) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:===============================>                      (67 + 47) / 114][Stage 19:==========================================>           (89 + 25) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.245783688 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532111025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:===================================>                  (79 + 41) / 120][Stage 20:==============================================>      (105 + 15) / 120][Stage 20:====================================================> (117 + 3) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:=============================>                        (65 + 56) / 121][Stage 21:===================================>                  (80 + 41) / 121][Stage 21:==========================================>           (96 + 25) / 121][Stage 21:==============================================>      (106 + 15) / 121][Stage 21:====================================================> (118 + 3) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.566211643 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479773956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===================================>                  (75 + 40) / 115][Stage 22:========================================>             (87 + 28) / 115][Stage 22:==============================================>       (99 + 16) / 115][Stage 22:===================================================>  (109 + 6) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:===================================>                  (77 + 39) / 116][Stage 23:=============================================>        (98 + 18) / 116][Stage 23:===============================================>     (103 + 13) / 116][Stage 23:================================================>    (106 + 10) / 116][Stage 23:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.364588479 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485552162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=======================================>              (84 + 31) / 115][Stage 24:===========================================>          (93 + 22) / 115][Stage 24:===============================================>     (102 + 13) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:=============================================>        (98 + 18) / 116][Stage 25:================================================>    (106 + 10) / 116][Stage 25:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.060851093 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51248013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (61 + 59) / 120][Stage 26:================================>                     (73 + 47) / 120][Stage 26:=========================================>            (92 + 28) / 120][Stage 26:==============================================>      (106 + 14) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:==========================>                           (60 + 61) / 121][Stage 27:===============================>                      (70 + 51) / 121][Stage 27:=======================================>              (88 + 33) / 121][Stage 27:=============================================>       (104 + 17) / 121][Stage 27:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.507401959 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449534252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:>                                                       (0 + 0) / 118][Stage 28:================================>                     (72 + 46) / 118][Stage 28:=================================>                    (74 + 44) / 118][Stage 28:========================================>             (88 + 30) / 118][Stage 28:==============================================>      (104 + 14) / 118][Stage 28:==================================================>   (111 + 7) / 118][Stage 28:====================================================> (115 + 3) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:===================================>                  (79 + 40) / 119][Stage 29:=======================================>              (88 + 31) / 119][Stage 29:================================================>    (108 + 11) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.467130452 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512260975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:============================>                         (64 + 57) / 121][Stage 30:=====================================>                (84 + 37) / 121][Stage 30:============================================>         (99 + 22) / 121][Stage 30:==================================================>   (113 + 8) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:=============================>                        (66 + 56) / 122][Stage 31:=================================>                    (75 + 47) / 122][Stage 31:==========================================>           (97 + 25) / 122][Stage 31:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.329217979 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448295424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=================================>                    (73 + 45) / 118][Stage 32:=====================================>                (82 + 36) / 118][Stage 32:=============================================>       (101 + 17) / 118][Stage 32:==================================================>   (111 + 7) / 118][Stage 32:====================================================> (114 + 4) / 118][Stage 32:====================================================> (115 + 3) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (75 + 44) / 119][Stage 33:=========================================>            (92 + 27) / 119][Stage 33:==================================================>   (111 + 8) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.40754579 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465447946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (69 + 46) / 115][Stage 34:======================================>               (82 + 33) / 115][Stage 34:============================================>         (95 + 20) / 115][Stage 34:====================================================> (111 + 4) / 115]                                                                                [Stage 35:=================================>                    (72 + 44) / 116][Stage 35:============================================>         (96 + 20) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.846002773 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448910126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (73 + 45) / 118][Stage 36:=====================================>                (82 + 36) / 118][Stage 36:============================================>        (100 + 18) / 118][Stage 36:=================================================>    (109 + 9) / 118][Stage 36:=====================================================>(116 + 2) / 118]                                                                                [Stage 37:==================================>                   (76 + 43) / 119][Stage 37:=======================================>              (87 + 32) / 119][Stage 37:=============================================>       (102 + 17) / 119][Stage 37:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.269337931 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434543555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=====================================>                (79 + 34) / 113][Stage 38:=========================================>            (86 + 27) / 113][Stage 38:===============================================>      (99 + 14) / 113][Stage 38:==================================================>   (105 + 8) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=================================>                    (71 + 43) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:==============================================>       (99 + 15) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.099014062 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426673957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:====================================>                 (76 + 37) / 113][Stage 40:=========================================>            (86 + 27) / 113][Stage 40:================================================>    (103 + 10) / 113][Stage 40:===================================================>  (108 + 5) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:=======================================>              (84 + 30) / 114][Stage 41:=============================================>        (96 + 18) / 114][Stage 41:===============================================>     (103 + 11) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.023715634 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480830117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===============================>                      (67 + 48) / 115][Stage 42:=======================================>              (85 + 30) / 115][Stage 42:============================================>         (95 + 20) / 115][Stage 42:===============================================>     (104 + 11) / 115][Stage 42:===================================================>  (110 + 5) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:================================>                     (69 + 47) / 116][Stage 43:=======================================>              (85 + 31) / 116][Stage 43:==============================================>      (102 + 14) / 116][Stage 43:=================================================>    (107 + 9) / 116][Stage 43:===================================================>  (110 + 6) / 116][Stage 43:====================================================> (112 + 4) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.821633472 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469028519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:===============================>                      (71 + 50) / 121][Stage 44:=======================================>              (88 + 33) / 121][Stage 44:=============================================>       (103 + 18) / 121][Stage 44:===================================================>  (115 + 6) / 121]                                                                                [Stage 45:===========================>                          (62 + 60) / 122][Stage 45:===============================>                      (72 + 50) / 122][Stage 45:==========================================>           (97 + 25) / 122][Stage 45:================================================>    (111 + 11) / 122][Stage 45:=====================================================>(120 + 2) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.580712184 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395811926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (71 + 42) / 113][Stage 46:=======================================>              (82 + 31) / 113][Stage 46:============================================>         (94 + 19) / 113][Stage 46:================================================>    (103 + 10) / 113][Stage 46:====================================================> (110 + 3) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:=====================================>                (80 + 34) / 114][Stage 47:=========================================>            (87 + 27) / 114][Stage 47:==============================================>       (99 + 15) / 114][Stage 47:=================================================>    (105 + 9) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.124813503 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394012537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (81 + 34) / 115][Stage 48:========================================>             (86 + 29) / 115][Stage 48:=============================================>        (96 + 19) / 115][Stage 48:===============================================>     (104 + 11) / 115][Stage 48:====================================================> (111 + 4) / 115]                                                                                [Stage 49:=====================================>                (81 + 35) / 116][Stage 49:=======================================>              (85 + 31) / 116][Stage 49:=============================================>        (97 + 19) / 116][Stage 49:==============================================>      (101 + 15) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:====================================================> (113 + 3) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.355586087 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415707479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:=========================================>            (90 + 28) / 118][Stage 50:===============================================>     (106 + 12) / 118][Stage 50:=====================================================>(116 + 2) / 118]                                                                                [Stage 51:=================================>                    (74 + 45) / 119][Stage 51:=======================================>              (88 + 31) / 119][Stage 51:===============================================>     (107 + 12) / 119][Stage 51:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.141805832 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419027095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (66 + 49) / 115][Stage 52:=====================================>                (79 + 36) / 115][Stage 52:============================================>         (94 + 21) / 115][Stage 52:===============================================>     (104 + 11) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:====================================================> (111 + 4) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:=====================================>                (81 + 35) / 116][Stage 53:==============================================>      (102 + 14) / 116][Stage 53:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.073354638 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405250409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==================================>                   (72 + 41) / 113][Stage 54:======================================>               (80 + 33) / 113][Stage 54:============================================>         (93 + 20) / 113][Stage 54:===============================================>     (102 + 11) / 113][Stage 54:====================================================> (109 + 4) / 113]                                                                                [Stage 55:=======================================>              (84 + 30) / 114][Stage 55:=============================================>        (95 + 19) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:==================================================>   (107 + 7) / 114][Stage 55:====================================================> (110 + 4) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.684553309 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447250709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:=============================>                        (66 + 55) / 121][Stage 56:==================================>                   (77 + 44) / 121][Stage 56:=========================================>            (94 + 27) / 121][Stage 56:=================================================>    (112 + 9) / 121][Stage 56:====================================================> (118 + 3) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=============================>                        (66 + 56) / 122][Stage 57:====================================>                 (82 + 40) / 122][Stage 57:===========================================>         (100 + 22) / 122][Stage 57:==================================================>   (114 + 8) / 122][Stage 57:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.60715395 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450026102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (62 + 59) / 121][Stage 58:=================================>                    (75 + 46) / 121][Stage 58:=========================================>            (94 + 27) / 121][Stage 58:===============================================>     (108 + 13) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:==============================>                       (70 + 52) / 122][Stage 59:====================================>                 (82 + 40) / 122][Stage 59:==============================================>      (106 + 16) / 122][Stage 59:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.325467789 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412931102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:====================================>                 (79 + 39) / 118][Stage 60:=========================================>            (91 + 27) / 118][Stage 60:=============================================>        (99 + 19) / 118][Stage 60:==================================================>   (110 + 8) / 118][Stage 60:====================================================> (115 + 3) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:==================================>                   (76 + 43) / 119][Stage 61:=======================================>              (88 + 31) / 119][Stage 61:=============================================>       (102 + 17) / 119][Stage 61:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.672336588 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410227909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:====================================>                 (76 + 37) / 113][Stage 62:==========================================>           (89 + 24) / 113][Stage 62:=============================================>        (95 + 18) / 113][Stage 62:================================================>    (103 + 10) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:=======================================>              (83 + 31) / 114][Stage 63:===========================================>          (91 + 23) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.302856949 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36493313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:======================================>               (82 + 33) / 115][Stage 64:========================================>             (86 + 29) / 115][Stage 64:==============================================>      (101 + 14) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:========================================>             (87 + 29) / 116][Stage 65:=============================================>       (100 + 16) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.863518915 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411640894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==============================>                       (65 + 50) / 115][Stage 66:====================================>                 (77 + 38) / 115][Stage 66:============================================>         (94 + 21) / 115][Stage 66:=================================================>    (106 + 9) / 115]                                                                                [Stage 67:================================>                     (70 + 46) / 116][Stage 67:==========================================>           (91 + 25) / 116][Stage 67:===============================================>     (103 + 13) / 116][Stage 67:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.731480937 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468481466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:================================>                     (72 + 49) / 121][Stage 68:=====================================>                (84 + 37) / 121][Stage 68:===============================================>     (109 + 12) / 121]                                                                                [Stage 69:===========================>                          (63 + 59) / 122][Stage 69:=================================>                    (75 + 47) / 122][Stage 69:===========================================>         (100 + 22) / 122][Stage 69:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.102247009 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548949751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:==================================>                   (76 + 42) / 118][Stage 70:==========================================>           (93 + 25) / 118][Stage 70:=============================================>       (102 + 16) / 118][Stage 70:===================================================>  (113 + 5) / 118]                                                                                [Stage 71:==================================>                   (77 + 42) / 119][Stage 71:========================================>             (90 + 29) / 119][Stage 71:================================================>    (108 + 11) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.040080766 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372256224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (81 + 34) / 115][Stage 72:=======================================>              (85 + 30) / 115][Stage 72:==============================================>      (100 + 15) / 115][Stage 72:===================================================>  (109 + 6) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:=====================================>                (81 + 35) / 116][Stage 73:========================================>             (87 + 29) / 116][Stage 73:=============================================>        (97 + 19) / 116][Stage 73:===============================================>     (104 + 12) / 116][Stage 73:====================================================> (112 + 4) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.293040452 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380228381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===================================>                  (74 + 39) / 113][Stage 74:======================================>               (80 + 33) / 113][Stage 74:============================================>         (93 + 20) / 113][Stage 74:===============================================>      (99 + 14) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:=====================================================>(111 + 2) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:====================================>                 (76 + 38) / 114][Stage 75:===========================================>          (91 + 23) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.670096491 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439551644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (73 + 42) / 115][Stage 76:==========================================>           (91 + 24) / 115][Stage 76:===============================================>     (104 + 11) / 115][Stage 76:====================================================> (111 + 4) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:===================================>                  (76 + 40) / 116][Stage 77:=========================================>            (90 + 26) / 116][Stage 77:===============================================>     (105 + 11) / 116][Stage 77:=====================================================>(114 + 2) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.766086643 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407936952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==============================>                       (65 + 50) / 115][Stage 78:===================================>                  (76 + 39) / 115][Stage 78:===========================================>          (92 + 23) / 115][Stage 78:==============================================>      (100 + 15) / 115][Stage 78:====================================================> (111 + 4) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:==================================>                   (75 + 41) / 116][Stage 79:========================================>             (86 + 30) / 116][Stage 79:=============================================>       (100 + 16) / 116][Stage 79:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.401975514 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351602902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (83 + 32) / 115][Stage 80:========================================>             (87 + 28) / 115][Stage 80:==============================================>      (101 + 14) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:=======================================>              (84 + 32) / 116][Stage 81:==========================================>           (91 + 25) / 116][Stage 81:=============================================>        (98 + 18) / 116][Stage 81:===================================================>  (111 + 5) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.118599493 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377050043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (70 + 43) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:============================================>         (93 + 20) / 113][Stage 82:================================================>    (103 + 10) / 113][Stage 82:====================================================> (109 + 4) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:======================================>               (81 + 33) / 114][Stage 83:==========================================>           (90 + 24) / 114][Stage 83:==============================================>      (100 + 14) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.352087643 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406555163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:================================>                     (67 + 46) / 113][Stage 84:=====================================>                (79 + 34) / 113][Stage 84:=============================================>        (96 + 17) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:==================================>                   (73 + 41) / 114][Stage 85:===========================================>          (91 + 23) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:==================================================>   (107 + 7) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.454344025 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366648212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (77 + 36) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:==============================================>       (97 + 16) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:====================================================> (110 + 3) / 113]                                                                                [Stage 87:=========================================>            (87 + 27) / 114][Stage 87:=============================================>        (96 + 18) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.121936571 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366886072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:=======================================>              (85 + 30) / 115][Stage 88:=============================================>        (97 + 18) / 115][Stage 88:===================================================>  (110 + 5) / 115]                                                                                [Stage 89:======================================>               (83 + 33) / 116][Stage 89:=============================================>       (100 + 16) / 116][Stage 89:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.600876558 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371306553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:====================================>                 (76 + 37) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:==================================================>   (105 + 8) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:====================================>                 (78 + 36) / 114][Stage 91:==========================================>           (90 + 24) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:=================================================>    (105 + 9) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.02313515 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379033289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (73 + 40) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:===================================>                  (75 + 39) / 114][Stage 93:=========================================>            (87 + 27) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:===================================================>  (108 + 6) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.906743409 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416525107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:==============================>                       (68 + 53) / 121][Stage 94:========================================>             (91 + 30) / 121][Stage 94:==================================================>   (114 + 7) / 121]                                                                                [Stage 95:============================>                         (64 + 58) / 122][Stage 95:===============================>                      (72 + 50) / 122][Stage 95:=====================================>                (84 + 38) / 122][Stage 95:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.054291267 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358822091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (82 + 33) / 115][Stage 96:============================================>         (94 + 21) / 115][Stage 96:===============================================>     (103 + 12) / 115][Stage 96:=====================================================>(113 + 2) / 115]                                                                                [Stage 97:========================================>             (86 + 30) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:==============================================>      (102 + 14) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.889534217 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355744496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (84 + 31) / 115][Stage 98:=========================================>            (89 + 26) / 115][Stage 98:==================================================>   (107 + 8) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:===========================================>          (93 + 23) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.85965111 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408337486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (62 + 59) / 121][Stage 100:============================>                        (66 + 55) / 121][Stage 100:========================================>            (92 + 29) / 121][Stage 100:==============================================>     (109 + 12) / 121]                                                                                [Stage 101:==========================>                          (62 + 60) / 122][Stage 101:================================>                    (74 + 48) / 122][Stage 101:======================================>              (89 + 33) / 122][Stage 101:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.07063807 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362390547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (75 + 38) / 113][Stage 102:=========================================>           (88 + 25) / 113][Stage 102:===========================================>         (93 + 20) / 113][Stage 102:=================================================>   (106 + 7) / 113]                                                                                [Stage 103:====================================>                (78 + 36) / 114][Stage 103:========================================>            (88 + 26) / 114][Stage 103:=============================================>      (100 + 14) / 114][Stage 103:===================================================> (110 + 4) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.013074431 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400455487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:===================================>                 (75 + 38) / 113][Stage 104:============================================>        (94 + 19) / 113][Stage 104:=================================================>   (106 + 7) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:===============================>                     (68 + 46) / 114][Stage 105:============================================>        (95 + 19) / 114][Stage 105:==================================================>  (108 + 6) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.298104523 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416882385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:==============================>                      (70 + 50) / 120][Stage 106:======================================>              (88 + 32) / 120][Stage 106:==================================================>  (115 + 5) / 120]                                                                                [Stage 107:============================>                        (64 + 57) / 121][Stage 107:=================================>                   (76 + 45) / 121][Stage 107:==========================================>         (100 + 21) / 121][Stage 107:===================================================> (117 + 4) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.063792842 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41804469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (73 + 45) / 118][Stage 108:=================================>                   (75 + 43) / 118][Stage 108:====================================>                (81 + 37) / 118][Stage 108:============================================>        (98 + 20) / 118][Stage 108:===============================================>    (108 + 10) / 118][Stage 108:===================================================> (114 + 4) / 118]                                                                                [Stage 109:================================>                    (74 + 45) / 119][Stage 109:=================================>                   (75 + 44) / 119][Stage 109:===================================>                 (79 + 40) / 119][Stage 109:============================================>        (99 + 20) / 119][Stage 109:=============================================>      (105 + 14) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.783643401 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367615469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (71 + 42) / 113][Stage 110:========================================>            (87 + 26) / 113][Stage 110:===========================================>         (92 + 21) / 113][Stage 110:================================================>    (104 + 9) / 113][Stage 110:==================================================>  (108 + 5) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:======================================>              (83 + 31) / 114][Stage 111:===========================================>         (94 + 20) / 114][Stage 111:===============================================>    (104 + 10) / 114][Stage 111:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.195489697 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42070556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:==============================>                      (65 + 48) / 113][Stage 112:==================================>                  (73 + 40) / 113][Stage 112:==============================================>      (99 + 14) / 113][Stage 112:====================================================>(111 + 2) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:=================================>                   (73 + 41) / 114][Stage 113:=========================================>           (89 + 25) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.424375299 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398650995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 58) / 120][Stage 114:================================>                    (74 + 46) / 120][Stage 114:=========================================>           (93 + 27) / 120][Stage 114:==============================================>     (107 + 13) / 120][Stage 114:====================================================>(118 + 2) / 120]                                                                                [Stage 115:============================>                        (65 + 56) / 121][Stage 115:================================>                    (74 + 47) / 121][Stage 115:==========================================>          (96 + 25) / 121][Stage 115:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.131600062 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354217223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (78 + 35) / 113][Stage 116:============================================>        (94 + 19) / 113][Stage 116:=================================================>   (105 + 8) / 113][Stage 116:===================================================> (109 + 4) / 113][Stage 116:=====================================================(113 + 0) / 113]                                                                                [Stage 117:===================================>                 (76 + 38) / 114][Stage 117:========================================>            (87 + 27) / 114][Stage 117:=============================================>       (98 + 16) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.082241102 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375076222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:==================================>                  (77 + 41) / 118][Stage 118:=======================================>             (87 + 31) / 118][Stage 118:===========================================>         (96 + 22) / 118][Stage 118:=================================================>   (110 + 8) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:==================================>                  (78 + 41) / 119][Stage 119:==========================================>          (96 + 23) / 119][Stage 119:===============================================>    (108 + 11) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.269589546 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411979076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (63 + 58) / 121][Stage 120:================================>                    (75 + 46) / 121][Stage 120:=========================================>           (95 + 26) / 121][Stage 120:==================================================>  (116 + 5) / 121]                                                                                [Stage 121:============================>                        (65 + 57) / 122][Stage 121:=================================>                   (76 + 46) / 122][Stage 121:============================================>       (105 + 17) / 122]                                                                                Time elapsed: 2.94937638 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386029452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (63 + 50) / 113][Stage 122:=======================================>             (84 + 29) / 113][Stage 122:===============================================>    (103 + 10) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:==============================>                      (66 + 48) / 114][Stage 123:==========================================>          (91 + 23) / 114][Stage 123:==================================================>  (108 + 6) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.997630665 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341243779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (80 + 35) / 115][Stage 124:======================================>              (83 + 32) / 115][Stage 124:============================================>        (96 + 19) / 115][Stage 124:================================================>    (106 + 9) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:======================================>              (84 + 32) / 116][Stage 125:=======================================>             (87 + 29) / 116][Stage 125:============================================>        (98 + 18) / 116][Stage 125:===============================================>    (106 + 10) / 116][Stage 125:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.00836083 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402877031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:============================>                        (66 + 55) / 121][Stage 126:=====================================>               (86 + 35) / 121][Stage 126:=============================================>      (105 + 16) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:============================>                        (65 + 57) / 122][Stage 127:==================================>                  (79 + 43) / 122][Stage 127:============================================>       (104 + 18) / 122][Stage 127:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.001264992 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369919714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:=================================>                   (74 + 44) / 118][Stage 128:===================================>                 (79 + 39) / 118][Stage 128:=======================================>             (88 + 30) / 118][Stage 128:===============================================>    (107 + 11) / 118][Stage 128:===================================================> (115 + 3) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:=================================>                   (75 + 44) / 119][Stage 129:====================================>                (82 + 37) / 119][Stage 129:========================================>            (92 + 27) / 119][Stage 129:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.488764258 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382246292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:=================================>                   (74 + 44) / 118][Stage 130:=====================================>               (84 + 34) / 118][Stage 130:============================================>        (98 + 20) / 118][Stage 130:===============================================>    (108 + 10) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:================================>                    (73 + 46) / 119][Stage 131:===================================>                 (80 + 39) / 119][Stage 131:==========================================>          (95 + 24) / 119][Stage 131:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.394170523 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372314724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==============================>                      (67 + 48) / 115][Stage 132:==================================>                  (74 + 41) / 115][Stage 132:=============================================>       (98 + 17) / 115][Stage 132:==================================================>  (110 + 5) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:================================>                    (72 + 44) / 116][Stage 133:======================================>              (84 + 32) / 116][Stage 133:=============================================>      (101 + 15) / 116][Stage 133:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.921361618 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393296202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:=============================>                       (63 + 50) / 113][Stage 134:===================================>                 (76 + 37) / 113][Stage 134:=============================================>       (97 + 16) / 113][Stage 134:===================================================> (110 + 3) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:=============================>                       (64 + 50) / 114][Stage 135:==================================>                  (74 + 40) / 114][Stage 135:============================================>        (95 + 19) / 114][Stage 135:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.207815109 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354146096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (80 + 33) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:===============================================>    (103 + 10) / 113][Stage 136:===================================================> (109 + 4) / 113]                                                                                [Stage 137:===================================>                 (76 + 38) / 114][Stage 137:==========================================>          (92 + 22) / 114][Stage 137:==============================================>     (102 + 12) / 114][Stage 137:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.90898753 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366647095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:=====================================>               (83 + 35) / 118][Stage 138:============================================>        (98 + 20) / 118][Stage 138:==================================================>  (113 + 5) / 118]                                                                                [Stage 139:================================>                    (74 + 45) / 119][Stage 139:======================================>              (87 + 32) / 119][Stage 139:===========================================>        (100 + 19) / 119][Stage 139:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.037627614 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398850227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:=============================>                       (67 + 54) / 121][Stage 140:===================================>                 (81 + 40) / 121][Stage 140:=============================================>      (105 + 16) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:=============================>                       (69 + 53) / 122][Stage 141:=================================>                   (77 + 45) / 122][Stage 141:============================================>       (104 + 18) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.171872944 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335685908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (81 + 34) / 115][Stage 142:=======================================>             (86 + 29) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=======================================>             (87 + 29) / 116][Stage 143:===========================================>         (95 + 21) / 116][Stage 143:=================================================>   (108 + 8) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.919530765 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366369113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:=================================>                   (75 + 43) / 118][Stage 144:=====================================>               (83 + 35) / 118][Stage 144:========================================>            (91 + 27) / 118][Stage 144:============================================>       (102 + 16) / 118][Stage 144:=================================================>   (111 + 7) / 118]                                                                                [Stage 145:=================================>                   (75 + 44) / 119][Stage 145:===================================>                 (79 + 40) / 119][Stage 145:======================================>              (86 + 33) / 119][Stage 145:=============================================>      (105 + 14) / 119][Stage 145:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.44828292 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365907989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:====================================>                (81 + 37) / 118][Stage 146:===========================================>         (97 + 21) / 118][Stage 146:================================================>    (109 + 9) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:==================================>                  (78 + 41) / 119][Stage 147:=========================================>           (93 + 26) / 119][Stage 147:================================================>    (110 + 9) / 119][Stage 147:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.108729609 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362518792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:==================================>                  (77 + 41) / 118][Stage 148:=======================================>             (87 + 31) / 118][Stage 148:===============================================>    (107 + 11) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:====================================>                (81 + 38) / 119][Stage 149:===========================================>         (97 + 22) / 119][Stage 149:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.798227758 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336543109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:========================================>            (88 + 27) / 115][Stage 150:============================================>        (97 + 18) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (82 + 34) / 116][Stage 151:=======================================>             (87 + 29) / 116][Stage 151:=============================================>      (102 + 14) / 116][Stage 151:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.557595817 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366694932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=================================>                   (74 + 44) / 118][Stage 152:==================================>                  (77 + 41) / 118][Stage 152:====================================>                (81 + 37) / 118][Stage 152:==========================================>          (94 + 24) / 118][Stage 152:==============================================>     (105 + 13) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:==================================>                  (77 + 42) / 119][Stage 153:=====================================>               (85 + 34) / 119][Stage 153:=========================================>           (94 + 25) / 119][Stage 153:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.409273993 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335172402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:======================================>              (83 + 32) / 115][Stage 154:==========================================>          (93 + 22) / 115][Stage 154:==================================================>  (110 + 5) / 115]                                                                                [Stage 155:========================================>            (88 + 28) / 116][Stage 155:=============================================>       (99 + 17) / 116][Stage 155:===============================================>    (105 + 11) / 116][Stage 155:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.78459904 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392451891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:============================>                        (60 + 53) / 113][Stage 156:==================================>                  (74 + 39) / 113][Stage 156:=============================================>       (98 + 15) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:=============================>                       (63 + 51) / 114][Stage 157:=======================================>             (84 + 30) / 114][Stage 157:=================================================>   (107 + 7) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.024900568 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433331783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:>                                                      (0 + 0) / 115][Stage 158:=====================================>               (82 + 33) / 115][Stage 158:=========================================>           (89 + 26) / 115][Stage 158:===========================================>         (95 + 20) / 115][Stage 158:================================================>    (106 + 9) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:=====================================>               (82 + 34) / 116][Stage 159:========================================>            (89 + 27) / 116][Stage 159:=============================================>       (99 + 17) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.1725753 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397404433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:=============================>                       (68 + 53) / 121][Stage 160:==================================>                  (78 + 43) / 121][Stage 160:===========================================>         (99 + 22) / 121][Stage 160:====================================================>(119 + 2) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:==============================>                      (71 + 51) / 122][Stage 161:====================================>                (83 + 39) / 122][Stage 161:==============================================>     (110 + 12) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.999133758 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343539059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (79 + 36) / 115][Stage 162:=======================================>             (85 + 30) / 115][Stage 162:============================================>        (96 + 19) / 115][Stage 162:===============================================>    (105 + 10) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:==========================================>          (94 + 22) / 116][Stage 163:=================================================>   (108 + 8) / 116][Stage 163:===================================================> (112 + 4) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.074748189 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348829283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (77 + 36) / 113][Stage 164:=========================================>           (89 + 24) / 113][Stage 164:==============================================>     (100 + 13) / 113][Stage 164:==================================================>  (108 + 5) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:=====================================>               (80 + 34) / 114][Stage 165:=========================================>           (90 + 24) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.1800735 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367993473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (73 + 45) / 118][Stage 166:==================================>                  (77 + 41) / 118][Stage 166:=========================================>           (93 + 25) / 118][Stage 166:===============================================>    (108 + 10) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:====================================>                (83 + 36) / 119][Stage 167:===========================================>         (98 + 21) / 119][Stage 167:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.976242975 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372261293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=============================>                       (65 + 50) / 115][Stage 168:===================================>                 (77 + 38) / 115][Stage 168:=========================================>           (90 + 25) / 115][Stage 168:===============================================>    (105 + 10) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:===============================>                     (69 + 47) / 116][Stage 169:=====================================>               (81 + 35) / 116][Stage 169:============================================>        (98 + 18) / 116][Stage 169:=================================================>   (108 + 8) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.987994266 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342028889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=======================================>             (86 + 29) / 115][Stage 170:=============================================>       (99 + 16) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:======================================>              (84 + 32) / 116][Stage 171:=============================================>      (101 + 15) / 116][Stage 171:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.543516289 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395548801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (62 + 59) / 121][Stage 172:===============================>                     (72 + 49) / 121][Stage 172:=====================================>               (85 + 36) / 121][Stage 172:==============================================>     (109 + 12) / 121]                                                                                [Stage 173:===========================>                         (63 + 59) / 122][Stage 173:===============================>                     (72 + 50) / 122][Stage 173:==========================================>          (97 + 25) / 122][Stage 173:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.005498479 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336578283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=======================================>             (85 + 30) / 115][Stage 174:===========================================>         (95 + 20) / 115][Stage 174:===================================================> (111 + 4) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:======================================>              (85 + 31) / 116][Stage 175:===========================================>         (96 + 20) / 116][Stage 175:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.74506925 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383003681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:===============================>                     (67 + 46) / 113][Stage 176:==========================================>          (90 + 23) / 113][Stage 176:================================================>    (104 + 9) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:==============================>                      (65 + 49) / 114][Stage 177:====================================>                (79 + 35) / 114][Stage 177:============================================>        (95 + 19) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.116731892 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493758441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:=================================>                   (75 + 43) / 118][Stage 178:========================================>            (90 + 28) / 118][Stage 178:=============================================>      (103 + 15) / 118][Stage 178:==================================================>  (112 + 6) / 118][Stage 178:====================================================>(117 + 1) / 118]                                                                                [Stage 179:================================>                    (74 + 45) / 119][Stage 179:====================================>                (82 + 37) / 119][Stage 179:===========================================>         (98 + 21) / 119][Stage 179:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.050956017 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382412277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:=================================>                   (75 + 43) / 118][Stage 180:=======================================>             (88 + 30) / 118][Stage 180:=============================================>      (104 + 14) / 118][Stage 180:==================================================>  (113 + 5) / 118]                                                                                [Stage 181:==================================>                  (78 + 41) / 119][Stage 181:=======================================>             (89 + 30) / 119][Stage 181:============================================>        (99 + 20) / 119][Stage 181:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.123839975 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 33 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422550685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (60 + 53) / 113][Stage 182:================================>                    (69 + 44) / 113][Stage 182:===========================================>         (92 + 21) / 113][Stage 182:===================================================> (110 + 3) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=============================>                       (64 + 50) / 114][Stage 183:=========================================>           (89 + 25) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.053134898 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343660293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (80 + 35) / 115][Stage 184:======================================>              (84 + 31) / 115][Stage 184:==========================================>          (92 + 23) / 115][Stage 184:=================================================>   (107 + 8) / 115][Stage 184:===================================================> (112 + 3) / 115]                                                                                [Stage 185:========================================>            (88 + 28) / 116][Stage 185:============================================>        (98 + 18) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:===================================================> (113 + 3) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.029530882 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378032175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:==============================>                      (65 + 48) / 113][Stage 186:====================================>                (78 + 35) / 113][Stage 186:==============================================>     (101 + 12) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:=============================>                       (63 + 51) / 114][Stage 187:======================================>              (83 + 31) / 114][Stage 187:=============================================>       (98 + 16) / 114][Stage 187:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.034909822 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37932104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:==============================>                      (66 + 47) / 113][Stage 188:=====================================>               (81 + 32) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:============================>                        (61 + 53) / 114][Stage 189:===================================>                 (77 + 37) / 114][Stage 189:==============================================>      (99 + 15) / 114]                                                                                Time elapsed: 3.004409814 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335609194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:==========================================>          (92 + 23) / 115][Stage 190:==============================================>     (103 + 12) / 115]                                                                                [Stage 191:=====================================>               (82 + 34) / 116][Stage 191:=========================================>           (90 + 26) / 116][Stage 191:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.656268737 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392862902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 61) / 121][Stage 192:=============================>                       (67 + 54) / 121][Stage 192:==================================>                  (79 + 42) / 121][Stage 192:=============================================>      (105 + 16) / 121][Stage 192:====================================================>(120 + 1) / 121]                                                                                [Stage 193:==========================>                          (61 + 61) / 122][Stage 193:=============================>                       (68 + 54) / 122][Stage 193:====================================>                (83 + 39) / 122][Stage 193:===============================================>    (111 + 11) / 122][Stage 193:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.072949646 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359662146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (80 + 33) / 113][Stage 194:==========================================>          (90 + 23) / 113][Stage 194:=============================================>       (98 + 15) / 113][Stage 194:==================================================>  (107 + 6) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:====================================>                (79 + 35) / 114][Stage 195:=========================================>           (90 + 24) / 114][Stage 195:==============================================>     (103 + 11) / 114][Stage 195:==================================================>  (109 + 5) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.155742869 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385091044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:============================>                        (60 + 53) / 113][Stage 196:===============================>                     (68 + 45) / 113][Stage 196:==========================================>          (91 + 22) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:=============================>                       (63 + 51) / 114][Stage 197:=================================>                   (73 + 41) / 114][Stage 197:=============================================>       (98 + 16) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.013263197 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376765345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==================================>                  (73 + 40) / 113][Stage 198:=======================================>             (84 + 29) / 113][Stage 198:=============================================>       (98 + 15) / 113][Stage 198:=================================================>   (105 + 8) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:==================================>                  (74 + 40) / 114][Stage 199:========================================>            (87 + 27) / 114][Stage 199:=============================================>      (100 + 14) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.415669977 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384889182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:===============================>                     (72 + 48) / 120][Stage 200:===========================================>         (98 + 22) / 120][Stage 200:===================================================> (116 + 4) / 120][Stage 200:====================================================>(119 + 1) / 120]                                                                                [Stage 201:============================>                        (64 + 57) / 121][Stage 201:==================================>                  (78 + 43) / 121][Stage 201:==============================================>     (108 + 13) / 121][Stage 201:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.141541807 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 03:35:14 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:53746) dropped. RpcEnv already stopped.
17/05/22 03:35:14 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:53746) dropped. RpcEnv already stopped.

real	9m53.689s
user	11m19.980s
sys	0m28.668s
