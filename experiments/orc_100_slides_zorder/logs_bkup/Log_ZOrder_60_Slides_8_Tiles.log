Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 08:30:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:30:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:30:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:30:21 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 08:30:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:30:34 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522083023-0436).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.356243472 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======>                                               (16 + 99) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.405385357 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.765386608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (45 + 68) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:============================>                          (59 + 55) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:======================================>                (79 + 35) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:================================================>     (103 + 11) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.730078341 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.778875426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (54 + 66) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:===============================>                       (69 + 51) / 120][Stage 4:===================================>                   (77 + 43) / 120][Stage 4:===========================================>           (95 + 25) / 120][Stage 4:===============================================>      (105 + 15) / 120][Stage 4:====================================================>  (114 + 6) / 120]                                                                                [Stage 5:============================>                          (62 + 59) / 121][Stage 5:=============================>                         (65 + 56) / 121][Stage 5:================================>                      (72 + 49) / 121][Stage 5:========================================>              (88 + 33) / 121][Stage 5:=============================================>        (102 + 19) / 121][Stage 5:==================================================>    (112 + 9) / 121][Stage 5:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.725345256 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.557886537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (63 + 52) / 115][Stage 6:===============================>                       (65 + 50) / 115][Stage 6:=================================>                     (70 + 45) / 115][Stage 6:======================================>                (80 + 35) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:===================================================>   (107 + 8) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:==============================>                        (64 + 52) / 116][Stage 7:==================================>                    (73 + 43) / 116][Stage 7:========================================>              (85 + 31) / 116][Stage 7:==============================================>       (100 + 16) / 116][Stage 7:===================================================>   (108 + 8) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.26146982 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=12,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505104532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===============================>                       (64 + 49) / 113][Stage 8:===================================>                   (73 + 40) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:============================================>          (92 + 21) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:==================================================>    (104 + 9) / 113]                                                                                [Stage 9:===================================>                   (74 + 40) / 114][Stage 9:=======================================>               (82 + 32) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:==========================================>            (88 + 26) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:=====================================================> (110 + 4) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.863784347 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561811688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 57) / 115][Stage 10:====================================>                 (78 + 37) / 115][Stage 10:======================================>               (81 + 34) / 115][Stage 10:===========================================>          (92 + 23) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:==================================================>   (107 + 8) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:============================>                         (61 + 55) / 116][Stage 11:===================================>                  (76 + 40) / 116][Stage 11:========================================>             (88 + 28) / 116][Stage 11:===========================================>          (93 + 23) / 116][Stage 11:==============================================>      (101 + 15) / 116][Stage 11:==================================================>   (108 + 8) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.905910603 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537405401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=================================>                    (71 + 42) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:========================================>             (84 + 29) / 113][Stage 12:============================================>         (93 + 20) / 113][Stage 12:=============================================>        (96 + 17) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:=====================================================>(111 + 2) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:====================================>                 (78 + 36) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:==========================================>           (90 + 24) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:==================================================>   (106 + 8) / 114][Stage 13:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.398158442 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469730215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (63 + 50) / 113][Stage 14:=======================================>              (82 + 31) / 113][Stage 14:==========================================>           (89 + 24) / 113][Stage 14:============================================>         (94 + 19) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:==================================================>   (105 + 8) / 113]                                                                                [Stage 15:====================================>                 (77 + 37) / 114][Stage 15:======================================>               (82 + 32) / 114][Stage 15:============================================>         (93 + 21) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.735154435 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527803675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===============================>                      (67 + 48) / 115][Stage 16:===================================>                  (76 + 39) / 115][Stage 16:=========================================>            (88 + 27) / 115][Stage 16:============================================>         (94 + 21) / 115][Stage 16:===============================================>     (103 + 12) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:===================================================>  (110 + 5) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:==============================>                       (65 + 51) / 116][Stage 17:=================================>                    (73 + 43) / 116][Stage 17:======================================>               (82 + 34) / 116][Stage 17:=========================================>            (89 + 27) / 116][Stage 17:===========================================>          (94 + 22) / 116][Stage 17:=================================================>    (107 + 9) / 116][Stage 17:==================================================>   (109 + 7) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 9.42109585 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554401949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=========================>                            (57 + 64) / 121][Stage 18:===========================>                          (61 + 60) / 121][Stage 18:================================>                     (73 + 48) / 121][Stage 18:======================================>               (87 + 34) / 121][Stage 18:==========================================>           (96 + 25) / 121][Stage 18:=============================================>       (104 + 17) / 121][Stage 18:===================================================>  (116 + 5) / 121][Stage 18:=====================================================>(119 + 2) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:============================>                         (65 + 57) / 122][Stage 19:======================================>               (88 + 34) / 122][Stage 19:===========================================>         (101 + 21) / 122][Stage 19:==================================================>   (114 + 8) / 122][Stage 19:=====================================================>(120 + 2) / 122][Stage 19:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.805807507 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481587428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:>                                                       (0 + 0) / 113][Stage 20:==================================>                   (72 + 41) / 113][Stage 20:========================================>             (84 + 29) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:===================================================>  (107 + 6) / 113][Stage 20:=====================================================>(111 + 2) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=================================>                    (70 + 44) / 114][Stage 21:=======================================>              (84 + 30) / 114][Stage 21:===========================================>          (92 + 22) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.733839636 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479380742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (74 + 44) / 118][Stage 22:====================================>                 (80 + 38) / 118][Stage 22:=======================================>              (86 + 32) / 118][Stage 22:==============================================>      (103 + 15) / 118][Stage 22:====================================================> (115 + 3) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (76 + 43) / 119][Stage 23:====================================>                 (81 + 38) / 119][Stage 23:========================================>             (90 + 29) / 119][Stage 23:===========================================>          (96 + 23) / 119][Stage 23:=================================================>    (110 + 9) / 119][Stage 23:====================================================> (116 + 3) / 119][Stage 23:=====================================================>(117 + 2) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.105089279 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529076739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (62 + 59) / 121][Stage 24:================================>                     (72 + 49) / 121][Stage 24:=============================================>       (103 + 18) / 121][Stage 24:===================================================>  (116 + 5) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:==================================>                   (77 + 45) / 122][Stage 25:===========================================>         (100 + 22) / 122][Stage 25:==================================================>   (115 + 7) / 122][Stage 25:=====================================================>(120 + 2) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.503539361 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472409023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===============================>                      (68 + 47) / 115][Stage 26:==================================>                   (73 + 42) / 115][Stage 26:========================================>             (87 + 28) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:=================================>                    (73 + 43) / 116][Stage 27:===========================================>          (94 + 22) / 116][Stage 27:==================================================>   (108 + 8) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.105592627 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488313427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:==============================>                       (68 + 52) / 120][Stage 28:=====================================>                (84 + 36) / 120][Stage 28:===============================================>     (108 + 12) / 120][Stage 28:=====================================================>(118 + 2) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:============================>                         (63 + 58) / 121][Stage 29:===================================>                  (79 + 42) / 121][Stage 29:===========================================>          (98 + 23) / 121][Stage 29:================================================>    (110 + 11) / 121][Stage 29:==================================================>   (114 + 7) / 121][Stage 29:=====================================================>(119 + 2) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.268070534 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418691876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (80 + 35) / 115][Stage 30:========================================>             (86 + 29) / 115][Stage 30:==============================================>       (98 + 17) / 115][Stage 30:====================================================> (111 + 4) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:========================================>             (86 + 30) / 116][Stage 31:============================================>         (96 + 20) / 116][Stage 31:===============================================>     (104 + 12) / 116][Stage 31:===================================================>  (111 + 5) / 116][Stage 31:====================================================> (113 + 3) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.538691839 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495914089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:=============================>                        (67 + 54) / 121][Stage 32:======================================>               (87 + 34) / 121][Stage 32:================================================>    (110 + 11) / 121][Stage 32:====================================================> (117 + 4) / 121]                                                                                [Stage 33:===========================>                          (63 + 59) / 122][Stage 33:===============================>                      (71 + 51) / 122][Stage 33:====================================>                 (83 + 39) / 122][Stage 33:===========================================>          (99 + 23) / 122][Stage 33:==================================================>   (115 + 7) / 122][Stage 33:=====================================================>(120 + 2) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.122809936 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432883894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (70 + 43) / 113][Stage 34:========================================>             (85 + 28) / 113][Stage 34:============================================>         (94 + 19) / 113][Stage 34:================================================>    (103 + 10) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:=====================================>                (80 + 34) / 114][Stage 35:============================================>         (94 + 20) / 114][Stage 35:==============================================>      (100 + 14) / 114][Stage 35:=================================================>    (105 + 9) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.306207705 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47094594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===============================>                      (68 + 47) / 115][Stage 36:======================================>               (81 + 34) / 115][Stage 36:==========================================>           (91 + 24) / 115][Stage 36:==============================================>      (100 + 15) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:===============================>                      (68 + 48) / 116][Stage 37:====================================>                 (79 + 37) / 116][Stage 37:===========================================>          (94 + 22) / 116][Stage 37:==================================================>   (108 + 8) / 116][Stage 37:====================================================> (112 + 4) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.349726126 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466611008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (70 + 45) / 115][Stage 38:======================================>               (83 + 32) / 115][Stage 38:============================================>         (94 + 21) / 115][Stage 38:===============================================>     (102 + 13) / 115][Stage 38:=====================================================>(113 + 2) / 115]                                                                                [Stage 39:================================>                     (69 + 47) / 116][Stage 39:===================================>                  (77 + 39) / 116][Stage 39:===========================================>          (94 + 22) / 116][Stage 39:===============================================>     (105 + 11) / 116][Stage 39:===================================================>  (110 + 6) / 116][Stage 39:====================================================> (112 + 4) / 116][Stage 39:=====================================================>(114 + 2) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.656469372 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464938203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (62 + 51) / 113][Stage 40:====================================>                 (77 + 36) / 113][Stage 40:==============================================>       (97 + 16) / 113][Stage 40:===================================================>  (108 + 5) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:==================================>                   (73 + 41) / 114][Stage 41:===========================================>          (91 + 23) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.609300624 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470244898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==============================>                       (65 + 50) / 115][Stage 42:==================================>                   (73 + 42) / 115][Stage 42:=========================================>            (88 + 27) / 115][Stage 42:==============================================>       (98 + 17) / 115][Stage 42:===================================================>  (110 + 5) / 115]                                                                                [Stage 43:====================================>                 (78 + 38) / 116][Stage 43:==========================================>           (91 + 25) / 116][Stage 43:============================================>         (96 + 20) / 116][Stage 43:=================================================>    (107 + 9) / 116][Stage 43:==================================================>   (108 + 8) / 116][Stage 43:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.950041669 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430325928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==============================>                       (66 + 49) / 115][Stage 44:===================================>                  (75 + 40) / 115][Stage 44:===========================================>          (92 + 23) / 115][Stage 44:==================================================>   (108 + 7) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:=================================>                    (73 + 43) / 116][Stage 45:===================================>                  (77 + 39) / 116][Stage 45:==========================================>           (92 + 24) / 116][Stage 45:=============================================>        (98 + 18) / 116][Stage 45:===============================================>     (104 + 12) / 116][Stage 45:=================================================>    (107 + 9) / 116][Stage 45:====================================================> (113 + 3) / 116][Stage 45:=====================================================>(114 + 2) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.9665345 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46733661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 121][Stage 46:==========================>                           (60 + 61) / 121][Stage 46:=============================>                        (66 + 55) / 121][Stage 46:===================================>                  (80 + 41) / 121][Stage 46:=============================================>       (103 + 18) / 121][Stage 46:====================================================> (117 + 4) / 121]                                                                                [Stage 47:===========================>                          (62 + 60) / 122][Stage 47:=============================>                        (67 + 55) / 122][Stage 47:===================================>                  (80 + 42) / 122][Stage 47:==============================================>      (107 + 15) / 122][Stage 47:====================================================> (119 + 3) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.974654137 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47448361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (61 + 59) / 120][Stage 48:=============================>                        (65 + 55) / 120][Stage 48:=======================================>              (87 + 33) / 120][Stage 48:================================================>    (110 + 10) / 120][Stage 48:=====================================================>(119 + 1) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:===========================>                          (62 + 59) / 121][Stage 49:===================================>                  (80 + 41) / 121][Stage 49:===========================================>         (100 + 21) / 121][Stage 49:==================================================>   (114 + 7) / 121][Stage 49:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.797086407 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447353456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (57 + 56) / 113][Stage 50:=============================>                        (61 + 52) / 113][Stage 50:======================================>               (80 + 33) / 113][Stage 50:=============================================>        (95 + 18) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:=====================================>                (79 + 35) / 114][Stage 51:=============================================>        (96 + 18) / 114][Stage 51:===================================================>  (109 + 5) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.49619522 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421379964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:===================================>                  (77 + 41) / 118][Stage 52:=========================================>            (91 + 27) / 118][Stage 52:=============================================>       (102 + 16) / 118]                                                                                [Stage 53:=================================>                    (74 + 45) / 119][Stage 53:======================================>               (85 + 34) / 119][Stage 53:=============================================>       (102 + 17) / 119][Stage 53:==================================================>   (111 + 8) / 119][Stage 53:=====================================================>(117 + 2) / 119][Stage 53:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.85128002 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421587784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 40) / 115][Stage 54:============================================>         (94 + 21) / 115][Stage 54:===============================================>     (102 + 13) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:=================================>                    (71 + 45) / 116][Stage 55:=======================================>              (84 + 32) / 116][Stage 55:===============================================>     (105 + 11) / 116][Stage 55:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.888557101 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449331502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:===========================>                          (62 + 59) / 121][Stage 56:===================================>                  (80 + 41) / 121][Stage 56:=============================================>       (104 + 17) / 121][Stage 56:=====================================================>(119 + 2) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=============================>                        (67 + 55) / 122][Stage 57:======================================>               (86 + 36) / 122][Stage 57:==============================================>      (108 + 14) / 122][Stage 57:=====================================================>(120 + 2) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.856414575 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378934947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:========================================>             (86 + 29) / 115][Stage 58:=============================================>        (97 + 18) / 115][Stage 58:====================================================> (111 + 4) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:=======================================>              (84 + 32) / 116][Stage 59:===========================================>          (93 + 23) / 116][Stage 59:=================================================>    (107 + 9) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.658236045 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460723973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:============================>                         (64 + 57) / 121][Stage 60:===================================>                  (80 + 41) / 121][Stage 60:=============================================>       (104 + 17) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:================================>                     (73 + 49) / 122][Stage 61:=====================================>                (84 + 38) / 122][Stage 61:==============================================>      (106 + 16) / 122][Stage 61:====================================================> (118 + 4) / 122][Stage 61:=====================================================>(120 + 2) / 122][Stage 61:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.728812208 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486029463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (63 + 50) / 113][Stage 62:=====================================>                (78 + 35) / 113][Stage 62:==============================================>       (98 + 15) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:=============================>                        (62 + 52) / 114][Stage 63:===================================>                  (75 + 39) / 114][Stage 63:===========================================>          (92 + 22) / 114][Stage 63:===================================================>  (109 + 5) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.817812552 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410542754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (69 + 46) / 115][Stage 64:=======================================>              (85 + 30) / 115][Stage 64:=============================================>        (97 + 18) / 115][Stage 64:==================================================>   (108 + 7) / 115]                                                                                [Stage 65:================================>                     (69 + 47) / 116][Stage 65:=======================================>              (85 + 31) / 116][Stage 65:===========================================>          (94 + 22) / 116][Stage 65:================================================>    (106 + 10) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:====================================================> (112 + 4) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.639560757 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407421167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (73 + 45) / 118][Stage 66:======================================>               (84 + 34) / 118][Stage 66:=============================================>       (101 + 17) / 118][Stage 66:===================================================>  (113 + 5) / 118]                                                                                [Stage 67:==================================>                   (75 + 44) / 119][Stage 67:========================================>             (90 + 29) / 119][Stage 67:============================================>         (99 + 20) / 119][Stage 67:================================================>    (109 + 10) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.089542025 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439271594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:===============================>                      (65 + 48) / 113][Stage 68:=====================================>                (79 + 34) / 113][Stage 68:=============================================>        (96 + 17) / 113][Stage 68:===================================================>  (108 + 5) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:=============================>                        (62 + 52) / 114][Stage 69:====================================>                 (77 + 37) / 114][Stage 69:==============================================>       (99 + 15) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.900496544 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402472213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:===================================>                  (78 + 40) / 118][Stage 70:========================================>             (89 + 29) / 118][Stage 70:=============================================>       (101 + 17) / 118][Stage 70:===================================================>  (112 + 6) / 118]                                                                                [Stage 71:==================================>                   (75 + 44) / 119][Stage 71:==================================>                   (77 + 42) / 119][Stage 71:======================================>               (84 + 35) / 119][Stage 71:============================================>         (98 + 21) / 119][Stage 71:===================================================>  (113 + 6) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.383165479 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442199043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:============================>                         (63 + 58) / 121][Stage 72:=================================>                    (76 + 45) / 121][Stage 72:============================================>        (101 + 20) / 121][Stage 72:=====================================================>(120 + 1) / 121]                                                                                [Stage 73:===========================>                          (63 + 59) / 122][Stage 73:===============================>                      (71 + 51) / 122][Stage 73:=====================================>                (85 + 37) / 122][Stage 73:===============================================>     (109 + 13) / 122][Stage 73:====================================================> (118 + 4) / 122][Stage 73:=====================================================>(120 + 2) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.792437867 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394514711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==============================>                       (66 + 49) / 115][Stage 74:===================================>                  (76 + 39) / 115][Stage 74:=========================================>            (89 + 26) / 115][Stage 74:==============================================>       (99 + 16) / 115][Stage 74:===================================================>  (109 + 6) / 115][Stage 74:=====================================================>(113 + 2) / 115]                                                                                [Stage 75:=================================>                    (72 + 44) / 116][Stage 75:=======================================>              (84 + 32) / 116][Stage 75:=============================================>        (98 + 18) / 116][Stage 75:==================================================>   (108 + 8) / 116][Stage 75:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.402853591 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41936644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:=============================>                        (61 + 52) / 113][Stage 76:==================================>                   (73 + 40) / 113][Stage 76:===========================================>          (92 + 21) / 113][Stage 76:==================================================>   (105 + 8) / 113]                                                                                [Stage 77:=============================>                        (63 + 51) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:=============================================>        (95 + 19) / 114][Stage 77:====================================================> (111 + 3) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.360275946 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3830535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=====================================>                (79 + 34) / 113][Stage 78:===========================================>          (91 + 22) / 113][Stage 78:===============================================>     (102 + 11) / 113][Stage 78:====================================================> (110 + 3) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===================================>                  (74 + 40) / 114][Stage 79:=========================================>            (87 + 27) / 114][Stage 79:==============================================>       (98 + 16) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.154710906 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357582789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (82 + 33) / 115][Stage 80:==========================================>           (90 + 25) / 115][Stage 80:==================================================>   (107 + 8) / 115][Stage 80:====================================================> (112 + 3) / 115]                                                                                [Stage 81:========================================>             (87 + 29) / 116][Stage 81:=================================================>    (107 + 9) / 116][Stage 81:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.768754159 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408790031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==============================>                       (65 + 50) / 115][Stage 82:====================================>                 (77 + 38) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:================================================>    (105 + 10) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:================================>                     (70 + 46) / 116][Stage 83:======================================>               (83 + 33) / 116][Stage 83:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 2.642978172 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423716652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (61 + 60) / 121][Stage 84:================================>                     (72 + 49) / 121][Stage 84:=====================================>                (83 + 38) / 121][Stage 84:=============================================>       (103 + 18) / 121][Stage 84:====================================================> (118 + 3) / 121]                                                                                [Stage 85:============================>                         (64 + 58) / 122][Stage 85:==================================>                   (77 + 45) / 122][Stage 85:==========================================>           (96 + 26) / 122][Stage 85:===================================================>  (117 + 5) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.345923564 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425717218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:============================>                         (63 + 57) / 120][Stage 86:===============================>                      (70 + 50) / 120][Stage 86:==========================================>           (94 + 26) / 120][Stage 86:===================================================>  (115 + 5) / 120]                                                                                [Stage 87:==============================>                       (69 + 52) / 121][Stage 87:======================================>               (86 + 35) / 121][Stage 87:===============================================>     (108 + 13) / 121][Stage 87:====================================================> (117 + 4) / 121][Stage 87:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.615737885 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415785711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:============================>                         (63 + 58) / 121][Stage 88:===============================>                      (70 + 51) / 121][Stage 88:=============================================>       (105 + 16) / 121][Stage 88:=====================================================>(119 + 2) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:===========================>                          (63 + 59) / 122][Stage 89:===================================>                  (81 + 41) / 122][Stage 89:============================================>        (102 + 20) / 122][Stage 89:==================================================>   (115 + 7) / 122][Stage 89:====================================================> (119 + 3) / 122][Stage 89:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.058877932 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428684866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (66 + 54) / 120][Stage 90:====================================>                 (81 + 39) / 120][Stage 90:=========================================>            (93 + 27) / 120][Stage 90:================================================>    (109 + 11) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:===============================>                      (70 + 51) / 121][Stage 91:=======================================>              (89 + 32) / 121][Stage 91:===========================================>         (100 + 21) / 121][Stage 91:====================================================> (118 + 3) / 121][Stage 91:=====================================================>(119 + 2) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.952018598 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410950477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (61 + 59) / 120][Stage 92:===============================>                      (69 + 51) / 120][Stage 92:========================================>             (89 + 31) / 120][Stage 92:=================================================>    (111 + 9) / 120][Stage 92:=====================================================>(119 + 1) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:=============================>                        (66 + 55) / 121][Stage 93:====================================>                 (81 + 40) / 121][Stage 93:==============================================>      (106 + 15) / 121][Stage 93:====================================================> (118 + 3) / 121][Stage 93:=====================================================>(119 + 2) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.617934282 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386408409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:=================================>                    (74 + 44) / 118][Stage 94:========================================>             (89 + 29) / 118][Stage 94:===============================================>     (105 + 13) / 118][Stage 94:====================================================> (115 + 3) / 118]                                                                                [Stage 95:==================================>                   (76 + 43) / 119][Stage 95:========================================>             (89 + 30) / 119][Stage 95:==============================================>      (105 + 14) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.411684864 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508830649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (62 + 58) / 120][Stage 96:==================================>                   (76 + 44) / 120][Stage 96:==========================================>           (94 + 26) / 120][Stage 96:================================================>    (110 + 10) / 120]                                                                                [Stage 97:============================>                         (64 + 57) / 121][Stage 97:================================>                     (72 + 49) / 121][Stage 97:===========================================>          (98 + 23) / 121][Stage 97:==================================================>   (114 + 7) / 121][Stage 97:=====================================================>(119 + 2) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.968769447 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=162", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=162,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416363073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (62 + 58) / 120][Stage 98:==================================>                   (76 + 44) / 120][Stage 98:============================================>         (99 + 21) / 120][Stage 98:====================================================> (116 + 4) / 120]                                                                                [Stage 99:===========================>                          (62 + 59) / 121][Stage 99:===============================>                      (70 + 51) / 121][Stage 99:========================================>             (90 + 31) / 121][Stage 99:================================================>    (110 + 11) / 121][Stage 99:====================================================> (118 + 3) / 121][Stage 99:=====================================================>(119 + 2) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.29815628 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384055603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (77 + 41) / 118][Stage 100:============================================>       (100 + 18) / 118][Stage 100:===================================================> (115 + 3) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:==================================>                  (77 + 42) / 119][Stage 101:===========================================>         (97 + 22) / 119][Stage 101:=================================================>   (111 + 8) / 119][Stage 101:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.452321719 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388572056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:====================================>                (78 + 35) / 113][Stage 102:=======================================>             (85 + 28) / 113][Stage 102:===========================================>         (93 + 20) / 113][Stage 102:==================================================>  (107 + 6) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:======================================>              (82 + 32) / 114][Stage 103:========================================>            (88 + 26) / 114][Stage 103:============================================>        (95 + 19) / 114][Stage 103:===============================================>    (104 + 10) / 114][Stage 103:==================================================>  (108 + 6) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(112 + 2) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.896794857 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419526122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 61) / 121][Stage 104:=============================>                       (68 + 53) / 121][Stage 104:======================================>              (87 + 34) / 121][Stage 104:==============================================>     (109 + 12) / 121][Stage 104:===================================================> (118 + 3) / 121]                                                                                [Stage 105:==========================>                          (61 + 61) / 122][Stage 105:=============================>                       (67 + 55) / 122][Stage 105:=======================================>             (91 + 31) / 122][Stage 105:=================================================>   (113 + 9) / 122][Stage 105:==================================================>  (117 + 5) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.223041396 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361649762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=======================================>             (85 + 30) / 115][Stage 106:============================================>        (96 + 19) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:===================================================> (111 + 4) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:======================================>              (85 + 31) / 116][Stage 107:==========================================>          (92 + 24) / 116][Stage 107:===============================================>    (105 + 11) / 116][Stage 107:===================================================> (112 + 4) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.313632318 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381614937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 43) / 115][Stage 108:=========================================>           (91 + 24) / 115][Stage 108:================================================>    (106 + 9) / 115][Stage 108:==================================================>  (109 + 6) / 115]                                                                                [Stage 109:================================>                    (72 + 44) / 116][Stage 109:=======================================>             (86 + 30) / 116][Stage 109:==============================================>     (103 + 13) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.98534807 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340137263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:======================================>              (83 + 32) / 115][Stage 110:========================================>            (88 + 27) / 115][Stage 110:===============================================>    (105 + 10) / 115]                                                                                [Stage 111:======================================>              (84 + 32) / 116][Stage 111:============================================>       (100 + 16) / 116][Stage 111:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.468518998 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362948525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:===================================>                 (78 + 40) / 118][Stage 112:=======================================>             (87 + 31) / 118][Stage 112:===========================================>         (97 + 21) / 118][Stage 112:==================================================>  (113 + 5) / 118][Stage 112:====================================================>(117 + 1) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:=================================>                   (76 + 43) / 119][Stage 113:===================================>                 (79 + 40) / 119][Stage 113:========================================>            (92 + 27) / 119][Stage 113:============================================>       (101 + 18) / 119][Stage 113:==================================================>  (113 + 6) / 119][Stage 113:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.290601487 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373298094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (73 + 45) / 118][Stage 114:====================================>                (82 + 36) / 118][Stage 114:============================================>        (99 + 19) / 118][Stage 114:===================================================> (114 + 4) / 118]                                                                                [Stage 115:==================================>                  (77 + 42) / 119][Stage 115:=====================================>               (85 + 34) / 119][Stage 115:============================================>       (102 + 17) / 119][Stage 115:================================================>    (110 + 9) / 119][Stage 115:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.760142498 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408581272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:==============================>                      (70 + 50) / 120][Stage 116:=====================================>               (85 + 35) / 120][Stage 116:=============================================>      (105 + 15) / 120][Stage 116:====================================================>(118 + 2) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:===========================>                         (63 + 58) / 121][Stage 117:=================================>                   (76 + 45) / 121][Stage 117:==============================================>     (108 + 13) / 121][Stage 117:===================================================> (117 + 4) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.939832317 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398859305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (62 + 58) / 120][Stage 118:================================>                    (74 + 46) / 120][Stage 118:=========================================>           (93 + 27) / 120][Stage 118:=================================================>   (113 + 7) / 120]                                                                                [Stage 119:============================>                        (64 + 57) / 121][Stage 119:===============================>                     (71 + 50) / 121][Stage 119:=====================================>               (85 + 36) / 121][Stage 119:=============================================>      (106 + 15) / 121][Stage 119:==================================================>  (116 + 5) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.600500697 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365582233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (73 + 45) / 118][Stage 120:==================================>                  (77 + 41) / 118][Stage 120:======================================>              (85 + 33) / 118][Stage 120:============================================>       (101 + 17) / 118][Stage 120:====================================================>(117 + 1) / 118]                                                                                [Stage 121:=================================>                   (75 + 44) / 119][Stage 121:====================================>                (83 + 36) / 119][Stage 121:=========================================>           (93 + 26) / 119][Stage 121:===============================================>    (109 + 10) / 119][Stage 121:====================================================>(117 + 2) / 119][Stage 121:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.876995265 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370367066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=============================>                       (64 + 51) / 115][Stage 122:==================================>                  (75 + 40) / 115][Stage 122:==========================================>          (93 + 22) / 115][Stage 122:=================================================>   (107 + 8) / 115]                                                                                [Stage 123:==================================>                  (75 + 41) / 116][Stage 123:===========================================>         (96 + 20) / 116][Stage 123:===============================================>    (106 + 10) / 116][Stage 123:==================================================>  (111 + 5) / 116][Stage 123:===================================================> (112 + 4) / 116][Stage 123:====================================================>(114 + 2) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.19400782 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405702904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:============================>                        (65 + 55) / 120][Stage 124:=====================================>               (85 + 35) / 120][Stage 124:=================================================>   (112 + 8) / 120]                                                                                [Stage 125:============================>                        (64 + 57) / 121][Stage 125:==================================>                  (78 + 43) / 121][Stage 125:===========================================>         (99 + 22) / 121][Stage 125:====================================================>(119 + 2) / 121][Stage 125:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.130182969 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411673401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:==============================>                      (70 + 50) / 120][Stage 126:=======================================>             (89 + 31) / 120][Stage 126:==================================================>  (115 + 5) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:==============================>                      (70 + 51) / 121][Stage 127:=======================================>             (90 + 31) / 121][Stage 127:=================================================>   (113 + 8) / 121][Stage 127:====================================================>(119 + 2) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.9460585 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39661128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:==============================>                      (68 + 52) / 120][Stage 128:====================================>                (82 + 38) / 120][Stage 128:===========================================>         (99 + 21) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:=============================>                       (67 + 54) / 121][Stage 129:=================================>                   (76 + 45) / 121][Stage 129:==========================================>          (98 + 23) / 121][Stage 129:==================================================>  (116 + 5) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.72572309 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38561547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:=============================================>       (96 + 17) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:===============================>                     (67 + 47) / 114][Stage 131:===================================>                 (77 + 37) / 114][Stage 131:================================================>    (105 + 9) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(112 + 2) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.853461684 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414527329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:==========================>                          (61 + 60) / 121][Stage 132:================================>                    (75 + 46) / 121][Stage 132:==========================================>          (98 + 23) / 121][Stage 132:=================================================>   (114 + 7) / 121][Stage 132:====================================================>(120 + 1) / 121]                                                                                [Stage 133:==========================>                          (62 + 60) / 122][Stage 133:===============================>                     (72 + 50) / 122][Stage 133:======================================>              (89 + 33) / 122][Stage 133:===============================================>    (111 + 11) / 122][Stage 133:===================================================> (119 + 3) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.944533918 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397701403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:==========================>                          (61 + 60) / 121][Stage 134:================================>                    (75 + 46) / 121][Stage 134:=====================================>               (86 + 35) / 121][Stage 134:==================================================>  (115 + 6) / 121][Stage 134:====================================================>(120 + 1) / 121]                                                                                [Stage 135:==========================>                          (61 + 61) / 122][Stage 135:==============================>                      (71 + 51) / 122][Stage 135:=====================================>               (87 + 35) / 122][Stage 135:=================================================>   (114 + 8) / 122][Stage 135:===================================================> (118 + 4) / 122][Stage 135:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.023540879 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366436576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (74 + 44) / 118][Stage 136:===================================>                 (80 + 38) / 118][Stage 136:=======================================>             (89 + 29) / 118][Stage 136:=============================================>      (104 + 14) / 118][Stage 136:====================================================>(116 + 2) / 118]                                                                                [Stage 137:================================>                    (74 + 45) / 119][Stage 137:===================================>                 (80 + 39) / 119][Stage 137:==========================================>          (95 + 24) / 119][Stage 137:===============================================>    (108 + 11) / 119][Stage 137:====================================================>(117 + 2) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.052833121 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358882995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:=================================>                   (74 + 44) / 118][Stage 138:====================================>                (82 + 36) / 118][Stage 138:========================================>            (91 + 27) / 118][Stage 138:=============================================>      (104 + 14) / 118][Stage 138:==================================================>  (113 + 5) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:=================================>                   (75 + 44) / 119][Stage 139:====================================>                (82 + 37) / 119][Stage 139:========================================>            (91 + 28) / 119][Stage 139:===============================================>    (108 + 11) / 119][Stage 139:=================================================>   (111 + 8) / 119][Stage 139:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.140067343 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387717135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=============================>                       (63 + 50) / 113][Stage 140:=====================================>               (81 + 32) / 113][Stage 140:==============================================>      (99 + 14) / 113]                                                                                [Stage 141:============================>                        (62 + 52) / 114][Stage 141:================================>                    (70 + 44) / 114][Stage 141:=========================================>           (90 + 24) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261361288 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391164345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:==============================>                      (69 + 52) / 121][Stage 142:====================================>                (84 + 37) / 121][Stage 142:=============================================>      (105 + 16) / 121]                                                                                [Stage 143:==========================>                          (61 + 61) / 122][Stage 143:=============================>                       (69 + 53) / 122][Stage 143:======================================>              (88 + 34) / 122][Stage 143:===============================================>    (111 + 11) / 122][Stage 143:===================================================> (119 + 3) / 122][Stage 143:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.991785354 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376872306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===============================>                     (69 + 46) / 115][Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:==================================================>  (110 + 5) / 115]                                                                                [Stage 145:================================>                    (72 + 44) / 116][Stage 145:=======================================>             (86 + 30) / 116][Stage 145:===============================================>    (106 + 10) / 116][Stage 145:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.116339507 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387841236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:===============================>                     (67 + 46) / 113][Stage 146:======================================>              (83 + 30) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:============================>                        (62 + 52) / 114][Stage 147:================================>                    (70 + 44) / 114][Stage 147:===========================================>         (94 + 20) / 114][Stage 147:=================================================>   (106 + 8) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.742511524 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338158058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (84 + 31) / 115][Stage 148:==========================================>          (92 + 23) / 115][Stage 148:==============================================>     (102 + 13) / 115][Stage 148:===================================================> (112 + 3) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:======================================>              (84 + 32) / 116][Stage 149:========================================>            (88 + 28) / 116][Stage 149:=============================================>       (99 + 17) / 116][Stage 149:===============================================>    (106 + 10) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:===================================================> (113 + 3) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.739337621 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395497077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===================================>                 (75 + 38) / 113][Stage 150:=========================================>           (88 + 25) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:================================================>    (104 + 9) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:===================================>                 (76 + 38) / 114][Stage 151:========================================>            (88 + 26) / 114][Stage 151:============================================>        (95 + 19) / 114][Stage 151:=============================================>      (100 + 14) / 114][Stage 151:=================================================>   (107 + 7) / 114][Stage 151:==================================================>  (108 + 6) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.932165755 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366837438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:==================================>                  (77 + 41) / 118][Stage 152:=======================================>             (88 + 30) / 118][Stage 152:============================================>       (100 + 18) / 118][Stage 152:=================================================>   (111 + 7) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (74 + 45) / 119][Stage 153:===================================>                 (80 + 39) / 119][Stage 153:===========================================>         (97 + 22) / 119][Stage 153:=================================================>   (112 + 7) / 119][Stage 153:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.738330756 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38922754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (64 + 56) / 120][Stage 154:=================================>                   (75 + 45) / 120][Stage 154:============================================>       (103 + 17) / 120][Stage 154:====================================================>(118 + 2) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:=============================>                       (67 + 54) / 121][Stage 155:========================================>            (92 + 29) / 121][Stage 155:===============================================>    (111 + 10) / 121][Stage 155:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.575487745 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36007468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:===================================>                 (80 + 38) / 118][Stage 156:=======================================>             (88 + 30) / 118][Stage 156:============================================>       (101 + 17) / 118][Stage 156:=================================================>   (110 + 8) / 118]                                                                                [Stage 157:=================================>                   (75 + 44) / 119][Stage 157:====================================>                (81 + 38) / 119][Stage 157:========================================>            (92 + 27) / 119][Stage 157:==============================================>     (106 + 13) / 119][Stage 157:==================================================>  (114 + 5) / 119][Stage 157:===================================================> (116 + 3) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.07784148 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358206434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (75 + 43) / 118][Stage 158:=======================================>             (87 + 31) / 118][Stage 158:=============================================>      (104 + 14) / 118][Stage 158:====================================================>(116 + 2) / 118]                                                                                [Stage 159:================================>                    (74 + 45) / 119][Stage 159:=====================================>               (85 + 34) / 119][Stage 159:===========================================>        (100 + 19) / 119][Stage 159:====================================================>(117 + 2) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.708718677 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38537935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:============================>                        (60 + 53) / 113][Stage 160:==================================>                  (73 + 40) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:================================================>    (104 + 9) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:==============================>                      (66 + 48) / 114][Stage 161:==================================>                  (75 + 39) / 114][Stage 161:==========================================>          (91 + 23) / 114][Stage 161:==============================================>     (101 + 13) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.014894607 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366769358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (73 + 45) / 118][Stage 162:===================================>                 (79 + 39) / 118][Stage 162:=========================================>           (93 + 25) / 118][Stage 162:==============================================>     (105 + 13) / 118][Stage 162:==================================================>  (113 + 5) / 118]                                                                                [Stage 163:=================================>                   (75 + 44) / 119][Stage 163:====================================>                (81 + 38) / 119][Stage 163:=======================================>             (88 + 31) / 119][Stage 163:=========================================>           (94 + 25) / 119][Stage 163:===============================================>    (108 + 11) / 119][Stage 163:===================================================> (116 + 3) / 119][Stage 163:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.395709347 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364414152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:=================================>                   (74 + 44) / 118][Stage 164:===================================>                 (80 + 38) / 118][Stage 164:==========================================>          (94 + 24) / 118][Stage 164:==============================================>     (106 + 12) / 118][Stage 164:===================================================> (114 + 4) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:====================================>                (82 + 37) / 119][Stage 165:=========================================>           (94 + 25) / 119][Stage 165:===============================================>    (109 + 10) / 119][Stage 165:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.008518773 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348199307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:==============================================>      (99 + 14) / 113][Stage 166:=================================================>   (106 + 7) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:=======================================>             (85 + 29) / 114][Stage 167:==========================================>          (92 + 22) / 114][Stage 167:==============================================>     (103 + 11) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.164371029 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397105163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:============================>                        (64 + 56) / 120][Stage 168:====================================>                (83 + 37) / 120][Stage 168:=============================================>      (106 + 14) / 120][Stage 168:===================================================> (117 + 3) / 120]                                                                                [Stage 169:=============================>                       (67 + 54) / 121][Stage 169:==================================>                  (78 + 43) / 121][Stage 169:========================================>            (93 + 28) / 121][Stage 169:==================================================>  (115 + 6) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.009451497 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420858889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:==============================>                      (69 + 52) / 121][Stage 170:======================================>              (87 + 34) / 121][Stage 170:==============================================>     (109 + 12) / 121]                                                                                [Stage 171:===========================>                         (63 + 59) / 122][Stage 171:=================================>                   (76 + 46) / 122][Stage 171:=========================================>           (96 + 26) / 122][Stage 171:=================================================>   (115 + 7) / 122][Stage 171:====================================================>(120 + 2) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.17620042 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35664699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (74 + 44) / 118][Stage 172:==================================>                  (77 + 41) / 118][Stage 172:======================================>              (85 + 33) / 118][Stage 172:===========================================>         (96 + 22) / 118][Stage 172:=================================================>   (110 + 8) / 118]                                                                                [Stage 173:=================================>                   (75 + 44) / 119][Stage 173:===================================>                 (79 + 40) / 119][Stage 173:=======================================>             (88 + 31) / 119][Stage 173:===========================================>        (100 + 19) / 119][Stage 173:===================================================> (116 + 3) / 119][Stage 173:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.996544823 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389137362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:===========================>                         (63 + 57) / 120][Stage 174:==================================>                  (79 + 41) / 120][Stage 174:=========================================>           (94 + 26) / 120][Stage 174:====================================================>(118 + 2) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:=============================>                       (67 + 54) / 121][Stage 175:======================================>              (88 + 33) / 121][Stage 175:==============================================>     (108 + 13) / 121][Stage 175:====================================================>(119 + 2) / 121][Stage 175:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.340692798 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347849226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:====================================>                (78 + 35) / 113][Stage 176:=======================================>             (85 + 28) / 113][Stage 176:=============================================>       (96 + 17) / 113][Stage 176:==================================================>  (107 + 6) / 113][Stage 176:====================================================>(111 + 2) / 113]                                                                                [Stage 177:===================================>                 (76 + 38) / 114][Stage 177:========================================>            (87 + 27) / 114][Stage 177:=============================================>       (97 + 17) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.021363876 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354546345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (70 + 43) / 113][Stage 178:====================================>                (78 + 35) / 113][Stage 178:========================================>            (87 + 26) / 113][Stage 178:===============================================>    (103 + 10) / 113][Stage 178:===================================================> (110 + 3) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:=====================================>               (81 + 33) / 114][Stage 179:=============================================>       (97 + 17) / 114][Stage 179:===============================================>    (104 + 10) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.171514913 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392499131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:===============================>                     (71 + 50) / 121][Stage 180:=====================================>               (85 + 36) / 121][Stage 180:===============================================>    (110 + 11) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:=================================>                   (76 + 46) / 122][Stage 181:====================================>                (84 + 38) / 122][Stage 181:==============================================>     (109 + 13) / 122][Stage 181:===================================================> (119 + 3) / 122][Stage 181:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.565541789 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596237557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:============================>                        (65 + 55) / 120][Stage 182:==================================>                  (78 + 42) / 120][Stage 182:=========================================>           (93 + 27) / 120][Stage 182:===================================================> (116 + 4) / 120]                                                                                [Stage 183:===========================>                         (63 + 58) / 121][Stage 183:===============================>                     (72 + 49) / 121][Stage 183:===================================>                 (81 + 40) / 121][Stage 183:==========================================>          (97 + 24) / 121][Stage 183:===================================================> (117 + 4) / 121][Stage 183:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.490756381 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408020794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:===================================>                 (75 + 38) / 113][Stage 184:===========================================>         (92 + 21) / 113]                                                                                [Stage 185:============================>                        (61 + 53) / 114][Stage 185:=================================>                   (72 + 42) / 114][Stage 185:=======================================>             (85 + 29) / 114][Stage 185:===============================================>    (104 + 10) / 114][Stage 185:====================================================>(112 + 2) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.588870676 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=217", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=217,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387491718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:==============================>                      (70 + 50) / 120][Stage 186:=========================================>           (94 + 26) / 120][Stage 186:===================================================> (116 + 4) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:============================>                        (64 + 57) / 121][Stage 187:==================================>                  (79 + 42) / 121][Stage 187:==========================================>         (100 + 21) / 121][Stage 187:==================================================>  (115 + 6) / 121][Stage 187:====================================================>(119 + 2) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.377487648 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365902277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:====================================>                (82 + 36) / 118][Stage 188:===========================================>         (97 + 21) / 118][Stage 188:================================================>    (109 + 9) / 118][Stage 188:====================================================>(117 + 1) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:==================================>                  (78 + 41) / 119][Stage 189:======================================>              (86 + 33) / 119][Stage 189:============================================>       (102 + 17) / 119][Stage 189:==================================================>  (113 + 6) / 119][Stage 189:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.832616954 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331766742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (80 + 35) / 115][Stage 190:=========================================>           (89 + 26) / 115][Stage 190:=============================================>      (101 + 14) / 115][Stage 190:==================================================>  (110 + 5) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:======================================>              (85 + 31) / 116][Stage 191:=============================================>       (99 + 17) / 116][Stage 191:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.808365648 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376046846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (60 + 53) / 113][Stage 192:===================================>                 (76 + 37) / 113][Stage 192:==========================================>          (91 + 22) / 113][Stage 192:=================================================>   (105 + 8) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:=============================>                       (63 + 51) / 114][Stage 193:=================================>                   (73 + 41) / 114][Stage 193:==============================================>      (99 + 15) / 114][Stage 193:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.99571783 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395082139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:==============================>                      (65 + 48) / 113][Stage 194:=========================================>           (89 + 24) / 113][Stage 194:===================================================> (109 + 4) / 113]                                                                                [Stage 195:============================>                        (62 + 52) / 114][Stage 195:================================>                    (69 + 45) / 114][Stage 195:=========================================>           (90 + 24) / 114][Stage 195:==================================================>  (108 + 6) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.539311121 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390815446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===============================>                     (68 + 47) / 115][Stage 196:======================================>              (83 + 32) / 115][Stage 196:==============================================>     (103 + 12) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:===================================>                 (77 + 39) / 116][Stage 197:=========================================>           (91 + 25) / 116][Stage 197:=============================================>      (102 + 14) / 116]                                                                                Time elapsed: 2.691572285 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420536469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:=============================>                       (67 + 53) / 120][Stage 198:====================================>                (83 + 37) / 120][Stage 198:==============================================>     (108 + 12) / 120][Stage 198:==================================================>  (115 + 5) / 120]                                                                                [Stage 199:============================>                        (66 + 55) / 121][Stage 199:====================================>                (83 + 38) / 121][Stage 199:==========================================>         (100 + 21) / 121][Stage 199:===================================================> (118 + 3) / 121][Stage 199:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.847450901 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395876901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:===========================>                         (63 + 58) / 121][Stage 200:=====================================>               (86 + 35) / 121][Stage 200:=============================================>      (107 + 14) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:================================>                    (74 + 48) / 122][Stage 201:========================================>            (94 + 28) / 122][Stage 201:===============================================>    (112 + 10) / 122][Stage 201:===================================================> (119 + 3) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.824165456 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m52.304s
user	12m17.284s
sys	1m34.812s
