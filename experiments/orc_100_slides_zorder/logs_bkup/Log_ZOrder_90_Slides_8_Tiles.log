Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 12:42:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:43:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:43:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:43:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 12:43:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:43:26 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522124315-0460).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.459072207 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=========================>                             (54 + 62) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.648180111 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.712657173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:>                                                        (0 + 0) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:================================>                      (66 + 47) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:================================>                      (68 + 46) / 114][Stage 3:===================================>                   (74 + 40) / 114][Stage 3:======================================>                (79 + 35) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:====================================================>  (109 + 5) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.665208955 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.707796025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:======================>                                (50 + 71) / 121][Stage 4:==========================>                            (59 + 62) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:==================================>                    (75 + 46) / 121][Stage 4:========================================>              (90 + 31) / 121][Stage 4:===============================================>      (106 + 15) / 121][Stage 4:=====================================================> (118 + 3) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:============================>                          (63 + 59) / 122][Stage 5:==============================>                        (68 + 54) / 122][Stage 5:==================================>                    (76 + 46) / 122][Stage 5:============================================>          (98 + 24) / 122][Stage 5:=================================================>    (112 + 10) / 122][Stage 5:======================================================>(120 + 2) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.006898312 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.653928855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (62 + 53) / 115][Stage 6:=================================>                     (71 + 44) / 115][Stage 6:=====================================>                 (78 + 37) / 115][Stage 6:=========================================>             (86 + 29) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:===================================>                   (74 + 42) / 116][Stage 7:========================================>              (86 + 30) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:=================================================>    (106 + 10) / 116][Stage 7:====================================================>  (110 + 6) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.919089056 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548089791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===================================>                   (75 + 40) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:============================================>          (94 + 21) / 115][Stage 8:==============================================>       (100 + 15) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:====================================================>  (110 + 5) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:=====================================>                 (80 + 36) / 116][Stage 9:=========================================>             (88 + 28) / 116][Stage 9:=============================================>         (96 + 20) / 116][Stage 9:==============================================>        (98 + 18) / 116][Stage 9:===============================================>      (101 + 15) / 116][Stage 9:==================================================>    (107 + 9) / 116][Stage 9:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.078687448 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.557787859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:======================================>               (80 + 33) / 113][Stage 10:=========================================>            (87 + 26) / 113][Stage 10:=============================================>        (96 + 17) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:===================================================>  (107 + 6) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:====================================>                 (77 + 37) / 114][Stage 11:======================================>               (82 + 32) / 114][Stage 11:==========================================>           (90 + 24) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.654574486 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60800115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:===============================>                      (65 + 48) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:=========================================>            (87 + 26) / 113][Stage 12:==============================================>       (98 + 15) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:==============================>                       (64 + 50) / 114][Stage 13:==================================>                   (73 + 41) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.016518127 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475174068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (83 + 32) / 115][Stage 14:========================================>             (87 + 28) / 115][Stage 14:============================================>         (95 + 20) / 115][Stage 14:==================================================>   (107 + 8) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:======================================>               (83 + 33) / 116][Stage 15:========================================>             (86 + 30) / 116][Stage 15:============================================>         (95 + 21) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.575595801 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547819645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (65 + 55) / 120][Stage 16:====================================>                 (80 + 40) / 120][Stage 16:=============================================>       (104 + 16) / 120][Stage 16:===================================================>  (115 + 5) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (66 + 55) / 121][Stage 17:==================================>                   (78 + 43) / 121][Stage 17:===========================================>          (97 + 24) / 121][Stage 17:==============================================>      (107 + 14) / 121][Stage 17:====================================================> (117 + 4) / 121][Stage 17:=====================================================>(119 + 2) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.233128097 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479225364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:====================================>                 (80 + 38) / 118][Stage 18:=============================================>        (99 + 19) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:===================================>                  (78 + 41) / 119][Stage 19:=========================================>            (92 + 27) / 119][Stage 19:==============================================>      (104 + 15) / 119][Stage 19:====================================================> (116 + 3) / 119][Stage 19:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.255747187 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545680147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:==============================>                       (68 + 53) / 121][Stage 20:======================================>               (86 + 35) / 121][Stage 20:==============================================>      (107 + 14) / 121][Stage 20:=====================================================>(119 + 2) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:===============================>                      (72 + 50) / 122][Stage 21:=========================================>            (93 + 29) / 122][Stage 21:===============================================>     (109 + 13) / 122][Stage 21:===================================================>  (116 + 6) / 122][Stage 21:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.131057776 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517559786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:==============================>                       (63 + 50) / 113][Stage 22:====================================>                 (76 + 37) / 113][Stage 22:=========================================>            (86 + 27) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===============================>                      (66 + 48) / 114][Stage 23:======================================>               (82 + 32) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.030090525 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44678441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=================================>                    (71 + 42) / 113][Stage 24:=======================================>              (83 + 30) / 113][Stage 24:=============================================>        (96 + 17) / 113][Stage 24:================================================>    (103 + 10) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:====================================================> (110 + 3) / 113]                                                                                [Stage 25:====================================>                 (78 + 36) / 114][Stage 25:==========================================>           (90 + 24) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.503037253 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527439979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==================================>                   (73 + 40) / 113][Stage 26:======================================>               (80 + 33) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:============================================>         (94 + 19) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:=================================================>    (104 + 9) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:====================================>                 (78 + 36) / 114][Stage 27:=========================================>            (88 + 26) / 114][Stage 27:=============================================>        (95 + 19) / 114][Stage 27:===============================================>     (102 + 12) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (110 + 4) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 8.497158137 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499454178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:===============================>                      (66 + 47) / 113][Stage 28:=====================================>                (78 + 35) / 113][Stage 28:==============================================>      (100 + 13) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:====================================>                 (76 + 38) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.261929833 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560855766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (60 + 55) / 115][Stage 30:=================================>                    (72 + 43) / 115][Stage 30:==========================================>           (91 + 24) / 115][Stage 30:==============================================>      (100 + 15) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:==================================>                   (74 + 42) / 116][Stage 31:==========================================>           (92 + 24) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.979891683 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51203524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:===========================>                          (61 + 59) / 120][Stage 32:================================>                     (73 + 47) / 120][Stage 32:===========================================>          (96 + 24) / 120][Stage 32:=================================================>    (111 + 9) / 120][Stage 32:==================================================>   (112 + 8) / 120][Stage 32:====================================================> (117 + 3) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:===============================>                      (70 + 51) / 121][Stage 33:===================================>                  (80 + 41) / 121][Stage 33:==========================================>           (96 + 25) / 121][Stage 33:===============================================>     (109 + 12) / 121][Stage 33:===================================================>  (115 + 6) / 121][Stage 33:===================================================>  (116 + 5) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.088981459 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517667166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:=============================>                        (61 + 52) / 113][Stage 34:==================================>                   (72 + 41) / 113][Stage 34:============================================>         (93 + 20) / 113][Stage 34:====================================================> (109 + 4) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:=================================>                    (70 + 44) / 114][Stage 35:======================================>               (81 + 33) / 114][Stage 35:==============================================>       (99 + 15) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.057322674 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462590364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:==================================>                   (75 + 43) / 118][Stage 36:=======================================>              (87 + 31) / 118][Stage 36:============================================>         (97 + 21) / 118][Stage 36:==================================================>   (110 + 8) / 118][Stage 36:===================================================>  (113 + 5) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:==================================>                   (75 + 44) / 119][Stage 37:=======================================>              (86 + 33) / 119][Stage 37:===========================================>          (96 + 23) / 119][Stage 37:================================================>    (108 + 11) / 119][Stage 37:====================================================> (115 + 4) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.75702088 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494186408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:================================>                     (72 + 48) / 120][Stage 38:==========================================>           (95 + 25) / 120][Stage 38:=====================================================>(119 + 1) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:==============================>                       (68 + 53) / 121][Stage 39:==================================>                   (78 + 43) / 121][Stage 39:==============================================>      (106 + 15) / 121][Stage 39:=====================================================>(119 + 2) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.665919908 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428054306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (70 + 43) / 113][Stage 40:=======================================>              (82 + 31) / 113][Stage 40:===========================================>          (90 + 23) / 113][Stage 40:===============================================>      (99 + 14) / 113][Stage 40:==================================================>   (106 + 7) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:===================================>                  (75 + 39) / 114][Stage 41:========================================>             (85 + 29) / 114][Stage 41:===========================================>          (92 + 22) / 114][Stage 41:==============================================>      (101 + 13) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:====================================================> (111 + 3) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.976614661 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424276546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:=========================================>            (88 + 27) / 115][Stage 42:=================================================>    (106 + 9) / 115]                                                                                [Stage 43:======================================>               (82 + 34) / 116][Stage 43:=============================================>        (97 + 19) / 116][Stage 43:================================================>    (106 + 10) / 116][Stage 43:===================================================>  (110 + 6) / 116][Stage 43:====================================================> (113 + 3) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.585641545 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396326738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (82 + 33) / 115][Stage 44:==========================================>           (90 + 25) / 115][Stage 44:==============================================>      (100 + 15) / 115][Stage 44:====================================================> (111 + 4) / 115]                                                                                [Stage 45:========================================>             (88 + 28) / 116][Stage 45:==============================================>      (101 + 15) / 116][Stage 45:===================================================>  (110 + 6) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.886096741 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459703643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:=============================>                        (65 + 55) / 120][Stage 46:====================================>                 (82 + 38) / 120][Stage 46:============================================>         (99 + 21) / 120][Stage 46:====================================================> (116 + 4) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:===================================>                  (79 + 42) / 121][Stage 47:============================================>        (102 + 19) / 121][Stage 47:=====================================================>(119 + 2) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.661500012 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465896045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:==============================>                       (64 + 49) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:===================================================>  (107 + 6) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:====================================>                 (78 + 36) / 114][Stage 49:============================================>         (94 + 20) / 114][Stage 49:=============================================>        (95 + 19) / 114][Stage 49:================================================>    (104 + 10) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.046266794 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435645086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (65 + 50) / 115][Stage 50:====================================>                 (77 + 38) / 115][Stage 50:===========================================>          (93 + 22) / 115][Stage 50:==================================================>   (107 + 8) / 115]                                                                                [Stage 51:=================================>                    (72 + 44) / 116][Stage 51:=======================================>              (85 + 31) / 116][Stage 51:==============================================>      (101 + 15) / 116][Stage 51:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.773457688 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506013767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:=============================>                        (65 + 56) / 121][Stage 52:=====================================>                (83 + 38) / 121][Stage 52:===============================================>     (108 + 13) / 121][Stage 52:===================================================>  (116 + 5) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:=============================>                        (67 + 55) / 122][Stage 53:=====================================>                (85 + 37) / 122][Stage 53:============================================>        (103 + 19) / 122][Stage 53:==================================================>   (114 + 8) / 122][Stage 53:====================================================> (119 + 3) / 122][Stage 53:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.135234867 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391089941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=======================================>              (85 + 30) / 115][Stage 54:=============================================>        (97 + 18) / 115][Stage 54:===================================================>  (110 + 5) / 115][Stage 54:====================================================> (112 + 3) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:======================================>               (82 + 34) / 116][Stage 55:===========================================>          (94 + 22) / 116][Stage 55:===============================================>     (104 + 12) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.333179557 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447708994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:==================================>                   (76 + 44) / 120][Stage 56:=========================================>            (93 + 27) / 120][Stage 56:=====================================================>(118 + 2) / 120]                                                                                [Stage 57:===========================>                          (61 + 60) / 121][Stage 57:=============================>                        (67 + 54) / 121][Stage 57:======================================>               (86 + 35) / 121][Stage 57:============================================>        (101 + 20) / 121][Stage 57:===================================================>  (116 + 5) / 121][Stage 57:=====================================================>(119 + 2) / 121][Stage 57:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.511063134 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442894137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:=============================>                        (62 + 51) / 113][Stage 58:==================================>                   (72 + 41) / 113][Stage 58:=============================================>        (95 + 18) / 113][Stage 58:====================================================> (109 + 4) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:================================>                     (68 + 46) / 114][Stage 59:=========================================>            (87 + 27) / 114][Stage 59:================================================>    (104 + 10) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.506293188 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426326023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (64 + 49) / 113][Stage 60:====================================>                 (77 + 36) / 113][Stage 60:============================================>         (94 + 19) / 113][Stage 60:===================================================>  (108 + 5) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:=============================>                        (63 + 51) / 114][Stage 61:===================================>                  (75 + 39) / 114][Stage 61:=======================================>              (84 + 30) / 114][Stage 61:==============================================>      (101 + 13) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:=====================================================>(112 + 2) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.379910005 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381504073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:========================================>             (87 + 28) / 115][Stage 62:=============================================>        (96 + 19) / 115][Stage 62:===================================================>  (110 + 5) / 115]                                                                                [Stage 63:========================================>             (86 + 30) / 116][Stage 63:===========================================>          (93 + 23) / 116][Stage 63:================================================>    (106 + 10) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:====================================================> (112 + 4) / 116][Stage 63:====================================================> (113 + 3) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.627747109 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442641254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (60 + 53) / 113][Stage 64:================================>                     (67 + 46) / 113][Stage 64:========================================>             (85 + 28) / 113][Stage 64:==================================================>   (105 + 8) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:=================================>                    (71 + 43) / 114][Stage 65:=============================================>        (95 + 19) / 114][Stage 65:===================================================>  (109 + 5) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.706289725 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541092838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:=============================>                        (65 + 56) / 121][Stage 66:====================================>                 (82 + 39) / 121][Stage 66:==========================================>           (96 + 25) / 121][Stage 66:================================================>    (111 + 10) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:===========================>                          (63 + 59) / 122][Stage 67:====================================>                 (83 + 39) / 122][Stage 67:===========================================>          (99 + 23) / 122][Stage 67:===================================================>  (117 + 5) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.912452069 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412066875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (64 + 51) / 115][Stage 68:===================================>                  (76 + 39) / 115][Stage 68:=========================================>            (89 + 26) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:================================>                     (69 + 47) / 116][Stage 69:=======================================>              (84 + 32) / 116][Stage 69:===============================================>     (103 + 13) / 116][Stage 69:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.727128769 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466713879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:================================>                     (72 + 48) / 120][Stage 70:========================================>             (91 + 29) / 120][Stage 70:================================================>    (110 + 10) / 120]                                                                                [Stage 71:===========================>                          (62 + 59) / 121][Stage 71:================================>                     (72 + 49) / 121][Stage 71:=====================================>                (83 + 38) / 121][Stage 71:================================================>    (110 + 11) / 121][Stage 71:=====================================================>(119 + 2) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.605765958 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399329129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:====================================>                 (79 + 39) / 118][Stage 72:======================================>               (85 + 33) / 118][Stage 72:============================================>         (98 + 20) / 118][Stage 72:===================================================>  (113 + 5) / 118]                                                                                [Stage 73:=================================>                    (74 + 45) / 119][Stage 73:==================================>                   (77 + 42) / 119][Stage 73:=======================================>              (87 + 32) / 119][Stage 73:===========================================>          (96 + 23) / 119][Stage 73:================================================>    (108 + 11) / 119][Stage 73:====================================================> (116 + 3) / 119][Stage 73:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.606071146 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=225,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440369226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (61 + 59) / 120][Stage 74:=================================>                    (75 + 45) / 120][Stage 74:========================================>             (90 + 30) / 120][Stage 74:==============================================>      (106 + 14) / 120][Stage 74:=====================================================>(118 + 2) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:==============================>                       (68 + 53) / 121][Stage 75:===================================>                  (80 + 41) / 121][Stage 75:===========================================>          (97 + 24) / 121][Stage 75:====================================================> (118 + 3) / 121][Stage 75:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.975800113 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489174275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===================================>                  (75 + 38) / 113][Stage 76:===========================================>          (91 + 22) / 113][Stage 76:==============================================>       (97 + 16) / 113][Stage 76:===================================================>  (108 + 5) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:====================================>                 (76 + 38) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:===========================================>          (92 + 22) / 114][Stage 77:================================================>    (104 + 10) / 114][Stage 77:===================================================>  (109 + 5) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.414720218 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426952025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:===============================>                      (66 + 47) / 113][Stage 78:======================================>               (80 + 33) / 113][Stage 78:=============================================>        (95 + 18) / 113][Stage 78:==================================================>   (106 + 7) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===================================>                  (74 + 40) / 114][Stage 79:==========================================>           (89 + 25) / 114][Stage 79:==================================================>   (107 + 7) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.810247547 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425291156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (61 + 59) / 120][Stage 80:===============================>                      (71 + 49) / 120][Stage 80:======================================>               (85 + 35) / 120][Stage 80:=============================================>       (103 + 17) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:=============================>                        (66 + 55) / 121][Stage 81:======================================>               (86 + 35) / 121][Stage 81:=================================================>    (112 + 9) / 121][Stage 81:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.445035249 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386976237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (73 + 45) / 118][Stage 82:===================================>                  (77 + 41) / 118][Stage 82:===========================================>          (94 + 24) / 118][Stage 82:====================================================> (114 + 4) / 118]                                                                                [Stage 83:==================================>                   (77 + 42) / 119][Stage 83:========================================>             (90 + 29) / 119][Stage 83:===============================================>     (107 + 12) / 119][Stage 83:====================================================> (116 + 3) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.804666876 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378862709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (75 + 38) / 113][Stage 84:=========================================>            (87 + 26) / 113][Stage 84:================================================>    (103 + 10) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:====================================>                 (77 + 37) / 114][Stage 85:========================================>             (85 + 29) / 114][Stage 85:============================================>         (94 + 20) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261202367 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379490311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (72 + 41) / 113][Stage 86:======================================>               (80 + 33) / 113][Stage 86:============================================>         (94 + 19) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:======================================>               (81 + 33) / 114][Stage 87:=============================================>        (95 + 19) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.098548874 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399333743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===============================>                      (67 + 48) / 115][Stage 88:=====================================>                (80 + 35) / 115][Stage 88:===========================================>          (92 + 23) / 115][Stage 88:===================================================>  (110 + 5) / 115]                                                                                [Stage 89:===============================>                      (68 + 48) / 116][Stage 89:===================================>                  (77 + 39) / 116][Stage 89:==========================================>           (91 + 25) / 116][Stage 89:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.668003564 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420407212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (62 + 58) / 120][Stage 90:================================>                     (72 + 48) / 120][Stage 90:========================================>             (91 + 29) / 120][Stage 90:================================================>    (110 + 10) / 120]                                                                                [Stage 91:============================>                         (63 + 58) / 121][Stage 91:==================================>                   (77 + 44) / 121][Stage 91:============================================>         (99 + 22) / 121][Stage 91:=================================================>    (112 + 9) / 121][Stage 91:=====================================================>(119 + 2) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.62230208 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376434632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (73 + 40) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:============================================>         (93 + 20) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:====================================>                 (76 + 38) / 114][Stage 93:===========================================>          (91 + 23) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.018665163 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433614714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:============================>                         (63 + 58) / 121][Stage 94:==================================>                   (77 + 44) / 121][Stage 94:=============================================>       (103 + 18) / 121][Stage 94:=====================================================>(120 + 1) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:=============================>                        (66 + 56) / 122][Stage 95:==================================>                   (78 + 44) / 122][Stage 95:==============================================>      (106 + 16) / 122][Stage 95:====================================================> (118 + 4) / 122][Stage 95:=====================================================>(120 + 2) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.727100519 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413642169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:============================>                         (64 + 56) / 120][Stage 96:==================================>                   (77 + 43) / 120][Stage 96:============================================>         (98 + 22) / 120][Stage 96:====================================================> (117 + 3) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:==============================>                       (68 + 53) / 121][Stage 97:=======================================>              (88 + 33) / 121][Stage 97:=============================================>       (104 + 17) / 121][Stage 97:===================================================>  (116 + 5) / 121][Stage 97:=====================================================>(119 + 2) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.703741034 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355508936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (80 + 35) / 115][Stage 98:=======================================>              (85 + 30) / 115][Stage 98:=============================================>        (97 + 18) / 115][Stage 98:===============================================>     (104 + 11) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:========================================>             (88 + 28) / 116][Stage 99:==============================================>       (99 + 17) / 116][Stage 99:=================================================>    (107 + 9) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.987142978 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=151", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=151,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415660128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:==============================>                      (68 + 52) / 120][Stage 100:=====================================>               (84 + 36) / 120][Stage 100:=================================================>   (111 + 9) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:===============================>                     (71 + 50) / 121][Stage 101:=======================================>             (90 + 31) / 121][Stage 101:=============================================>      (106 + 15) / 121][Stage 101:===================================================> (117 + 4) / 121][Stage 101:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.79008896 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362741098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:======================================>              (84 + 31) / 115][Stage 102:==========================================>          (93 + 22) / 115][Stage 102:=================================================>   (107 + 8) / 115][Stage 102:===================================================> (111 + 4) / 115][Stage 102:===================================================> (112 + 3) / 115]                                                                                [Stage 103:=======================================>             (87 + 29) / 116][Stage 103:==========================================>          (93 + 23) / 116][Stage 103:=============================================>      (102 + 14) / 116][Stage 103:================================================>    (107 + 9) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.682943366 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39517343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:=====================================>               (81 + 34) / 115][Stage 104:==============================================>     (102 + 13) / 115][Stage 104:===================================================> (112 + 3) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:================================>                    (71 + 45) / 116][Stage 105:=====================================>               (82 + 34) / 116][Stage 105:============================================>       (100 + 16) / 116][Stage 105:====================================================>(114 + 2) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.896577829 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346246162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (82 + 33) / 115][Stage 106:=========================================>           (89 + 26) / 115][Stage 106:=============================================>      (100 + 15) / 115][Stage 106:==================================================>  (109 + 6) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:=====================================>               (82 + 34) / 116][Stage 107:=======================================>             (86 + 30) / 116][Stage 107:=============================================>       (99 + 17) / 116][Stage 107:=================================================>   (108 + 8) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.076181431 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395256796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (74 + 44) / 118][Stage 108:===================================>                 (79 + 39) / 118][Stage 108:========================================>            (91 + 27) / 118][Stage 108:=============================================>      (103 + 15) / 118][Stage 108:===================================================> (114 + 4) / 118]                                                                                [Stage 109:=================================>                   (76 + 43) / 119][Stage 109:====================================>                (81 + 38) / 119][Stage 109:========================================>            (92 + 27) / 119][Stage 109:============================================>        (99 + 20) / 119][Stage 109:=================================================>   (112 + 7) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.071842827 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415296151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (62 + 58) / 120][Stage 110:==================================>                  (77 + 43) / 120][Stage 110:==========================================>          (97 + 23) / 120][Stage 110:=================================================>   (113 + 7) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:=============================>                       (68 + 53) / 121][Stage 111:=====================================>               (85 + 36) / 121][Stage 111:===============================================>    (110 + 11) / 121][Stage 111:==================================================>  (116 + 5) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.709909828 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392395593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:============================>                        (61 + 52) / 113][Stage 112:==================================>                  (73 + 40) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:==============================>                      (65 + 49) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:===================================================> (110 + 4) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.863451416 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357265577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (71 + 42) / 113][Stage 114:=====================================>               (79 + 34) / 113][Stage 114:===========================================>         (93 + 20) / 113][Stage 114:=================================================>   (105 + 8) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===================================>                 (76 + 38) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:=============================================>       (98 + 16) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:=================================================>   (107 + 7) / 114][Stage 115:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.997939304 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374272784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:=================================>                   (75 + 43) / 118][Stage 116:=====================================>               (83 + 35) / 118][Stage 116:============================================>       (102 + 16) / 118][Stage 116:====================================================>(117 + 1) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:===================================>                 (80 + 39) / 119][Stage 117:=========================================>           (94 + 25) / 119][Stage 117:=============================================>      (104 + 15) / 119][Stage 117:==================================================>  (113 + 6) / 119][Stage 117:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.538139307 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34988951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=================================>                   (72 + 41) / 113][Stage 118:=====================================>               (81 + 32) / 113][Stage 118:============================================>        (95 + 18) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:===================================================> (110 + 3) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:==================================>                  (74 + 40) / 114][Stage 119:=======================================>             (85 + 29) / 114][Stage 119:==============================================>      (99 + 15) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.130624261 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385079313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:============================>                        (60 + 53) / 113][Stage 120:==================================>                  (73 + 40) / 113][Stage 120:===========================================>         (92 + 21) / 113][Stage 120:==================================================>  (108 + 5) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:===================================>                 (77 + 37) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.035060505 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444573838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (73 + 45) / 118][Stage 122:=================================>                   (75 + 43) / 118][Stage 122:=======================================>             (87 + 31) / 118][Stage 122:============================================>       (101 + 17) / 118][Stage 122:==================================================>  (113 + 5) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:==================================>                  (77 + 42) / 119][Stage 123:=====================================>               (85 + 34) / 119][Stage 123:===========================================>         (97 + 22) / 119][Stage 123:=================================================>   (111 + 8) / 119][Stage 123:===================================================> (115 + 4) / 119][Stage 123:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.301136956 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342571783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (80 + 35) / 115][Stage 124:======================================>              (84 + 31) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:================================================>    (106 + 9) / 115][Stage 124:==================================================>  (110 + 5) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:======================================>              (85 + 31) / 116][Stage 125:==========================================>          (93 + 23) / 116][Stage 125:=============================================>       (99 + 17) / 116][Stage 125:===============================================>    (106 + 10) / 116][Stage 125:==================================================>  (110 + 6) / 116][Stage 125:===================================================> (112 + 4) / 116][Stage 125:====================================================>(114 + 2) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.823674919 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412176191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (62 + 58) / 120][Stage 126:==============================>                      (70 + 50) / 120][Stage 126:=========================================>           (93 + 27) / 120][Stage 126:==================================================>  (115 + 5) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:===============================>                     (73 + 48) / 121][Stage 127:======================================>              (89 + 32) / 121][Stage 127:=============================================>      (106 + 15) / 121][Stage 127:===================================================> (117 + 4) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.878911978 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447720543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 61) / 121][Stage 128:===========================>                         (62 + 59) / 121][Stage 128:===================================>                 (81 + 40) / 121][Stage 128:============================================>       (104 + 17) / 121][Stage 128:===================================================> (118 + 3) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:============================>                        (65 + 57) / 122][Stage 129:===============================>                     (72 + 50) / 122][Stage 129:==========================================>         (100 + 22) / 122][Stage 129:===================================================> (119 + 3) / 122][Stage 129:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.185145518 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42747169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:===========================>                         (62 + 59) / 121][Stage 130:=================================>                   (76 + 45) / 121][Stage 130:=====================================>               (86 + 35) / 121][Stage 130:===============================================>    (111 + 10) / 121][Stage 130:====================================================>(120 + 1) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:===========================>                         (64 + 58) / 122][Stage 131:================================>                    (74 + 48) / 122][Stage 131:==========================================>         (100 + 22) / 122][Stage 131:==================================================>  (117 + 5) / 122][Stage 131:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.373725108 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342845617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=======================================>             (86 + 29) / 115][Stage 132:=============================================>       (99 + 16) / 115][Stage 132:=================================================>   (108 + 7) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:=========================================>           (90 + 26) / 116][Stage 133:=============================================>      (101 + 15) / 116][Stage 133:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.710274739 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350637674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=================================>                   (71 + 42) / 113][Stage 134:=======================================>             (85 + 28) / 113][Stage 134:============================================>        (94 + 19) / 113][Stage 134:===============================================>    (103 + 10) / 113][Stage 134:===================================================> (110 + 3) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:====================================>                (79 + 35) / 114][Stage 135:========================================>            (88 + 26) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(112 + 2) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.676002871 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376918156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===============================>                     (68 + 47) / 115][Stage 136:===================================>                 (78 + 37) / 115][Stage 136:=============================================>       (99 + 16) / 115][Stage 136:=================================================>   (108 + 7) / 115][Stage 136:====================================================>(114 + 1) / 115]                                                                                [Stage 137:==============================>                      (67 + 49) / 116][Stage 137:=====================================>               (83 + 33) / 116][Stage 137:=============================================>       (99 + 17) / 116][Stage 137:==================================================>  (110 + 6) / 116][Stage 137:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.970244575 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396057539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:===============================>                     (72 + 48) / 120][Stage 138:===========================================>         (99 + 21) / 120][Stage 138:====================================================>(119 + 1) / 120]                                                                                [Stage 139:============================>                        (66 + 55) / 121][Stage 139:==================================>                  (79 + 42) / 121][Stage 139:============================================>       (103 + 18) / 121][Stage 139:=================================================>   (113 + 8) / 121][Stage 139:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.545020951 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=171", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=171,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359616814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (80 + 33) / 113][Stage 140:=========================================>           (89 + 24) / 113][Stage 140:=============================================>       (96 + 17) / 113][Stage 140:===================================================> (110 + 3) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===================================>                 (76 + 38) / 114][Stage 141:=======================================>             (85 + 29) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:=================================================>   (106 + 8) / 114][Stage 141:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.115652635 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382100488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (61 + 52) / 113][Stage 142:==================================>                  (74 + 39) / 113][Stage 142:=========================================>           (88 + 25) / 113][Stage 142:==============================================>     (101 + 12) / 113]                                                                                [Stage 143:============================>                        (61 + 53) / 114][Stage 143:=================================>                   (72 + 42) / 114][Stage 143:=======================================>             (86 + 28) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.63742496 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337071229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:======================================>              (83 + 32) / 115][Stage 144:========================================>            (88 + 27) / 115][Stage 144:=============================================>       (99 + 16) / 115][Stage 144:==================================================>  (110 + 5) / 115]                                                                                [Stage 145:======================================>              (85 + 31) / 116][Stage 145:===========================================>         (95 + 21) / 116][Stage 145:==================================================>  (110 + 6) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.692515332 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397775045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:==========================>                          (61 + 60) / 121][Stage 146:===============================>                     (71 + 50) / 121][Stage 146:=======================================>             (90 + 31) / 121][Stage 146:==================================================>  (116 + 5) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:==============================>                      (70 + 52) / 122][Stage 147:====================================>                (85 + 37) / 122][Stage 147:===========================================>        (103 + 19) / 122][Stage 147:===================================================> (118 + 4) / 122][Stage 147:====================================================>(120 + 2) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.121145748 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362359158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (73 + 45) / 118][Stage 148:=======================================>             (87 + 31) / 118][Stage 148:==============================================>     (106 + 12) / 118][Stage 148:====================================================>(116 + 2) / 118]                                                                                [Stage 149:================================>                    (73 + 46) / 119][Stage 149:=================================>                   (76 + 43) / 119][Stage 149:========================================>            (92 + 27) / 119][Stage 149:===============================================>    (109 + 10) / 119][Stage 149:====================================================>(117 + 2) / 119][Stage 149:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.582923094 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401898081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (65 + 55) / 120][Stage 150:====================================>                (82 + 38) / 120][Stage 150:=============================================>      (105 + 15) / 120][Stage 150:===================================================> (116 + 4) / 120]                                                                                [Stage 151:============================>                        (66 + 55) / 121][Stage 151:==================================>                  (78 + 43) / 121][Stage 151:==========================================>          (98 + 23) / 121][Stage 151:==================================================>  (116 + 5) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.200213113 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40972142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (63 + 57) / 120][Stage 152:=================================>                   (76 + 44) / 120][Stage 152:===========================================>         (99 + 21) / 120][Stage 152:===================================================> (117 + 3) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:============================>                        (64 + 57) / 121][Stage 153:=================================>                   (77 + 44) / 121][Stage 153:=============================================>      (106 + 15) / 121][Stage 153:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.444088372 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398533537 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:============================>                        (65 + 56) / 121][Stage 154:==============================>                      (70 + 51) / 121][Stage 154:===========================================>         (99 + 22) / 121][Stage 154:=================================================>   (114 + 7) / 121][Stage 154:====================================================>(120 + 1) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:==============================>                      (70 + 52) / 122][Stage 155:===================================>                 (81 + 41) / 122][Stage 155:=============================================>      (107 + 15) / 122][Stage 155:===================================================> (119 + 3) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.584809901 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394056974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:=============================>                       (63 + 50) / 113][Stage 156:====================================>                (78 + 35) / 113][Stage 156:===========================================>         (92 + 21) / 113][Stage 156:=================================================>   (106 + 7) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:===============================>                     (68 + 46) / 114][Stage 157:====================================>                (78 + 36) / 114][Stage 157:==========================================>          (91 + 23) / 114][Stage 157:==============================================>     (101 + 13) / 114][Stage 157:==================================================>  (109 + 5) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.769424686 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381614135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:==============================>                      (64 + 49) / 113][Stage 158:==================================>                  (73 + 40) / 113][Stage 158:=======================================>             (85 + 28) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:==============================>                      (66 + 48) / 114][Stage 159:======================================>              (83 + 31) / 114][Stage 159:=============================================>       (98 + 16) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.3936293 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360124723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=================================>                   (71 + 42) / 113][Stage 160:======================================>              (82 + 31) / 113][Stage 160:============================================>        (95 + 18) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:====================================================>(111 + 2) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===================================>                 (76 + 38) / 114][Stage 161:======================================>              (82 + 32) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:=================================================>   (107 + 7) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.074591555 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435269141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (65 + 56) / 121][Stage 162:=================================>                   (77 + 44) / 121][Stage 162:==========================================>          (97 + 24) / 121][Stage 162:===================================================> (118 + 3) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:===========================>                         (64 + 58) / 122][Stage 163:================================>                    (74 + 48) / 122][Stage 163:==========================================>          (97 + 25) / 122][Stage 163:=================================================>   (115 + 7) / 122][Stage 163:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.821974749 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364532175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:==================================>                  (76 + 42) / 118][Stage 164:=========================================>           (93 + 25) / 118][Stage 164:=================================================>   (110 + 8) / 118]                                                                                [Stage 165:================================>                    (74 + 45) / 119][Stage 165:===================================>                 (79 + 40) / 119][Stage 165:==========================================>          (95 + 24) / 119][Stage 165:==================================================>  (113 + 6) / 119][Stage 165:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.467045553 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405825975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===============================>                     (73 + 48) / 121][Stage 166:===========================================>         (99 + 22) / 121][Stage 166:==================================================>  (116 + 5) / 121]                                                                                [Stage 167:===========================>                         (63 + 59) / 122][Stage 167:================================>                    (74 + 48) / 122][Stage 167:=========================================>           (95 + 27) / 122][Stage 167:=================================================>   (113 + 9) / 122][Stage 167:====================================================>(120 + 2) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.112298506 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394259453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:=================================>                   (71 + 42) / 113][Stage 168:========================================>            (87 + 26) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:===============================>                     (67 + 47) / 114][Stage 169:=======================================>             (84 + 30) / 114][Stage 169:==================================================>  (108 + 6) / 114][Stage 169:====================================================>(112 + 2) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.648939348 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385618541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==================================>                  (74 + 39) / 113][Stage 170:==========================================>          (90 + 23) / 113][Stage 170:================================================>    (104 + 9) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:=============================>                       (63 + 51) / 114][Stage 171:=================================>                   (72 + 42) / 114][Stage 171:========================================>            (88 + 26) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.011332008 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344536306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (76 + 37) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:============================================>        (95 + 18) / 113][Stage 172:=================================================>   (105 + 8) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:===================================>                 (77 + 37) / 114][Stage 173:========================================>            (88 + 26) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:==================================================>  (109 + 5) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.985952057 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354362879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=================================>                   (71 + 42) / 113][Stage 174:=====================================>               (81 + 32) / 113][Stage 174:===========================================>         (92 + 21) / 113][Stage 174:=================================================>   (106 + 7) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:==================================>                  (74 + 40) / 114][Stage 175:========================================>            (88 + 26) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:===================================================> (110 + 4) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.968656386 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36843446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (73 + 42) / 115][Stage 176:========================================>            (87 + 28) / 115][Stage 176:=============================================>       (99 + 16) / 115][Stage 176:===================================================> (112 + 3) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:================================>                    (71 + 45) / 116][Stage 177:========================================>            (89 + 27) / 116][Stage 177:==============================================>     (104 + 12) / 116][Stage 177:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.920550626 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373080749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (71 + 44) / 115][Stage 178:====================================>                (80 + 35) / 115][Stage 178:============================================>        (97 + 18) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:===============================>                     (70 + 46) / 116][Stage 179:======================================>              (84 + 32) / 116][Stage 179:=========================================>           (91 + 25) / 116][Stage 179:===========================================>         (96 + 20) / 116][Stage 179:=================================================>   (109 + 7) / 116][Stage 179:==================================================>  (111 + 5) / 116][Stage 179:===================================================> (113 + 3) / 116][Stage 179:====================================================>(114 + 2) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.254757749 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352458834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (71 + 42) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:===============================================>    (103 + 10) / 113][Stage 180:====================================================>(111 + 2) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===================================>                 (76 + 38) / 114][Stage 181:========================================>            (88 + 26) / 114][Stage 181:==============================================>      (99 + 15) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.140749286 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361596769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=====================================>               (81 + 34) / 115][Stage 182:=======================================>             (86 + 29) / 115][Stage 182:============================================>        (97 + 18) / 115][Stage 182:==================================================>  (110 + 5) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:======================================>              (85 + 31) / 116][Stage 183:=============================================>       (99 + 17) / 116][Stage 183:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.82924153 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339783075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (82 + 33) / 115][Stage 184:==========================================>          (92 + 23) / 115][Stage 184:===============================================>    (105 + 10) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:====================================>                (80 + 36) / 116][Stage 185:=======================================>             (86 + 30) / 116][Stage 185:============================================>        (97 + 19) / 116][Stage 185:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.695309855 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394686198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===============================>                     (72 + 48) / 120][Stage 186:========================================>            (92 + 28) / 120][Stage 186:=================================================>   (112 + 8) / 120][Stage 186:====================================================>(118 + 2) / 120]                                                                                [Stage 187:===========================>                         (62 + 59) / 121][Stage 187:=============================>                       (67 + 54) / 121][Stage 187:=======================================>             (91 + 30) / 121][Stage 187:===========================================>        (101 + 20) / 121][Stage 187:=================================================>   (114 + 7) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.347367396 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383720234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (64 + 57) / 121][Stage 188:===============================>                     (72 + 49) / 121][Stage 188:===========================================>        (102 + 19) / 121][Stage 188:==================================================>  (116 + 5) / 121]                                                                                [Stage 189:============================>                        (66 + 56) / 122][Stage 189:================================>                    (74 + 48) / 122][Stage 189:=======================================>             (90 + 32) / 122][Stage 189:=================================================>   (114 + 8) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.489053854 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34435667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:=============================================>      (101 + 14) / 115][Stage 190:==================================================>  (110 + 5) / 115]                                                                                [Stage 191:======================================>              (84 + 32) / 116][Stage 191:==========================================>          (93 + 23) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.619745555 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364255735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (71 + 44) / 115][Stage 192:=====================================>               (81 + 34) / 115][Stage 192:=============================================>       (99 + 16) / 115][Stage 192:===================================================> (112 + 3) / 115]                                                                                [Stage 193:==================================>                  (75 + 41) / 116][Stage 193:=======================================>             (86 + 30) / 116][Stage 193:=============================================>       (99 + 17) / 116][Stage 193:============================================>       (100 + 16) / 116][Stage 193:==================================================>  (110 + 6) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:===================================================> (113 + 3) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.456811928 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406426179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:===============================>                     (67 + 46) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:=============================>                       (64 + 50) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:===================================================> (111 + 3) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.205930123 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346045775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (78 + 35) / 113][Stage 196:=========================================>           (88 + 25) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:==================================================>  (108 + 5) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:====================================>                (79 + 35) / 114][Stage 197:============================================>        (96 + 18) / 114][Stage 197:=================================================>   (107 + 7) / 114][Stage 197:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.124625489 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346737474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (82 + 33) / 115][Stage 198:===========================================>         (95 + 20) / 115][Stage 198:=================================================>   (107 + 8) / 115][Stage 198:===================================================> (112 + 3) / 115]                                                                                [Stage 199:=======================================>             (87 + 29) / 116][Stage 199:=============================================>      (101 + 15) / 116][Stage 199:===================================================> (113 + 3) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.843190968 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386350604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (62 + 58) / 120][Stage 200:================================>                    (74 + 46) / 120][Stage 200:==========================================>          (97 + 23) / 120][Stage 200:=================================================>   (113 + 7) / 120][Stage 200:===================================================> (117 + 3) / 120]                                                                                [Stage 201:============================>                        (66 + 55) / 121][Stage 201:=====================================>               (86 + 35) / 121][Stage 201:==========================================>         (100 + 21) / 121][Stage 201:=================================================>   (114 + 7) / 121][Stage 201:====================================================>(119 + 2) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.72432351 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m54.230s
user	12m35.516s
sys	1m33.272s
