Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 00:20:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:21:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:21:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:21:05 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 00:21:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:21:17 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522002107-0394).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.334038042 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (49 + 66) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.751120745 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.643283287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=========================>                             (53 + 60) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:==========================================>            (88 + 25) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:====================================================>  (108 + 5) / 113]                                                                                [Stage 3:================================>                      (67 + 47) / 114][Stage 3:==================================>                    (71 + 43) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:========================================>              (83 + 31) / 114][Stage 3:============================================>          (93 + 21) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.902784469 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.652866315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (62 + 56) / 118][Stage 4:=================================>                     (72 + 46) / 118][Stage 4:==================================>                    (74 + 44) / 118][Stage 4:====================================>                  (78 + 40) / 118][Stage 4:======================================>                (83 + 35) / 118][Stage 4:========================================>              (87 + 31) / 118][Stage 4:==============================================>        (99 + 19) / 118][Stage 4:================================================>     (107 + 11) / 118][Stage 4:=====================================================> (114 + 4) / 118][Stage 4:======================================================>(117 + 1) / 118]                                                                                [Stage 5:=================================>                     (73 + 46) / 119][Stage 5:====================================>                  (78 + 41) / 119][Stage 5:=======================================>               (85 + 34) / 119][Stage 5:========================================>              (87 + 32) / 119][Stage 5:=========================================>             (90 + 29) / 119][Stage 5:==============================================>       (103 + 16) / 119][Stage 5:=====================================================> (116 + 3) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.17178695 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.644929611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:===================================>                   (73 + 40) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:=============================================>         (94 + 19) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:===========================>                           (57 + 57) / 114][Stage 7:============================>                          (59 + 55) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:======================================>                (79 + 35) / 114][Stage 7:==============================================>        (96 + 18) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.445536936 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637538248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:=================================>                     (69 + 45) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.105409888 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559090759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:===============================>                      (68 + 47) / 115][Stage 10:===================================>                  (76 + 39) / 115][Stage 10:=======================================>              (85 + 30) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:===================================================>  (109 + 6) / 115]                                                                                [Stage 11:=================================>                    (73 + 43) / 116][Stage 11:========================================>             (88 + 28) / 116][Stage 11:==============================================>      (101 + 15) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:==================================================>   (109 + 7) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.767208257 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579560953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (64 + 51) / 115][Stage 12:==================================>                   (73 + 42) / 115][Stage 12:========================================>             (87 + 28) / 115][Stage 12:===========================================>          (93 + 22) / 115][Stage 12:=============================================>        (97 + 18) / 115][Stage 12:====================================================> (111 + 4) / 115]                                                                                [Stage 13:==================================>                   (74 + 42) / 116][Stage 13:=========================================>            (89 + 27) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:==============================================>       (99 + 17) / 116][Stage 13:=================================================>    (107 + 9) / 116][Stage 13:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.7617102 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560948162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:==============================>                       (63 + 50) / 113][Stage 14:==================================>                   (72 + 41) / 113][Stage 14:=======================================>              (83 + 30) / 113][Stage 14:=============================================>        (96 + 17) / 113][Stage 14:===================================================>  (107 + 6) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:============================>                         (61 + 53) / 114][Stage 15:=====================================>                (80 + 34) / 114][Stage 15:==============================================>       (98 + 16) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.974254503 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.565077385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:===========================>                          (61 + 59) / 120][Stage 16:=============================>                        (65 + 55) / 120][Stage 16:===================================>                  (79 + 41) / 120][Stage 16:===========================================>          (97 + 23) / 120][Stage 16:===================================================>  (115 + 5) / 120]                                                                                [Stage 17:=============================>                        (65 + 56) / 121][Stage 17:===================================>                  (80 + 41) / 121][Stage 17:==========================================>           (95 + 26) / 121][Stage 17:==============================================>      (106 + 15) / 121][Stage 17:=====================================================>(119 + 2) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.802092977 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553375658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (62 + 58) / 120][Stage 18:=================================>                    (75 + 45) / 120][Stage 18:=========================================>            (93 + 27) / 120][Stage 18:=============================================>       (104 + 16) / 120][Stage 18:================================================>    (109 + 11) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:=================================>                    (76 + 45) / 121][Stage 19:==========================================>           (95 + 26) / 121][Stage 19:===============================================>     (108 + 13) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.963687168 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501053846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:==================================>                   (75 + 43) / 118][Stage 20:=====================================>                (81 + 37) / 118][Stage 20:========================================>             (88 + 30) / 118][Stage 20:================================================>    (108 + 10) / 118][Stage 20:====================================================> (115 + 3) / 118]                                                                                [Stage 21:=================================>                    (74 + 45) / 119][Stage 21:==================================>                   (77 + 42) / 119][Stage 21:=========================================>            (91 + 28) / 119][Stage 21:============================================>        (100 + 19) / 119][Stage 21:==================================================>   (111 + 8) / 119][Stage 21:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.962061094 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527296543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:================================>                     (72 + 48) / 120][Stage 22:========================================>             (89 + 31) / 120][Stage 22:================================================>    (110 + 10) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (67 + 54) / 121][Stage 23:====================================>                 (81 + 40) / 121][Stage 23:=============================================>       (104 + 17) / 121][Stage 23:=====================================================>(119 + 2) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.683427098 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508585752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:================================>                     (67 + 46) / 113][Stage 24:===========================================>          (91 + 22) / 113][Stage 24:==================================================>   (105 + 8) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:=============================>                        (62 + 52) / 114][Stage 25:===================================>                  (75 + 39) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.75135916 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.592488527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:===============================>                      (70 + 51) / 121][Stage 26:==========================================>           (95 + 26) / 121][Stage 26:==================================================>   (114 + 7) / 121]                                                                                [Stage 27:===========================>                          (62 + 60) / 122][Stage 27:=================================>                    (75 + 47) / 122][Stage 27:========================================>             (92 + 30) / 122][Stage 27:================================================>    (112 + 10) / 122][Stage 27:====================================================> (118 + 4) / 122][Stage 27:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.793351081 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476522452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:================================>                     (68 + 45) / 113][Stage 28:===========================================>          (90 + 23) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:====================================================> (110 + 3) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=============================>                        (62 + 52) / 114][Stage 29:===================================>                  (75 + 39) / 114][Stage 29:=========================================>            (88 + 26) / 114][Stage 29:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.696611583 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462498803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (66 + 49) / 115][Stage 30:====================================>                 (78 + 37) / 115][Stage 30:============================================>         (95 + 20) / 115][Stage 30:==================================================>   (108 + 7) / 115]                                                                                [Stage 31:===================================>                  (76 + 40) / 116][Stage 31:========================================>             (87 + 29) / 116][Stage 31:==============================================>      (102 + 14) / 116][Stage 31:==================================================>   (109 + 7) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(114 + 2) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.222606213 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511523557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:>                                                       (0 + 0) / 120][Stage 32:===========================>                          (60 + 60) / 120][Stage 32:============================>                         (64 + 56) / 120][Stage 32:==================================>                   (76 + 44) / 120][Stage 32:=========================================>            (92 + 28) / 120][Stage 32:===================================================>  (115 + 5) / 120]                                                                                [Stage 33:=============================>                        (65 + 56) / 121][Stage 33:================================>                     (73 + 48) / 121][Stage 33:==========================================>           (95 + 26) / 121][Stage 33:================================================>    (110 + 11) / 121][Stage 33:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.595570049 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461554445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (74 + 44) / 118][Stage 34:===================================>                  (78 + 40) / 118][Stage 34:==========================================>           (93 + 25) / 118][Stage 34:==================================================>   (110 + 8) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:====================================>                 (81 + 38) / 119][Stage 35:========================================>             (90 + 29) / 119][Stage 35:==============================================>      (105 + 14) / 119][Stage 35:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.364993622 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5150226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (66 + 54) / 120][Stage 36:===================================>                  (78 + 42) / 120][Stage 36:=========================================>            (93 + 27) / 120][Stage 36:==================================================>   (112 + 8) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:===============================>                      (70 + 51) / 121][Stage 37:=========================================>            (92 + 29) / 121][Stage 37:=================================================>    (112 + 9) / 121][Stage 37:====================================================> (118 + 3) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.851993429 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49892215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:============================>                         (64 + 56) / 120][Stage 38:================================>                     (72 + 48) / 120][Stage 38:========================================>             (89 + 31) / 120][Stage 38:==================================================>   (112 + 8) / 120][Stage 38:=====================================================>(119 + 1) / 120]                                                                                [Stage 39:===========================>                          (62 + 59) / 121][Stage 39:===================================>                  (79 + 42) / 121][Stage 39:=========================================>            (94 + 27) / 121][Stage 39:===================================================>  (115 + 6) / 121][Stage 39:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.530924842 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447553657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:=================================>                    (73 + 45) / 118][Stage 40:=======================================>              (86 + 32) / 118][Stage 40:==========================================>           (93 + 25) / 118][Stage 40:===============================================>     (105 + 13) / 118][Stage 40:=====================================================>(117 + 1) / 118]                                                                                [Stage 41:=================================>                    (73 + 46) / 119][Stage 41:==================================>                   (76 + 43) / 119][Stage 41:======================================>               (84 + 35) / 119][Stage 41:============================================>         (98 + 21) / 119][Stage 41:================================================>    (108 + 11) / 119][Stage 41:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.489627238 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474264196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:=============================>                        (66 + 54) / 120][Stage 42:====================================>                 (82 + 38) / 120][Stage 42:============================================>        (100 + 20) / 120][Stage 42:====================================================> (117 + 3) / 120]                                                                                [Stage 43:============================>                         (63 + 58) / 121][Stage 43:=================================>                    (74 + 47) / 121][Stage 43:=======================================>              (89 + 32) / 121][Stage 43:==============================================>      (106 + 15) / 121][Stage 43:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.656980115 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415585117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:==================================>                   (76 + 42) / 118][Stage 44:=========================================>            (90 + 28) / 118][Stage 44:==============================================>      (103 + 15) / 118][Stage 44:====================================================> (115 + 3) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:=================================>                    (74 + 45) / 119][Stage 45:===================================>                  (79 + 40) / 119][Stage 45:===========================================>          (96 + 23) / 119][Stage 45:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.479642921 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412248976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===================================>                  (75 + 38) / 113][Stage 46:========================================>             (84 + 29) / 113][Stage 46:===========================================>          (92 + 21) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:====================================>                 (76 + 38) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:=============================================>        (96 + 18) / 114][Stage 47:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.153397528 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430726989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (70 + 43) / 113][Stage 48:=======================================>              (83 + 30) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:================================================>    (103 + 10) / 113][Stage 48:===================================================>  (108 + 5) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:============================================>         (94 + 20) / 114][Stage 49:===============================================>     (103 + 11) / 114][Stage 49:====================================================> (110 + 4) / 114][Stage 49:====================================================> (111 + 3) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31577182 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465648452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 59) / 120][Stage 50:================================>                     (72 + 48) / 120][Stage 50:=========================================>            (92 + 28) / 120][Stage 50:===============================================>     (108 + 12) / 120]                                                                                [Stage 51:============================>                         (63 + 58) / 121][Stage 51:==================================>                   (77 + 44) / 121][Stage 51:=========================================>            (93 + 28) / 121][Stage 51:===============================================>     (109 + 12) / 121][Stage 51:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.549400001 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395066046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:>                                                       (0 + 0) / 113][Stage 52:===================================>                  (75 + 38) / 113][Stage 52:=========================================>            (87 + 26) / 113][Stage 52:=============================================>        (95 + 18) / 113][Stage 52:================================================>    (103 + 10) / 113][Stage 52:====================================================> (109 + 4) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=====================================>                (80 + 34) / 114][Stage 53:============================================>         (94 + 20) / 114][Stage 53:===============================================>     (103 + 11) / 114][Stage 53:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.357799277 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391670404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (79 + 34) / 113][Stage 54:=======================================>              (83 + 30) / 113][Stage 54:==============================================>       (98 + 15) / 113][Stage 54:==================================================>   (106 + 7) / 113]                                                                                [Stage 55:=====================================>                (80 + 34) / 114][Stage 55:==========================================>           (89 + 25) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:===================================================>  (108 + 6) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.04340839 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392815184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (79 + 34) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:==============================================>      (100 + 13) / 113][Stage 56:===================================================>  (107 + 6) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:=======================================>              (84 + 30) / 114][Stage 57:===========================================>          (91 + 23) / 114][Stage 57:===============================================>     (103 + 11) / 114][Stage 57:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 6.151544712 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429732571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (60 + 53) / 113][Stage 58:==================================>                   (72 + 41) / 113][Stage 58:===========================================>          (91 + 22) / 113][Stage 58:================================================>    (103 + 10) / 113][Stage 58:====================================================> (109 + 4) / 113][Stage 58:====================================================> (110 + 3) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:==============================>                       (64 + 50) / 114][Stage 59:=====================================>                (80 + 34) / 114][Stage 59:===============================================>     (102 + 12) / 114][Stage 59:====================================================> (110 + 4) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.907191844 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41355384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:======================================>               (85 + 33) / 118][Stage 60:==========================================>           (93 + 25) / 118][Stage 60:===============================================>     (105 + 13) / 118][Stage 60:====================================================> (115 + 3) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:===================================>                  (78 + 41) / 119][Stage 61:=======================================>              (86 + 33) / 119][Stage 61:============================================>         (98 + 21) / 119][Stage 61:==================================================>   (112 + 7) / 119][Stage 61:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.619907035 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545942211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:===============================>                      (65 + 48) / 113][Stage 62:===================================>                  (74 + 39) / 113][Stage 62:===========================================>          (92 + 21) / 113][Stage 62:====================================================> (109 + 4) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:=============================>                        (62 + 52) / 114][Stage 63:====================================>                 (77 + 37) / 114][Stage 63:==============================================>       (98 + 16) / 114][Stage 63:===================================================>  (109 + 5) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.698398153 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451810948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:============================>                         (63 + 58) / 121][Stage 64:====================================>                 (81 + 40) / 121][Stage 64:============================================>         (99 + 22) / 121][Stage 64:===================================================>  (115 + 6) / 121][Stage 64:=====================================================>(120 + 1) / 121]                                                                                [Stage 65:===========================>                          (61 + 61) / 122][Stage 65:============================>                         (64 + 58) / 122][Stage 65:==================================>                   (79 + 43) / 122][Stage 65:=============================================>       (105 + 17) / 122][Stage 65:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.52606244 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406553437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:========================================>             (86 + 29) / 115][Stage 66:==============================================>       (99 + 16) / 115][Stage 66:====================================================> (112 + 3) / 115]                                                                                [Stage 67:========================================>             (87 + 29) / 116][Stage 67:==============================================>      (101 + 15) / 116][Stage 67:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.590784766 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448263826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (71 + 44) / 115][Stage 68:======================================>               (83 + 32) / 115][Stage 68:==============================================>       (99 + 16) / 115][Stage 68:===================================================>  (110 + 5) / 115]                                                                                [Stage 69:===================================>                  (76 + 40) / 116][Stage 69:=========================================>            (89 + 27) / 116][Stage 69:===============================================>     (104 + 12) / 116][Stage 69:===================================================>  (110 + 6) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.872084434 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399575454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 32) / 113][Stage 70:==========================================>           (89 + 24) / 113][Stage 70:==============================================>       (98 + 15) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:======================================>               (81 + 33) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:=============================================>        (95 + 19) / 114][Stage 71:==================================================>   (107 + 7) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.052963251 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431113835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:=================================>                    (71 + 42) / 113][Stage 72:=========================================>            (87 + 26) / 113][Stage 72:==============================================>      (100 + 13) / 113][Stage 72:===================================================>  (108 + 5) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:==============================>                       (65 + 49) / 114][Stage 73:============================================>         (93 + 21) / 114][Stage 73:===============================================>     (103 + 11) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.112199802 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380688161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (73 + 40) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:==============================================>       (98 + 15) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===================================>                  (74 + 40) / 114][Stage 75:======================================>               (82 + 32) / 114][Stage 75:=============================================>        (95 + 19) / 114][Stage 75:===============================================>     (103 + 11) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.189237893 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418182868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:================================>                     (67 + 46) / 113][Stage 76:==========================================>           (89 + 24) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:====================================================> (110 + 3) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:==================================>                   (72 + 42) / 114][Stage 77:==========================================>           (90 + 24) / 114][Stage 77:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.242800533 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386069086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:==================================>                   (76 + 42) / 118][Stage 78:======================================>               (85 + 33) / 118][Stage 78:============================================>         (97 + 21) / 118][Stage 78:====================================================> (115 + 3) / 118]                                                                                [Stage 79:==================================>                   (75 + 44) / 119][Stage 79:=====================================>                (82 + 37) / 119][Stage 79:=========================================>            (91 + 28) / 119][Stage 79:==================================================>   (111 + 8) / 119][Stage 79:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.403891568 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384429585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==================================>                   (72 + 41) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:=============================================>        (95 + 18) / 113][Stage 80:=================================================>    (104 + 9) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:=======================================>              (83 + 31) / 114][Stage 81:============================================>         (93 + 21) / 114][Stage 81:================================================>    (104 + 10) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.980227832 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377659821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (70 + 43) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:===========================================>          (91 + 22) / 113][Stage 82:=================================================>    (104 + 9) / 113]                                                                                [Stage 83:=====================================>                (79 + 35) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:==============================================>      (101 + 13) / 114][Stage 83:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.808983505 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369780736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (74 + 39) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:===============================================>      (99 + 14) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:========================================>             (86 + 28) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:===============================================>     (102 + 12) / 114][Stage 85:====================================================> (111 + 3) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.931993542 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399902418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=================================>                    (70 + 43) / 113][Stage 86:==========================================>           (89 + 24) / 113][Stage 86:====================================================> (109 + 4) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:=================================>                    (71 + 43) / 114][Stage 87:=========================================>            (88 + 26) / 114][Stage 87:===================================================>  (109 + 5) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.610962911 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411493687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:===========================>                          (61 + 59) / 120][Stage 88:================================>                     (73 + 47) / 120][Stage 88:===========================================>          (96 + 24) / 120][Stage 88:==================================================>   (113 + 7) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:=============================>                        (66 + 55) / 121][Stage 89:====================================>                 (82 + 39) / 121][Stage 89:===============================================>     (109 + 12) / 121][Stage 89:====================================================> (117 + 4) / 121][Stage 89:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.919416211 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427949458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:==============================>                       (68 + 52) / 120][Stage 90:=====================================>                (83 + 37) / 120][Stage 90:==============================================>      (106 + 14) / 120][Stage 90:=====================================================>(119 + 1) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:==============================>                       (69 + 52) / 121][Stage 91:=======================================>              (88 + 33) / 121][Stage 91:===============================================>     (108 + 13) / 121][Stage 91:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.256094493 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426702758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:==============================>                       (67 + 53) / 120][Stage 92:====================================>                 (80 + 40) / 120][Stage 92:=========================================>            (92 + 28) / 120][Stage 92:==================================================>   (112 + 8) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:==============================>                       (69 + 52) / 121][Stage 93:=========================================>            (93 + 28) / 121][Stage 93:================================================>    (110 + 11) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.430020199 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411537928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:==================================>                   (73 + 40) / 113][Stage 94:============================================>         (93 + 20) / 113][Stage 94:===================================================>  (107 + 6) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:==================================>                   (73 + 41) / 114][Stage 95:=========================================>            (87 + 27) / 114][Stage 95:===================================================>  (108 + 6) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.591402055 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407822906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (67 + 48) / 115][Stage 96:=====================================>                (80 + 35) / 115][Stage 96:==============================================>      (101 + 14) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:===============================>                      (68 + 48) / 116][Stage 97:=====================================>                (81 + 35) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.589523177 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374071703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (74 + 44) / 118][Stage 98:====================================>                 (79 + 39) / 118][Stage 98:=========================================>            (90 + 28) / 118][Stage 98:==============================================>      (103 + 15) / 118][Stage 98:===================================================>  (113 + 5) / 118]                                                                                [Stage 99:=================================>                    (74 + 45) / 119][Stage 99:======================================>               (84 + 35) / 119][Stage 99:===========================================>          (95 + 24) / 119][Stage 99:==================================================>   (112 + 7) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.642071019 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434286146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:==============================>                      (69 + 51) / 120][Stage 100:======================================>              (87 + 33) / 120][Stage 100:=================================================>   (112 + 8) / 120]                                                                                [Stage 101:===========================>                         (63 + 58) / 121][Stage 101:==================================>                  (79 + 42) / 121][Stage 101:=============================================>      (105 + 16) / 121][Stage 101:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.023007808 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362938696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (70 + 43) / 113][Stage 102:======================================>              (83 + 30) / 113][Stage 102:===========================================>         (92 + 21) / 113][Stage 102:==============================================>     (100 + 13) / 113][Stage 102:===================================================> (109 + 4) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:====================================>                (78 + 36) / 114][Stage 103:========================================>            (88 + 26) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.054353233 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369344361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:===================================>                 (78 + 40) / 118][Stage 104:========================================>            (91 + 27) / 118][Stage 104:============================================>       (100 + 18) / 118][Stage 104:==================================================>  (112 + 6) / 118][Stage 104:====================================================>(117 + 1) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:==================================>                  (77 + 42) / 119][Stage 105:====================================>                (82 + 37) / 119][Stage 105:===========================================>         (97 + 22) / 119][Stage 105:==============================================>     (106 + 13) / 119][Stage 105:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.644132373 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41037011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:==================================>                  (76 + 42) / 118][Stage 106:======================================>              (85 + 33) / 118][Stage 106:===========================================>         (97 + 21) / 118][Stage 106:==============================================>     (106 + 12) / 118]                                                                                [Stage 107:=================================>                   (75 + 44) / 119][Stage 107:=====================================>               (85 + 34) / 119][Stage 107:===========================================>         (98 + 21) / 119][Stage 107:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.276813698 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462022967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:=============================>                       (67 + 53) / 120][Stage 108:==================================>                  (78 + 42) / 120][Stage 108:===========================================>        (100 + 20) / 120][Stage 108:====================================================>(119 + 1) / 120]                                                                                [Stage 109:===========================>                         (62 + 59) / 121][Stage 109:=============================>                       (67 + 54) / 121][Stage 109:======================================>              (88 + 33) / 121][Stage 109:=============================================>      (106 + 15) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.376534933 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414232694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:===============================>                     (72 + 48) / 120][Stage 110:=====================================>               (86 + 34) / 120][Stage 110:==============================================>     (107 + 13) / 120][Stage 110:===================================================> (117 + 3) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:=============================>                       (67 + 54) / 121][Stage 111:===================================>                 (82 + 39) / 121][Stage 111:==========================================>         (100 + 21) / 121][Stage 111:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.201131492 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423186801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:================================>                    (74 + 46) / 120][Stage 112:====================================>                (83 + 37) / 120][Stage 112:============================================>       (103 + 17) / 120][Stage 112:===================================================> (117 + 3) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:==============================>                      (69 + 52) / 121][Stage 113:===================================>                 (80 + 41) / 121][Stage 113:===========================================>         (99 + 22) / 121][Stage 113:===================================================> (118 + 3) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.569482398 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366933001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (73 + 40) / 113][Stage 114:========================================>            (86 + 27) / 113][Stage 114:=============================================>       (96 + 17) / 113][Stage 114:===================================================> (110 + 3) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:==================================>                  (74 + 40) / 114][Stage 115:======================================>              (83 + 31) / 114][Stage 115:===========================================>         (93 + 21) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:====================================================>(112 + 2) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.223911916 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403996668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:============================>                        (66 + 55) / 121][Stage 116:==================================>                  (79 + 42) / 121][Stage 116:==============================================>     (109 + 12) / 121][Stage 116:====================================================>(120 + 1) / 121]                                                                                [Stage 117:============================>                        (65 + 57) / 122][Stage 117:===================================>                 (82 + 40) / 122][Stage 117:===========================================>         (99 + 23) / 122][Stage 117:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.280818541 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397952024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:============================>                        (65 + 55) / 120][Stage 118:=====================================>               (84 + 36) / 120][Stage 118:==============================================>     (107 + 13) / 120][Stage 118:===================================================> (117 + 3) / 120]                                                                                [Stage 119:==========================>                          (61 + 60) / 121][Stage 119:==============================>                      (70 + 51) / 121][Stage 119:====================================>                (83 + 38) / 121][Stage 119:============================================>       (103 + 18) / 121][Stage 119:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.294528254 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361790059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:=================================>                   (75 + 43) / 118][Stage 120:=====================================>               (84 + 34) / 118][Stage 120:==========================================>          (94 + 24) / 118][Stage 120:=================================================>   (111 + 7) / 118][Stage 120:====================================================>(117 + 1) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:==================================>                  (77 + 42) / 119][Stage 121:=====================================>               (84 + 35) / 119][Stage 121:=========================================>           (93 + 26) / 119][Stage 121:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.390437987 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396329504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:==============================>                      (70 + 50) / 120][Stage 122:========================================>            (92 + 28) / 120][Stage 122:=================================================>   (111 + 9) / 120]                                                                                [Stage 123:=============================>                       (67 + 54) / 121][Stage 123:================================>                    (74 + 47) / 121][Stage 123:==========================================>         (100 + 21) / 121][Stage 123:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.037985838 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368254724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (82 + 31) / 113][Stage 124:===========================================>         (92 + 21) / 113][Stage 124:=================================================>   (105 + 8) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===================================>                 (77 + 37) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:==============================================>      (99 + 15) / 114][Stage 125:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.749671054 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496000377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (62 + 59) / 121][Stage 126:================================>                    (75 + 46) / 121][Stage 126:===========================================>         (99 + 22) / 121][Stage 126:==================================================>  (115 + 6) / 121]                                                                                [Stage 127:===========================>                         (63 + 59) / 122][Stage 127:=================================>                   (77 + 45) / 122][Stage 127:==========================================>          (97 + 25) / 122][Stage 127:==================================================>  (116 + 6) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.343256344 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397972266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:>                                                      (0 + 0) / 113][Stage 128:===========================>                         (58 + 55) / 113][Stage 128:=============================>                       (63 + 50) / 113][Stage 128:=======================================>             (85 + 28) / 113][Stage 128:==============================================>     (101 + 12) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:===============================>                     (67 + 47) / 114][Stage 129:========================================>            (88 + 26) / 114][Stage 129:==============================================>     (101 + 13) / 114][Stage 129:===================================================> (111 + 3) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.539532689 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35963974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (77 + 36) / 113][Stage 130:=========================================>           (88 + 25) / 113][Stage 130:=============================================>       (98 + 15) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:==================================>                  (75 + 39) / 114][Stage 131:=======================================>             (86 + 28) / 114][Stage 131:============================================>        (95 + 19) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.882650519 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336660223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (84 + 31) / 115][Stage 132:=========================================>           (89 + 26) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:===================================================> (112 + 3) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:=========================================>           (90 + 26) / 116][Stage 133:=================================================>   (108 + 8) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.928987296 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351381194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (80 + 33) / 113][Stage 134:==========================================>          (91 + 22) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:===================================================> (110 + 3) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:==================================>                  (75 + 39) / 114][Stage 135:========================================>            (87 + 27) / 114][Stage 135:=============================================>       (98 + 16) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.113494873 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338691425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (80 + 35) / 115][Stage 136:======================================>              (83 + 32) / 115][Stage 136:============================================>        (97 + 18) / 115][Stage 136:==================================================>  (109 + 6) / 115]                                                                                [Stage 137:======================================>              (84 + 32) / 116][Stage 137:=============================================>       (99 + 17) / 116][Stage 137:==================================================>  (111 + 5) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.712370966 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334756423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=======================================>             (86 + 29) / 115][Stage 138:==============================================>     (103 + 12) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:=======================================>             (86 + 30) / 116][Stage 139:===========================================>         (95 + 21) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.682403126 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352685996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==================================>                  (73 + 40) / 113][Stage 140:=========================================>           (88 + 25) / 113][Stage 140:============================================>        (94 + 19) / 113][Stage 140:==============================================>     (101 + 12) / 113][Stage 140:===================================================> (109 + 4) / 113]                                                                                [Stage 141:=======================================>             (85 + 29) / 114][Stage 141:===========================================>         (94 + 20) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.014657191 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355621019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (79 + 34) / 113][Stage 142:=========================================>           (89 + 24) / 113][Stage 142:==============================================>     (100 + 13) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:======================================>              (83 + 31) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:=================================================>   (107 + 7) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.000986704 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367698968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:======================================>              (84 + 31) / 115][Stage 144:=========================================>           (89 + 26) / 115][Stage 144:==============================================>     (103 + 12) / 115][Stage 144:==================================================>  (110 + 5) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=====================================>               (83 + 33) / 116][Stage 145:==========================================>          (93 + 23) / 116][Stage 145:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.676910591 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403641634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:===========================>                         (63 + 58) / 121][Stage 146:==================================>                  (79 + 42) / 121][Stage 146:===========================================>        (101 + 20) / 121][Stage 146:===================================================> (117 + 4) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:==============================>                      (71 + 51) / 122][Stage 147:====================================>                (83 + 39) / 122][Stage 147:=============================================>      (107 + 15) / 122][Stage 147:===================================================> (119 + 3) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.800009314 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385681422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:=================================>                   (72 + 41) / 113][Stage 148:=======================================>             (85 + 28) / 113][Stage 148:==================================================>  (108 + 5) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:==============================>                      (66 + 48) / 114][Stage 149:=======================================>             (84 + 30) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.222225296 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410935461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (64 + 56) / 120][Stage 150:==================================>                  (78 + 42) / 120][Stage 150:======================================>              (88 + 32) / 120][Stage 150:=================================================>   (112 + 8) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:==================================>                  (79 + 42) / 121][Stage 151:=======================================>             (91 + 30) / 121][Stage 151:=================================================>   (113 + 8) / 121][Stage 151:====================================================>(119 + 2) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.447427925 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399512293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (63 + 57) / 120][Stage 152:==================================>                  (77 + 43) / 120][Stage 152:========================================>            (91 + 29) / 120][Stage 152:=================================================>   (112 + 8) / 120]                                                                                [Stage 153:=============================>                       (67 + 54) / 121][Stage 153:=================================>                   (77 + 44) / 121][Stage 153:==========================================>          (97 + 24) / 121][Stage 153:=================================================>   (114 + 7) / 121][Stage 153:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.346431514 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393983069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:===============================>                     (71 + 50) / 121][Stage 154:========================================>            (92 + 29) / 121][Stage 154:===============================================>    (110 + 11) / 121][Stage 154:====================================================>(119 + 2) / 121]                                                                                [Stage 155:============================>                        (65 + 57) / 122][Stage 155:=================================>                   (76 + 46) / 122][Stage 155:========================================>            (94 + 28) / 122][Stage 155:===============================================>    (112 + 10) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.778142055 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417090446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:============================>                        (66 + 55) / 121][Stage 156:==================================>                  (78 + 43) / 121][Stage 156:=================================================>   (113 + 8) / 121][Stage 156:====================================================>(120 + 1) / 121]                                                                                [Stage 157:==========================>                          (62 + 60) / 122][Stage 157:=================================>                   (76 + 46) / 122][Stage 157:==========================================>          (97 + 25) / 122][Stage 157:==================================================>  (116 + 6) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.602555471 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397784513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:==============================>                      (66 + 47) / 113][Stage 158:======================================>              (83 + 30) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:===============================>                     (67 + 47) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:=================================================>   (107 + 7) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.264139206 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376962378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:================================>                    (70 + 43) / 113][Stage 160:========================================>            (87 + 26) / 113][Stage 160:=================================================>   (106 + 7) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:================================>                    (69 + 45) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.304455739 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484424658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:============================>                        (60 + 53) / 113][Stage 162:==================================>                  (74 + 39) / 113][Stage 162:============================================>        (94 + 19) / 113][Stage 162:===================================================> (109 + 4) / 113]                                                                                [Stage 163:=============================>                       (63 + 51) / 114][Stage 163:====================================>                (78 + 36) / 114][Stage 163:===========================================>         (93 + 21) / 114][Stage 163:=================================================>   (107 + 7) / 114][Stage 163:====================================================>(112 + 2) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.555769769 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349367758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (83 + 30) / 113][Stage 164:===========================================>         (92 + 21) / 113][Stage 164:==============================================>     (101 + 12) / 113][Stage 164:==================================================>  (108 + 5) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:==================================>                  (75 + 39) / 114][Stage 165:=======================================>             (85 + 29) / 114][Stage 165:===========================================>         (94 + 20) / 114][Stage 165:==================================================>  (108 + 6) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.196989848 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376019339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:==============================>                      (66 + 47) / 113][Stage 166:========================================>            (86 + 27) / 113][Stage 166:===============================================>    (103 + 10) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:================================>                    (69 + 45) / 114][Stage 167:==========================================>          (92 + 22) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.110364907 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401766758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:============================>                        (61 + 52) / 113][Stage 168:====================================>                (78 + 35) / 113][Stage 168:========================================>            (87 + 26) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:================================>                    (69 + 45) / 114][Stage 169:======================================>              (83 + 31) / 114][Stage 169:===============================================>    (104 + 10) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.159744107 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428059738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (63 + 57) / 120][Stage 170:================================>                    (74 + 46) / 120][Stage 170:=====================================>               (86 + 34) / 120][Stage 170:=================================================>   (112 + 8) / 120]                                                                                [Stage 171:============================>                        (66 + 55) / 121][Stage 171:===================================>                 (81 + 40) / 121][Stage 171:==============================================>     (109 + 12) / 121][Stage 171:====================================================>(119 + 2) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.30586868 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361510009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (71 + 42) / 113][Stage 172:======================================>              (83 + 30) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:==================================================>  (108 + 5) / 113]                                                                                [Stage 173:======================================>              (82 + 32) / 114][Stage 173:===========================================>         (93 + 21) / 114][Stage 173:===============================================>    (104 + 10) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.048934092 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332481168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:======================================>              (83 + 32) / 115][Stage 174:=========================================>           (90 + 25) / 115][Stage 174:=============================================>      (101 + 14) / 115][Stage 174:==================================================>  (109 + 6) / 115]                                                                                [Stage 175:=====================================>               (82 + 34) / 116][Stage 175:=============================================>      (101 + 15) / 116][Stage 175:================================================>    (107 + 9) / 116][Stage 175:==================================================>  (110 + 6) / 116][Stage 175:====================================================>(114 + 2) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.874130558 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417551972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:====================================>                (80 + 35) / 115][Stage 176:========================================>            (87 + 28) / 115][Stage 176:=============================================>      (100 + 15) / 115][Stage 176:=================================================>   (108 + 7) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:=======================================>             (86 + 30) / 116][Stage 177:===========================================>         (96 + 20) / 116][Stage 177:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.874366369 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345445238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:======================================>              (82 + 31) / 113][Stage 178:========================================>            (87 + 26) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:==================================================>  (108 + 5) / 113]                                                                                [Stage 179:========================================>            (88 + 26) / 114][Stage 179:============================================>        (96 + 18) / 114][Stage 179:===============================================>    (104 + 10) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.861232602 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37427878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (77 + 36) / 113][Stage 180:======================================>              (83 + 30) / 113][Stage 180:==========================================>          (91 + 22) / 113][Stage 180:=================================================>   (105 + 8) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:======================================>              (82 + 32) / 114][Stage 181:========================================>            (88 + 26) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:==============================================>     (101 + 13) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.794148295 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428346862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (61 + 52) / 113][Stage 182:================================>                    (70 + 43) / 113][Stage 182:===========================================>         (93 + 20) / 113][Stage 182:==================================================>  (108 + 5) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:================================>                    (69 + 45) / 114][Stage 183:=======================================>             (86 + 28) / 114][Stage 183:==============================================>     (103 + 11) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.35483622 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343182478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (80 + 35) / 115][Stage 184:=======================================>             (86 + 29) / 115][Stage 184:============================================>        (96 + 19) / 115][Stage 184:=================================================>   (107 + 8) / 115]                                                                                [Stage 185:======================================>              (85 + 31) / 116][Stage 185:===========================================>         (95 + 21) / 116][Stage 185:===============================================>    (105 + 11) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.633725774 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344502139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:====================================>                (78 + 35) / 113][Stage 186:=========================================>           (89 + 24) / 113][Stage 186:============================================>        (95 + 18) / 113][Stage 186:==============================================>     (102 + 11) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:======================================>              (82 + 32) / 114][Stage 187:========================================>            (88 + 26) / 114][Stage 187:=============================================>       (97 + 17) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:==================================================>  (108 + 6) / 114][Stage 187:===================================================> (110 + 4) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.146548248 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433527648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:=============================>                       (66 + 54) / 120][Stage 188:======================================>              (87 + 33) / 120][Stage 188:============================================>       (102 + 18) / 120][Stage 188:===================================================> (117 + 3) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (67 + 54) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:==========================================>         (100 + 21) / 121][Stage 189:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.366443823 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413671433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (61 + 59) / 120][Stage 190:===============================>                     (71 + 49) / 120][Stage 190:=====================================>               (86 + 34) / 120][Stage 190:=============================================>      (104 + 16) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:=============================>                       (68 + 53) / 121][Stage 191:===================================>                 (81 + 40) / 121][Stage 191:==========================================>          (97 + 24) / 121][Stage 191:==================================================>  (116 + 5) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.696521477 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352988727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:================================>                    (73 + 45) / 118][Stage 192:====================================>                (81 + 37) / 118][Stage 192:========================================>            (91 + 27) / 118][Stage 192:=================================================>   (110 + 8) / 118]                                                                                [Stage 193:================================>                    (73 + 46) / 119][Stage 193:====================================>                (81 + 38) / 119][Stage 193:=======================================>             (88 + 31) / 119][Stage 193:============================================>       (101 + 18) / 119][Stage 193:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.382706423 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407049628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:===============================>                     (72 + 48) / 120][Stage 194:==========================================>          (97 + 23) / 120][Stage 194:==================================================>  (114 + 6) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:============================>                        (64 + 57) / 121][Stage 195:====================================>                (84 + 37) / 121][Stage 195:==============================================>     (108 + 13) / 121][Stage 195:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.012390146 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361842794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==============================>                      (66 + 49) / 115][Stage 196:===================================>                 (77 + 38) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:================================================>    (106 + 9) / 115]                                                                                [Stage 197:================================>                    (71 + 45) / 116][Stage 197:======================================>              (84 + 32) / 116][Stage 197:=============================================>       (99 + 17) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.018666975 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415285036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (64 + 56) / 120][Stage 198:==============================>                      (70 + 50) / 120][Stage 198:========================================>            (92 + 28) / 120][Stage 198:===============================================>    (110 + 10) / 120][Stage 198:====================================================>(119 + 1) / 120]                                                                                [Stage 199:============================>                        (64 + 57) / 121][Stage 199:=================================>                   (76 + 45) / 121][Stage 199:=======================================>             (91 + 30) / 121][Stage 199:==============================================>     (109 + 12) / 121][Stage 199:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.794197848 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365740199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===============================>                     (68 + 47) / 115][Stage 200:=====================================>               (82 + 33) / 115][Stage 200:=============================================>       (99 + 16) / 115][Stage 200:=================================================>   (107 + 8) / 115]                                                                                [Stage 201:=================================>                   (74 + 42) / 116][Stage 201:=========================================>           (91 + 25) / 116][Stage 201:=================================================>   (108 + 8) / 116][Stage 201:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.709331446 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m36.754s
user	12m3.396s
sys	0m56.976s
