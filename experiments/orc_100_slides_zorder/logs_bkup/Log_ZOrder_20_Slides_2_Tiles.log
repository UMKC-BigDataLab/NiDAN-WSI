Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 02:10:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:10:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:10:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:10:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 02:10:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:11:04 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522021053-0400).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.437142632 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 113) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:=========================>                             (54 + 62) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.475300111 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.651023756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=============>                                         (29 + 89) / 118][Stage 2:===========================>                           (59 + 59) / 118][Stage 2:=============================>                         (64 + 54) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=======================================>               (84 + 34) / 118][Stage 2:==========================================>            (92 + 26) / 118][Stage 2:=============================================>        (100 + 18) / 118][Stage 2:=================================================>    (108 + 10) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (79 + 40) / 119][Stage 3:======================================>                (84 + 35) / 119][Stage 3:==========================================>            (92 + 27) / 119][Stage 3:=============================================>         (99 + 20) / 119][Stage 3:====================================================>  (113 + 6) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.152711188 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.663337354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (72 + 46) / 118][Stage 4:==================================>                    (73 + 45) / 118][Stage 4:====================================>                  (78 + 40) / 118][Stage 4:=========================================>             (88 + 30) / 118][Stage 4:===========================================>           (93 + 25) / 118][Stage 4:=============================================>        (100 + 18) / 118][Stage 4:=====================================================> (114 + 4) / 118]                                                                                [Stage 5:=================================>                     (73 + 46) / 119][Stage 5:===================================>                   (77 + 42) / 119][Stage 5:======================================>                (84 + 35) / 119][Stage 5:===========================================>           (95 + 24) / 119][Stage 5:=================================================>    (109 + 10) / 119][Stage 5:=====================================================> (115 + 4) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.424186638 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549589971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:======================================>                (81 + 34) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:=========================================>             (86 + 29) / 115][Stage 6:==============================================>        (97 + 18) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:====================================================>  (109 + 6) / 115]                                                                                [Stage 7:=======================================>               (83 + 33) / 116][Stage 7:==========================================>            (89 + 27) / 116][Stage 7:==============================================>        (99 + 17) / 116][Stage 7:===============================================>      (103 + 13) / 116][Stage 7:================================================>     (104 + 12) / 116][Stage 7:=====================================================> (112 + 4) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.965929532 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53386432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (69 + 44) / 113][Stage 8:====================================>                  (75 + 38) / 113][Stage 8:========================================>              (84 + 29) / 113][Stage 8:============================================>          (91 + 22) / 113][Stage 8:================================================>     (101 + 12) / 113][Stage 8:===================================================>   (106 + 7) / 113][Stage 8:=====================================================> (110 + 3) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:==================================>                    (71 + 43) / 114][Stage 9:======================================>                (79 + 35) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:==============================================>        (97 + 17) / 114][Stage 9:================================================>     (102 + 12) / 114][Stage 9:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.214867057 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616786943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (59 + 62) / 121][Stage 10:===========================>                          (62 + 59) / 121][Stage 10:===============================>                      (71 + 50) / 121][Stage 10:=====================================>                (85 + 36) / 121][Stage 10:==========================================>           (96 + 25) / 121][Stage 10:==============================================>      (106 + 15) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:===========================>                          (62 + 60) / 122][Stage 11:================================>                     (73 + 49) / 122][Stage 11:======================================>               (87 + 35) / 122][Stage 11:==============================================>      (106 + 16) / 122][Stage 11:===================================================>  (116 + 6) / 122][Stage 11:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.969503211 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.629383162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:============================>                         (63 + 57) / 120][Stage 12:================================>                     (72 + 48) / 120][Stage 12:==========================================>           (94 + 26) / 120][Stage 12:============================================>        (100 + 20) / 120][Stage 12:==================================================>   (112 + 8) / 120][Stage 12:====================================================> (116 + 4) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:============================>                         (63 + 58) / 121][Stage 13:=================================>                    (75 + 46) / 121][Stage 13:===========================================>          (98 + 23) / 121][Stage 13:===============================================>     (109 + 12) / 121][Stage 13:===================================================>  (115 + 6) / 121][Stage 13:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.033531029 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.621653297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (64 + 57) / 121][Stage 14:================================>                     (72 + 49) / 121][Stage 14:======================================>               (87 + 34) / 121][Stage 14:===========================================>         (100 + 21) / 121][Stage 14:===============================================>     (108 + 13) / 121][Stage 14:====================================================> (117 + 4) / 121]                                                                                [Stage 15:===========================>                          (63 + 59) / 122][Stage 15:===============================>                      (71 + 51) / 122][Stage 15:=========================================>            (94 + 28) / 122][Stage 15:===============================================>     (109 + 13) / 122][Stage 15:====================================================> (118 + 4) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.981085096 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564680255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:============================>                         (64 + 56) / 120][Stage 16:===================================>                  (79 + 41) / 120][Stage 16:===========================================>          (96 + 24) / 120][Stage 16:==================================================>   (112 + 8) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:==============================>                       (68 + 53) / 121][Stage 17:======================================>               (87 + 34) / 121][Stage 17:============================================>        (101 + 20) / 121][Stage 17:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.537547201 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463647753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==================================>                   (72 + 41) / 113][Stage 18:=======================================>              (83 + 30) / 113][Stage 18:===========================================>          (92 + 21) / 113][Stage 18:===============================================>     (101 + 12) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(111 + 2) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===================================>                  (74 + 40) / 114][Stage 19:=========================================>            (87 + 27) / 114][Stage 19:=============================================>        (96 + 18) / 114][Stage 19:===================================================>  (109 + 5) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.395657767 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463802473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=====================================>                (80 + 35) / 115][Stage 20:========================================>             (86 + 29) / 115][Stage 20:=============================================>        (96 + 19) / 115][Stage 20:==================================================>   (108 + 7) / 115][Stage 20:=====================================================>(113 + 2) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:=======================================>              (84 + 32) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:===============================================>     (104 + 12) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.50194926 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498387102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:=================================>                    (71 + 42) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:=====================================================>(111 + 2) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===========================>                          (58 + 56) / 114][Stage 23:=============================>                        (63 + 51) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.701641949 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522451078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:============================>                         (63 + 57) / 120][Stage 24:==================================>                   (77 + 43) / 120][Stage 24:===========================================>          (96 + 24) / 120][Stage 24:====================================================> (117 + 3) / 120]                                                                                [Stage 25:=============================>                        (65 + 56) / 121][Stage 25:===================================>                  (80 + 41) / 121][Stage 25:=============================================>       (105 + 16) / 121][Stage 25:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.251349196 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524138602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:=================================>                    (74 + 46) / 120][Stage 26:========================================>             (90 + 30) / 120][Stage 26:==================================================>   (113 + 7) / 120][Stage 26:=====================================================>(119 + 1) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:==============================>                       (68 + 53) / 121][Stage 27:=====================================>                (85 + 36) / 121][Stage 27:===========================================>         (100 + 21) / 121][Stage 27:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.42737107 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429438542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (70 + 43) / 113][Stage 28:========================================>             (84 + 29) / 113][Stage 28:============================================>         (93 + 20) / 113][Stage 28:===============================================>     (102 + 11) / 113][Stage 28:===================================================>  (107 + 6) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=======================================>              (83 + 31) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:==============================================>      (101 + 13) / 114][Stage 29:===================================================>  (108 + 6) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.425963282 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527721573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===============================>                      (70 + 51) / 121][Stage 30:=========================================>            (92 + 29) / 121][Stage 30:================================================>    (110 + 11) / 121][Stage 30:===================================================>  (115 + 6) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (69 + 53) / 122][Stage 31:======================================>               (86 + 36) / 122][Stage 31:==============================================>      (108 + 14) / 122][Stage 31:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.517182947 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402306654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (79 + 36) / 115][Stage 32:==========================================>           (90 + 25) / 115][Stage 32:===============================================>     (102 + 13) / 115][Stage 32:====================================================> (111 + 4) / 115]                                                                                [Stage 33:========================================>             (86 + 30) / 116][Stage 33:==============================================>       (99 + 17) / 116][Stage 33:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.636010291 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422170517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (79 + 36) / 115][Stage 34:========================================>             (87 + 28) / 115][Stage 34:==============================================>       (98 + 17) / 115][Stage 34:==================================================>   (107 + 8) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:=====================================>                (81 + 35) / 116][Stage 35:========================================>             (87 + 29) / 116][Stage 35:============================================>         (96 + 20) / 116][Stage 35:==================================================>   (109 + 7) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.326835136 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426271589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==================================>                   (73 + 40) / 113][Stage 36:========================================>             (85 + 28) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:==============================================>      (100 + 13) / 113][Stage 36:====================================================> (109 + 4) / 113][Stage 36:=====================================================>(111 + 2) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:=======================================>              (84 + 30) / 114][Stage 37:============================================>         (94 + 20) / 114][Stage 37:=================================================>    (105 + 9) / 114][Stage 37:===================================================>  (109 + 5) / 114][Stage 37:====================================================> (110 + 4) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.160492452 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522837015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (62 + 58) / 120][Stage 38:================================>                     (73 + 47) / 120][Stage 38:=========================================>            (92 + 28) / 120][Stage 38:====================================================> (117 + 3) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:===============================>                      (70 + 51) / 121][Stage 39:======================================>               (87 + 34) / 121][Stage 39:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.064264458 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=16", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=16,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4614378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (65 + 50) / 115][Stage 40:===================================>                  (76 + 39) / 115][Stage 40:=============================================>        (97 + 18) / 115][Stage 40:==================================================>   (107 + 8) / 115][Stage 40:====================================================> (112 + 3) / 115]                                                                                [Stage 41:====================================>                 (78 + 38) / 116][Stage 41:==========================================>           (92 + 24) / 116][Stage 41:===============================================>     (105 + 11) / 116][Stage 41:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.332339562 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424154342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=======================================>              (83 + 30) / 113][Stage 42:============================================>         (93 + 20) / 113][Stage 42:===============================================>     (102 + 11) / 113][Stage 42:====================================================> (109 + 4) / 113]                                                                                [Stage 43:====================================>                 (78 + 36) / 114][Stage 43:=========================================>            (88 + 26) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:==================================================>   (107 + 7) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.693865721 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453605494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (73 + 45) / 118][Stage 44:=====================================>                (82 + 36) / 118][Stage 44:===========================================>          (96 + 22) / 118][Stage 44:===================================================>  (113 + 5) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:==================================>                   (76 + 43) / 119][Stage 45:=========================================>            (91 + 28) / 119][Stage 45:=================================================>    (110 + 9) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.330286187 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446189771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:================================>                     (69 + 44) / 113][Stage 46:========================================>             (85 + 28) / 113][Stage 46:==================================================>   (106 + 7) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:=================================>                    (71 + 43) / 114][Stage 47:===========================================>          (92 + 22) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.248114624 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392776801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=====================================>                (80 + 35) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:===============================================>     (104 + 11) / 115][Stage 48:=====================================================>(113 + 2) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:======================================>               (83 + 33) / 116][Stage 49:=========================================>            (90 + 26) / 116][Stage 49:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.70667901 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505557456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:=================================>                    (75 + 45) / 120][Stage 50:==========================================>           (94 + 26) / 120][Stage 50:==================================================>   (112 + 8) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:====================================>                 (81 + 40) / 121][Stage 51:===========================================>         (100 + 21) / 121][Stage 51:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.343293638 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469406902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (60 + 60) / 120][Stage 52:=================================>                    (74 + 46) / 120][Stage 52:============================================>        (101 + 19) / 120][Stage 52:====================================================> (116 + 4) / 120]                                                                                [Stage 53:=============================>                        (67 + 54) / 121][Stage 53:===================================>                  (80 + 41) / 121][Stage 53:=============================================>       (103 + 18) / 121][Stage 53:====================================================> (118 + 3) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.350300416 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461392636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (61 + 60) / 121][Stage 54:================================>                     (72 + 49) / 121][Stage 54:===========================================>          (97 + 24) / 121][Stage 54:==================================================>   (114 + 7) / 121]                                                                                [Stage 55:===========================>                          (61 + 61) / 122][Stage 55:===============================>                      (71 + 51) / 122][Stage 55:=========================================>            (94 + 28) / 122][Stage 55:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.096652153 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404356936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (71 + 47) / 118][Stage 56:=================================>                    (74 + 44) / 118][Stage 56:=====================================>                (81 + 37) / 118][Stage 56:==========================================>           (92 + 26) / 118][Stage 56:===============================================>     (106 + 12) / 118][Stage 56:=====================================================>(117 + 1) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:==================================>                   (77 + 42) / 119][Stage 57:=====================================>                (83 + 36) / 119][Stage 57:===========================================>          (95 + 24) / 119][Stage 57:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.445366669 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39640815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (83 + 32) / 115][Stage 58:==========================================>           (90 + 25) / 115][Stage 58:==================================================>   (107 + 8) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:======================================>               (83 + 33) / 116][Stage 59:=========================================>            (90 + 26) / 116][Stage 59:================================================>    (106 + 10) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.777167138 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439777507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (76 + 42) / 118][Stage 60:========================================>             (89 + 29) / 118][Stage 60:==============================================>      (103 + 15) / 118][Stage 60:=====================================================>(117 + 1) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:====================================>                 (80 + 39) / 119][Stage 61:============================================>         (97 + 22) / 119][Stage 61:==============================================>      (104 + 15) / 119][Stage 61:==================================================>   (112 + 7) / 119][Stage 61:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.379795955 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400210642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:=================================>                    (73 + 45) / 118][Stage 62:=====================================>                (82 + 36) / 118][Stage 62:==========================================>           (93 + 25) / 118][Stage 62:==============================================>      (103 + 15) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:==================================>                   (76 + 43) / 119][Stage 63:=====================================>                (83 + 36) / 119][Stage 63:=========================================>            (92 + 27) / 119][Stage 63:===============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.380352633 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451373642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (62 + 51) / 113][Stage 64:=====================================>                (78 + 35) / 113][Stage 64:=============================================>        (95 + 18) / 113][Stage 64:===================================================>  (108 + 5) / 113]                                                                                [Stage 65:===========================>                          (58 + 56) / 114][Stage 65:===============================>                      (67 + 47) / 114][Stage 65:=========================================>            (87 + 27) / 114][Stage 65:=================================================>    (105 + 9) / 114][Stage 65:=====================================================>(112 + 2) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.417240386 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456562038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (61 + 60) / 121][Stage 66:===============================>                      (70 + 51) / 121][Stage 66:==========================================>           (96 + 25) / 121][Stage 66:==================================================>   (113 + 8) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:===========================>                          (62 + 60) / 122][Stage 67:================================>                     (73 + 49) / 122][Stage 67:=======================================>              (89 + 33) / 122][Stage 67:==================================================>   (113 + 9) / 122][Stage 67:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.324416889 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439481604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:==============================>                       (64 + 49) / 113][Stage 68:=======================================>              (83 + 30) / 113][Stage 68:=================================================>    (104 + 9) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:===============================>                      (66 + 48) / 114][Stage 69:======================================>               (82 + 32) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.271320218 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411830576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (80 + 33) / 113][Stage 70:==========================================>           (89 + 24) / 113][Stage 70:================================================>    (103 + 10) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:=======================================>              (83 + 31) / 114][Stage 71:============================================>         (93 + 21) / 114][Stage 71:=================================================>    (105 + 9) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.328621875 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419118139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:============================>                         (59 + 54) / 113][Stage 72:====================================>                 (76 + 37) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:===================================>                  (75 + 39) / 114][Stage 73:============================================>         (94 + 20) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.421043382 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456615936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:===========================>                          (61 + 59) / 120][Stage 74:==================================>                   (76 + 44) / 120][Stage 74:============================================>         (99 + 21) / 120][Stage 74:===================================================>  (115 + 5) / 120]                                                                                [Stage 75:===========================>                          (62 + 59) / 121][Stage 75:==================================>                   (77 + 44) / 121][Stage 75:===========================================>         (100 + 21) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.975290656 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38499293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:>                                                       (0 + 0) / 113][Stage 76:===================================>                  (75 + 38) / 113][Stage 76:========================================>             (84 + 29) / 113][Stage 76:============================================>         (94 + 19) / 113][Stage 76:===================================================>  (107 + 6) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:======================================>               (82 + 32) / 114][Stage 77:=========================================>            (88 + 26) / 114][Stage 77:==============================================>       (98 + 16) / 114][Stage 77:===================================================>  (108 + 6) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.20334347 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401195241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:==================================>                   (75 + 43) / 118][Stage 78:===========================================>          (94 + 24) / 118][Stage 78:==================================================>   (110 + 8) / 118]                                                                                [Stage 79:==================================>                   (76 + 43) / 119][Stage 79:=======================================>              (87 + 32) / 119][Stage 79:============================================>        (101 + 18) / 119][Stage 79:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.026326131 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407062159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (60 + 53) / 113][Stage 80:==============================>                       (64 + 49) / 113][Stage 80:==========================================>           (89 + 24) / 113][Stage 80:==================================================>   (106 + 7) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:==============================>                       (64 + 50) / 114][Stage 81:=====================================>                (80 + 34) / 114][Stage 81:==============================================>      (101 + 13) / 114][Stage 81:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.26541716 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412202015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=============================>                        (61 + 52) / 113][Stage 82:=================================>                    (71 + 42) / 113][Stage 82:==========================================>           (88 + 25) / 113][Stage 82:====================================================> (109 + 4) / 113]                                                                                [Stage 83:=============================>                        (63 + 51) / 114][Stage 83:====================================>                 (77 + 37) / 114][Stage 83:=============================================>        (96 + 18) / 114][Stage 83:====================================================> (111 + 3) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.16152549 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372959311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 40) / 113][Stage 84:=========================================>            (86 + 27) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:====================================>                 (76 + 38) / 114][Stage 85:==========================================>           (90 + 24) / 114][Stage 85:=============================================>        (97 + 17) / 114][Stage 85:=================================================>    (105 + 9) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.040171385 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427601863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (63 + 58) / 121][Stage 86:===================================>                  (80 + 41) / 121][Stage 86:=============================================>       (103 + 18) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:==============================>                       (69 + 53) / 122][Stage 87:===================================>                  (80 + 42) / 122][Stage 87:===============================================>     (110 + 12) / 122][Stage 87:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.11588114 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469067912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:========================================>             (87 + 28) / 115][Stage 88:============================================>         (95 + 20) / 115][Stage 88:================================================>    (105 + 10) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:=======================================>              (84 + 32) / 116][Stage 89:==========================================>           (92 + 24) / 116][Stage 89:==================================================>   (109 + 7) / 116][Stage 89:===================================================>  (111 + 5) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.887813281 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374869116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=======================================>              (83 + 30) / 113][Stage 90:===========================================>          (92 + 21) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:====================================================> (109 + 4) / 113]                                                                                [Stage 91:===================================>                  (74 + 40) / 114][Stage 91:========================================>             (86 + 28) / 114][Stage 91:==============================================>       (98 + 16) / 114][Stage 91:===================================================>  (109 + 5) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.987982432 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435140884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:=============================>                        (65 + 56) / 121][Stage 92:===================================>                  (79 + 42) / 121][Stage 92:============================================>        (102 + 19) / 121][Stage 92:====================================================> (117 + 4) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:================================>                     (73 + 49) / 122][Stage 93:========================================>             (91 + 31) / 122][Stage 93:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.361279779 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426198057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:===============================>                      (71 + 49) / 120][Stage 94:====================================>                 (81 + 39) / 120][Stage 94:==============================================>      (106 + 14) / 120][Stage 94:=====================================================>(119 + 1) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:===============================>                      (70 + 51) / 121][Stage 95:=========================================>            (94 + 27) / 121][Stage 95:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.960149579 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419699575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:============================>                         (64 + 56) / 120][Stage 96:=====================================>                (83 + 37) / 120][Stage 96:==============================================>      (106 + 14) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:============================>                         (63 + 58) / 121][Stage 97:===================================>                  (80 + 41) / 121][Stage 97:=============================================>       (103 + 18) / 121][Stage 97:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.398277448 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399160531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:===============================>                      (65 + 48) / 113][Stage 98:=======================================>              (83 + 30) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:===================================>                  (74 + 40) / 114][Stage 99:===========================================>          (91 + 23) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.048799291 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387459094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (77 + 41) / 118][Stage 100:========================================>            (91 + 27) / 118][Stage 100:============================================>        (99 + 19) / 118][Stage 100:==================================================>  (112 + 6) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:====================================>                (83 + 36) / 119][Stage 101:===========================================>         (97 + 22) / 119][Stage 101:==================================================>  (113 + 6) / 119][Stage 101:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.285493249 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400301034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=============================>                       (64 + 51) / 115][Stage 102:================================>                    (70 + 45) / 115][Stage 102:======================================>              (83 + 32) / 115][Stage 102:==========================================>          (93 + 22) / 115][Stage 102:===================================================> (111 + 4) / 115]                                                                                [Stage 103:===================================>                 (77 + 39) / 116][Stage 103:========================================>            (88 + 28) / 116][Stage 103:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.848626798 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371590323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (74 + 39) / 113][Stage 104:=======================================>             (84 + 29) / 113][Stage 104:============================================>        (95 + 18) / 113][Stage 104:==================================================>  (107 + 6) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:==================================>                  (75 + 39) / 114][Stage 105:========================================>            (88 + 26) / 114][Stage 105:==============================================>      (99 + 15) / 114][Stage 105:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.803206673 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375505675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:======================================>              (84 + 31) / 115][Stage 106:==========================================>          (93 + 22) / 115][Stage 106:===============================================>    (104 + 11) / 115][Stage 106:===================================================> (112 + 3) / 115]                                                                                [Stage 107:=======================================>             (86 + 30) / 116][Stage 107:=============================================>      (101 + 15) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.888867818 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397788744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:===================================>                 (78 + 40) / 118][Stage 108:=====================================>               (84 + 34) / 118][Stage 108:============================================>       (101 + 17) / 118][Stage 108:=================================================>   (110 + 8) / 118]                                                                                [Stage 109:================================>                    (73 + 46) / 119][Stage 109:==================================>                  (78 + 41) / 119][Stage 109:=========================================>           (94 + 25) / 119][Stage 109:=============================================>      (105 + 14) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.289070907 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386915529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:=================================>                   (75 + 43) / 118][Stage 110:====================================>                (82 + 36) / 118][Stage 110:===========================================>         (96 + 22) / 118][Stage 110:==================================================>  (112 + 6) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:==================================>                  (78 + 41) / 119][Stage 111:========================================>            (92 + 27) / 119][Stage 111:=============================================>      (105 + 14) / 119][Stage 111:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.302704306 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410008762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (61 + 60) / 121][Stage 112:===============================>                     (72 + 49) / 121][Stage 112:=========================================>           (95 + 26) / 121][Stage 112:==================================================>  (115 + 6) / 121][Stage 112:====================================================>(120 + 1) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:===========================>                         (63 + 59) / 122][Stage 113:=================================>                   (77 + 45) / 122][Stage 113:============================================>       (104 + 18) / 122]                                                                                Time elapsed: 3.102549358 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385097743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (74 + 41) / 115][Stage 114:=======================================>             (85 + 30) / 115][Stage 114:=============================================>      (100 + 15) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:====================================>                (80 + 36) / 116][Stage 115:============================================>       (100 + 16) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.639847569 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396073157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:==================================>                  (76 + 42) / 118][Stage 116:======================================>              (85 + 33) / 118][Stage 116:=============================================>      (103 + 15) / 118][Stage 116:===================================================> (115 + 3) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:==================================>                  (77 + 42) / 119][Stage 117:========================================>            (92 + 27) / 119][Stage 117:===============================================>    (109 + 10) / 119][Stage 117:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.033382175 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398248864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:==============================>                      (64 + 49) / 113][Stage 118:=====================================>               (81 + 32) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:===================================================> (110 + 3) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:===============================>                     (68 + 46) / 114][Stage 119:=======================================>             (85 + 29) / 114][Stage 119:================================================>    (105 + 9) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.320328549 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403342499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:=============================>                       (67 + 53) / 120][Stage 120:=====================================>               (84 + 36) / 120][Stage 120:==============================================>     (108 + 12) / 120][Stage 120:====================================================>(118 + 2) / 120]                                                                                [Stage 121:============================>                        (65 + 56) / 121][Stage 121:==================================>                  (78 + 43) / 121][Stage 121:==========================================>          (97 + 24) / 121][Stage 121:==================================================>  (115 + 6) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.349518276 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337566753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (82 + 33) / 115][Stage 122:========================================>            (88 + 27) / 115][Stage 122:===============================================>    (104 + 11) / 115][Stage 122:===================================================> (111 + 4) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:======================================>              (84 + 32) / 116][Stage 123:=========================================>           (90 + 26) / 116][Stage 123:============================================>        (98 + 18) / 116][Stage 123:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.855507371 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3844863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:=================================>                   (72 + 41) / 113][Stage 124:=========================================>           (88 + 25) / 113][Stage 124:=================================================>   (105 + 8) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:==============================>                      (66 + 48) / 114][Stage 125:=========================================>           (89 + 25) / 114][Stage 125:=================================================>   (106 + 8) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.094739995 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395291853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===================================>                 (76 + 39) / 115][Stage 126:==========================================>          (93 + 22) / 115][Stage 126:==============================================>     (103 + 12) / 115][Stage 126:==================================================>  (109 + 6) / 115][Stage 126:====================================================>(113 + 2) / 115]                                                                                [Stage 127:===============================>                     (69 + 47) / 116][Stage 127:=====================================>               (83 + 33) / 116][Stage 127:===========================================>         (95 + 21) / 116][Stage 127:===============================================>    (105 + 11) / 116][Stage 127:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.199441158 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386662185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:=================================>                   (75 + 43) / 118][Stage 128:==========================================>          (95 + 23) / 118][Stage 128:===============================================>    (107 + 11) / 118][Stage 128:====================================================>(117 + 1) / 118]                                                                                [Stage 129:================================>                    (74 + 45) / 119][Stage 129:======================================>              (86 + 33) / 119][Stage 129:===========================================>        (100 + 19) / 119][Stage 129:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.154434134 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410990561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:============================>                        (64 + 57) / 121][Stage 130:====================================>                (83 + 38) / 121][Stage 130:=============================================>      (106 + 15) / 121][Stage 130:====================================================>(119 + 2) / 121]                                                                                [Stage 131:===========================>                         (64 + 58) / 122][Stage 131:==============================>                      (71 + 51) / 122][Stage 131:======================================>              (89 + 33) / 122][Stage 131:==============================================>     (109 + 13) / 122][Stage 131:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.306177364 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372634581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===============================>                     (69 + 46) / 115][Stage 132:====================================>                (79 + 36) / 115][Stage 132:============================================>        (96 + 19) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:===================================================> (112 + 3) / 115]                                                                                [Stage 133:===============================>                     (70 + 46) / 116][Stage 133:=====================================>               (81 + 35) / 116][Stage 133:===========================================>         (96 + 20) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:===================================================> (113 + 3) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.920879075 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351502395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 34) / 115][Stage 134:============================================>        (96 + 19) / 115][Stage 134:================================================>    (106 + 9) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:=====================================>               (82 + 34) / 116][Stage 135:=======================================>             (87 + 29) / 116][Stage 135:=============================================>       (99 + 17) / 116][Stage 135:==================================================>  (110 + 6) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.946020975 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395696132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:==============================>                      (68 + 52) / 120][Stage 136:====================================>                (82 + 38) / 120][Stage 136:=============================================>      (105 + 15) / 120][Stage 136:===================================================> (117 + 3) / 120]                                                                                [Stage 137:=============================>                       (67 + 54) / 121][Stage 137:=================================>                   (76 + 45) / 121][Stage 137:========================================>            (93 + 28) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.292723371 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36950723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=================================>                   (73 + 42) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:=============================================>      (100 + 15) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:===============================>                     (69 + 47) / 116][Stage 139:=======================================>             (86 + 30) / 116][Stage 139:============================================>       (100 + 16) / 116][Stage 139:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.659775939 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388394888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:============================>                        (60 + 53) / 113][Stage 140:===============================>                     (68 + 45) / 113][Stage 140:==========================================>          (91 + 22) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:===================================>                 (77 + 37) / 114][Stage 141:==============================================>      (99 + 15) / 114][Stage 141:===================================================> (110 + 4) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.211777673 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398219639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:============================>                        (65 + 56) / 121][Stage 142:=====================================>               (86 + 35) / 121][Stage 142:==============================================>     (108 + 13) / 121][Stage 142:===================================================> (118 + 3) / 121]                                                                                [Stage 143:===========================>                         (64 + 58) / 122][Stage 143:=================================>                   (78 + 44) / 122][Stage 143:==========================================>          (98 + 24) / 122][Stage 143:=================================================>   (113 + 9) / 122][Stage 143:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.249097726 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336063625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:========================================>            (88 + 27) / 115][Stage 144:==============================================>     (102 + 13) / 115][Stage 144:===================================================> (112 + 3) / 115]                                                                                [Stage 145:=======================================>             (86 + 30) / 116][Stage 145:==========================================>          (92 + 24) / 116][Stage 145:================================================>    (107 + 9) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.74946043 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399628342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (67 + 53) / 120][Stage 146:===================================>                 (81 + 39) / 120][Stage 146:===========================================>        (100 + 20) / 120][Stage 146:===================================================> (117 + 3) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:===============================>                     (72 + 49) / 121][Stage 147:=======================================>             (90 + 31) / 121][Stage 147:============================================>       (103 + 18) / 121][Stage 147:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.350495503 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351696654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (71 + 42) / 113][Stage 148:========================================>            (87 + 26) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:==================================================>  (107 + 6) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===================================>                 (77 + 37) / 114][Stage 149:========================================>            (88 + 26) / 114][Stage 149:============================================>        (96 + 18) / 114][Stage 149:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.855558996 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335076969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (82 + 33) / 115][Stage 150:==========================================>          (92 + 23) / 115][Stage 150:=================================================>   (107 + 8) / 115][Stage 150:===================================================> (112 + 3) / 115]                                                                                [Stage 151:=======================================>             (87 + 29) / 116][Stage 151:============================================>       (100 + 16) / 116][Stage 151:===================================================> (112 + 4) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.941453229 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381751951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=============================>                       (65 + 50) / 115][Stage 152:==================================>                  (75 + 40) / 115][Stage 152:==========================================>          (92 + 23) / 115][Stage 152:==============================================>     (102 + 13) / 115][Stage 152:===================================================> (112 + 3) / 115]                                                                                [Stage 153:================================>                    (72 + 44) / 116][Stage 153:======================================>              (85 + 31) / 116][Stage 153:===========================================>         (95 + 21) / 116][Stage 153:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.848063618 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395962485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:==============================>                      (68 + 52) / 120][Stage 154:====================================>                (83 + 37) / 120][Stage 154:===============================================>    (109 + 11) / 120]                                                                                [Stage 155:===========================>                         (62 + 59) / 121][Stage 155:===============================>                     (71 + 50) / 121][Stage 155:======================================>              (89 + 32) / 121][Stage 155:===============================================>    (111 + 10) / 121][Stage 155:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.141820519 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351097889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:======================================>              (82 + 31) / 113][Stage 156:===========================================>         (93 + 20) / 113][Stage 156:==============================================>     (100 + 13) / 113][Stage 156:===================================================> (109 + 4) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:====================================>                (79 + 35) / 114][Stage 157:=========================================>           (89 + 25) / 114][Stage 157:=============================================>      (100 + 14) / 114][Stage 157:==================================================>  (108 + 6) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.178007194 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370265744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (73 + 42) / 115][Stage 158:=======================================>             (85 + 30) / 115][Stage 158:============================================>        (97 + 18) / 115][Stage 158:==================================================>  (109 + 6) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:====================================>                (80 + 36) / 116][Stage 159:==========================================>          (93 + 23) / 116][Stage 159:==============================================>     (104 + 12) / 116][Stage 159:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.123352695 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362667014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:===================================>                 (80 + 38) / 118][Stage 160:=========================================>           (93 + 25) / 118][Stage 160:==============================================>     (106 + 12) / 118][Stage 160:==================================================>  (113 + 5) / 118]                                                                                [Stage 161:==================================>                  (77 + 42) / 119][Stage 161:=======================================>             (89 + 30) / 119][Stage 161:=============================================>      (105 + 14) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.08240285 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405428159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:=============================>                       (67 + 54) / 121][Stage 162:======================================>              (88 + 33) / 121][Stage 162:==================================================>  (115 + 6) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:=============================>                       (67 + 55) / 122][Stage 163:========================================>            (93 + 29) / 122][Stage 163:=================================================>   (114 + 8) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.208384234 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348238656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (80 + 33) / 113][Stage 164:=========================================>           (88 + 25) / 113][Stage 164:=============================================>       (98 + 15) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:==================================>                  (75 + 39) / 114][Stage 165:=======================================>             (84 + 30) / 114][Stage 165:============================================>        (96 + 18) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:===================================================> (111 + 3) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.340868504 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382265187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (65 + 48) / 113][Stage 166:======================================>              (83 + 30) / 113][Stage 166:==============================================>     (102 + 11) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:============================>                        (61 + 53) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:===========================================>         (93 + 21) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.434855383 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373675213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (73 + 45) / 118][Stage 168:==================================>                  (77 + 41) / 118][Stage 168:=========================================>           (92 + 26) / 118][Stage 168:==============================================>     (106 + 12) / 118][Stage 168:====================================================>(117 + 1) / 118]                                                                                [Stage 169:================================>                    (73 + 46) / 119][Stage 169:===================================>                 (79 + 40) / 119][Stage 169:=======================================>             (89 + 30) / 119][Stage 169:===========================================>         (98 + 21) / 119][Stage 169:================================================>    (110 + 9) / 119][Stage 169:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.514052683 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361337885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:=================================>                   (74 + 44) / 118][Stage 170:===================================>                 (80 + 38) / 118][Stage 170:===========================================>         (97 + 21) / 118][Stage 170:=================================================>   (111 + 7) / 118][Stage 170:====================================================>(117 + 1) / 118]                                                                                [Stage 171:================================>                    (73 + 46) / 119][Stage 171:=================================>                   (75 + 44) / 119][Stage 171:====================================>                (81 + 38) / 119][Stage 171:===========================================>         (98 + 21) / 119][Stage 171:==============================================>     (106 + 13) / 119][Stage 171:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.395025913 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337465991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (81 + 34) / 115][Stage 172:==========================================>          (92 + 23) / 115][Stage 172:=============================================>      (101 + 14) / 115][Stage 172:==================================================>  (110 + 5) / 115]                                                                                [Stage 173:=======================================>             (86 + 30) / 116][Stage 173:===========================================>         (95 + 21) / 116][Stage 173:===============================================>    (106 + 10) / 116][Stage 173:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.800750559 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396950281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:============================>                        (64 + 56) / 120][Stage 174:==================================>                  (78 + 42) / 120][Stage 174:=============================================>      (104 + 16) / 120][Stage 174:====================================================>(119 + 1) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:===============================>                     (71 + 50) / 121][Stage 175:======================================>              (89 + 32) / 121][Stage 175:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.968000123 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352778449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:>                                                      (0 + 0) / 113][Stage 176:====================================>                (77 + 36) / 113][Stage 176:========================================>            (87 + 26) / 113][Stage 176:===========================================>         (93 + 20) / 113][Stage 176:=================================================>   (105 + 8) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:=======================================>             (85 + 29) / 114][Stage 177:===========================================>         (93 + 21) / 114][Stage 177:==============================================>     (102 + 12) / 114][Stage 177:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.100864292 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397740063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (61 + 59) / 120][Stage 178:=================================>                   (75 + 45) / 120][Stage 178:========================================>            (92 + 28) / 120][Stage 178:===================================================> (116 + 4) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:=============================>                       (68 + 53) / 121][Stage 179:==================================>                  (78 + 43) / 121][Stage 179:=============================================>      (106 + 15) / 121][Stage 179:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.962506811 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=32", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=32,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372040762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (70 + 45) / 115][Stage 180:======================================>              (83 + 32) / 115][Stage 180:=============================================>       (99 + 16) / 115][Stage 180:==================================================>  (110 + 5) / 115]                                                                                [Stage 181:=================================>                   (74 + 42) / 116][Stage 181:======================================>              (84 + 32) / 116][Stage 181:===============================================>    (105 + 11) / 116][Stage 181:===================================================> (112 + 4) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.54677663 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384486071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===================================>                 (76 + 37) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:=============================================>       (96 + 17) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:=======================================>             (84 + 30) / 114][Stage 183:==========================================>          (92 + 22) / 114][Stage 183:=================================================>   (106 + 8) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.137359876 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435016305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:============================>                        (65 + 55) / 120][Stage 184:==================================>                  (79 + 41) / 120][Stage 184:=========================================>           (94 + 26) / 120][Stage 184:=================================================>   (113 + 7) / 120]                                                                                [Stage 185:============================>                        (65 + 56) / 121][Stage 185:==================================>                  (79 + 42) / 121][Stage 185:==========================================>          (98 + 23) / 121][Stage 185:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.196491359 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362403983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (73 + 45) / 118][Stage 186:====================================>                (82 + 36) / 118][Stage 186:========================================>            (91 + 27) / 118][Stage 186:==============================================>     (105 + 13) / 118][Stage 186:===================================================> (115 + 3) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:=================================>                   (76 + 43) / 119][Stage 187:=======================================>             (88 + 31) / 119][Stage 187:===========================================>        (100 + 19) / 119][Stage 187:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.26284069 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403591181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:============================>                        (64 + 56) / 120][Stage 188:==================================>                  (78 + 42) / 120][Stage 188:===========================================>        (101 + 19) / 120][Stage 188:===================================================> (117 + 3) / 120]                                                                                [Stage 189:============================>                        (64 + 57) / 121][Stage 189:=================================>                   (76 + 45) / 121][Stage 189:==========================================>          (98 + 23) / 121][Stage 189:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.040103642 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363316506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:===================================>                 (80 + 38) / 118][Stage 190:======================================>              (85 + 33) / 118][Stage 190:============================================>        (99 + 19) / 118][Stage 190:==================================================>  (113 + 5) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:==================================>                  (77 + 42) / 119][Stage 191:==========================================>          (96 + 23) / 119][Stage 191:=============================================>      (105 + 14) / 119][Stage 191:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.373272665 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334817715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (84 + 31) / 115][Stage 192:============================================>        (96 + 19) / 115][Stage 192:==================================================>  (109 + 6) / 115]                                                                                [Stage 193:=====================================>               (83 + 33) / 116][Stage 193:==========================================>          (92 + 24) / 116][Stage 193:===============================================>    (105 + 11) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.833397512 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409053981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:==============================>                      (65 + 48) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:==============================================>     (101 + 12) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:=============================>                       (64 + 50) / 114][Stage 195:==================================>                  (75 + 39) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.257588806 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4089753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (61 + 60) / 121][Stage 196:===============================>                     (73 + 48) / 121][Stage 196:==========================================>          (96 + 25) / 121][Stage 196:=================================================>   (113 + 8) / 121]                                                                                [Stage 197:===========================>                         (64 + 58) / 122][Stage 197:=================================>                   (76 + 46) / 122][Stage 197:========================================>            (93 + 29) / 122][Stage 197:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.063311889 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391925353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (65 + 48) / 113][Stage 198:========================================>            (87 + 26) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:================================>                    (69 + 45) / 114][Stage 199:========================================>            (88 + 26) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.18702674 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356651636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (80 + 33) / 113][Stage 200:===========================================>         (93 + 20) / 113][Stage 200:================================================>    (104 + 9) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:===================================>                 (76 + 38) / 114][Stage 201:========================================>            (88 + 26) / 114][Stage 201:===========================================>         (94 + 20) / 114][Stage 201:==================================================>  (109 + 5) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.953819376 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m0.399s
user	11m43.208s
sys	0m35.804s
