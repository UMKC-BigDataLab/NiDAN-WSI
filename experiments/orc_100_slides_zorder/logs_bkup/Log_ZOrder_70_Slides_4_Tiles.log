Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 09:33:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:33:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:33:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:33:34 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 09:33:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:33:47 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522093336-0442).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.415184512 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:========================>                              (51 + 65) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.418486731 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605394729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================================>                      (68 + 47) / 115][Stage 2:===================================>                   (75 + 40) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:============================================>          (93 + 22) / 115][Stage 2:==============================================>       (100 + 15) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:==================================================>    (106 + 9) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:======================================>                (82 + 34) / 116][Stage 3:========================================>              (86 + 30) / 116][Stage 3:===========================================>           (92 + 24) / 116][Stage 3:=============================================>         (97 + 19) / 116][Stage 3:===============================================>      (103 + 13) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:=====================================================> (113 + 3) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.966871043 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.755002032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:======================>                                (49 + 72) / 121][Stage 4:===========================>                           (60 + 61) / 121][Stage 4:============================>                          (62 + 59) / 121][Stage 4:==============================>                        (68 + 53) / 121][Stage 4:==================================>                    (75 + 46) / 121][Stage 4:==========================================>            (94 + 27) / 121][Stage 4:==============================================>       (104 + 17) / 121][Stage 4:====================================================>  (115 + 6) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:===========================>                           (62 + 60) / 122][Stage 5:===============================>                       (70 + 52) / 122][Stage 5:=======================================>               (87 + 35) / 122][Stage 5:===========================================>           (96 + 26) / 122][Stage 5:=================================================>    (111 + 11) / 122][Stage 5:===================================================>   (115 + 7) / 122][Stage 5:=====================================================> (118 + 4) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.195577859 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.828324589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (59 + 61) / 120][Stage 6:===========================>                           (60 + 60) / 120][Stage 6:============================>                          (62 + 58) / 120][Stage 6:=================================>                     (73 + 47) / 120][Stage 6:=========================================>             (90 + 30) / 120][Stage 6:===============================================>      (106 + 14) / 120][Stage 6:====================================================>  (115 + 5) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:=============================>                         (65 + 56) / 121][Stage 7:===================================>                   (79 + 42) / 121][Stage 7:==========================================>            (94 + 27) / 121][Stage 7:================================================>     (109 + 12) / 121][Stage 7:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.466149222 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.635061978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:==============================>                        (66 + 55) / 121][Stage 8:===================================>                   (77 + 44) / 121][Stage 8:============================================>         (100 + 21) / 121][Stage 8:====================================================>  (116 + 5) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:===========================>                           (62 + 60) / 122][Stage 9:==============================>                        (67 + 55) / 122][Stage 9:====================================>                  (80 + 42) / 122][Stage 9:============================================>         (101 + 21) / 122][Stage 9:=================================================>    (112 + 10) / 122][Stage 9:====================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.304511624 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561025059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (71 + 42) / 113][Stage 10:====================================>                 (76 + 37) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:==================================>                   (72 + 42) / 114][Stage 11:=======================================>              (83 + 31) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.045284078 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596530343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (58 + 63) / 121][Stage 12:==========================>                           (60 + 61) / 121][Stage 12:===============================>                      (70 + 51) / 121][Stage 12:=======================================>              (88 + 33) / 121][Stage 12:============================================>        (101 + 20) / 121][Stage 12:===============================================>     (109 + 12) / 121][Stage 12:====================================================> (118 + 3) / 121]                                                                                [Stage 13:===========================>                          (62 + 60) / 122][Stage 13:==============================>                       (69 + 53) / 122][Stage 13:======================================>               (88 + 34) / 122][Stage 13:=============================================>       (104 + 18) / 122][Stage 13:==================================================>   (113 + 9) / 122][Stage 13:====================================================> (118 + 4) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.448332369 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506473157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=============================>                        (63 + 52) / 115][Stage 14:================================>                     (70 + 45) / 115][Stage 14:=====================================>                (79 + 36) / 115][Stage 14:========================================>             (87 + 28) / 115][Stage 14:============================================>         (95 + 20) / 115][Stage 14:==================================================>   (107 + 8) / 115]                                                                                [Stage 15:===================================>                  (76 + 40) / 116][Stage 15:===========================================>          (94 + 22) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:===================================================>  (111 + 5) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.571086936 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499484436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (70 + 48) / 118][Stage 16:==================================>                   (75 + 43) / 118][Stage 16:========================================>             (89 + 29) / 118][Stage 16:============================================>         (97 + 21) / 118][Stage 16:===============================================>     (106 + 12) / 118][Stage 16:===================================================>  (113 + 5) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:======================================>               (85 + 34) / 119][Stage 17:============================================>        (101 + 18) / 119][Stage 17:================================================>    (109 + 10) / 119][Stage 17:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.758002709 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475615526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (64 + 49) / 113][Stage 18:=====================================>                (78 + 35) / 113][Stage 18:=============================================>        (95 + 18) / 113][Stage 18:==================================================>   (105 + 8) / 113][Stage 18:=====================================================>(111 + 2) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:=================================>                    (71 + 43) / 114][Stage 19:=====================================>                (79 + 35) / 114][Stage 19:=========================================>            (88 + 26) / 114][Stage 19:==============================================>      (101 + 13) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.47094458 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454905604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=====================================>                (80 + 35) / 115][Stage 20:=======================================>              (85 + 30) / 115][Stage 20:==============================================>       (99 + 16) / 115][Stage 20:==================================================>   (108 + 7) / 115][Stage 20:====================================================> (112 + 3) / 115][Stage 20:=====================================================>(113 + 2) / 115]                                                                                [Stage 21:========================================>             (86 + 30) / 116][Stage 21:===============================================>     (103 + 13) / 116][Stage 21:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.115072028 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502044844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===============================>                      (67 + 48) / 115][Stage 22:==================================>                   (73 + 42) / 115][Stage 22:==========================================>           (91 + 24) / 115][Stage 22:==============================================>       (99 + 16) / 115][Stage 22:====================================================> (111 + 4) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:================================>                     (70 + 46) / 116][Stage 23:=====================================>                (80 + 36) / 116][Stage 23:=============================================>        (98 + 18) / 116][Stage 23:=================================================>    (107 + 9) / 116][Stage 23:====================================================> (112 + 4) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.721159499 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442243688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=====================================>                (80 + 35) / 115][Stage 24:==========================================>           (91 + 24) / 115][Stage 24:==============================================>       (99 + 16) / 115][Stage 24:==================================================>   (108 + 7) / 115]                                                                                [Stage 25:=======================================>              (84 + 32) / 116][Stage 25:=============================================>        (97 + 19) / 116][Stage 25:=================================================>    (107 + 9) / 116][Stage 25:===================================================>  (110 + 6) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.857011881 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547194918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:=============================>                        (66 + 54) / 120][Stage 26:=====================================>                (83 + 37) / 120][Stage 26:===========================================>          (96 + 24) / 120][Stage 26:=============================================>       (104 + 16) / 120][Stage 26:==================================================>   (113 + 7) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:============================>                         (63 + 58) / 121][Stage 27:=================================>                    (76 + 45) / 121][Stage 27:========================================>             (91 + 30) / 121][Stage 27:=================================================>    (112 + 9) / 121][Stage 27:===================================================>  (116 + 5) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.997384795 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483061808 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:======================================>               (80 + 33) / 113][Stage 28:==============================================>       (97 + 16) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:=============================>                        (62 + 52) / 114][Stage 29:===================================>                  (75 + 39) / 114][Stage 29:==========================================>           (90 + 24) / 114][Stage 29:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.478124901 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524022809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:============================>                         (64 + 56) / 120][Stage 30:======================================>               (85 + 35) / 120][Stage 30:==============================================>      (105 + 15) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:=================================>                    (74 + 47) / 121][Stage 31:=======================================>              (89 + 32) / 121][Stage 31:==============================================>      (107 + 14) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.399144387 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432368758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (71 + 42) / 113][Stage 32:=====================================>                (79 + 34) / 113][Stage 32:=========================================>            (87 + 26) / 113][Stage 32:============================================>         (94 + 19) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:=======================================>              (83 + 31) / 114][Stage 33:===========================================>          (91 + 23) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:=====================================================>(112 + 2) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.409616557 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468010283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=======================================>              (85 + 30) / 115][Stage 34:============================================>         (94 + 21) / 115][Stage 34:===================================================>  (110 + 5) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:==========================================>           (92 + 24) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:====================================================> (113 + 3) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101587008 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.597816527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=================================>                    (75 + 45) / 120][Stage 36:===========================================>          (96 + 24) / 120][Stage 36:====================================================> (116 + 4) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:============================>                         (64 + 57) / 121][Stage 37:==================================>                   (78 + 43) / 121][Stage 37:=============================================>       (103 + 18) / 121][Stage 37:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.422186955 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456060668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==================================>                   (72 + 41) / 113][Stage 38:========================================>             (85 + 28) / 113][Stage 38:==============================================>       (98 + 15) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=====================================>                (79 + 35) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:================================================>    (104 + 10) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.893800614 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407197704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:>                                                       (0 + 0) / 115][Stage 40:======================================>               (82 + 33) / 115][Stage 40:=========================================>            (88 + 27) / 115][Stage 40:==============================================>      (101 + 14) / 115][Stage 40:===================================================>  (110 + 5) / 115][Stage 40:====================================================> (111 + 4) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:======================================>               (82 + 34) / 116][Stage 41:=========================================>            (90 + 26) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.246602276 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443815432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:====================================>                 (79 + 39) / 118][Stage 42:===========================================>          (94 + 24) / 118][Stage 42:===============================================>     (106 + 12) / 118][Stage 42:=====================================================>(116 + 2) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:==================================>                   (76 + 43) / 119][Stage 43:===========================================>          (96 + 23) / 119][Stage 43:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.357183382 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510508568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (62 + 58) / 120][Stage 44:================================>                     (72 + 48) / 120][Stage 44:=========================================>            (93 + 27) / 120][Stage 44:===================================================>  (115 + 5) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:===============================>                      (70 + 51) / 121][Stage 45:=======================================>              (88 + 33) / 121][Stage 45:==================================================>   (113 + 8) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.635036824 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452723238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:===============================>                      (65 + 48) / 113][Stage 46:===================================>                  (75 + 38) / 113][Stage 46:===========================================>          (92 + 21) / 113][Stage 46:===================================================>  (107 + 6) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:=============================>                        (63 + 51) / 114][Stage 47:======================================>               (81 + 33) / 114][Stage 47:===========================================>          (92 + 22) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:===================================================>  (109 + 5) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.407228666 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448153944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 42) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:===============================================>     (103 + 12) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:=================================>                    (72 + 44) / 116][Stage 49:========================================>             (87 + 29) / 116][Stage 49:===============================================>     (103 + 13) / 116][Stage 49:===================================================>  (111 + 5) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.91338131 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461147122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (73 + 45) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:========================================>             (89 + 29) / 118][Stage 50:===============================================>     (105 + 13) / 118][Stage 50:====================================================> (114 + 4) / 118]                                                                                [Stage 51:=================================>                    (74 + 45) / 119][Stage 51:==================================>                   (76 + 43) / 119][Stage 51:=======================================>              (88 + 31) / 119][Stage 51:============================================>         (99 + 20) / 119][Stage 51:=================================================>    (110 + 9) / 119][Stage 51:=====================================================>(117 + 2) / 119][Stage 51:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.957381296 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523984149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:=================================>                    (74 + 44) / 118][Stage 52:======================================>               (85 + 33) / 118][Stage 52:=============================================>       (102 + 16) / 118][Stage 52:===================================================>  (113 + 5) / 118][Stage 52:=====================================================>(117 + 1) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:===================================>                  (78 + 41) / 119][Stage 53:=======================================>              (87 + 32) / 119][Stage 53:================================================>    (108 + 11) / 119][Stage 53:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.417735001 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432254737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (74 + 44) / 118][Stage 54:=====================================>                (83 + 35) / 118][Stage 54:==========================================>           (92 + 26) / 118][Stage 54:=============================================>        (99 + 19) / 118][Stage 54:==================================================>   (111 + 7) / 118][Stage 54:=====================================================>(116 + 2) / 118]                                                                                [Stage 55:=================================>                    (73 + 46) / 119][Stage 55:==================================>                   (77 + 42) / 119][Stage 55:=====================================>                (83 + 36) / 119][Stage 55:===========================================>          (96 + 23) / 119][Stage 55:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.559219739 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422294228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==================================>                   (73 + 42) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:===============================================>     (103 + 12) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:================================>                     (69 + 47) / 116][Stage 57:==================================>                   (75 + 41) / 116][Stage 57:=========================================>            (90 + 26) / 116][Stage 57:===================================================>  (110 + 6) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.850109263 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454353303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (62 + 59) / 121][Stage 58:====================================>                 (82 + 39) / 121][Stage 58:==============================================>      (107 + 14) / 121][Stage 58:====================================================> (117 + 4) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:==============================>                       (70 + 52) / 122][Stage 59:====================================>                 (82 + 40) / 122][Stage 59:==============================================>      (106 + 16) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.445214422 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432746319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=====================================>                (82 + 36) / 118][Stage 60:============================================>        (100 + 18) / 118][Stage 60:====================================================> (114 + 4) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:====================================>                 (81 + 38) / 119][Stage 61:=============================================>       (102 + 17) / 119][Stage 61:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.080889205 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41650687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==============================>                       (66 + 49) / 115][Stage 62:====================================>                 (78 + 37) / 115][Stage 62:=============================================>        (97 + 18) / 115][Stage 62:=================================================>    (106 + 9) / 115][Stage 62:====================================================> (111 + 4) / 115]                                                                                [Stage 63:==================================>                   (74 + 42) / 116][Stage 63:===========================================>          (93 + 23) / 116][Stage 63:=================================================>    (107 + 9) / 116][Stage 63:====================================================> (112 + 4) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.127734724 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427885184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===============================>                      (67 + 48) / 115][Stage 64:====================================>                 (77 + 38) / 115][Stage 64:==============================================>       (98 + 17) / 115][Stage 64:===================================================>  (109 + 6) / 115]                                                                                [Stage 65:=================================>                    (71 + 45) / 116][Stage 65:========================================>             (88 + 28) / 116][Stage 65:==============================================>      (102 + 14) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.073217323 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372493061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:>                                                       (0 + 0) / 115][Stage 66:======================================>               (83 + 32) / 115][Stage 66:=========================================>            (89 + 26) / 115][Stage 66:===============================================>     (103 + 12) / 115][Stage 66:====================================================> (112 + 3) / 115]                                                                                [Stage 67:========================================>             (88 + 28) / 116][Stage 67:===============================================>     (103 + 13) / 116][Stage 67:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.6935105 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42964671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:==============================>                       (64 + 49) / 113][Stage 68:=====================================>                (78 + 35) / 113][Stage 68:==============================================>      (100 + 13) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:=============================>                        (63 + 51) / 114][Stage 69:=========================================>            (88 + 26) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.549925751 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424304114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (73 + 45) / 118][Stage 70:==================================>                   (76 + 42) / 118][Stage 70:======================================>               (84 + 34) / 118][Stage 70:============================================>         (97 + 21) / 118][Stage 70:================================================>    (108 + 10) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (75 + 44) / 119][Stage 71:=====================================>                (82 + 37) / 119][Stage 71:=========================================>            (92 + 27) / 119][Stage 71:==================================================>   (112 + 7) / 119][Stage 71:====================================================> (116 + 3) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.965707119 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433468161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (71 + 44) / 115][Stage 72:======================================>               (83 + 32) / 115][Stage 72:===============================================>     (103 + 12) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:===================================>                  (77 + 39) / 116][Stage 73:==========================================>           (92 + 24) / 116][Stage 73:===============================================>     (105 + 11) / 116][Stage 73:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.026971086 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45663307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:==============================>                       (68 + 52) / 120][Stage 74:========================================>             (89 + 31) / 120][Stage 74:================================================>    (109 + 11) / 120]                                                                                [Stage 75:============================>                         (63 + 58) / 121][Stage 75:=================================>                    (75 + 46) / 121][Stage 75:============================================>        (101 + 20) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.419425866 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457108131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===============================>                      (70 + 50) / 120][Stage 76:===================================>                  (79 + 41) / 120][Stage 76:============================================>         (99 + 21) / 120][Stage 76:==================================================>   (112 + 8) / 120]                                                                                [Stage 77:============================>                         (63 + 58) / 121][Stage 77:=================================>                    (74 + 47) / 121][Stage 77:=========================================>            (92 + 29) / 121][Stage 77:====================================================> (118 + 3) / 121][Stage 77:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.759953791 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44660736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:=============================>                        (67 + 54) / 121][Stage 78:=======================================>              (88 + 33) / 121][Stage 78:==================================================>   (114 + 7) / 121][Stage 78:====================================================> (118 + 3) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (67 + 55) / 122][Stage 79:======================================>               (87 + 35) / 122][Stage 79:=============================================>       (105 + 17) / 122][Stage 79:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.350695542 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454009102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=======================================>              (85 + 30) / 115][Stage 80:=============================================>        (96 + 19) / 115][Stage 80:==================================================>   (108 + 7) / 115][Stage 80:====================================================> (112 + 3) / 115]                                                                                [Stage 81:========================================>             (86 + 30) / 116][Stage 81:==============================================>      (101 + 15) / 116][Stage 81:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.677559473 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414422684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:===============================>                      (66 + 47) / 113][Stage 82:========================================>             (84 + 29) / 113][Stage 82:===============================================>     (102 + 11) / 113]                                                                                [Stage 83:==============================>                       (64 + 50) / 114][Stage 83:==================================>                   (72 + 42) / 114][Stage 83:=========================================>            (88 + 26) / 114][Stage 83:==============================================>      (101 + 13) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.467772608 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419000479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:>                                                       (0 + 0) / 113][Stage 84:============================>                         (59 + 54) / 113][Stage 84:===============================>                      (66 + 47) / 113][Stage 84:=======================================>              (82 + 31) / 113][Stage 84:==============================================>      (100 + 13) / 113]                                                                                [Stage 85:=============================>                        (63 + 51) / 114][Stage 85:=====================================>                (80 + 34) / 114][Stage 85:=============================================>        (97 + 17) / 114][Stage 85:====================================================> (110 + 4) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.475310331 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38922771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (71 + 47) / 118][Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (79 + 39) / 118][Stage 86:==========================================>           (93 + 25) / 118][Stage 86:===================================================>  (112 + 6) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:=====================================>                (83 + 36) / 119][Stage 87:==========================================>           (94 + 25) / 119][Stage 87:================================================>    (109 + 10) / 119][Stage 87:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.311489746 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387571205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=================================>                    (74 + 44) / 118][Stage 88:====================================>                 (80 + 38) / 118][Stage 88:========================================>             (88 + 30) / 118][Stage 88:==============================================>      (104 + 14) / 118][Stage 88:=====================================================>(116 + 2) / 118]                                                                                [Stage 89:==================================>                   (77 + 42) / 119][Stage 89:===================================>                  (79 + 40) / 119][Stage 89:======================================>               (84 + 35) / 119][Stage 89:============================================>         (98 + 21) / 119][Stage 89:==================================================>   (111 + 8) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.636359766 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429457069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (61 + 60) / 121][Stage 90:===============================>                      (70 + 51) / 121][Stage 90:========================================>             (91 + 30) / 121][Stage 90:==================================================>   (114 + 7) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:==============================>                       (68 + 54) / 122][Stage 91:=======================================>              (90 + 32) / 122][Stage 91:================================================>    (111 + 11) / 122][Stage 91:=====================================================>(120 + 2) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.559264278 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355647371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=======================================>              (85 + 30) / 115][Stage 92:============================================>         (95 + 20) / 115][Stage 92:================================================>    (105 + 10) / 115][Stage 92:===================================================>  (110 + 5) / 115][Stage 92:====================================================> (112 + 3) / 115]                                                                                [Stage 93:==========================================>           (91 + 25) / 116][Stage 93:===============================================>     (105 + 11) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.872149028 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403422532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (70 + 45) / 115][Stage 94:======================================>               (83 + 32) / 115][Stage 94:==============================================>       (98 + 17) / 115][Stage 94:===================================================>  (109 + 6) / 115]                                                                                [Stage 95:====================================>                 (79 + 37) / 116][Stage 95:===========================================>          (93 + 23) / 116][Stage 95:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.691374453 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432752859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:============================>                         (64 + 56) / 120][Stage 96:====================================>                 (80 + 40) / 120][Stage 96:============================================>         (99 + 21) / 120][Stage 96:====================================================> (117 + 3) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:=============================>                        (66 + 55) / 121][Stage 97:=====================================>                (85 + 36) / 121][Stage 97:==============================================>      (106 + 15) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.379128265 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385509179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (73 + 42) / 115][Stage 98:=========================================>            (89 + 26) / 115][Stage 98:===============================================>     (102 + 13) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:=====================================>                (81 + 35) / 116][Stage 99:=============================================>       (100 + 16) / 116][Stage 99:===================================================>  (111 + 5) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.890535702 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37894206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (74 + 44) / 118][Stage 100:=================================>                   (75 + 43) / 118][Stage 100:=====================================>               (84 + 34) / 118][Stage 100:===========================================>         (97 + 21) / 118][Stage 100:===================================================> (114 + 4) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (72 + 47) / 119][Stage 101:================================>                    (74 + 45) / 119][Stage 101:===================================>                 (79 + 40) / 119][Stage 101:======================================>              (86 + 33) / 119][Stage 101:===============================================>    (108 + 11) / 119][Stage 101:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.733348872 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451695655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (76 + 37) / 113][Stage 102:========================================>            (87 + 26) / 113][Stage 102:=============================================>       (98 + 15) / 113][Stage 102:=================================================>   (106 + 7) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:====================================>                (78 + 36) / 114][Stage 103:========================================>            (88 + 26) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:==================================================>  (108 + 6) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.094914346 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3450027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:======================================>              (83 + 32) / 115][Stage 104:============================================>        (97 + 18) / 115][Stage 104:==================================================>  (110 + 5) / 115]                                                                                [Stage 105:======================================>              (85 + 31) / 116][Stage 105:============================================>        (98 + 18) / 116][Stage 105:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.556734475 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408923289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (70 + 45) / 115][Stage 106:======================================>              (83 + 32) / 115][Stage 106:=============================================>      (101 + 14) / 115][Stage 106:=================================================>   (107 + 8) / 115][Stage 106:===================================================> (111 + 4) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==============================>                      (67 + 49) / 116][Stage 107:===================================>                 (78 + 38) / 116][Stage 107:============================================>        (97 + 19) / 116][Stage 107:=============================================>      (101 + 15) / 116][Stage 107:==================================================>  (111 + 5) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.328995177 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426141999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:==========================>                          (61 + 59) / 120][Stage 108:==============================>                      (68 + 52) / 120][Stage 108:=======================================>             (89 + 31) / 120][Stage 108:==============================================>     (108 + 12) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:===============================>                     (71 + 50) / 121][Stage 109:========================================>            (92 + 29) / 121][Stage 109:===================================================> (117 + 4) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.563102988 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422186248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:==============================>                      (68 + 52) / 120][Stage 110:=====================================>               (86 + 34) / 120][Stage 110:===============================================>    (109 + 11) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:============================>                        (64 + 57) / 121][Stage 111:=====================================>               (85 + 36) / 121][Stage 111:============================================>       (103 + 18) / 121][Stage 111:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.143088987 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408421167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (63 + 57) / 120][Stage 112:==============================>                      (70 + 50) / 120][Stage 112:=========================================>           (94 + 26) / 120][Stage 112:=================================================>   (111 + 9) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:=================================>                   (76 + 45) / 121][Stage 113:========================================>            (93 + 28) / 121][Stage 113:=================================================>   (113 + 8) / 121][Stage 113:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.343175098 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384512596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (71 + 44) / 115][Stage 114:=======================================>             (86 + 29) / 115][Stage 114:=============================================>       (98 + 17) / 115][Stage 114:===================================================> (112 + 3) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:================================>                    (72 + 44) / 116][Stage 115:========================================>            (89 + 27) / 116][Stage 115:============================================>        (98 + 18) / 116][Stage 115:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.921706893 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377903317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==================================>                  (73 + 40) / 113][Stage 116:=======================================>             (85 + 28) / 113][Stage 116:============================================>        (95 + 18) / 113][Stage 116:==================================================>  (107 + 6) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:=======================================>             (86 + 28) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:=============================================>      (100 + 14) / 114][Stage 117:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.109095307 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34872535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (82 + 33) / 115][Stage 118:=========================================>           (91 + 24) / 115][Stage 118:=================================================>   (107 + 8) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:======================================>              (85 + 31) / 116][Stage 119:========================================>            (88 + 28) / 116][Stage 119:============================================>        (98 + 18) / 116][Stage 119:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.742688125 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34842485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (82 + 33) / 115][Stage 120:===========================================>         (95 + 20) / 115][Stage 120:=================================================>   (107 + 8) / 115]                                                                                [Stage 121:====================================>                (80 + 36) / 116][Stage 121:=========================================>           (91 + 25) / 116][Stage 121:===============================================>    (106 + 10) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.778183638 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404747196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:==========================>                          (61 + 59) / 120][Stage 122:================================>                    (73 + 47) / 120][Stage 122:===========================================>        (101 + 19) / 120][Stage 122:====================================================>(119 + 1) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:=============================>                       (68 + 53) / 121][Stage 123:====================================>                (83 + 38) / 121][Stage 123:=============================================>      (106 + 15) / 121][Stage 123:===================================================> (118 + 3) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.644105947 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377679436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (67 + 48) / 115][Stage 124:====================================>                (80 + 35) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:===================================================> (111 + 4) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:=====================================>               (81 + 35) / 116][Stage 125:===========================================>         (95 + 21) / 116][Stage 125:================================================>    (107 + 9) / 116][Stage 125:==================================================>  (111 + 5) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.232470872 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370637555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=======================================>             (85 + 30) / 115][Stage 126:=============================================>       (99 + 16) / 115][Stage 126:==================================================>  (109 + 6) / 115]                                                                                [Stage 127:=====================================>               (82 + 34) / 116][Stage 127:==========================================>          (93 + 23) / 116][Stage 127:===============================================>    (105 + 11) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.711213411 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405808559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (60 + 53) / 113][Stage 128:===================================>                 (75 + 38) / 113][Stage 128:==============================================>      (99 + 14) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:=============================>                       (63 + 51) / 114][Stage 129:====================================>                (79 + 35) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.140279238 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418726477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (61 + 60) / 121][Stage 130:=============================>                       (68 + 53) / 121][Stage 130:=====================================>               (86 + 35) / 121][Stage 130:=============================================>      (105 + 16) / 121][Stage 130:====================================================>(119 + 2) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:============================>                        (66 + 56) / 122][Stage 131:=================================>                   (76 + 46) / 122][Stage 131:=========================================>           (95 + 27) / 122][Stage 131:===============================================>    (111 + 11) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.668264599 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389909312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==============================>                      (67 + 48) / 115][Stage 132:===================================>                 (78 + 37) / 115][Stage 132:=============================================>      (101 + 14) / 115][Stage 132:==================================================>  (110 + 5) / 115]                                                                                [Stage 133:================================>                    (71 + 45) / 116][Stage 133:========================================>            (89 + 27) / 116][Stage 133:==============================================>     (103 + 13) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.958369441 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359982804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (78 + 35) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:==============================================>     (102 + 11) / 113][Stage 134:====================================================>(111 + 2) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:====================================>                (78 + 36) / 114][Stage 135:=========================================>           (89 + 25) / 114][Stage 135:==============================================>      (99 + 15) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.103929991 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351262298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (81 + 34) / 115][Stage 136:=======================================>             (85 + 30) / 115][Stage 136:============================================>        (96 + 19) / 115][Stage 136:===============================================>    (105 + 10) / 115][Stage 136:====================================================>(114 + 1) / 115]                                                                                [Stage 137:=====================================>               (83 + 33) / 116][Stage 137:==========================================>          (92 + 24) / 116][Stage 137:===============================================>    (106 + 10) / 116][Stage 137:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.825750769 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40282877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 61) / 121][Stage 138:===============================>                     (71 + 50) / 121][Stage 138:=====================================>               (85 + 36) / 121][Stage 138:=============================================>      (106 + 15) / 121][Stage 138:====================================================>(120 + 1) / 121]                                                                                [Stage 139:==========================>                          (61 + 61) / 122][Stage 139:=============================>                       (67 + 55) / 122][Stage 139:====================================>                (84 + 38) / 122][Stage 139:==============================================>     (109 + 13) / 122][Stage 139:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.369486436 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376591712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (65 + 50) / 115][Stage 140:=================================>                   (73 + 42) / 115][Stage 140:========================================>            (88 + 27) / 115][Stage 140:=============================================>       (99 + 16) / 115][Stage 140:==================================================>  (109 + 6) / 115][Stage 140:==================================================>  (110 + 5) / 115]                                                                                [Stage 141:==================================>                  (76 + 40) / 116][Stage 141:=========================================>           (90 + 26) / 116][Stage 141:==================================================>  (110 + 6) / 116][Stage 141:===================================================> (113 + 3) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.281018915 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362590572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (73 + 45) / 118][Stage 142:=================================>                   (75 + 43) / 118][Stage 142:======================================>              (85 + 33) / 118][Stage 142:============================================>       (102 + 16) / 118][Stage 142:===================================================> (114 + 4) / 118][Stage 142:====================================================>(117 + 1) / 118]                                                                                [Stage 143:================================>                    (73 + 46) / 119][Stage 143:===================================>                 (79 + 40) / 119][Stage 143:========================================>            (90 + 29) / 119][Stage 143:===========================================>         (97 + 22) / 119][Stage 143:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.380475568 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341194608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=========================================>           (91 + 24) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:====================================================>(113 + 2) / 115]                                                                                [Stage 145:=====================================>               (81 + 35) / 116][Stage 145:==========================================>          (92 + 24) / 116][Stage 145:==============================================>     (104 + 12) / 116][Stage 145:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.712654215 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400622624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (66 + 54) / 120][Stage 146:======================================>              (88 + 32) / 120][Stage 146:==============================================>     (108 + 12) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:=============================>                       (67 + 54) / 121][Stage 147:==================================>                  (79 + 42) / 121][Stage 147:=============================================>      (107 + 14) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.788821814 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367533486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:=================================>                   (75 + 43) / 118][Stage 148:========================================>            (91 + 27) / 118][Stage 148:============================================>       (101 + 17) / 118][Stage 148:===================================================> (114 + 4) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:======================================>              (86 + 33) / 119][Stage 149:============================================>       (101 + 18) / 119][Stage 149:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.287926454 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406845202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (64 + 57) / 121][Stage 150:================================>                    (74 + 47) / 121][Stage 150:==========================================>         (100 + 21) / 121][Stage 150:===================================================> (118 + 3) / 121]                                                                                [Stage 151:===========================>                         (64 + 58) / 122][Stage 151:==================================>                  (79 + 43) / 122][Stage 151:=========================================>           (95 + 27) / 122][Stage 151:==================================================>  (117 + 5) / 122][Stage 151:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.257076723 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410433992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:===========================>                         (63 + 57) / 120][Stage 152:=================================>                   (75 + 45) / 120][Stage 152:===========================================>         (98 + 22) / 120][Stage 152:===================================================> (116 + 4) / 120]                                                                                [Stage 153:============================>                        (64 + 57) / 121][Stage 153:===================================>                 (80 + 41) / 121][Stage 153:=============================================>      (105 + 16) / 121][Stage 153:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.166330395 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408118706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:===============================>                     (73 + 48) / 121][Stage 154:=========================================>           (94 + 27) / 121][Stage 154:==================================================>  (115 + 6) / 121]                                                                                [Stage 155:===========================>                         (64 + 58) / 122][Stage 155:================================>                    (75 + 47) / 122][Stage 155:==========================================>          (98 + 24) / 122][Stage 155:====================================================>(120 + 2) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.413958487 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372016099 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (80 + 33) / 113][Stage 156:=========================================>           (88 + 25) / 113][Stage 156:============================================>        (94 + 19) / 113][Stage 156:=================================================>   (106 + 7) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:========================================>            (87 + 27) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:===============================================>    (104 + 10) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.05651253 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35548731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (79 + 34) / 113][Stage 158:=========================================>           (89 + 24) / 113][Stage 158:=============================================>       (98 + 15) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:===================================>                 (77 + 37) / 114][Stage 159:=========================================>           (90 + 24) / 114][Stage 159:==============================================>      (99 + 15) / 114][Stage 159:=================================================>   (107 + 7) / 114][Stage 159:===================================================> (110 + 4) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.988255144 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390217793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=============================>                       (63 + 50) / 113][Stage 160:======================================>              (82 + 31) / 113][Stage 160:=============================================>       (96 + 17) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:============================>                        (61 + 53) / 114][Stage 161:=================================>                   (71 + 43) / 114][Stage 161:==========================================>          (91 + 23) / 114][Stage 161:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.179126333 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397625895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:============================>                        (61 + 52) / 113][Stage 162:====================================>                (78 + 35) / 113][Stage 162:==============================================>     (100 + 13) / 113][Stage 162:===================================================> (110 + 3) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:=================================>                   (71 + 43) / 114][Stage 163:=========================================>           (90 + 24) / 114][Stage 163:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.216170162 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402361709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:==========================>                          (61 + 60) / 121][Stage 164:=================================>                   (77 + 44) / 121][Stage 164:=========================================>           (95 + 26) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:===========================>                         (64 + 58) / 122][Stage 165:=================================>                   (76 + 46) / 122][Stage 165:======================================>              (88 + 34) / 122][Stage 165:=============================================>      (107 + 15) / 122][Stage 165:===================================================> (119 + 3) / 122][Stage 165:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.722024757 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401021345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:===========================>                         (62 + 58) / 120][Stage 166:=================================>                   (75 + 45) / 120][Stage 166:=============================================>      (106 + 14) / 120]                                                                                [Stage 167:============================>                        (64 + 57) / 121][Stage 167:================================>                    (74 + 47) / 121][Stage 167:======================================>              (88 + 33) / 121][Stage 167:=================================================>   (113 + 8) / 121][Stage 167:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.116852448 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402094088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===========================>                         (63 + 58) / 121][Stage 168:===================================>                 (80 + 41) / 121][Stage 168:==========================================>         (100 + 21) / 121][Stage 168:====================================================>(119 + 2) / 121]                                                                                [Stage 169:==========================>                          (62 + 60) / 122][Stage 169:==============================>                      (70 + 52) / 122][Stage 169:====================================>                (84 + 38) / 122][Stage 169:===============================================>    (111 + 11) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.860749327 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433698062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:=============================>                       (67 + 54) / 121][Stage 170:=========================================>           (94 + 27) / 121][Stage 170:===============================================>    (111 + 10) / 121][Stage 170:===================================================> (117 + 4) / 121]                                                                                [Stage 171:===========================>                         (63 + 59) / 122][Stage 171:==============================>                      (71 + 51) / 122][Stage 171:=========================================>           (96 + 26) / 122][Stage 171:=================================================>   (113 + 9) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.637058905 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3588274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:====================================>                (77 + 36) / 113][Stage 172:=======================================>             (85 + 28) / 113][Stage 172:==============================================>     (100 + 13) / 113][Stage 172:===================================================> (109 + 4) / 113]                                                                                [Stage 173:====================================>                (78 + 36) / 114][Stage 173:========================================>            (87 + 27) / 114][Stage 173:==============================================>      (99 + 15) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.780780775 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362508511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (73 + 40) / 113][Stage 174:=========================================>           (89 + 24) / 113][Stage 174:==============================================>     (102 + 11) / 113][Stage 174:==================================================>  (107 + 6) / 113]                                                                                [Stage 175:====================================>                (79 + 35) / 114][Stage 175:==========================================>          (92 + 22) / 114][Stage 175:==============================================>     (102 + 12) / 114][Stage 175:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.844624844 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338836501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (81 + 34) / 115][Stage 176:========================================>            (87 + 28) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:=======================================>             (87 + 29) / 116][Stage 177:============================================>        (97 + 19) / 116][Stage 177:================================================>    (107 + 9) / 116][Stage 177:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.705851014 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371224496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (71 + 44) / 115][Stage 178:=======================================>             (86 + 29) / 115][Stage 178:==============================================>     (103 + 12) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:=======================================>             (87 + 29) / 116][Stage 179:=============================================>      (101 + 15) / 116][Stage 179:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.727721058 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387798165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:============================>                        (61 + 52) / 113][Stage 180:====================================>                (77 + 36) / 113][Stage 180:============================================>        (94 + 19) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:==============================>                      (65 + 49) / 114][Stage 181:=====================================>               (81 + 33) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:===================================================> (111 + 3) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.279486548 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390297653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:========================================>            (86 + 27) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:================================================>    (104 + 9) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:=====================================>               (80 + 34) / 114][Stage 183:===========================================>         (94 + 20) / 114][Stage 183:==============================================>     (103 + 11) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.872363866 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388053387 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:>                                                      (0 + 0) / 115][Stage 184:===============================>                     (69 + 46) / 115][Stage 184:======================================>              (83 + 32) / 115][Stage 184:=============================================>      (101 + 14) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:====================================>                (80 + 36) / 116][Stage 185:===========================================>         (96 + 20) / 116][Stage 185:==================================================>  (111 + 5) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.794877157 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386897083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:============================>                        (61 + 52) / 113][Stage 186:===================================>                 (75 + 38) / 113][Stage 186:==============================================>      (99 + 14) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:=============================>                       (64 + 50) / 114][Stage 187:====================================>                (79 + 35) / 114][Stage 187:============================================>        (96 + 18) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.225837578 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347798628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=======================================>             (86 + 29) / 115][Stage 188:===========================================>         (95 + 20) / 115][Stage 188:=================================================>   (107 + 8) / 115][Stage 188:==================================================>  (110 + 5) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:=====================================>               (83 + 33) / 116][Stage 189:==========================================>          (93 + 23) / 116][Stage 189:==============================================>     (103 + 13) / 116][Stage 189:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.962469592 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341679309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:========================================>            (87 + 28) / 115][Stage 190:=============================================>       (99 + 16) / 115][Stage 190:==================================================>  (110 + 5) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:==============================================>     (103 + 13) / 116][Stage 191:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.692989856 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362611052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:===================================>                 (78 + 40) / 118][Stage 192:=========================================>           (92 + 26) / 118][Stage 192:==============================================>     (105 + 13) / 118][Stage 192:==================================================>  (113 + 5) / 118]                                                                                [Stage 193:=================================>                   (75 + 44) / 119][Stage 193:====================================>                (81 + 38) / 119][Stage 193:========================================>            (91 + 28) / 119][Stage 193:==============================================>     (107 + 12) / 119][Stage 193:===================================================> (115 + 4) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.774843972 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355834812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (70 + 43) / 113][Stage 194:=====================================>               (79 + 34) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:==============================================>     (102 + 11) / 113][Stage 194:====================================================>(111 + 2) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:==================================>                  (75 + 39) / 114][Stage 195:=======================================>             (86 + 28) / 114][Stage 195:===========================================>         (94 + 20) / 114][Stage 195:=================================================>   (106 + 8) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.351397755 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404103434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:================================>                    (70 + 43) / 113][Stage 196:===========================================>         (92 + 21) / 113][Stage 196:==================================================>  (107 + 6) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:=============================>                       (63 + 51) / 114][Stage 197:=====================================>               (81 + 33) / 114][Stage 197:==============================================>     (101 + 13) / 114][Stage 197:====================================================>(112 + 2) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.538235753 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414483485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (63 + 57) / 120][Stage 198:================================>                    (74 + 46) / 120][Stage 198:======================================>              (87 + 33) / 120][Stage 198:=================================================>   (112 + 8) / 120]                                                                                [Stage 199:===========================>                         (62 + 59) / 121][Stage 199:===============================>                     (71 + 50) / 121][Stage 199:=====================================>               (86 + 35) / 121][Stage 199:===============================================>    (111 + 10) / 121][Stage 199:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.320279908 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356925095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==================================>                  (74 + 39) / 113][Stage 200:======================================>              (82 + 31) / 113][Stage 200:============================================>        (94 + 19) / 113][Stage 200:================================================>    (104 + 9) / 113][Stage 200:==================================================>  (108 + 5) / 113]                                                                                [Stage 201:===================================>                 (77 + 37) / 114][Stage 201:==========================================>          (91 + 23) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:=================================================>   (107 + 7) / 114][Stage 201:===================================================> (110 + 4) / 114][Stage 201:===================================================> (111 + 3) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.049491903 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 09:43:29 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:45262) dropped. RpcEnv already stopped.
17/05/22 09:43:29 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:33628) dropped. RpcEnv already stopped.
17/05/22 09:43:29 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:45262) dropped. RpcEnv already stopped.
17/05/22 09:43:29 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:33628) dropped. RpcEnv already stopped.

real	10m13.370s
user	11m30.904s
sys	0m46.444s
