Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 12:21:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:21:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:21:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:21:57 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 12:21:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 12:22:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522122158-0458).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.358621131 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:================>                                      (34 + 81) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.688139679 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.794246683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================>                                     (39 + 82) / 121][Stage 2:=======================>                               (52 + 69) / 121][Stage 2:==========================>                            (58 + 63) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:===============================>                       (70 + 51) / 121][Stage 2:==========================================>            (93 + 28) / 121][Stage 2:===============================================>      (107 + 14) / 121][Stage 2:====================================================>  (115 + 6) / 121][Stage 2:====================================================>  (116 + 5) / 121][Stage 2:=====================================================> (118 + 3) / 121][Stage 2:======================================================>(120 + 1) / 121]                                                                                [Stage 3:===========================>                           (61 + 61) / 122][Stage 3:===========================>                           (62 + 60) / 122][Stage 3:==============================>                        (68 + 54) / 122][Stage 3:===================================>                   (78 + 44) / 122][Stage 3:=======================================>               (88 + 34) / 122][Stage 3:===============================================>      (107 + 15) / 122][Stage 3:=====================================================> (118 + 4) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.29759417 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.588350652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:=======================================>               (82 + 33) / 115][Stage 4:===========================================>           (91 + 24) / 115][Stage 4:=============================================>         (96 + 19) / 115][Stage 4:===============================================>       (99 + 16) / 115][Stage 4:===================================================>   (108 + 7) / 115][Stage 4:====================================================>  (110 + 5) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:=====================================>                 (80 + 36) / 116][Stage 5:=======================================>               (83 + 33) / 116][Stage 5:==========================================>            (90 + 26) / 116][Stage 5:=============================================>         (97 + 19) / 116][Stage 5:================================================>     (105 + 11) / 116][Stage 5:====================================================>  (110 + 6) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.84945424 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.708003846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (68 + 45) / 113][Stage 6:==================================>                    (71 + 42) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:=========================================>             (86 + 27) / 113][Stage 6:==============================================>        (96 + 17) / 113][Stage 6:=================================================>    (103 + 10) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:=====================================================> (110 + 3) / 113][Stage 6:======================================================>(111 + 2) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:====================================>                  (75 + 39) / 114][Stage 7:========================================>              (84 + 30) / 114][Stage 7:===========================================>           (90 + 24) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:===================================================>   (106 + 8) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:=====================================================> (111 + 3) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.008099096 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.608505732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===============================>                       (66 + 49) / 115][Stage 8:===================================>                   (75 + 40) / 115][Stage 8:=========================================>             (86 + 29) / 115][Stage 8:============================================>          (92 + 23) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:================================================>     (103 + 12) / 115]                                                                                [Stage 9:================================>                      (69 + 47) / 116][Stage 9:======================================>                (81 + 35) / 116][Stage 9:=========================================>             (88 + 28) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:===============================================>      (103 + 13) / 116][Stage 9:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.903395216 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466736953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:====================================>                 (78 + 37) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:========================================>             (87 + 28) / 115][Stage 10:==============================================>       (99 + 16) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:================================================>    (105 + 10) / 115][Stage 10:===================================================>  (110 + 5) / 115]                                                                                [Stage 11:======================================>               (82 + 34) / 116][Stage 11:=========================================>            (89 + 27) / 116][Stage 11:==============================================>       (99 + 17) / 116][Stage 11:===============================================>     (105 + 11) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.82716118 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.61149769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:===============================>                      (66 + 47) / 113][Stage 12:========================================>             (84 + 29) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:====================================================> (109 + 4) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:=============================>                        (62 + 52) / 114][Stage 13:====================================>                 (78 + 36) / 114][Stage 13:=======================================>              (84 + 30) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:====================================================> (111 + 3) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.155629839 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60824528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:============================>                         (64 + 56) / 120][Stage 14:====================================>                 (80 + 40) / 120][Stage 14:===========================================>          (97 + 23) / 120][Stage 14:==================================================>   (112 + 8) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (62 + 59) / 121][Stage 15:===================================>                  (79 + 42) / 121][Stage 15:=========================================>            (93 + 28) / 121][Stage 15:==============================================>      (107 + 14) / 121][Stage 15:===================================================>  (115 + 6) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.010745557 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59996966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:============================>                         (64 + 56) / 120][Stage 16:=================================>                    (74 + 46) / 120][Stage 16:===========================================>          (97 + 23) / 120][Stage 16:================================================>    (109 + 11) / 120][Stage 16:====================================================> (117 + 3) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:==============================>                       (69 + 52) / 121][Stage 17:=====================================>                (85 + 36) / 121][Stage 17:=============================================>       (103 + 18) / 121][Stage 17:==================================================>   (113 + 8) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.198697892 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424503273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (83 + 32) / 115][Stage 18:==========================================>           (91 + 24) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:====================================================> (111 + 4) / 115]                                                                                [Stage 19:======================================>               (82 + 34) / 116][Stage 19:===========================================>          (94 + 22) / 116][Stage 19:=================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.865535335 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5746917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:=============================>                        (61 + 52) / 113][Stage 20:===================================>                  (74 + 39) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:============================================>         (93 + 21) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.749926796 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484789802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===============================>                      (67 + 48) / 115][Stage 22:======================================>               (81 + 34) / 115][Stage 22:==============================================>       (98 + 17) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:====================================================> (112 + 3) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:===============================>                      (67 + 49) / 116][Stage 23:==================================>                   (75 + 41) / 116][Stage 23:========================================>             (88 + 28) / 116][Stage 23:=============================================>       (100 + 16) / 116][Stage 23:================================================>    (106 + 10) / 116][Stage 23:===================================================>  (111 + 5) / 116][Stage 23:=====================================================>(114 + 2) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.346391103 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488085378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===============================>                      (67 + 48) / 115][Stage 24:=====================================>                (79 + 36) / 115][Stage 24:============================================>         (94 + 21) / 115][Stage 24:===============================================>     (103 + 12) / 115]                                                                                [Stage 25:===============================>                      (67 + 49) / 116][Stage 25:======================================>               (82 + 34) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:============================================>         (96 + 20) / 116][Stage 25:==============================================>      (102 + 14) / 116][Stage 25:==================================================>   (108 + 8) / 116][Stage 25:====================================================> (113 + 3) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.56260457 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4695137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (69 + 46) / 115][Stage 26:========================================>             (87 + 28) / 115][Stage 26:===========================================>          (93 + 22) / 115][Stage 26:===============================================>     (102 + 13) / 115][Stage 26:====================================================> (112 + 3) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:===============================>                      (67 + 49) / 116][Stage 27:=====================================>                (80 + 36) / 116][Stage 27:==============================================>       (99 + 17) / 116][Stage 27:===============================================>     (105 + 11) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.693525287 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50213201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:============================>                         (64 + 56) / 120][Stage 28:===============================>                      (71 + 49) / 120][Stage 28:=======================================>              (88 + 32) / 120][Stage 28:===========================================>          (97 + 23) / 120][Stage 28:=================================================>    (111 + 9) / 120][Stage 28:=====================================================>(118 + 2) / 120]                                                                                [Stage 29:==============================>                       (68 + 53) / 121][Stage 29:==================================>                   (77 + 44) / 121][Stage 29:=============================================>       (103 + 18) / 121][Stage 29:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.734451448 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437994072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (71 + 42) / 113][Stage 30:========================================>             (84 + 29) / 113][Stage 30:============================================>         (93 + 20) / 113][Stage 30:=================================================>    (104 + 9) / 113][Stage 30:====================================================> (109 + 4) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=======================================>              (84 + 30) / 114][Stage 31:=============================================>        (96 + 18) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.236668038 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403957709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:======================================>               (83 + 32) / 115][Stage 32:=========================================>            (89 + 26) / 115][Stage 32:===============================================>     (102 + 13) / 115][Stage 32:====================================================> (111 + 4) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:=====================================>                (81 + 35) / 116][Stage 33:=========================================>            (90 + 26) / 116][Stage 33:==============================================>      (101 + 15) / 116][Stage 33:===================================================>  (111 + 5) / 116][Stage 33:====================================================> (112 + 4) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.280761429 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505534267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:================================>                     (67 + 46) / 113][Stage 34:=======================================>              (82 + 31) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:===================================================>  (108 + 5) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:===================================>                  (74 + 40) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.758791227 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501632976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===========================>                          (61 + 59) / 120][Stage 36:================================>                     (72 + 48) / 120][Stage 36:===========================================>          (96 + 24) / 120][Stage 36:====================================================> (116 + 4) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:===============================>                      (70 + 51) / 121][Stage 37:=======================================>              (88 + 33) / 121][Stage 37:================================================>    (110 + 11) / 121][Stage 37:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.607775631 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416571145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (82 + 33) / 115][Stage 38:=============================================>        (96 + 19) / 115][Stage 38:===================================================>  (109 + 6) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:=========================================>            (89 + 27) / 116][Stage 39:==============================================>      (101 + 15) / 116][Stage 39:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.641325722 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439635915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (73 + 45) / 118][Stage 40:====================================>                 (80 + 38) / 118][Stage 40:=====================================>                (82 + 36) / 118][Stage 40:=========================================>            (91 + 27) / 118][Stage 40:==================================================>   (110 + 8) / 118][Stage 40:===================================================>  (113 + 5) / 118]                                                                                [Stage 41:=================================>                    (74 + 45) / 119][Stage 41:===================================>                  (79 + 40) / 119][Stage 41:======================================>               (84 + 35) / 119][Stage 41:===========================================>          (96 + 23) / 119][Stage 41:===============================================>     (106 + 13) / 119][Stage 41:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.94951246 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419307982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:=======================================>              (84 + 31) / 115][Stage 42:============================================>         (94 + 21) / 115][Stage 42:==================================================>   (107 + 8) / 115][Stage 42:====================================================> (111 + 4) / 115][Stage 42:====================================================> (112 + 3) / 115]                                                                                [Stage 43:=======================================>              (85 + 31) / 116][Stage 43:============================================>         (96 + 20) / 116][Stage 43:===============================================>     (104 + 12) / 116][Stage 43:====================================================> (112 + 4) / 116][Stage 43:=====================================================>(114 + 2) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.698121095 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496016395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:============================>                         (63 + 57) / 120][Stage 44:===================================>                  (79 + 41) / 120][Stage 44:==========================================>           (95 + 25) / 120][Stage 44:==================================================>   (113 + 7) / 120]                                                                                [Stage 45:============================>                         (63 + 58) / 121][Stage 45:=================================>                    (74 + 47) / 121][Stage 45:=========================================>            (94 + 27) / 121][Stage 45:===================================================>  (115 + 6) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.384537921 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444940268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:=============================>                        (65 + 55) / 120][Stage 46:====================================>                 (81 + 39) / 120][Stage 46:============================================>         (99 + 21) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:=============================>                        (66 + 55) / 121][Stage 47:======================================>               (87 + 34) / 121][Stage 47:================================================>    (110 + 11) / 121][Stage 47:====================================================> (118 + 3) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.549788631 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382823005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=====================================>                (80 + 35) / 115][Stage 48:=======================================>              (84 + 31) / 115][Stage 48:==============================================>       (98 + 17) / 115][Stage 48:=================================================>    (106 + 9) / 115][Stage 48:====================================================> (111 + 4) / 115]                                                                                [Stage 49:=======================================>              (85 + 31) / 116][Stage 49:===========================================>          (94 + 22) / 116][Stage 49:==============================================>      (102 + 14) / 116][Stage 49:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.115226288 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418536788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:======================================>               (84 + 34) / 118][Stage 50:============================================>         (98 + 20) / 118][Stage 50:==================================================>   (110 + 8) / 118]                                                                                [Stage 51:=================================>                    (73 + 46) / 119][Stage 51:==================================>                   (77 + 42) / 119][Stage 51:=======================================>              (87 + 32) / 119][Stage 51:============================================>        (101 + 18) / 119][Stage 51:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.575446694 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434027196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (64 + 51) / 115][Stage 52:====================================>                 (78 + 37) / 115][Stage 52:=========================================>            (89 + 26) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:====================================>                 (79 + 37) / 116][Stage 53:=======================================>              (85 + 31) / 116][Stage 53:=============================================>        (97 + 19) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.454369562 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456646128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:==============================>                       (68 + 52) / 120][Stage 54:======================================>               (86 + 34) / 120][Stage 54:=================================================>    (111 + 9) / 120]                                                                                [Stage 55:===========================>                          (62 + 59) / 121][Stage 55:==============================>                       (69 + 52) / 121][Stage 55:======================================>               (87 + 34) / 121][Stage 55:================================================>    (111 + 10) / 121][Stage 55:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.621910659 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405239841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:==================================>                   (75 + 43) / 118][Stage 56:=====================================>                (82 + 36) / 118][Stage 56:==========================================>           (92 + 26) / 118][Stage 56:==============================================>      (103 + 15) / 118][Stage 56:==================================================>   (111 + 7) / 118][Stage 56:===================================================>  (112 + 6) / 118]                                                                                [Stage 57:==================================>                   (75 + 44) / 119][Stage 57:====================================>                 (80 + 39) / 119][Stage 57:======================================>               (85 + 34) / 119][Stage 57:============================================>         (98 + 21) / 119][Stage 57:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.984639863 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381858113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=================================>                    (71 + 42) / 113][Stage 58:======================================>               (81 + 32) / 113][Stage 58:===========================================>          (91 + 22) / 113][Stage 58:=================================================>    (104 + 9) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:=====================================>                (79 + 35) / 114][Stage 59:==========================================>           (90 + 24) / 114][Stage 59:================================================>    (104 + 10) / 114][Stage 59:===================================================>  (109 + 5) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.260693263 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377030245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (85 + 30) / 115][Stage 60:==========================================>           (91 + 24) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:====================================================> (112 + 3) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:=======================================>              (84 + 32) / 116][Stage 61:=========================================>            (89 + 27) / 116][Stage 61:==============================================>      (101 + 15) / 116][Stage 61:===================================================>  (110 + 6) / 116][Stage 61:====================================================> (113 + 3) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.794008358 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390483937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===================================>                  (75 + 38) / 113][Stage 62:===========================================>          (90 + 23) / 113][Stage 62:==============================================>       (98 + 15) / 113][Stage 62:===================================================>  (107 + 6) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:=======================================>              (84 + 30) / 114][Stage 63:=============================================>        (96 + 18) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.204221043 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454584059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (67 + 53) / 120][Stage 64:=====================================>                (83 + 37) / 120][Stage 64:==============================================>      (105 + 15) / 120][Stage 64:===================================================>  (114 + 6) / 120]                                                                                [Stage 65:============================>                         (63 + 58) / 121][Stage 65:=================================>                    (74 + 47) / 121][Stage 65:==========================================>           (96 + 25) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.763808785 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414807686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (74 + 44) / 118][Stage 66:========================================>             (88 + 30) / 118][Stage 66:================================================>    (108 + 10) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:==================================>                   (77 + 42) / 119][Stage 67:========================================>             (90 + 29) / 119][Stage 67:================================================>    (109 + 10) / 119][Stage 67:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.182721988 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361943381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:===========================================>          (93 + 22) / 115][Stage 68:==================================================>   (108 + 7) / 115][Stage 68:====================================================> (112 + 3) / 115]                                                                                [Stage 69:========================================>             (86 + 30) / 116][Stage 69:=============================================>        (98 + 18) / 116][Stage 69:=================================================>    (107 + 9) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.393038244 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420032137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:====================================>                 (80 + 38) / 118][Stage 70:=============================================>        (99 + 19) / 118][Stage 70:================================================>    (108 + 10) / 118][Stage 70:=====================================================>(116 + 2) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (76 + 43) / 119][Stage 71:===========================================>          (95 + 24) / 119][Stage 71:===============================================>     (107 + 12) / 119][Stage 71:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.292977429 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366765893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (81 + 34) / 115][Stage 72:===========================================>          (92 + 23) / 115][Stage 72:================================================>    (105 + 10) / 115]                                                                                [Stage 73:=======================================>              (85 + 31) / 116][Stage 73:==============================================>       (99 + 17) / 116][Stage 73:================================================>    (106 + 10) / 116][Stage 73:====================================================> (113 + 3) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.852315677 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456738501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:=================================>                    (74 + 46) / 120][Stage 74:========================================>             (90 + 30) / 120][Stage 74:===============================================>     (107 + 13) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:===============================>                      (70 + 51) / 121][Stage 75:=======================================>              (88 + 33) / 121][Stage 75:=================================================>    (112 + 9) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.543794929 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443188131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:=================================>                    (74 + 47) / 121][Stage 76:========================================>             (91 + 30) / 121][Stage 76:====================================================> (118 + 3) / 121]                                                                                [Stage 77:===========================>                          (63 + 59) / 122][Stage 77:================================>                     (73 + 49) / 122][Stage 77:========================================>             (92 + 30) / 122][Stage 77:===============================================>     (109 + 13) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.296278709 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439373501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:=============================>                        (66 + 54) / 120][Stage 78:==================================>                   (76 + 44) / 120][Stage 78:============================================>         (99 + 21) / 120][Stage 78:====================================================> (117 + 3) / 120]                                                                                [Stage 79:===========================>                          (61 + 60) / 121][Stage 79:==============================>                       (68 + 53) / 121][Stage 79:======================================>               (87 + 34) / 121][Stage 79:==================================================>   (113 + 8) / 121][Stage 79:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.514334391 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372655905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===================================>                  (75 + 38) / 113][Stage 80:========================================>             (85 + 28) / 113][Stage 80:==============================================>       (97 + 16) / 113][Stage 80:===================================================>  (107 + 6) / 113][Stage 80:====================================================> (109 + 4) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:==================================>                   (72 + 42) / 114][Stage 81:==========================================>           (90 + 24) / 114][Stage 81:==============================================>       (98 + 16) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.17280645 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400992345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===============================>                      (68 + 47) / 115][Stage 82:=======================================>              (84 + 31) / 115][Stage 82:============================================>         (95 + 20) / 115][Stage 82:==================================================>   (108 + 7) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:===============================>                      (67 + 49) / 116][Stage 83:=======================================>              (84 + 32) / 116][Stage 83:============================================>         (96 + 20) / 116][Stage 83:====================================================> (112 + 4) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.980526487 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386472497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:======================================>               (85 + 33) / 118][Stage 84:==============================================>      (103 + 15) / 118]                                                                                [Stage 85:=================================>                    (74 + 45) / 119][Stage 85:======================================>               (85 + 34) / 119][Stage 85:============================================>        (100 + 19) / 119][Stage 85:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.885044838 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388537553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (71 + 44) / 115][Stage 86:=========================================>            (89 + 26) / 115][Stage 86:==============================================>      (100 + 15) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:===================================>                  (76 + 40) / 116][Stage 87:========================================>             (87 + 29) / 116][Stage 87:===============================================>     (104 + 12) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.943371221 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402176905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (69 + 46) / 115][Stage 88:==========================================>           (91 + 24) / 115][Stage 88:==============================================>      (101 + 14) / 115][Stage 88:====================================================> (112 + 3) / 115]                                                                                [Stage 89:===============================>                      (68 + 48) / 116][Stage 89:===================================>                  (76 + 40) / 116][Stage 89:===========================================>          (94 + 22) / 116][Stage 89:================================================>    (106 + 10) / 116][Stage 89:===================================================>  (110 + 6) / 116][Stage 89:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 6.165052289 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422626183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:===============================>                      (69 + 51) / 120][Stage 90:======================================>               (85 + 35) / 120][Stage 90:================================================>    (110 + 10) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:=============================>                        (67 + 54) / 121][Stage 91:=====================================>                (83 + 38) / 121][Stage 91:==============================================>      (106 + 15) / 121][Stage 91:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.266314875 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423133583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:==============================>                       (68 + 52) / 120][Stage 92:=======================================>              (88 + 32) / 120][Stage 92:=================================================>    (111 + 9) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:===============================>                      (71 + 50) / 121][Stage 93:=====================================>                (83 + 38) / 121][Stage 93:==============================================>      (107 + 14) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.236855646 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409072134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:==============================>                       (64 + 49) / 113][Stage 94:=======================================>              (83 + 30) / 113][Stage 94:=================================================>    (104 + 9) / 113][Stage 94:===================================================>  (108 + 5) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:===============================>                      (67 + 47) / 114][Stage 95:====================================>                 (78 + 36) / 114][Stage 95:==================================================>   (106 + 8) / 114][Stage 95:====================================================> (111 + 3) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.623342137 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414491424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:===============================>                      (70 + 50) / 120][Stage 96:========================================>             (90 + 30) / 120][Stage 96:================================================>    (109 + 11) / 120]                                                                                [Stage 97:============================>                         (63 + 58) / 121][Stage 97:==================================>                   (77 + 44) / 121][Stage 97:========================================>             (90 + 31) / 121][Stage 97:================================================>    (110 + 11) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.102209747 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349404623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (82 + 33) / 115][Stage 98:==========================================>           (91 + 24) / 115][Stage 98:===============================================>     (104 + 11) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:=======================================>              (85 + 31) / 116][Stage 99:=============================================>       (100 + 16) / 116][Stage 99:===================================================>  (110 + 6) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.923221972 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360018821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (80 + 33) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:=================================================>   (106 + 7) / 113]                                                                                [Stage 101:===================================>                 (77 + 37) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:==============================================>     (103 + 11) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.654128146 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411028395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (62 + 58) / 120][Stage 102:=================================>                   (76 + 44) / 120][Stage 102:===========================================>         (99 + 21) / 120][Stage 102:==================================================>  (114 + 6) / 120]                                                                                [Stage 103:===========================>                         (62 + 59) / 121][Stage 103:===============================>                     (72 + 49) / 121][Stage 103:======================================>              (89 + 32) / 121][Stage 103:=============================================>      (105 + 16) / 121][Stage 103:====================================================>(119 + 2) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.556974692 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429609436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:=============================>                       (67 + 53) / 120][Stage 104:=====================================>               (84 + 36) / 120][Stage 104:============================================>       (103 + 17) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:=============================>                       (68 + 53) / 121][Stage 105:======================================>              (89 + 32) / 121][Stage 105:=================================================>   (112 + 9) / 121][Stage 105:====================================================>(119 + 2) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.543074071 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369686564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (71 + 42) / 113][Stage 106:=======================================>             (85 + 28) / 113][Stage 106:============================================>        (94 + 19) / 113][Stage 106:=================================================>   (105 + 8) / 113][Stage 106:==================================================>  (108 + 5) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:======================================>              (82 + 32) / 114][Stage 107:===========================================>         (94 + 20) / 114][Stage 107:==============================================>     (103 + 11) / 114][Stage 107:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.232549692 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372517038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (70 + 43) / 113][Stage 108:=====================================>               (79 + 34) / 113][Stage 108:=========================================>           (88 + 25) / 113][Stage 108:==============================================>     (102 + 11) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:=================================>                   (73 + 41) / 114][Stage 109:======================================>              (82 + 32) / 114][Stage 109:===========================================>         (93 + 21) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.371495808 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387074349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=============================>                       (65 + 50) / 115][Stage 110:===================================>                 (78 + 37) / 115][Stage 110:===========================================>         (94 + 21) / 115][Stage 110:===============================================>    (104 + 11) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:=================================>                   (73 + 43) / 116][Stage 111:==========================================>          (93 + 23) / 116][Stage 111:===============================================>    (105 + 11) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.891248224 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425591129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (63 + 58) / 121][Stage 112:================================>                    (74 + 47) / 121][Stage 112:=======================================>             (91 + 30) / 121][Stage 112:==================================================>  (116 + 5) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:===========================>                         (63 + 59) / 122][Stage 113:=================================>                   (78 + 44) / 122][Stage 113:=============================================>      (106 + 16) / 122][Stage 113:==================================================>  (116 + 6) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.289313558 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361040665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (73 + 45) / 118][Stage 114:===================================>                 (80 + 38) / 118][Stage 114:=======================================>             (88 + 30) / 118][Stage 114:============================================>       (101 + 17) / 118][Stage 114:===================================================> (114 + 4) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:=================================>                   (76 + 43) / 119][Stage 115:====================================>                (83 + 36) / 119][Stage 115:==========================================>          (96 + 23) / 119][Stage 115:===============================================>    (108 + 11) / 119][Stage 115:===================================================> (116 + 3) / 119][Stage 115:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.921086607 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394862055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (62 + 58) / 120][Stage 116:================================>                    (73 + 47) / 120][Stage 116:========================================>            (91 + 29) / 120][Stage 116:==================================================>  (114 + 6) / 120]                                                                                [Stage 117:============================>                        (65 + 56) / 121][Stage 117:===================================>                 (80 + 41) / 121][Stage 117:============================================>       (104 + 17) / 121][Stage 117:==================================================>  (116 + 5) / 121][Stage 117:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.439962081 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378306192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=============================>                       (62 + 51) / 113][Stage 118:===================================>                 (76 + 37) / 113][Stage 118:=============================================>       (96 + 17) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:=================================>                   (72 + 42) / 114][Stage 119:===========================================>         (93 + 21) / 114][Stage 119:=================================================>   (106 + 8) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.467249274 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341575909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:======================================>              (84 + 31) / 115][Stage 120:==========================================>          (92 + 23) / 115][Stage 120:=============================================>      (101 + 14) / 115][Stage 120:=================================================>   (108 + 7) / 115]                                                                                [Stage 121:======================================>              (85 + 31) / 116][Stage 121:===========================================>         (96 + 20) / 116][Stage 121:=================================================>   (109 + 7) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.84399186 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335631522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (80 + 35) / 115][Stage 122:========================================>            (88 + 27) / 115][Stage 122:=============================================>       (98 + 17) / 115][Stage 122:===================================================> (111 + 4) / 115]                                                                                [Stage 123:========================================>            (89 + 27) / 116][Stage 123:============================================>       (100 + 16) / 116][Stage 123:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.493268015 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359462513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:=================================>                   (75 + 43) / 118][Stage 124:=====================================>               (84 + 34) / 118][Stage 124:=======================================>             (88 + 30) / 118][Stage 124:============================================>       (101 + 17) / 118][Stage 124:===================================================> (115 + 3) / 118]                                                                                [Stage 125:================================>                    (73 + 46) / 119][Stage 125:==================================>                  (77 + 42) / 119][Stage 125:====================================>                (83 + 36) / 119][Stage 125:=======================================>             (88 + 31) / 119][Stage 125:==========================================>          (96 + 23) / 119][Stage 125:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.571950321 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378428574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===============================>                     (68 + 47) / 115][Stage 126:====================================>                (79 + 36) / 115][Stage 126:===========================================>         (94 + 21) / 115][Stage 126:=================================================>   (108 + 7) / 115][Stage 126:===================================================> (112 + 3) / 115]                                                                                [Stage 127:==================================>                  (75 + 41) / 116][Stage 127:==========================================>          (92 + 24) / 116][Stage 127:==============================================>     (104 + 12) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.914691473 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369442774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==================================>                  (73 + 40) / 113][Stage 128:=======================================>             (84 + 29) / 113][Stage 128:==========================================>          (91 + 22) / 113][Stage 128:==============================================>     (101 + 12) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:===================================>                 (77 + 37) / 114][Stage 129:=========================================>           (89 + 25) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:==================================================>  (108 + 6) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.970024893 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363644088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:======================================>              (82 + 31) / 113][Stage 130:==========================================>          (91 + 22) / 113][Stage 130:================================================>    (104 + 9) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:=======================================>             (85 + 29) / 114][Stage 131:===========================================>         (94 + 20) / 114][Stage 131:==============================================>     (102 + 12) / 114][Stage 131:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.007681436 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336936963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=======================================>             (85 + 30) / 115][Stage 132:===========================================>         (95 + 20) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:==================================================>  (109 + 6) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:======================================>              (84 + 32) / 116][Stage 133:=========================================>           (91 + 25) / 116][Stage 133:============================================>       (100 + 16) / 116][Stage 133:==================================================>  (110 + 6) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.974275832 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=143", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=143,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383834807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=============================>                       (65 + 50) / 115][Stage 134:==================================>                  (75 + 40) / 115][Stage 134:=======================================>             (85 + 30) / 115][Stage 134:==============================================>     (103 + 12) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:==============================>                      (67 + 49) / 116][Stage 135:=====================================>               (83 + 33) / 116][Stage 135:==========================================>          (93 + 23) / 116][Stage 135:==================================================>  (111 + 5) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.93981157 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405383363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:===========================>                         (63 + 58) / 121][Stage 136:=============================>                       (68 + 53) / 121][Stage 136:=========================================>           (94 + 27) / 121][Stage 136:=================================================>   (113 + 8) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:==============================>                      (70 + 52) / 122][Stage 137:=======================================>             (91 + 31) / 122][Stage 137:==============================================>     (109 + 13) / 122][Stage 137:====================================================>(120 + 2) / 122][Stage 137:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.824453133 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334143871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (82 + 33) / 115][Stage 138:============================================>        (96 + 19) / 115][Stage 138:=================================================>   (107 + 8) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:=======================================>             (86 + 30) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.974685494 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367535104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:==================================>                  (76 + 42) / 118][Stage 140:====================================>                (81 + 37) / 118][Stage 140:=====================================>               (83 + 35) / 118][Stage 140:==============================================>     (105 + 13) / 118][Stage 140:===================================================> (115 + 3) / 118]                                                                                [Stage 141:=================================>                   (75 + 44) / 119][Stage 141:==================================>                  (77 + 42) / 119][Stage 141:=====================================>               (85 + 34) / 119][Stage 141:===========================================>        (100 + 19) / 119][Stage 141:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.74876389 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398532741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:============================>                        (64 + 57) / 121][Stage 142:===================================>                 (80 + 41) / 121][Stage 142:=============================================>      (105 + 16) / 121][Stage 142:==================================================>  (116 + 5) / 121]                                                                                [Stage 143:==========================>                          (62 + 60) / 122][Stage 143:=================================>                   (76 + 46) / 122][Stage 143:=========================================>           (96 + 26) / 122][Stage 143:===============================================>    (111 + 11) / 122][Stage 143:====================================================>(120 + 2) / 122][Stage 143:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.574193219 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346157369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=======================================>             (85 + 30) / 115][Stage 144:==============================================>     (103 + 12) / 115][Stage 144:===================================================> (112 + 3) / 115]                                                                                [Stage 145:======================================>              (85 + 31) / 116][Stage 145:===========================================>         (96 + 20) / 116][Stage 145:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.555193298 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379840361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:===============================>                     (68 + 45) / 113][Stage 146:=======================================>             (84 + 29) / 113][Stage 146:================================================>    (104 + 9) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:=================================>                   (71 + 43) / 114][Stage 147:==========================================>          (91 + 23) / 114][Stage 147:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.170358523 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396458528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:=============================>                       (68 + 53) / 121][Stage 148:======================================>              (88 + 33) / 121][Stage 148:==============================================>     (108 + 13) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (62 + 60) / 122][Stage 149:===============================>                     (72 + 50) / 122][Stage 149:=======================================>             (90 + 32) / 122][Stage 149:===============================================>    (111 + 11) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.177922295 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397238187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (62 + 59) / 121][Stage 150:===============================>                     (72 + 49) / 121][Stage 150:======================================>              (88 + 33) / 121][Stage 150:==============================================>     (108 + 13) / 121][Stage 150:====================================================>(119 + 2) / 121]                                                                                [Stage 151:============================>                        (65 + 57) / 122][Stage 151:=================================>                   (76 + 46) / 122][Stage 151:==========================================>          (97 + 25) / 122][Stage 151:=================================================>   (115 + 7) / 122][Stage 151:====================================================>(120 + 2) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.776631799 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356063533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (79 + 34) / 113][Stage 152:==========================================>          (91 + 22) / 113][Stage 152:==============================================>      (99 + 14) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:=======================================>             (85 + 29) / 114][Stage 153:============================================>        (95 + 19) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:===================================================> (111 + 3) / 114][Stage 153:====================================================>(112 + 2) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.977763138 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350106385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (81 + 34) / 115][Stage 154:=========================================>           (89 + 26) / 115][Stage 154:===============================================>    (105 + 10) / 115]                                                                                [Stage 155:======================================>              (84 + 32) / 116][Stage 155:==========================================>          (94 + 22) / 116][Stage 155:=============================================>      (101 + 15) / 116][Stage 155:==================================================>  (111 + 5) / 116][Stage 155:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.795616101 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376490372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:==============================>                      (64 + 49) / 113][Stage 156:====================================>                (77 + 36) / 113][Stage 156:==============================================>     (100 + 13) / 113]                                                                                [Stage 157:============================>                        (62 + 52) / 114][Stage 157:==================================>                  (74 + 40) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:=================================================>   (107 + 7) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.161699001 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381193064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:============================>                        (61 + 52) / 113][Stage 158:====================================>                (77 + 36) / 113][Stage 158:================================================>    (104 + 9) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:==============================>                      (65 + 49) / 114][Stage 159:====================================>                (79 + 35) / 114][Stage 159:=============================================>       (98 + 16) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.228458733 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34922117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:====================================>                (78 + 35) / 113][Stage 160:========================================>            (87 + 26) / 113][Stage 160:==============================================>     (101 + 12) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:====================================>                (79 + 35) / 114][Stage 161:=========================================>           (89 + 25) / 114][Stage 161:============================================>        (96 + 18) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:===================================================> (111 + 3) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.985028254 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365230899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (73 + 40) / 113][Stage 162:========================================>            (86 + 27) / 113][Stage 162:=============================================>       (96 + 17) / 113][Stage 162:==================================================>  (107 + 6) / 113][Stage 162:====================================================>(111 + 2) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:==================================>                  (75 + 39) / 114][Stage 163:=======================================>             (84 + 30) / 114][Stage 163:===========================================>         (94 + 20) / 114][Stage 163:==================================================>  (108 + 6) / 114][Stage 163:===================================================> (111 + 3) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.357664469 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331483108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (81 + 34) / 115][Stage 164:=======================================>             (86 + 29) / 115][Stage 164:===============================================>    (104 + 11) / 115][Stage 164:===================================================> (111 + 4) / 115]                                                                                [Stage 165:====================================>                (80 + 36) / 116][Stage 165:========================================>            (88 + 28) / 116][Stage 165:===========================================>         (95 + 21) / 116][Stage 165:==================================================>  (110 + 6) / 116][Stage 165:===================================================> (112 + 4) / 116][Stage 165:====================================================>(114 + 2) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.090953623 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348865694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (79 + 34) / 113][Stage 166:========================================>            (87 + 26) / 113][Stage 166:=============================================>       (96 + 17) / 113][Stage 166:===================================================> (109 + 4) / 113]                                                                                [Stage 167:====================================>                (79 + 35) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.008278316 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350779131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (73 + 40) / 113][Stage 168:======================================>              (83 + 30) / 113][Stage 168:=============================================>       (97 + 16) / 113][Stage 168:==================================================>  (107 + 6) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:=====================================>               (80 + 34) / 114][Stage 169:========================================>            (88 + 26) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:==================================================>  (108 + 6) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.829917905 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417530478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:==========================>                          (61 + 59) / 120][Stage 170:==================================>                  (77 + 43) / 120][Stage 170:===========================================>         (99 + 21) / 120][Stage 170:===================================================> (116 + 4) / 120][Stage 170:====================================================>(119 + 1) / 120]                                                                                [Stage 171:===========================>                         (62 + 59) / 121][Stage 171:=============================>                       (67 + 54) / 121][Stage 171:======================================>              (89 + 32) / 121][Stage 171:==============================================>     (108 + 13) / 121][Stage 171:====================================================>(119 + 2) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.700696596 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357412859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (75 + 43) / 118][Stage 172:=====================================>               (84 + 34) / 118][Stage 172:===========================================>         (97 + 21) / 118][Stage 172:================================================>    (109 + 9) / 118][Stage 172:====================================================>(116 + 2) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:====================================>                (81 + 38) / 119][Stage 173:========================================>            (90 + 29) / 119][Stage 173:============================================>       (102 + 17) / 119][Stage 173:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.25693628 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33302819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (81 + 34) / 115][Stage 174:=======================================>             (85 + 30) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:======================================>              (84 + 32) / 116][Stage 175:========================================>            (89 + 27) / 116][Stage 175:==============================================>     (103 + 13) / 116][Stage 175:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.542441785 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401529852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (62 + 59) / 121][Stage 176:================================>                    (75 + 46) / 121][Stage 176:========================================>            (92 + 29) / 121][Stage 176:===============================================>    (111 + 10) / 121][Stage 176:====================================================>(120 + 1) / 121]                                                                                [Stage 177:============================>                        (65 + 57) / 122][Stage 177:==================================>                  (79 + 43) / 122][Stage 177:==============================================>     (110 + 12) / 122][Stage 177:===================================================> (118 + 4) / 122][Stage 177:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.559072027 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37863462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (73 + 42) / 115][Stage 178:========================================>            (88 + 27) / 115][Stage 178:=============================================>      (100 + 15) / 115][Stage 178:==================================================>  (109 + 6) / 115]                                                                                [Stage 179:================================>                    (72 + 44) / 116][Stage 179:========================================>            (88 + 28) / 116][Stage 179:============================================>       (100 + 16) / 116][Stage 179:===================================================> (112 + 4) / 116][Stage 179:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.178842639 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394540268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (61 + 52) / 113][Stage 180:==================================>                  (73 + 40) / 113][Stage 180:=========================================>           (89 + 24) / 113][Stage 180:================================================>    (104 + 9) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===============================>                     (67 + 47) / 114][Stage 181:===================================>                 (77 + 37) / 114][Stage 181:===========================================>         (93 + 21) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.333124178 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423165932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:============================>                        (64 + 56) / 120][Stage 182:===================================>                 (80 + 40) / 120][Stage 182:===========================================>        (101 + 19) / 120][Stage 182:===================================================> (116 + 4) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:=============================>                       (68 + 53) / 121][Stage 183:======================================>              (88 + 33) / 121][Stage 183:==============================================>     (108 + 13) / 121][Stage 183:==================================================>  (116 + 5) / 121][Stage 183:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.499976031 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37967314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==================================>                  (74 + 39) / 113][Stage 184:=========================================>           (88 + 25) / 113][Stage 184:==============================================>     (100 + 13) / 113][Stage 184:==================================================>  (108 + 5) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:====================================>                (79 + 35) / 114][Stage 185:========================================>            (88 + 26) / 114][Stage 185:==============================================>      (99 + 15) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.082301055 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387104787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (61 + 59) / 120][Stage 186:===============================>                     (72 + 48) / 120][Stage 186:=========================================>           (93 + 27) / 120][Stage 186:==================================================>  (114 + 6) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:==============================>                      (69 + 52) / 121][Stage 187:======================================>              (87 + 34) / 121][Stage 187:==============================================>     (108 + 13) / 121][Stage 187:===================================================> (117 + 4) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.540193947 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337752126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (82 + 33) / 115][Stage 188:========================================>            (87 + 28) / 115][Stage 188:============================================>        (97 + 18) / 115][Stage 188:===============================================>    (104 + 11) / 115]                                                                                [Stage 189:=====================================>               (83 + 33) / 116][Stage 189:========================================>            (89 + 27) / 116][Stage 189:============================================>        (98 + 18) / 116][Stage 189:==================================================>  (111 + 5) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.49618283 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39125944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:============================>                        (61 + 52) / 113][Stage 190:====================================>                (77 + 36) / 113][Stage 190:==========================================>          (90 + 23) / 113][Stage 190:=================================================>   (105 + 8) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:===============================>                     (67 + 47) / 114][Stage 191:======================================>              (82 + 32) / 114][Stage 191:=============================================>      (100 + 14) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(112 + 2) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.044607162 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344592794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (70 + 43) / 113][Stage 192:=====================================>               (80 + 33) / 113][Stage 192:===========================================>         (92 + 21) / 113][Stage 192:===============================================>    (103 + 10) / 113][Stage 192:==================================================>  (108 + 5) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:=================================>                   (73 + 41) / 114][Stage 193:======================================>              (82 + 32) / 114][Stage 193:===========================================>         (93 + 21) / 114][Stage 193:===============================================>    (104 + 10) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.126314583 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359415046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (73 + 40) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:=============================================>       (96 + 17) / 113][Stage 194:=================================================>   (106 + 7) / 113]                                                                                [Stage 195:=====================================>               (81 + 33) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:===============================================>    (104 + 10) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.772400173 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397577651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:============================>                        (61 + 52) / 113][Stage 196:===================================>                 (75 + 38) / 113][Stage 196:==============================================>      (99 + 14) / 113][Stage 196:==================================================>  (107 + 6) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:=================================>                   (71 + 43) / 114][Stage 197:========================================>            (88 + 26) / 114][Stage 197:===============================================>    (104 + 10) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.217498176 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381175664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:=================================>                   (75 + 43) / 118][Stage 198:====================================>                (82 + 36) / 118][Stage 198:==========================================>          (94 + 24) / 118][Stage 198:=================================================>   (111 + 7) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:====================================>                (83 + 36) / 119][Stage 199:========================================>            (90 + 29) / 119][Stage 199:=============================================>      (105 + 14) / 119][Stage 199:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.255379368 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.329142268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (83 + 32) / 115][Stage 200:============================================>        (96 + 19) / 115][Stage 200:=================================================>   (108 + 7) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:=====================================>               (82 + 34) / 116][Stage 201:========================================>            (88 + 28) / 116][Stage 201:=============================================>      (102 + 14) / 116][Stage 201:==================================================>  (110 + 6) / 116][Stage 201:===================================================> (112 + 4) / 116][Stage 201:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.910046281 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 12:32:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:56928) dropped. RpcEnv already stopped.
17/05/22 12:32:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:56928) dropped. RpcEnv already stopped.

real	10m44.590s
user	11m56.896s
sys	0m58.224s
