Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 10:47:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:47:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:47:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:47:34 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 10:47:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:47:47 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522104736-0449).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.47659921 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.591785392 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.770999531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======>                                               (15 + 98) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:==================================================>    (104 + 9) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:=============================>                         (62 + 52) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:=======================================>               (81 + 33) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.810209374 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.595379556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:======================================>                (80 + 35) / 115][Stage 4:=======================================>               (83 + 32) / 115][Stage 4:============================================>          (93 + 22) / 115][Stage 4:==============================================>        (98 + 17) / 115][Stage 4:===================================================>   (108 + 7) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:=====================================>                 (80 + 36) / 116][Stage 5:=======================================>               (84 + 32) / 116][Stage 5:==========================================>            (90 + 26) / 116][Stage 5:=============================================>         (97 + 19) / 116][Stage 5:===============================================>      (102 + 14) / 116][Stage 5:==================================================>    (107 + 9) / 116][Stage 5:=====================================================> (112 + 4) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.532555301 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.675071451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (73 + 45) / 118][Stage 6:=====================================>                 (81 + 37) / 118][Stage 6:========================================>              (87 + 31) / 118][Stage 6:=========================================>             (90 + 28) / 118][Stage 6:==============================================>        (99 + 19) / 118][Stage 6:====================================================>  (113 + 5) / 118]                                                                                [Stage 7:=================================>                     (73 + 46) / 119][Stage 7:===================================>                   (76 + 43) / 119][Stage 7:======================================>                (84 + 35) / 119][Stage 7:===========================================>           (94 + 25) / 119][Stage 7:===============================================>      (104 + 15) / 119][Stage 7:===================================================>   (111 + 8) / 119]                                                                                Time elapsed: 4.205737773 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.628287121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=============================>                         (62 + 53) / 115][Stage 8:==================================>                    (73 + 42) / 115][Stage 8:======================================>                (81 + 34) / 115][Stage 8:===========================================>           (91 + 24) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:==============================>                        (65 + 51) / 116][Stage 9:===================================>                   (74 + 42) / 116][Stage 9:=======================================>               (83 + 33) / 116][Stage 9:===========================================>           (91 + 25) / 116][Stage 9:===============================================>      (103 + 13) / 116][Stage 9:====================================================>  (110 + 6) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.851793485 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47599002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (79 + 36) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:==========================================>           (90 + 25) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:===============================================>     (104 + 11) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:======================================>               (82 + 34) / 116][Stage 11:========================================>             (87 + 29) / 116][Stage 11:============================================>         (95 + 21) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.727275409 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.635889308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:==================================>                   (77 + 44) / 121][Stage 12:===========================================>          (98 + 23) / 121][Stage 12:================================================>    (110 + 11) / 121][Stage 12:===================================================>  (115 + 6) / 121][Stage 12:====================================================> (118 + 3) / 121]                                                                                [Stage 13:===========================>                          (62 + 60) / 122][Stage 13:==============================>                       (68 + 54) / 122][Stage 13:======================================>               (87 + 35) / 122][Stage 13:============================================>        (102 + 20) / 122][Stage 13:==================================================>   (115 + 7) / 122][Stage 13:====================================================> (119 + 3) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.359051683 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481400245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==================================>                   (72 + 41) / 113][Stage 14:=======================================>              (83 + 30) / 113][Stage 14:==========================================>           (88 + 25) / 113][Stage 14:================================================>    (103 + 10) / 113][Stage 14:==================================================>   (105 + 8) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:==================================>                   (73 + 41) / 114][Stage 15:=======================================>              (84 + 30) / 114][Stage 15:==========================================>           (90 + 24) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.629398878 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539431506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:=================================>                    (71 + 42) / 113][Stage 16:=============================================>        (95 + 18) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:=================================>                    (70 + 44) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.612858913 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 152 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166  OR  partitionIndex = 152 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509855446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (69 + 46) / 115][Stage 18:===================================>                  (75 + 40) / 115][Stage 18:=======================================>              (85 + 30) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:====================================================> (112 + 3) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:===================================>                  (76 + 40) / 116][Stage 19:=======================================>              (85 + 31) / 116][Stage 19:=============================================>       (100 + 16) / 116][Stage 19:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.282660715 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547559194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (56 + 57) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:=================================>                    (71 + 42) / 113][Stage 20:===========================================>          (91 + 22) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===========================>                          (57 + 57) / 114][Stage 21:=============================>                        (62 + 52) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:=========================================>            (87 + 27) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.909388488 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426863671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=======================================>              (84 + 31) / 115][Stage 22:==============================================>      (100 + 15) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:======================================>               (82 + 34) / 116][Stage 23:=========================================>            (90 + 26) / 116][Stage 23:==============================================>      (102 + 14) / 116][Stage 23:====================================================> (113 + 3) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.743671063 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441809123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=======================================>              (84 + 31) / 115][Stage 24:===========================================>          (92 + 23) / 115][Stage 24:==============================================>      (100 + 15) / 115][Stage 24:==================================================>   (107 + 8) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:========================================>             (86 + 30) / 116][Stage 25:============================================>         (96 + 20) / 116][Stage 25:==============================================>      (102 + 14) / 116][Stage 25:===================================================>  (110 + 6) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.552103158 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472566465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=====================================>                (81 + 37) / 118][Stage 26:==========================================>           (93 + 25) / 118][Stage 26:================================================>    (107 + 11) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (76 + 43) / 119][Stage 27:=====================================>                (83 + 36) / 119][Stage 27:===========================================>          (96 + 23) / 119][Stage 27:==============================================>      (104 + 15) / 119][Stage 27:================================================>    (108 + 11) / 119][Stage 27:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.774860117 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113 ", 2)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46407264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=====================================>                (82 + 36) / 118][Stage 28:============================================>         (97 + 21) / 118][Stage 28:====================================================> (114 + 4) / 118]                                                                                [Stage 29:=================================>                    (74 + 45) / 119][Stage 29:=======================================>              (88 + 31) / 119][Stage 29:============================================>        (100 + 19) / 119][Stage 29:=================================================>    (110 + 9) / 119][Stage 29:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.230161089 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537950431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===========================>                          (61 + 60) / 121][Stage 30:===============================>                      (70 + 51) / 121][Stage 30:=======================================>              (89 + 32) / 121][Stage 30:====================================================> (117 + 4) / 121]                                                                                [Stage 31:=============================>                        (66 + 56) / 122][Stage 31:=================================>                    (75 + 47) / 122][Stage 31:===========================================>         (101 + 21) / 122][Stage 31:================================================>    (111 + 11) / 122][Stage 31:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.328285122 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428853837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (83 + 32) / 115][Stage 32:==========================================>           (90 + 25) / 115][Stage 32:==================================================>   (108 + 7) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:=======================================>              (84 + 32) / 116][Stage 33:=========================================>            (90 + 26) / 116][Stage 33:==============================================>      (102 + 14) / 116][Stage 33:====================================================> (113 + 3) / 116][Stage 33:=====================================================>(114 + 2) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.074906631 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46110622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=======================================>              (82 + 31) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:===================================>                  (75 + 39) / 114][Stage 35:==========================================>           (89 + 25) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.186760714 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452842755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (71 + 47) / 118][Stage 36:==================================>                   (75 + 43) / 118][Stage 36:=========================================>            (91 + 27) / 118][Stage 36:==================================================>   (111 + 7) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:========================================>             (89 + 30) / 119][Stage 37:===============================================>     (106 + 13) / 119][Stage 37:====================================================> (115 + 4) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.134941263 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451164694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:====================================>                 (76 + 37) / 113][Stage 38:=========================================>            (87 + 26) / 113][Stage 38:=============================================>        (96 + 17) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=====================================>                (79 + 35) / 114][Stage 39:===========================================>          (91 + 23) / 114][Stage 39:==============================================>       (99 + 15) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.107565109 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411031308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (82 + 33) / 115][Stage 40:============================================>         (95 + 20) / 115][Stage 40:=================================================>    (106 + 9) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:======================================>               (82 + 34) / 116][Stage 41:===========================================>          (93 + 23) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:===================================================>  (111 + 5) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.220527813 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504879053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:==============================>                       (63 + 50) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:================================================>    (103 + 10) / 113][Stage 42:====================================================> (110 + 3) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:=============================>                        (63 + 51) / 114][Stage 43:=====================================>                (79 + 35) / 114][Stage 43:============================================>         (94 + 20) / 114][Stage 43:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.482426522 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502958013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:============================>                         (64 + 56) / 120][Stage 44:====================================>                 (81 + 39) / 120][Stage 44:==============================================>      (105 + 15) / 120][Stage 44:=====================================================>(118 + 2) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:===============================>                      (71 + 50) / 121][Stage 45:========================================>             (91 + 30) / 121][Stage 45:===============================================>     (109 + 12) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.285097408 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537671098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:==================================>                   (76 + 42) / 118][Stage 46:====================================>                 (80 + 38) / 118][Stage 46:===========================================>          (94 + 24) / 118][Stage 46:==================================================>   (111 + 7) / 118][Stage 46:=====================================================>(117 + 1) / 118]                                                                                [Stage 47:==================================>                   (75 + 44) / 119][Stage 47:==================================>                   (77 + 42) / 119][Stage 47:=====================================>                (83 + 36) / 119][Stage 47:==========================================>           (93 + 26) / 119][Stage 47:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.377083419 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411610471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (72 + 41) / 113][Stage 48:========================================>             (84 + 29) / 113][Stage 48:===========================================>          (92 + 21) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:===================================================>  (108 + 5) / 113][Stage 48:====================================================> (109 + 4) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:====================================>                 (76 + 38) / 114][Stage 49:=========================================>            (88 + 26) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.336061515 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403017825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (79 + 34) / 113][Stage 50:=========================================>            (86 + 27) / 113][Stage 50:==============================================>       (97 + 16) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:=====================================>                (80 + 34) / 114][Stage 51:===========================================>          (92 + 22) / 114][Stage 51:==============================================>      (100 + 14) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:===================================================>  (109 + 5) / 114][Stage 51:=====================================================>(112 + 2) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.389561018 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457231724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (61 + 59) / 120][Stage 52:=================================>                    (75 + 45) / 120][Stage 52:===========================================>          (97 + 23) / 120][Stage 52:==================================================>   (112 + 8) / 120][Stage 52:=====================================================>(119 + 1) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:============================>                         (64 + 57) / 121][Stage 53:======================================>               (87 + 34) / 121][Stage 53:=============================================>       (105 + 16) / 121][Stage 53:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.317977173 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 209 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 209 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487851626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:================================>                     (73 + 47) / 120][Stage 54:=========================================>            (92 + 28) / 120][Stage 54:=================================================>    (111 + 9) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:===============================>                      (71 + 50) / 121][Stage 55:======================================>               (87 + 34) / 121][Stage 55:===============================================>     (108 + 13) / 121][Stage 55:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.109869851 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387636855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (81 + 34) / 115][Stage 56:=======================================>              (85 + 30) / 115][Stage 56:=============================================>        (97 + 18) / 115][Stage 56:===================================================>  (110 + 5) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:======================================>               (83 + 33) / 116][Stage 57:==============================================>       (99 + 17) / 116][Stage 57:==================================================>   (109 + 7) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.894929902 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438587593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:=============================>                        (62 + 51) / 113][Stage 58:======================================>               (81 + 32) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:===================================================>  (107 + 6) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (67 + 47) / 114][Stage 59:==========================================>           (89 + 25) / 114][Stage 59:===================================================>  (109 + 5) / 114][Stage 59:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.520947573 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458235967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:============================>                         (63 + 58) / 121][Stage 60:=================================>                    (75 + 46) / 121][Stage 60:===========================================>          (98 + 23) / 121][Stage 60:=====================================================>(120 + 1) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:=============================>                        (66 + 56) / 122][Stage 61:======================================>               (86 + 36) / 122][Stage 61:================================================>    (111 + 11) / 122][Stage 61:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.163967164 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467632495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (60 + 53) / 113][Stage 62:================================>                     (67 + 46) / 113][Stage 62:=========================================>            (86 + 27) / 113][Stage 62:==================================================>   (105 + 8) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:===============================>                      (67 + 47) / 114][Stage 63:========================================>             (86 + 28) / 114][Stage 63:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 3.277534449 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426770666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (60 + 53) / 113][Stage 64:===================================>                  (74 + 39) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:====================================================> (109 + 4) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:===========================>                          (59 + 55) / 114][Stage 65:================================>                     (69 + 45) / 114][Stage 65:=======================================>              (84 + 30) / 114][Stage 65:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.122951944 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43132583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (73 + 45) / 118][Stage 66:========================================>             (88 + 30) / 118][Stage 66:================================================>    (107 + 11) / 118]                                                                                [Stage 67:==================================>                   (76 + 43) / 119][Stage 67:===================================>                  (79 + 40) / 119][Stage 67:=============================================>       (103 + 16) / 119][Stage 67:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.021332335 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437334155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:>                                                       (0 + 0) / 113][Stage 68:============================>                         (59 + 54) / 113][Stage 68:===============================>                      (65 + 48) / 113][Stage 68:=====================================>                (79 + 34) / 113][Stage 68:=============================================>        (95 + 18) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:================================>                     (68 + 46) / 114][Stage 69:==========================================>           (89 + 25) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.348577796 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44286916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:===============================>                      (70 + 50) / 120][Stage 70:========================================>             (90 + 30) / 120][Stage 70:================================================>    (110 + 10) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (69 + 52) / 121][Stage 71:========================================>             (90 + 31) / 121][Stage 71:===================================================>  (115 + 6) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.199573573 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391003443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=======================================>              (84 + 31) / 115][Stage 72:===========================================>          (93 + 22) / 115][Stage 72:=================================================>    (106 + 9) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:======================================>               (82 + 34) / 116][Stage 73:==========================================>           (92 + 24) / 116][Stage 73:==================================================>   (108 + 8) / 116][Stage 73:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.757053578 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419440184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (73 + 42) / 115][Stage 74:=========================================>            (89 + 26) / 115][Stage 74:==============================================>      (101 + 14) / 115][Stage 74:====================================================> (112 + 3) / 115]                                                                                [Stage 75:===============================>                      (68 + 48) / 116][Stage 75:======================================>               (82 + 34) / 116][Stage 75:=============================================>        (97 + 19) / 116][Stage 75:====================================================> (112 + 4) / 116][Stage 75:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.974337779 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442257542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:=============================>                        (62 + 51) / 113][Stage 76:===================================>                  (75 + 38) / 113][Stage 76:==============================================>       (98 + 15) / 113][Stage 76:====================================================> (110 + 3) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=============================>                        (62 + 52) / 114][Stage 77:=======================================>              (83 + 31) / 114][Stage 77:=============================================>        (97 + 17) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.099712575 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437546138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=================================>                    (70 + 43) / 113][Stage 78:==========================================>           (88 + 25) / 113][Stage 78:====================================================> (109 + 4) / 113]                                                                                [Stage 79:=============================>                        (63 + 51) / 114][Stage 79:====================================>                 (78 + 36) / 114][Stage 79:==============================================>      (100 + 14) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.162631746 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430093814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (62 + 59) / 121][Stage 80:===============================>                      (71 + 50) / 121][Stage 80:============================================>         (99 + 22) / 121][Stage 80:===================================================>  (115 + 6) / 121][Stage 80:=====================================================>(120 + 1) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:==============================>                       (70 + 52) / 122][Stage 81:====================================>                 (82 + 40) / 122][Stage 81:===========================================>         (100 + 22) / 122][Stage 81:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.204060781 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425128731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:============================>                         (59 + 54) / 113][Stage 82:=================================>                    (70 + 43) / 113][Stage 82:=========================================>            (87 + 26) / 113][Stage 82:==================================================>   (106 + 7) / 113]                                                                                [Stage 83:==============================>                       (64 + 50) / 114][Stage 83:===================================>                  (74 + 40) / 114][Stage 83:============================================>         (94 + 20) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.214272412 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365311107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (83 + 32) / 115][Stage 84:========================================>             (86 + 29) / 115][Stage 84:============================================>         (95 + 20) / 115][Stage 84:===============================================>     (104 + 11) / 115][Stage 84:====================================================> (112 + 3) / 115]                                                                                [Stage 85:=======================================>              (84 + 32) / 116][Stage 85:===========================================>          (93 + 23) / 116][Stage 85:=================================================>    (107 + 9) / 116][Stage 85:====================================================> (112 + 4) / 116][Stage 85:=====================================================>(114 + 2) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.739860098 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373810995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (71 + 42) / 113][Stage 86:========================================>             (85 + 28) / 113][Stage 86:============================================>         (94 + 19) / 113][Stage 86:===================================================>  (107 + 6) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:==================================>                   (73 + 41) / 114][Stage 87:=======================================>              (84 + 30) / 114][Stage 87:============================================>         (93 + 21) / 114][Stage 87:===================================================>  (108 + 6) / 114][Stage 87:====================================================> (111 + 3) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.112054428 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372248234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=====================================>                (79 + 36) / 115][Stage 88:=======================================>              (85 + 30) / 115][Stage 88:==============================================>       (99 + 16) / 115][Stage 88:====================================================> (111 + 4) / 115]                                                                                [Stage 89:======================================>               (82 + 34) / 116][Stage 89:==========================================>           (91 + 25) / 116][Stage 89:===============================================>     (104 + 12) / 116][Stage 89:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.737511457 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403069957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:====================================>                 (79 + 39) / 118][Stage 90:===========================================>          (95 + 23) / 118][Stage 90:================================================>    (108 + 10) / 118][Stage 90:=====================================================>(116 + 2) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:===================================>                  (78 + 41) / 119][Stage 91:=========================================>            (92 + 27) / 119][Stage 91:=================================================>    (110 + 9) / 119][Stage 91:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.334472622 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399229755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===============================>                      (68 + 47) / 115][Stage 92:=====================================>                (79 + 36) / 115][Stage 92:==============================================>       (98 + 17) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:================================>                     (69 + 47) / 116][Stage 93:======================================>               (83 + 33) / 116][Stage 93:===============================================>     (103 + 13) / 116][Stage 93:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.627905804 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96 ", 2)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444398149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:===========================>                          (62 + 59) / 121][Stage 94:==================================>                   (77 + 44) / 121][Stage 94:===========================================>          (98 + 23) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:===========================>                          (63 + 59) / 122][Stage 95:====================================>                 (82 + 40) / 122][Stage 95:===========================================>         (100 + 22) / 122][Stage 95:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.172022791 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382095083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:====================================>                 (76 + 37) / 113][Stage 96:==========================================>           (88 + 25) / 113][Stage 96:===============================================>     (102 + 11) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:=====================================>                (79 + 35) / 114][Stage 97:==========================================>           (90 + 24) / 114][Stage 97:=================================================>    (105 + 9) / 114][Stage 97:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.993844502 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393951672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:===================================>                  (77 + 41) / 118][Stage 98:=======================================>              (87 + 31) / 118][Stage 98:============================================>         (98 + 20) / 118][Stage 98:=================================================>    (109 + 9) / 118]                                                                                [Stage 99:=================================>                    (73 + 46) / 119][Stage 99:===================================>                  (78 + 41) / 119][Stage 99:=======================================>              (86 + 33) / 119][Stage 99:==========================================>           (93 + 26) / 119][Stage 99:===============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.768572663 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371139797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:====================================>                (77 + 36) / 113][Stage 100:========================================>            (87 + 26) / 113][Stage 100:==============================================>      (99 + 14) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:====================================>                (78 + 36) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.154760012 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354762564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=====================================>               (82 + 33) / 115][Stage 102:=========================================>           (91 + 24) / 115][Stage 102:===============================================>    (104 + 11) / 115][Stage 102:===================================================> (112 + 3) / 115]                                                                                [Stage 103:=====================================>               (83 + 33) / 116][Stage 103:==========================================>          (93 + 23) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.783676939 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356373446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:========================================>            (87 + 28) / 115][Stage 104:==============================================>     (102 + 13) / 115][Stage 104:=================================================>   (108 + 7) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:========================================>            (89 + 27) / 116][Stage 105:=============================================>      (102 + 14) / 116][Stage 105:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.779036839 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429469281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:===========================================>         (92 + 21) / 113][Stage 106:=================================================>   (106 + 7) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:==================================>                  (74 + 40) / 114][Stage 107:========================================>            (88 + 26) / 114][Stage 107:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.115928056 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416953493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (61 + 52) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:=============================================>       (98 + 15) / 113][Stage 108:==================================================>  (108 + 5) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:=================================>                   (71 + 43) / 114][Stage 109:=======================================>             (85 + 29) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.203224866 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376629204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:====================================>                (80 + 35) / 115][Stage 110:========================================>            (87 + 28) / 115][Stage 110:==============================================>     (102 + 13) / 115][Stage 110:===================================================> (112 + 3) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:=====================================>               (82 + 34) / 116][Stage 111:==========================================>          (93 + 23) / 116][Stage 111:=================================================>   (108 + 8) / 116][Stage 111:===================================================> (113 + 3) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.862361594 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439668411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:===============================>                     (73 + 48) / 121][Stage 112:==========================================>          (96 + 25) / 121][Stage 112:===============================================>    (111 + 10) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:==================================>                  (80 + 42) / 122][Stage 113:==========================================>         (100 + 22) / 122][Stage 113:=================================================>   (115 + 7) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.151557436 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439872532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:==============================>                      (69 + 51) / 120][Stage 114:==================================>                  (79 + 41) / 120][Stage 114:===========================================>        (101 + 19) / 120][Stage 114:===============================================>    (110 + 10) / 120]                                                                                [Stage 115:===========================>                         (62 + 59) / 121][Stage 115:===============================>                     (72 + 49) / 121][Stage 115:=======================================>             (91 + 30) / 121][Stage 115:============================================>       (104 + 17) / 121][Stage 115:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.402956291 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399844263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:===============================>                     (68 + 45) / 113][Stage 116:=========================================>           (88 + 25) / 113][Stage 116:==================================================>  (107 + 6) / 113]                                                                                [Stage 117:============================>                        (61 + 53) / 114][Stage 117:================================>                    (70 + 44) / 114][Stage 117:========================================>            (88 + 26) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129087688 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344783881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:===========================================>         (95 + 20) / 115][Stage 118:==================================================>  (110 + 5) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:=====================================>               (82 + 34) / 116][Stage 119:=======================================>             (87 + 29) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:====================================================>(114 + 2) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.810851731 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425940124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=======================================>             (86 + 29) / 115][Stage 120:=============================================>       (98 + 17) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=======================================>             (86 + 30) / 116][Stage 121:===========================================>         (96 + 20) / 116][Stage 121:==============================================>     (104 + 12) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.710103139 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  partitionIndex = 120 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  partitionIndex = 120 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410222872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 57)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350200046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (78 + 35) / 113][Stage 122:==========================================>          (90 + 23) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:================================================>    (104 + 9) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:=====================================>               (81 + 33) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:==================================================>  (108 + 6) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.362144921 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413449436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:===========================>                         (63 + 58) / 121][Stage 124:=================================>                   (77 + 44) / 121][Stage 124:==========================================>          (96 + 25) / 121][Stage 124:==================================================>  (115 + 6) / 121]                                                                                [Stage 125:==========================>                          (61 + 61) / 122][Stage 125:=============================>                       (67 + 55) / 122][Stage 125:====================================>                (83 + 39) / 122][Stage 125:===========================================>        (103 + 19) / 122][Stage 125:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.23675135 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395956862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==============================>                      (67 + 48) / 115][Stage 126:===================================>                 (76 + 39) / 115][Stage 126:============================================>        (97 + 18) / 115][Stage 126:================================================>    (106 + 9) / 115][Stage 126:==================================================>  (110 + 5) / 115]                                                                                [Stage 127:=================================>                   (73 + 43) / 116][Stage 127:=====================================>               (82 + 34) / 116][Stage 127:==========================================>          (93 + 23) / 116][Stage 127:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.99512059 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4183901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 61) / 121][Stage 128:============================>                        (65 + 56) / 121][Stage 128:=====================================>               (85 + 36) / 121][Stage 128:=================================================>   (114 + 7) / 121]                                                                                [Stage 129:============================>                        (66 + 56) / 122][Stage 129:=======================================>             (90 + 32) / 122][Stage 129:============================================>       (105 + 17) / 122][Stage 129:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 2.985398707 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424051045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:============================>                        (65 + 55) / 120][Stage 130:=================================>                   (75 + 45) / 120][Stage 130:=============================================>      (104 + 16) / 120]                                                                                [Stage 131:===========================>                         (62 + 59) / 121][Stage 131:==============================>                      (69 + 52) / 121][Stage 131:=====================================>               (86 + 35) / 121][Stage 131:=============================================>      (107 + 14) / 121][Stage 131:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.171293993 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379742092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (73 + 45) / 118][Stage 132:====================================>                (81 + 37) / 118][Stage 132:============================================>       (101 + 17) / 118][Stage 132:==================================================>  (113 + 5) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:===================================>                 (79 + 40) / 119][Stage 133:=============================================>      (103 + 16) / 119][Stage 133:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.101908305 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344470325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:======================================>              (83 + 32) / 115][Stage 134:===========================================>         (95 + 20) / 115][Stage 134:=============================================>      (100 + 15) / 115][Stage 134:==================================================>  (109 + 6) / 115]                                                                                [Stage 135:======================================>              (84 + 32) / 116][Stage 135:==========================================>          (92 + 24) / 116][Stage 135:=============================================>      (102 + 14) / 116][Stage 135:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.231654569 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411836658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:===========================>                         (63 + 57) / 120][Stage 136:================================>                    (73 + 47) / 120][Stage 136:============================================>       (102 + 18) / 120]                                                                                [Stage 137:===========================>                         (63 + 58) / 121][Stage 137:==============================>                      (69 + 52) / 121][Stage 137:=========================================>           (94 + 27) / 121][Stage 137:==================================================>  (115 + 6) / 121][Stage 137:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.018531489 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378864793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (75 + 43) / 118][Stage 138:=======================================>             (89 + 29) / 118][Stage 138:==================================================>  (113 + 5) / 118]                                                                                [Stage 139:=================================>                   (76 + 43) / 119][Stage 139:=====================================>               (85 + 34) / 119][Stage 139:=============================================>      (103 + 16) / 119][Stage 139:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.999131938 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365104902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (71 + 42) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:============================================>        (95 + 18) / 113][Stage 140:================================================>    (104 + 9) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:====================================>                (79 + 35) / 114][Stage 141:=======================================>             (86 + 28) / 114][Stage 141:=============================================>       (97 + 17) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.504120014 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345915008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (83 + 32) / 115][Stage 142:===========================================>         (94 + 21) / 115][Stage 142:================================================>    (106 + 9) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(113 + 2) / 115]                                                                                [Stage 143:======================================>              (85 + 31) / 116][Stage 143:=========================================>           (91 + 25) / 116][Stage 143:===============================================>    (106 + 10) / 116][Stage 143:===================================================> (112 + 4) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.090469117 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403655054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:==============================>                      (69 + 51) / 120][Stage 144:======================================>              (88 + 32) / 120][Stage 144:===============================================>    (109 + 11) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:===============================>                     (73 + 48) / 121][Stage 145:======================================>              (89 + 32) / 121][Stage 145:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.071840508 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404487854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (66 + 54) / 120][Stage 146:=========================================>           (94 + 26) / 120][Stage 146:=================================================>   (111 + 9) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:===========================>                         (62 + 59) / 121][Stage 147:=============================>                       (67 + 54) / 121][Stage 147:====================================>                (84 + 37) / 121][Stage 147:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.032766081 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3593418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (83 + 30) / 113][Stage 148:=============================================>       (96 + 17) / 113][Stage 148:=================================================>   (105 + 8) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:=======================================>             (85 + 29) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.824053482 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406841678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (65 + 55) / 120][Stage 150:=================================>                   (75 + 45) / 120][Stage 150:=============================================>      (106 + 14) / 120]                                                                                [Stage 151:===========================>                         (62 + 59) / 121][Stage 151:===============================>                     (71 + 50) / 121][Stage 151:====================================>                (84 + 37) / 121][Stage 151:==============================================>     (108 + 13) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.056528708 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386504923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=============================>                       (65 + 50) / 115][Stage 152:====================================>                (80 + 35) / 115][Stage 152:===========================================>         (95 + 20) / 115][Stage 152:================================================>    (106 + 9) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=================================>                   (73 + 43) / 116][Stage 153:=======================================>             (87 + 29) / 116][Stage 153:=============================================>       (99 + 17) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.522222757 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36981719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (74 + 44) / 118][Stage 154:=========================================>           (92 + 26) / 118][Stage 154:===============================================>    (107 + 11) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (76 + 43) / 119][Stage 155:======================================>              (86 + 33) / 119][Stage 155:===============================================>    (108 + 11) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.057753818 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391642847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:=============================>                       (62 + 51) / 113][Stage 156:==================================>                  (74 + 39) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:====================================>                (79 + 35) / 114][Stage 157:================================================>    (105 + 9) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.045371952 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387981485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:==============================>                      (64 + 49) / 113][Stage 158:=====================================>               (79 + 34) / 113][Stage 158:==========================================>          (91 + 22) / 113][Stage 158:===============================================>    (103 + 10) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:============================>                        (61 + 53) / 114][Stage 159:===============================>                     (68 + 46) / 114][Stage 159:=========================================>           (90 + 24) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.486816784 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363920887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (75 + 38) / 113][Stage 160:=======================================>             (84 + 29) / 113][Stage 160:==============================================>      (99 + 14) / 113][Stage 160:==================================================>  (108 + 5) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:=======================================>             (84 + 30) / 114][Stage 161:===========================================>         (94 + 20) / 114][Stage 161:==============================================>      (99 + 15) / 114][Stage 161:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.452313561 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39258279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:============================>                        (61 + 52) / 113][Stage 162:=================================>                   (72 + 41) / 113][Stage 162:===========================================>         (93 + 20) / 113][Stage 162:==================================================>  (108 + 5) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:===============================>                     (67 + 47) / 114][Stage 163:=====================================>               (81 + 33) / 114][Stage 163:=============================================>       (97 + 17) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.381305091 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433701823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:===========================>                         (63 + 58) / 121][Stage 164:=================================>                   (77 + 44) / 121][Stage 164:===========================================>        (102 + 19) / 121][Stage 164:====================================================>(119 + 2) / 121]                                                                                [Stage 165:==========================>                          (61 + 61) / 122][Stage 165:============================>                        (65 + 57) / 122][Stage 165:====================================>                (84 + 38) / 122][Stage 165:===========================================>        (103 + 19) / 122]                                                                                Time elapsed: 3.033857361 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355577702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:===========================================>         (92 + 21) / 113][Stage 166:==============================================>      (99 + 14) / 113][Stage 166:===================================================> (109 + 4) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:======================================>              (82 + 32) / 114][Stage 167:==========================================>          (91 + 23) / 114][Stage 167:=================================================>   (107 + 7) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.007953824 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368460612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===================================>                 (75 + 38) / 113][Stage 168:==========================================>          (90 + 23) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:==================================================>  (108 + 5) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=====================================>               (80 + 34) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:==================================================>  (109 + 5) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.285054348 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405795102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (66 + 55) / 121][Stage 170:=====================================>               (85 + 36) / 121][Stage 170:==============================================>     (109 + 12) / 121][Stage 170:====================================================>(119 + 2) / 121]                                                                                [Stage 171:===========================>                         (64 + 58) / 122][Stage 171:===============================>                     (72 + 50) / 122][Stage 171:========================================>            (94 + 28) / 122][Stage 171:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.25621571 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387464729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (71 + 44) / 115][Stage 172:========================================>            (88 + 27) / 115][Stage 172:===============================================>    (105 + 10) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:==================================>                  (75 + 41) / 116][Stage 173:=========================================>           (91 + 25) / 116][Stage 173:================================================>    (107 + 9) / 116][Stage 173:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.153804533 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365549992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (73 + 40) / 113][Stage 174:======================================>              (82 + 31) / 113][Stage 174:============================================>        (94 + 19) / 113][Stage 174:=================================================>   (106 + 7) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:=====================================>               (80 + 34) / 114][Stage 175:==========================================>          (91 + 23) / 114][Stage 175:==============================================>     (103 + 11) / 114][Stage 175:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.123254073 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398718819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:>                                                      (0 + 0) / 113][Stage 176:============================>                        (60 + 53) / 113][Stage 176:=============================>                       (63 + 50) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==============================================>     (101 + 12) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:==============================>                      (65 + 49) / 114][Stage 177:====================================>                (79 + 35) / 114][Stage 177:===========================================>         (93 + 21) / 114][Stage 177:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.352898342 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405706925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:===============================>                     (72 + 48) / 120][Stage 178:==========================================>          (97 + 23) / 120][Stage 178:===================================================> (116 + 4) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:============================>                        (65 + 56) / 121][Stage 179:====================================>                (83 + 38) / 121][Stage 179:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.062493274 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413019751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:==================================>                  (77 + 41) / 118][Stage 180:======================================>              (85 + 33) / 118][Stage 180:============================================>       (100 + 18) / 118][Stage 180:===================================================> (114 + 4) / 118]                                                                                [Stage 181:=================================>                   (75 + 44) / 119][Stage 181:==================================>                  (77 + 42) / 119][Stage 181:=====================================>               (85 + 34) / 119][Stage 181:============================================>       (101 + 18) / 119][Stage 181:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.418898704 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371654678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (71 + 42) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:=============================================>       (97 + 16) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:==================================>                  (74 + 40) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:============================================>        (95 + 19) / 114][Stage 183:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.807594577 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381257707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (70 + 45) / 115][Stage 184:========================================>            (88 + 27) / 115][Stage 184:==============================================>     (103 + 12) / 115][Stage 184:===================================================> (112 + 3) / 115]                                                                                [Stage 185:===================================>                 (77 + 39) / 116][Stage 185:========================================>            (88 + 28) / 116][Stage 185:=============================================>      (102 + 14) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.856399759 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396136759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (62 + 59) / 121][Stage 186:===============================>                     (72 + 49) / 121][Stage 186:======================================>              (87 + 34) / 121][Stage 186:===============================================>    (111 + 10) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:===============================>                     (72 + 50) / 122][Stage 187:============================================>       (104 + 18) / 122][Stage 187:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.953970942 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399532583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:================================>                    (74 + 46) / 120][Stage 188:======================================>              (88 + 32) / 120][Stage 188:=============================================>      (106 + 14) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (67 + 54) / 121][Stage 189:===================================>                 (80 + 41) / 121][Stage 189:==============================================>     (109 + 12) / 121][Stage 189:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.201125586 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398125182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:=============================>                       (67 + 54) / 121][Stage 190:=================================>                   (77 + 44) / 121][Stage 190:=============================================>      (105 + 16) / 121][Stage 190:====================================================>(119 + 2) / 121]                                                                                [Stage 191:==========================>                          (61 + 61) / 122][Stage 191:=============================>                       (68 + 54) / 122][Stage 191:=======================================>             (91 + 31) / 122][Stage 191:==============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.068563582 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337124873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:========================================>            (87 + 28) / 115][Stage 192:===========================================>         (95 + 20) / 115][Stage 192:=================================================>   (108 + 7) / 115][Stage 192:===================================================> (112 + 3) / 115]                                                                                [Stage 193:========================================>            (88 + 28) / 116][Stage 193:=============================================>       (99 + 17) / 116][Stage 193:==================================================>  (111 + 5) / 116][Stage 193:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.984887759 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375962925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:====================================>                (82 + 36) / 118][Stage 194:=============================================>      (104 + 14) / 118][Stage 194:===================================================> (115 + 3) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:=================================>                   (75 + 44) / 119][Stage 195:========================================>            (92 + 27) / 119][Stage 195:================================================>    (110 + 9) / 119][Stage 195:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.960903264 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373144264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (70 + 43) / 113][Stage 196:======================================>              (83 + 30) / 113][Stage 196:==============================================>     (101 + 12) / 113][Stage 196:====================================================>(111 + 2) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===================================>                 (76 + 38) / 114][Stage 197:=======================================>             (86 + 28) / 114][Stage 197:==============================================>     (101 + 13) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.808381143 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38060343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=============================>                       (65 + 50) / 115][Stage 198:===================================>                 (77 + 38) / 115][Stage 198:=========================================>           (90 + 25) / 115][Stage 198:==============================================>     (102 + 13) / 115][Stage 198:=================================================>   (108 + 7) / 115][Stage 198:===================================================> (111 + 4) / 115]                                                                                [Stage 199:====================================>                (79 + 37) / 116][Stage 199:===========================================>         (96 + 20) / 116][Stage 199:==================================================>  (110 + 6) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.358622136 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 10:57:13 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:41514) dropped. RpcEnv already stopped.
17/05/22 10:57:13 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:41514) dropped. RpcEnv already stopped.

real	9m56.820s
user	11m50.960s
sys	0m36.388s
