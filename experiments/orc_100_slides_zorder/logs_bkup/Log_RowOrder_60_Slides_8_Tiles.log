Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 08:41:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:42:13 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:42:13 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:42:14 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 08:42:16 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:42:27 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522084216-0437).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.386671169 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (48 + 67) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.596023443 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR   partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partition Index = 142  OR  partitionIndex = 154 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.931098273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================>                                   (43 + 77) / 120][Stage 2:======================>                                (50 + 70) / 120][Stage 2:===========================>                           (59 + 61) / 120][Stage 2:===========================>                           (60 + 60) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:==============================>                        (66 + 54) / 120][Stage 2:======================================>                (83 + 37) / 120][Stage 2:===========================================>           (94 + 26) / 120][Stage 2:================================================>     (108 + 12) / 120][Stage 2:=====================================================> (116 + 4) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:============================>                          (63 + 58) / 121][Stage 3:==============================>                        (66 + 55) / 121][Stage 3:================================>                      (71 + 50) / 121][Stage 3:=====================================>                 (82 + 39) / 121][Stage 3:============================================>          (97 + 24) / 121][Stage 3:=================================================>    (110 + 11) / 121][Stage 3:=====================================================> (117 + 4) / 121][Stage 3:======================================================>(119 + 2) / 121][Stage 3:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.826058406 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partition Index = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569537946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:=======================================>               (82 + 33) / 115][Stage 4:===========================================>           (90 + 25) / 115][Stage 4:===============================================>      (102 + 13) / 115][Stage 4:====================================================>  (109 + 6) / 115]                                                                                [Stage 5:=======================================>               (83 + 33) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:=============================================>         (97 + 19) / 116][Stage 5:==================================================>    (107 + 9) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.771864143 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 104 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.62125121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 58) / 115][Stage 6:===============================>                       (65 + 50) / 115][Stage 6:==================================>                    (72 + 43) / 115][Stage 6:======================================>                (80 + 35) / 115][Stage 6:==========================================>            (89 + 26) / 115][Stage 6:================================================>     (103 + 12) / 115][Stage 6:===================================================>   (108 + 7) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:===============================>                       (66 + 50) / 116][Stage 7:====================================>                  (76 + 40) / 116][Stage 7:====================================>                  (77 + 39) / 116][Stage 7:==========================================>            (90 + 26) / 116][Stage 7:==============================================>       (100 + 16) / 116][Stage 7:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.130752504 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex =  45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545149118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==============================>                        (65 + 53) / 118][Stage 8:==============================>                        (66 + 52) / 118][Stage 8:====================================>                  (78 + 40) / 118][Stage 8:========================================>              (86 + 32) / 118][Stage 8:===========================================>           (94 + 24) / 118][Stage 8:================================================>     (105 + 13) / 118][Stage 8:===================================================>   (110 + 8) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:===================================>                   (77 + 42) / 119][Stage 9:=====================================>                 (82 + 37) / 119][Stage 9:=======================================>               (86 + 33) / 119][Stage 9:===========================================>           (95 + 24) / 119][Stage 9:==============================================>       (103 + 16) / 119][Stage 9:===================================================>   (111 + 8) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.791351865 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partition Index = 196  OR  partitionIndex = 182 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462214427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (79 + 36) / 115][Stage 10:======================================>               (81 + 34) / 115][Stage 10:==========================================>           (90 + 25) / 115][Stage 10:==============================================>      (100 + 15) / 115][Stage 10:===============================================>     (104 + 11) / 115][Stage 10:===================================================>  (110 + 5) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:======================================>               (83 + 33) / 116][Stage 11:===========================================>          (94 + 22) / 116][Stage 11:===============================================>     (103 + 13) / 116][Stage 11:==================================================>   (108 + 8) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.006125719 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  p artitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex  = 40  OR  partitionIndex = 41 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.586692074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=============================>                        (63 + 52) / 115][Stage 12:==================================>                   (73 + 42) / 115][Stage 12:=====================================>                (80 + 35) / 115][Stage 12:===========================================>          (92 + 23) / 115][Stage 12:==================================================>   (107 + 8) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:===============================>                      (68 + 48) / 116][Stage 13:=====================================>                (80 + 36) / 116][Stage 13:=======================================>              (85 + 31) / 116][Stage 13:==============================================>       (99 + 17) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:=================================================>    (107 + 9) / 116][Stage 13:====================================================> (112 + 4) / 116][Stage 13:====================================================> (113 + 3) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.783704435 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  p artitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex  = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.555441107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=========================>                            (56 + 64) / 120][Stage 14:============================>                         (63 + 57) / 120][Stage 14:====================================>                 (80 + 40) / 120][Stage 14:===========================================>          (97 + 23) / 120][Stage 14:==============================================>      (106 + 14) / 120][Stage 14:===================================================>  (114 + 6) / 120][Stage 14:====================================================> (117 + 3) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:==========================>                           (59 + 62) / 121][Stage 15:=============================>                        (66 + 55) / 121][Stage 15:====================================>                 (81 + 40) / 121][Stage 15:=========================================>            (94 + 27) / 121][Stage 15:==============================================>      (106 + 15) / 121][Stage 15:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.255160521 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  p artitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex  = 109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574122759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=========================>                            (58 + 63) / 121][Stage 16:===========================>                          (61 + 60) / 121][Stage 16:============================>                         (64 + 57) / 121][Stage 16:=================================>                    (75 + 46) / 121][Stage 16:=============================================>       (103 + 18) / 121][Stage 16:=====================================================>(119 + 2) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:============================>                         (65 + 57) / 122][Stage 17:=================================>                    (76 + 46) / 122][Stage 17:=========================================>            (93 + 29) / 122][Stage 17:==============================================>      (108 + 14) / 122][Stage 17:====================================================> (119 + 3) / 122][Stage 17:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.284514038 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  p artitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex  = 32  OR  partitionIndex = 33 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537268317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:==============================>                       (63 + 50) / 113][Stage 18:=================================>                    (70 + 43) / 113][Stage 18:==========================================>           (88 + 25) / 113][Stage 18:==================================================>   (105 + 8) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:====================================>                 (76 + 38) / 114][Stage 19:==============================================>      (100 + 14) / 114][Stage 19:===================================================>  (109 + 5) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.877815166 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partition Index = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476306268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (71 + 42) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:==========================================>           (88 + 25) / 113][Stage 20:===============================================>     (102 + 11) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:==================================>                   (72 + 42) / 114][Stage 21:=========================================>            (87 + 27) / 114][Stage 21:============================================>         (93 + 21) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.494263878 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  p artitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex  = 56  OR  partitionIndex = 12 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526258486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:===========================>                          (62 + 59) / 121][Stage 22:=================================>                    (74 + 47) / 121][Stage 22:============================================>         (99 + 22) / 121][Stage 22:===================================================>  (115 + 6) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:==========================>                           (59 + 63) / 122][Stage 23:===========================>                          (63 + 59) / 122][Stage 23:================================>                     (73 + 49) / 122][Stage 23:========================================>             (92 + 30) / 122][Stage 23:===============================================>     (109 + 13) / 122][Stage 23:==================================================>   (115 + 7) / 122][Stage 23:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.162648642 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partition Index = 157  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543744943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:===========================>                          (62 + 58) / 120][Stage 24:===================================>                  (78 + 42) / 120][Stage 24:============================================>        (100 + 20) / 120][Stage 24:=====================================================>(118 + 2) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:============================>                         (63 + 58) / 121][Stage 25:=====================================>                (83 + 38) / 121][Stage 25:===============================================>     (108 + 13) / 121][Stage 25:==================================================>   (114 + 7) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.601421796 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partition Index = 162  OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617829912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:===========================>                          (62 + 59) / 121][Stage 26:=============================>                        (67 + 54) / 121][Stage 26:=======================================>              (88 + 33) / 121][Stage 26:==================================================>   (113 + 8) / 121][Stage 26:=====================================================>(119 + 2) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:=============================>                        (67 + 55) / 122][Stage 27:=====================================>                (85 + 37) / 122][Stage 27:================================================>    (112 + 10) / 122][Stage 27:=====================================================>(120 + 2) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.552481258 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partition Index = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473442847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===============================>                      (68 + 47) / 115][Stage 28:====================================>                 (78 + 37) / 115][Stage 28:============================================>         (95 + 20) / 115][Stage 28:================================================>    (105 + 10) / 115][Stage 28:====================================================> (111 + 4) / 115]                                                                                [Stage 29:==================================>                   (74 + 42) / 116][Stage 29:=========================================>            (90 + 26) / 116][Stage 29:==============================================>      (102 + 14) / 116][Stage 29:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.194727193 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  p artitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex  = 33  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569385936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:============================>                         (63 + 58) / 121][Stage 30:===================================>                  (79 + 42) / 121][Stage 30:============================================>         (99 + 22) / 121][Stage 30:==================================================>   (113 + 8) / 121][Stage 30:====================================================> (117 + 4) / 121]                                                                                [Stage 31:===========================>                          (63 + 59) / 122][Stage 31:====================================>                 (83 + 39) / 122][Stage 31:===========================================>          (99 + 23) / 122][Stage 31:==================================================>   (114 + 8) / 122][Stage 31:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.880808958 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIn dex = 87  OR  partitionIndex = 88 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43876687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:====================================>                 (79 + 39) / 118][Stage 32:============================================>         (97 + 21) / 118][Stage 32:===================================================>  (113 + 5) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (77 + 42) / 119][Stage 33:=======================================>              (86 + 33) / 119][Stage 33:==============================================>      (105 + 14) / 119][Stage 33:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.160715063 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  p artitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex  = 53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530026646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (80 + 35) / 115][Stage 34:==========================================>           (91 + 24) / 115][Stage 34:================================================>    (105 + 10) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:=====================================>                (81 + 35) / 116][Stage 35:========================================>             (87 + 29) / 116][Stage 35:=============================================>       (100 + 16) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:===================================================>  (111 + 5) / 116][Stage 35:====================================================> (113 + 3) / 116][Stage 35:=====================================================>(114 + 2) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.265151011 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  p artitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex  = 58  OR  partitionIndex = 44 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541137237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:===========================>                          (62 + 59) / 121][Stage 36:=================================>                    (75 + 46) / 121][Stage 36:==============================================>      (106 + 15) / 121][Stage 36:====================================================> (118 + 3) / 121]                                                                                [Stage 37:===========================>                          (63 + 59) / 122][Stage 37:=================================>                    (76 + 46) / 122][Stage 37:===========================================>         (100 + 22) / 122][Stage 37:==================================================>   (114 + 8) / 122][Stage 37:=====================================================>(120 + 2) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.983296048 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  p artitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex  = 99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511480854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:==============================>                       (68 + 52) / 120][Stage 38:=======================================>              (88 + 32) / 120][Stage 38:=================================================>    (111 + 9) / 120]                                                                                [Stage 39:===========================>                          (62 + 59) / 121][Stage 39:=================================>                    (74 + 47) / 121][Stage 39:=======================================>              (89 + 32) / 121][Stage 39:==================================================>   (113 + 8) / 121][Stage 39:=====================================================>(119 + 2) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.237254261 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex  = 30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455382337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (72 + 43) / 115][Stage 40:========================================>             (87 + 28) / 115][Stage 40:=============================================>        (97 + 18) / 115][Stage 40:====================================================> (111 + 4) / 115]                                                                                [Stage 41:==================================>                   (74 + 42) / 116][Stage 41:=======================================>              (85 + 31) / 116][Stage 41:=============================================>        (97 + 19) / 116][Stage 41:================================================>    (106 + 10) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.750280177 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  p artitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionInde x = 92  OR  partitionIndex = 93 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429759345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=======================================>              (84 + 31) / 115][Stage 42:===========================================>          (92 + 23) / 115][Stage 42:===============================================>     (103 + 12) / 115][Stage 42:===================================================>  (110 + 5) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:======================================>               (83 + 33) / 116][Stage 43:=======================================>              (85 + 31) / 116][Stage 43:============================================>         (95 + 21) / 116][Stage 43:===============================================>     (104 + 12) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.02352858 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  p artitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex  = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433645457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (70 + 43) / 113][Stage 44:=====================================>                (79 + 34) / 113][Stage 44:===========================================>          (91 + 22) / 113][Stage 44:==============================================>       (97 + 16) / 113][Stage 44:===================================================>  (107 + 6) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:======================================>               (82 + 32) / 114][Stage 45:===========================================>          (92 + 22) / 114][Stage 45:==============================================>       (99 + 15) / 114][Stage 45:===================================================>  (109 + 5) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.603548987 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partition Index = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404360994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:====================================>                 (76 + 37) / 113][Stage 46:===========================================>          (90 + 23) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:====================================================> (110 + 3) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===================================>                  (75 + 39) / 114][Stage 47:======================================>               (81 + 33) / 114][Stage 47:============================================>         (94 + 20) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:===================================================>  (108 + 6) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.873524424 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partition Index = 221  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472855567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:================================>                     (72 + 48) / 120][Stage 48:========================================>             (91 + 29) / 120][Stage 48:====================================================> (116 + 4) / 120]                                                                                [Stage 49:============================>                         (64 + 57) / 121][Stage 49:=================================>                    (76 + 45) / 121][Stage 49:=========================================>            (92 + 29) / 121][Stage 49:===============================================>     (109 + 12) / 121][Stage 49:===================================================>  (115 + 6) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.870074055 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  par titionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418149273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:====================================>                 (76 + 37) / 113][Stage 50:==========================================>           (89 + 24) / 113][Stage 50:===============================================>      (99 + 14) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:====================================>                 (78 + 36) / 114][Stage 51:=======================================>              (84 + 30) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.809080147 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partition Index = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441102437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (64 + 51) / 115][Stage 52:====================================>                 (77 + 38) / 115][Stage 52:========================================>             (87 + 28) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:===================================>                  (77 + 39) / 116][Stage 53:==========================================>           (92 + 24) / 116][Stage 53:==================================================>   (108 + 8) / 116][Stage 53:====================================================> (113 + 3) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.124943548 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partition Index = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453661833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (69 + 46) / 115][Stage 54:=====================================>                (80 + 35) / 115][Stage 54:==============================================>       (99 + 16) / 115][Stage 54:====================================================> (111 + 4) / 115]                                                                                [Stage 55:====================================>                 (79 + 37) / 116][Stage 55:=========================================>            (90 + 26) / 116][Stage 55:===============================================>     (105 + 11) / 116][Stage 55:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.881494245 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex  = 60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440148535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:================================>                     (69 + 44) / 113][Stage 56:=========================================>            (86 + 27) / 113][Stage 56:===============================================>     (102 + 11) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (61 + 53) / 114][Stage 57:===============================>                      (67 + 47) / 114][Stage 57:======================================>               (82 + 32) / 114][Stage 57:=============================================>        (96 + 18) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.201966451 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  p artitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex  = 43  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443343464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==============================>                       (66 + 49) / 115][Stage 58:=====================================>                (79 + 36) / 115][Stage 58:========================================>             (87 + 28) / 115][Stage 58:===============================================>     (104 + 11) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:=================================>                    (71 + 45) / 116][Stage 59:========================================>             (86 + 30) / 116][Stage 59:==============================================>       (99 + 17) / 116][Stage 59:===============================================>     (104 + 12) / 116][Stage 59:================================================>    (106 + 10) / 116][Stage 59:=================================================>    (107 + 9) / 116][Stage 59:====================================================> (113 + 3) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.13352697 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partition Index = 159  OR  partitionIndex = 173 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454200915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:===========================>                          (62 + 59) / 121][Stage 60:=============================>                        (67 + 54) / 121][Stage 60:=====================================>                (84 + 37) / 121][Stage 60:==============================================>      (107 + 14) / 121][Stage 60:===================================================>  (115 + 6) / 121][Stage 60:=====================================================>(119 + 2) / 121]                                                                                [Stage 61:===========================>                          (63 + 59) / 122][Stage 61:================================>                     (74 + 48) / 122][Stage 61:=======================================>              (90 + 32) / 122][Stage 61:==================================================>   (113 + 9) / 122][Stage 61:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.489216759 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partition Index = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440387136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (61 + 52) / 113][Stage 62:===================================>                  (74 + 39) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:============================>                         (61 + 53) / 114][Stage 63:====================================>                 (76 + 38) / 114][Stage 63:============================================>         (94 + 20) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.638707653 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  p artitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex  = 106  OR  partitionIndex = 92 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446961875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (67 + 53) / 120][Stage 64:===================================>                  (79 + 41) / 120][Stage 64:============================================>        (101 + 19) / 120][Stage 64:=====================================================>(118 + 2) / 120]                                                                                [Stage 65:============================>                         (64 + 57) / 121][Stage 65:=================================>                    (75 + 46) / 121][Stage 65:============================================>        (101 + 20) / 121][Stage 65:==================================================>   (113 + 8) / 121][Stage 65:=====================================================>(119 + 2) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.273429895 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partition Index = 124  OR  partitionIndex = 125 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407216723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==============================>                       (64 + 51) / 115][Stage 66:====================================>                 (77 + 38) / 115][Stage 66:=========================================>            (88 + 27) / 115][Stage 66:==============================================>      (101 + 14) / 115][Stage 66:===================================================>  (109 + 6) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:===============================>                      (67 + 49) / 116][Stage 67:====================================>                 (79 + 37) / 116][Stage 67:============================================>         (95 + 21) / 116][Stage 67:===============================================>     (104 + 12) / 116][Stage 67:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.201743127 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  p artitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex  = 23  OR  partitionIndex = 24 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424481552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===================================>                  (76 + 39) / 115][Stage 68:=========================================>            (89 + 26) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:===============================>                      (68 + 48) / 116][Stage 69:========================================>             (87 + 29) / 116][Stage 69:============================================>         (96 + 20) / 116][Stage 69:=================================================>    (107 + 9) / 116][Stage 69:====================================================> (113 + 3) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.313215209 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  p artitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex =  30  OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379323585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 34) / 115][Stage 70:========================================>             (87 + 28) / 115][Stage 70:============================================>         (95 + 20) / 115][Stage 70:=================================================>    (106 + 9) / 115][Stage 70:====================================================> (112 + 3) / 115]                                                                                [Stage 71:======================================>               (83 + 33) / 116][Stage 71:=========================================>            (90 + 26) / 116][Stage 71:=============================================>       (100 + 16) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:===================================================>  (110 + 6) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.31960231 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex  = 42  OR  partitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442014121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:=============================>                        (66 + 54) / 120][Stage 72:===================================>                  (79 + 41) / 120][Stage 72:=============================================>       (104 + 16) / 120]                                                                                [Stage 73:===========================>                          (62 + 59) / 121][Stage 73:==============================>                       (68 + 53) / 121][Stage 73:========================================>             (90 + 31) / 121][Stage 73:===============================================>     (109 + 12) / 121][Stage 73:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.851850335 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partition Index = 152  OR  partitionIndex = 153 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398591899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (73 + 45) / 118][Stage 74:====================================>                 (79 + 39) / 118][Stage 74:===========================================>          (94 + 24) / 118][Stage 74:================================================>    (108 + 10) / 118][Stage 74:====================================================> (115 + 3) / 118]                                                                                [Stage 75:==================================>                   (75 + 44) / 119][Stage 75:=======================================>              (87 + 32) / 119][Stage 75:=============================================>       (102 + 17) / 119][Stage 75:===================================================>  (113 + 6) / 119][Stage 75:====================================================> (116 + 3) / 119][Stage 75:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.521529637 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR   partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionInd ex = 108  OR  partitionIndex = 64 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381947372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (72 + 41) / 113][Stage 76:======================================>               (81 + 32) / 113][Stage 76:============================================>         (94 + 19) / 113][Stage 76:================================================>    (103 + 10) / 113][Stage 76:====================================================> (110 + 3) / 113]                                                                                [Stage 77:=======================================>              (83 + 31) / 114][Stage 77:=============================================>        (95 + 19) / 114][Stage 77:==============================================>      (101 + 13) / 114][Stage 77:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.091246581 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionInd ex = 88  OR  partitionIndex = 74 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368078414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (82 + 33) / 115][Stage 78:=========================================>            (89 + 26) / 115][Stage 78:=============================================>        (96 + 19) / 115][Stage 78:==================================================>   (108 + 7) / 115][Stage 78:=====================================================>(113 + 2) / 115]                                                                                [Stage 79:======================================>               (83 + 33) / 116][Stage 79:=========================================>            (89 + 27) / 116][Stage 79:==============================================>      (101 + 15) / 116][Stage 79:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.728467463 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionI ndex = 73  OR  partitionIndex = 87 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450797926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (82 + 33) / 115][Stage 80:=======================================>              (85 + 30) / 115][Stage 80:==============================================>      (101 + 14) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:======================================>               (82 + 34) / 116][Stage 81:=========================================>            (90 + 26) / 116][Stage 81:==============================================>      (102 + 14) / 116][Stage 81:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.836238766 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partition Index = 147  OR  partitionIndex = 148 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381758552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:====================================>                 (77 + 36) / 113][Stage 82:==========================================>           (89 + 24) / 113][Stage 82:==============================================>       (97 + 16) / 113][Stage 82:===================================================>  (107 + 6) / 113]                                                                                [Stage 83:======================================>               (81 + 33) / 114][Stage 83:===========================================>          (92 + 22) / 114][Stage 83:===============================================>     (102 + 12) / 114][Stage 83:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.957780227 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partition Index = 139  OR  partitionIndex = 140 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403010392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (64 + 51) / 115][Stage 84:=====================================>                (80 + 35) / 115][Stage 84:===========================================>          (92 + 23) / 115][Stage 84:=================================================>    (106 + 9) / 115][Stage 84:====================================================> (112 + 3) / 115]                                                                                [Stage 85:=================================>                    (71 + 45) / 116][Stage 85:=======================================>              (84 + 32) / 116][Stage 85:=============================================>       (100 + 16) / 116][Stage 85:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.713880003 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex  = 89  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377526941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (76 + 37) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:===============================================>     (102 + 11) / 113][Stage 86:====================================================> (110 + 3) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:=====================================>                (79 + 35) / 114][Stage 87:=============================================>        (95 + 19) / 114][Stage 87:===============================================>     (103 + 11) / 114][Stage 87:===================================================>  (109 + 5) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.277239785 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  p artitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex  = 38  OR  partitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401914509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:======================================>               (85 + 33) / 118][Stage 88:============================================>         (98 + 20) / 118][Stage 88:====================================================> (115 + 3) / 118]                                                                                [Stage 89:==================================>                   (75 + 44) / 119][Stage 89:======================================>               (84 + 35) / 119][Stage 89:=============================================>       (103 + 16) / 119][Stage 89:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.33216752 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partition Index = 185  OR  partitionIndex = 199 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35257959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:======================================>               (83 + 32) / 115][Stage 90:=========================================>            (89 + 26) / 115][Stage 90:===============================================>     (103 + 12) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:=======================================>              (85 + 31) / 116][Stage 91:==========================================>           (92 + 24) / 116][Stage 91:==================================================>   (109 + 7) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.533873419 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partition Index = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359836451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (83 + 32) / 115][Stage 92:============================================>         (95 + 20) / 115][Stage 92:===================================================>  (109 + 6) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:=======================================>              (84 + 32) / 116][Stage 93:===========================================>          (93 + 23) / 116][Stage 93:=================================================>    (107 + 9) / 116][Stage 93:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.749625165 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partition Index = 178  OR  partitionIndex = 164 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355706579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=======================================>              (84 + 31) / 115][Stage 94:==============================================>       (98 + 17) / 115][Stage 94:===================================================>  (110 + 5) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:============================================>         (96 + 20) / 116][Stage 95:===============================================>     (105 + 11) / 116][Stage 95:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.609354452 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partition Index = 214  OR  partitionIndex = 215 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388740673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (73 + 45) / 118][Stage 96:=====================================>                (82 + 36) / 118][Stage 96:=========================================>            (90 + 28) / 118][Stage 96:==============================================>      (103 + 15) / 118][Stage 96:=====================================================>(117 + 1) / 118]                                                                                [Stage 97:==================================>                   (76 + 43) / 119][Stage 97:====================================>                 (81 + 38) / 119][Stage 97:===========================================>          (95 + 24) / 119][Stage 97:=============================================>       (103 + 16) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.329485705 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partition Index = 180  OR  partitionIndex = 181 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393977407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (73 + 45) / 118][Stage 98:===================================>                  (78 + 40) / 118][Stage 98:=======================================>              (87 + 31) / 118][Stage 98:=============================================>       (102 + 16) / 118][Stage 98:===================================================>  (113 + 5) / 118]                                                                                [Stage 99:==================================>                   (75 + 44) / 119][Stage 99:======================================>               (84 + 35) / 119][Stage 99:=============================================>       (102 + 17) / 119][Stage 99:=================================================>    (110 + 9) / 119][Stage 99:===================================================>  (113 + 6) / 119][Stage 99:=====================================================>(117 + 2) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.027980078 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partition Index = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36650625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (70 + 43) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:=============================================>       (98 + 15) / 113][Stage 100:===================================================> (109 + 4) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:==================================>                  (75 + 39) / 114][Stage 101:========================================>            (87 + 27) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.084643268 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex  = 62  OR  partitionIndex = 63 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399715043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:==============================>                      (66 + 47) / 113][Stage 102:=====================================>               (80 + 33) / 113][Stage 102:==============================================>     (102 + 11) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:==============================>                      (66 + 48) / 114][Stage 103:========================================>            (87 + 27) / 114][Stage 103:==============================================>     (102 + 12) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.352311581 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  p artitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex  = 27  OR  partitionIndex = 28 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42709464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 61) / 121][Stage 104:==============================>                      (70 + 51) / 121][Stage 104:===================================>                 (81 + 40) / 121][Stage 104:============================================>       (103 + 18) / 121][Stage 104:====================================================>(120 + 1) / 121]                                                                                [Stage 105:==========================>                          (61 + 61) / 122][Stage 105:============================>                        (65 + 57) / 122][Stage 105:===================================>                 (82 + 40) / 122][Stage 105:=============================================>      (106 + 16) / 122][Stage 105:===================================================> (118 + 4) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.880698986 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partition Index = 158  OR  partitionIndex = 159 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423050769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (62 + 59) / 121][Stage 106:=================================>                   (76 + 45) / 121][Stage 106:========================================>            (92 + 29) / 121][Stage 106:=================================================>   (113 + 8) / 121]                                                                                [Stage 107:==========================>                          (62 + 60) / 122][Stage 107:=============================>                       (68 + 54) / 122][Stage 107:==========================================>          (97 + 25) / 122][Stage 107:=================================================>   (115 + 7) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.992640742 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  p artitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex  = 15  OR  partitionIndex = 29 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387340949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (71 + 42) / 113][Stage 108:=====================================>               (81 + 32) / 113][Stage 108:==========================================>          (90 + 23) / 113][Stage 108:==============================================>     (101 + 12) / 113][Stage 108:==================================================>  (108 + 5) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===================================>                 (77 + 37) / 114][Stage 109:========================================>            (88 + 26) / 114][Stage 109:==========================================>          (92 + 22) / 114][Stage 109:=============================================>       (97 + 17) / 114][Stage 109:==============================================>     (101 + 13) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.273966626 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partition Index = 186  OR  partitionIndex = 187 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406737643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (61 + 52) / 113][Stage 110:=================================>                   (72 + 41) / 113][Stage 110:========================================>            (86 + 27) / 113][Stage 110:==================================================>  (107 + 6) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:===============================>                     (67 + 47) / 114][Stage 111:==========================================>          (91 + 23) / 114][Stage 111:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.494646544 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  p artitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex  = 39  OR  partitionIndex = 53 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395198811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:=============================>                       (63 + 50) / 113][Stage 112:====================================>                (77 + 36) / 113][Stage 112:===========================================>         (92 + 21) / 113][Stage 112:==================================================>  (108 + 5) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:==================================>                  (75 + 39) / 114][Stage 113:===========================================>         (94 + 20) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:====================================================>(112 + 2) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.994553762 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partition Index = 130  OR  partitionIndex = 131 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411707057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:==============================>                      (70 + 50) / 120][Stage 114:======================================>              (87 + 33) / 120][Stage 114:==============================================>     (108 + 12) / 120]                                                                                [Stage 115:===========================>                         (62 + 59) / 121][Stage 115:===============================>                     (73 + 48) / 121][Stage 115:==========================================>         (100 + 21) / 121][Stage 115:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.414136639 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partition Index = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404819338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:===========================>                         (63 + 58) / 121][Stage 116:=================================>                   (77 + 44) / 121][Stage 116:============================================>       (103 + 18) / 121][Stage 116:====================================================>(119 + 2) / 121]                                                                                [Stage 117:===========================>                         (63 + 59) / 122][Stage 117:=================================>                   (77 + 45) / 122][Stage 117:===========================================>        (101 + 21) / 122][Stage 117:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.803803255 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  par titionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21   OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3914602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:==================================>                  (74 + 39) / 113][Stage 118:==========================================>          (90 + 23) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:==============================>                      (66 + 48) / 114][Stage 119:=======================================>             (84 + 30) / 114][Stage 119:==============================================>     (101 + 13) / 114][Stage 119:==================================================>  (108 + 6) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.866785645 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex  = 29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375339575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (73 + 45) / 118][Stage 120:====================================>                (82 + 36) / 118][Stage 120:==========================================>          (95 + 23) / 118][Stage 120:==================================================>  (113 + 5) / 118][Stage 120:====================================================>(117 + 1) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:=================================>                   (76 + 43) / 119][Stage 121:====================================>                (83 + 36) / 119][Stage 121:==========================================>          (96 + 23) / 119][Stage 121:===============================================>    (108 + 11) / 119][Stage 121:===================================================> (115 + 4) / 119][Stage 121:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.783393612 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  p artitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex =  19  OR  partitionIndex = 20 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363906343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:==================================>                  (77 + 41) / 118][Stage 122:====================================>                (82 + 36) / 118][Stage 122:=========================================>           (92 + 26) / 118][Stage 122:=================================================>   (110 + 8) / 118][Stage 122:===================================================> (115 + 3) / 118]                                                                                [Stage 123:=================================>                   (76 + 43) / 119][Stage 123:=====================================>               (84 + 35) / 119][Stage 123:=======================================>             (88 + 31) / 119][Stage 123:=============================================>      (103 + 16) / 119][Stage 123:===================================================> (115 + 4) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.903790699 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partition Index = 195  OR  partitionIndex = 209 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 209 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381296952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:===============================>                     (67 + 46) / 113][Stage 124:=======================================>             (85 + 28) / 113][Stage 124:===============================================>    (103 + 10) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:=================================>                   (71 + 43) / 114][Stage 125:===========================================>         (93 + 21) / 114][Stage 125:=================================================>   (107 + 7) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.608998371 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR   partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partition Index = 236  OR  partitionIndex = 192 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416974753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:=============================>                       (68 + 53) / 121][Stage 126:=====================================>               (85 + 36) / 121][Stage 126:=================================================>   (112 + 9) / 121][Stage 126:====================================================>(120 + 1) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:=============================>                       (68 + 54) / 122][Stage 127:===================================>                 (82 + 40) / 122][Stage 127:===========================================>        (102 + 20) / 122][Stage 127:====================================================>(120 + 2) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.862776486 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  p artitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex  = 102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375207436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (79 + 34) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:==============================================>     (101 + 12) / 113][Stage 128:===================================================> (109 + 4) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:==================================>                  (74 + 40) / 114][Stage 129:=======================================>             (85 + 29) / 114][Stage 129:=============================================>       (98 + 16) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.980205323 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partition Index = 161  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374004132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=================================>                   (72 + 43) / 115][Stage 130:=====================================>               (82 + 33) / 115][Stage 130:=========================================>           (90 + 25) / 115][Stage 130:================================================>    (106 + 9) / 115][Stage 130:===================================================> (112 + 3) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:================================>                    (71 + 45) / 116][Stage 131:=======================================>             (87 + 29) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:=================================================>   (108 + 8) / 116][Stage 131:===================================================> (112 + 4) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.324990734 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  p artitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex  = 76  OR  partitionIndex = 62 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423307311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=============================>                       (65 + 50) / 115][Stage 132:==================================>                  (75 + 40) / 115][Stage 132:=======================================>             (86 + 29) / 115][Stage 132:==============================================>     (102 + 13) / 115][Stage 132:====================================================>(113 + 2) / 115]                                                                                [Stage 133:===============================>                     (70 + 46) / 116][Stage 133:=======================================>             (86 + 30) / 116][Stage 133:=============================================>       (99 + 17) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:==================================================>  (110 + 6) / 116][Stage 133:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.02130088 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR   partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partition Index = 200  OR  partitionIndex = 186 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364115565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:================================>                    (73 + 45) / 118][Stage 134:=====================================>               (83 + 35) / 118][Stage 134:============================================>        (99 + 19) / 118][Stage 134:=================================================>   (110 + 8) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:===================================>                 (80 + 39) / 119][Stage 135:=======================================>             (89 + 30) / 119][Stage 135:============================================>       (101 + 18) / 119][Stage 135:===================================================> (115 + 4) / 119][Stage 135:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.999945214 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partition Index = 204  OR  partitionIndex = 190 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389833417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:============================>                        (60 + 53) / 113][Stage 136:====================================>                (77 + 36) / 113][Stage 136:==============================================>      (99 + 14) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:=======================================>             (84 + 30) / 114][Stage 137:==============================================>     (102 + 12) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.690353003 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  p artitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex  = 44  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346336855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=======================================>             (86 + 29) / 115][Stage 138:===========================================>         (94 + 21) / 115][Stage 138:================================================>    (106 + 9) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:======================================>              (84 + 32) / 116][Stage 139:============================================>        (98 + 18) / 116][Stage 139:=============================================>      (102 + 14) / 116][Stage 139:=================================================>   (109 + 7) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.05182309 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partition Index = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407866148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:=============================>                       (67 + 53) / 120][Stage 140:===================================>                 (81 + 39) / 120][Stage 140:============================================>       (102 + 18) / 120][Stage 140:===================================================> (117 + 3) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:============================>                        (66 + 55) / 121][Stage 141:==================================>                  (79 + 42) / 121][Stage 141:===========================================>        (101 + 20) / 121][Stage 141:===================================================> (117 + 4) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.84483816 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIn dex = 64  OR  partitionIndex = 65 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392045083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:>                                                      (0 + 0) / 120][Stage 142:==========================>                          (60 + 60) / 120][Stage 142:============================>                        (65 + 55) / 120][Stage 142:==================================>                  (79 + 41) / 120][Stage 142:===========================================>        (100 + 20) / 120][Stage 142:==================================================>  (115 + 5) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:================================>                    (75 + 46) / 121][Stage 143:=======================================>             (90 + 31) / 121][Stage 143:==============================================>     (108 + 13) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.059036723 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR   partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partition Index = 188  OR  partitionIndex = 189 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397468559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:===========================>                         (62 + 58) / 120][Stage 144:==================================>                  (77 + 43) / 120][Stage 144:=============================================>      (105 + 15) / 120][Stage 144:====================================================>(119 + 1) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:===============================>                     (71 + 50) / 121][Stage 145:====================================>                (84 + 37) / 121][Stage 145:=============================================>      (107 + 14) / 121][Stage 145:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.733996849 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partition Index = 166  OR  partitionIndex = 152 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415354249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:==============================>                      (69 + 51) / 120][Stage 146:======================================>              (88 + 32) / 120][Stage 146:=============================================>      (105 + 15) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:=============================>                       (67 + 54) / 121][Stage 147:======================================>              (88 + 33) / 121][Stage 147:=============================================>      (105 + 16) / 121][Stage 147:==================================================>  (115 + 6) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.87783891 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR   partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionInde x = 80  OR  partitionIndex = 66 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382823338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===============================>                     (68 + 47) / 115][Stage 148:=======================================>             (85 + 30) / 115][Stage 148:=============================================>       (98 + 17) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:================================>                    (71 + 45) / 116][Stage 149:========================================>            (89 + 27) / 116][Stage 149:============================================>        (97 + 19) / 116][Stage 149:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.772529405 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  p artitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex  = 37  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376940121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:=================================>                   (74 + 44) / 118][Stage 150:======================================>              (85 + 33) / 118][Stage 150:===========================================>         (97 + 21) / 118][Stage 150:==================================================>  (112 + 6) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:==================================>                  (77 + 42) / 119][Stage 151:=====================================>               (85 + 34) / 119][Stage 151:=============================================>      (103 + 16) / 119][Stage 151:==================================================>  (114 + 5) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.700679838 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  p artitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex  = 60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338396933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (82 + 33) / 115][Stage 152:============================================>        (97 + 18) / 115][Stage 152:=================================================>   (108 + 7) / 115]                                                                                [Stage 153:======================================>              (85 + 31) / 116][Stage 153:===========================================>         (95 + 21) / 116][Stage 153:=============================================>       (99 + 17) / 116][Stage 153:===============================================>    (105 + 11) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.95821167 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR   partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex  = 75  OR  partitionIndex = 89 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369795121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (75 + 40) / 115][Stage 154:=========================================>           (90 + 25) / 115][Stage 154:==============================================>     (102 + 13) / 115][Stage 154:=================================================>   (108 + 7) / 115]                                                                                [Stage 155:===================================>                 (78 + 38) / 116][Stage 155:=========================================>           (90 + 26) / 116][Stage 155:================================================>    (107 + 9) / 116][Stage 155:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.9550976 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partition Index = 190  OR  partitionIndex = 191 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37313491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:===================================>                 (78 + 40) / 118][Stage 156:=======================================>             (88 + 30) / 118][Stage 156:============================================>        (99 + 19) / 118][Stage 156:==================================================>  (113 + 5) / 118]                                                                                [Stage 157:=================================>                   (75 + 44) / 119][Stage 157:====================================>                (83 + 36) / 119][Stage 157:========================================>            (92 + 27) / 119][Stage 157:=============================================>      (105 + 14) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.655852474 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  p artitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex  = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392261045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:==================================>                  (73 + 40) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:===============================================>    (103 + 10) / 113]                                                                                [Stage 159:============================>                        (62 + 52) / 114][Stage 159:===================================>                 (76 + 38) / 114][Stage 159:=========================================>           (89 + 25) / 114][Stage 159:================================================>    (105 + 9) / 114][Stage 159:====================================================>(112 + 2) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.349545247 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR   partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionI ndex = 105  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40475826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:============================>                        (64 + 57) / 121][Stage 160:===================================>                 (80 + 41) / 121][Stage 160:============================================>       (103 + 18) / 121][Stage 160:====================================================>(119 + 2) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:=============================>                       (69 + 53) / 122][Stage 161:====================================>                (83 + 39) / 122][Stage 161:=============================================>      (106 + 16) / 122][Stage 161:===================================================> (118 + 4) / 122][Stage 161:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.623146299 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionInde x = 66  OR  partitionIndex = 67 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354490078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:======================================>              (84 + 31) / 115][Stage 162:============================================>        (97 + 18) / 115][Stage 162:==================================================>  (110 + 5) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:=====================================>               (83 + 33) / 116][Stage 163:========================================>            (89 + 27) / 116][Stage 163:==============================================>     (103 + 13) / 116][Stage 163:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.856280284 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partition Index = 160  OR  partitionIndex = 161 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350685108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (71 + 42) / 113][Stage 164:========================================>            (87 + 26) / 113][Stage 164:============================================>        (95 + 18) / 113][Stage 164:=================================================>   (106 + 7) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:=====================================>               (80 + 34) / 114][Stage 165:==========================================>          (92 + 22) / 114][Stage 165:============================================>        (96 + 18) / 114][Stage 165:===============================================>    (104 + 10) / 114][Stage 165:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.289021043 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR   partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partition Index = 129  OR  partitionIndex = 143 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370103683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=================================>                   (73 + 42) / 115][Stage 166:========================================>            (88 + 27) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:=================================>                   (74 + 42) / 116][Stage 167:======================================>              (84 + 32) / 116][Stage 167:================================================>    (107 + 9) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.800499848 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partition Index = 148  OR  partitionIndex = 134 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364365967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:=================================>                   (75 + 43) / 118][Stage 168:=====================================>               (84 + 34) / 118][Stage 168:============================================>       (102 + 16) / 118][Stage 168:====================================================>(117 + 1) / 118]                                                                                [Stage 169:================================>                    (73 + 46) / 119][Stage 169:===================================>                 (80 + 39) / 119][Stage 169:=========================================>           (93 + 26) / 119][Stage 169:===============================================>    (109 + 10) / 119][Stage 169:===================================================> (115 + 4) / 119][Stage 169:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.700867584 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partition Index = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382176297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:=============================>                       (63 + 50) / 113][Stage 170:=====================================>               (80 + 33) / 113][Stage 170:===============================================>    (103 + 10) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:===============================>                     (67 + 47) / 114][Stage 171:=========================================>           (89 + 25) / 114][Stage 171:=============================================>       (98 + 16) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.234500731 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partition Index = 184  OR  partitionIndex = 185 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373377152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==============================>                      (66 + 49) / 115][Stage 172:====================================>                (80 + 35) / 115][Stage 172:=============================================>      (100 + 15) / 115][Stage 172:==================================================>  (110 + 5) / 115]                                                                                [Stage 173:===================================>                 (78 + 38) / 116][Stage 173:=========================================>           (90 + 26) / 116][Stage 173:================================================>    (107 + 9) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.740673321 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  p artitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex  = 91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369536261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=================================>                   (74 + 44) / 118][Stage 174:=====================================>               (83 + 35) / 118][Stage 174:==============================================>     (106 + 12) / 118][Stage 174:==================================================>  (112 + 6) / 118]                                                                                [Stage 175:=================================>                   (75 + 44) / 119][Stage 175:====================================>                (82 + 37) / 119][Stage 175:============================================>        (99 + 20) / 119][Stage 175:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.579502944 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partition Index = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385117445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:>                                                      (0 + 0) / 115][Stage 176:=================================>                   (72 + 43) / 115][Stage 176:=====================================>               (81 + 34) / 115][Stage 176:===========================================>         (94 + 21) / 115][Stage 176:=================================================>   (107 + 8) / 115]                                                                                [Stage 177:===================================>                 (77 + 39) / 116][Stage 177:============================================>        (98 + 18) / 116][Stage 177:=================================================>   (108 + 8) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.753273876 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partition Index = 134  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366527612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (65 + 50) / 115][Stage 178:====================================>                (79 + 36) / 115][Stage 178:===========================================>         (95 + 20) / 115][Stage 178:==================================================>  (110 + 5) / 115]                                                                                [Stage 179:====================================>                (80 + 36) / 116][Stage 179:===========================================>         (95 + 21) / 116][Stage 179:==================================================>  (111 + 5) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.690360739 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partition Index = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333327239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (82 + 33) / 115][Stage 180:======================================>              (84 + 31) / 115][Stage 180:==============================================>     (103 + 12) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:======================================>              (85 + 31) / 116][Stage 181:============================================>        (98 + 18) / 116][Stage 181:==================================================>  (111 + 5) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.749844968 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  p artitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionInde x = 79  OR  partitionIndex = 80 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423031232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (73 + 42) / 115][Stage 182:=========================================>           (90 + 25) / 115][Stage 182:================================================>    (106 + 9) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:=====================================>               (82 + 34) / 116][Stage 183:============================================>        (97 + 19) / 116][Stage 183:==================================================>  (111 + 5) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.929396174 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  p artitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex  = 55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395238214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:==================================>                  (74 + 39) / 113][Stage 184:========================================>            (86 + 27) / 113][Stage 184:=================================================>   (105 + 8) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:=================================>                   (73 + 41) / 114][Stage 185:=========================================>           (89 + 25) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.170665753 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR   partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partition Index = 150  OR  partitionIndex = 162 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398502623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (61 + 59) / 120][Stage 186:==============================>                      (69 + 51) / 120][Stage 186:======================================>              (87 + 33) / 120][Stage 186:============================================>       (102 + 18) / 120][Stage 186:====================================================>(118 + 2) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:============================>                        (64 + 57) / 121][Stage 187:====================================>                (83 + 38) / 121][Stage 187:=============================================>      (105 + 16) / 121][Stage 187:==================================================>  (116 + 5) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.661163755 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  pa rtitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex =  31  OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394991714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:=============================>                       (62 + 51) / 113][Stage 188:=====================================>               (80 + 33) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:===================================================> (109 + 4) / 113]                                                                                [Stage 189:============================>                        (61 + 53) / 114][Stage 189:===================================>                 (76 + 38) / 114][Stage 189:===========================================>         (94 + 20) / 114][Stage 189:=================================================>   (107 + 7) / 114][Stage 189:====================================================>(112 + 2) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.346165669 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partition Index = 171  OR  partitionIndex = 172 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358154969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=======================================>             (85 + 28) / 113][Stage 190:==========================================>          (91 + 22) / 113][Stage 190:==============================================>     (100 + 13) / 113][Stage 190:==================================================>  (107 + 6) / 113][Stage 190:===================================================> (110 + 3) / 113]                                                                                [Stage 191:======================================>              (83 + 31) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:===============================================>    (104 + 10) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.095375744 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  p artitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex  = 82  OR  partitionIndex = 94 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347851041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==================================>                  (73 + 40) / 113][Stage 192:=======================================>             (85 + 28) / 113][Stage 192:=============================================>       (98 + 15) / 113][Stage 192:===============================================>    (103 + 10) / 113]                                                                                [Stage 193:====================================>                (78 + 36) / 114][Stage 193:==========================================>          (91 + 23) / 114][Stage 193:==============================================>     (101 + 13) / 114][Stage 193:==================================================>  (108 + 6) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.947246207 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partition Index = 182  OR  partitionIndex = 183 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373050891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:================================>                    (73 + 45) / 118][Stage 194:===================================>                 (80 + 38) / 118][Stage 194:========================================>            (91 + 27) / 118][Stage 194:==============================================>     (105 + 13) / 118][Stage 194:===================================================> (115 + 3) / 118]                                                                                [Stage 195:===================================>                 (80 + 39) / 119][Stage 195:=====================================>               (84 + 35) / 119][Stage 195:=========================================>           (93 + 26) / 119][Stage 195:===============================================>    (108 + 11) / 119][Stage 195:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.80688429 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  p artitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex  = 59  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347573879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (79 + 34) / 113][Stage 196:=========================================>           (89 + 24) / 113][Stage 196:=============================================>       (98 + 15) / 113][Stage 196:===================================================> (109 + 4) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:==================================>                  (74 + 40) / 114][Stage 197:=======================================>             (84 + 30) / 114][Stage 197:==========================================>          (92 + 22) / 114][Stage 197:===============================================>    (104 + 10) / 114][Stage 197:==================================================>  (109 + 5) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.260694768 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partition Index = 132  OR  partitionIndex = 133 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380732413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:======================================>              (82 + 31) / 113][Stage 198:===========================================>         (92 + 21) / 113][Stage 198:==============================================>     (102 + 11) / 113][Stage 198:===================================================> (110 + 3) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:=====================================>               (80 + 34) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:==============================================>     (102 + 12) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.055739514 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex  = 41  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391864065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:============================>                        (61 + 52) / 113][Stage 200:====================================>                (77 + 36) / 113][Stage 200:=============================================>       (97 + 16) / 113][Stage 200:===================================================> (109 + 4) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:=============================>                       (64 + 50) / 114][Stage 201:=================================>                   (73 + 41) / 114][Stage 201:============================================>        (95 + 19) / 114][Stage 201:=================================================>   (107 + 7) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.74246543 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m37.374s
user	12m42.232s
sys	1m31.616s
