Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 08:19:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:19:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:19:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:19:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 08:19:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 08:20:04 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522081953-0435).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.413430627 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (25 + 90) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.494314751 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR   partitionIndex = 148  OR  partitionIndex = 134 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.63449813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============================>                       (66 + 49) / 115][Stage 2:===================================>                   (75 + 40) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:============================================>          (93 + 22) / 115][Stage 2:==============================================>       (100 + 15) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:======================================================>(113 + 2) / 115]                                                                                [Stage 3:====================================>                  (78 + 38) / 116][Stage 3:=======================================>               (83 + 33) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:==========================================>            (90 + 26) / 116][Stage 3:=============================================>         (97 + 19) / 116][Stage 3:===============================================>      (103 + 13) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:=====================================================> (112 + 4) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.149366673 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568624097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=====================================>                 (78 + 37) / 115][Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:=========================================>             (87 + 28) / 115][Stage 4:============================================>          (92 + 23) / 115][Stage 4:=============================================>         (95 + 20) / 115][Stage 4:==============================================>       (100 + 15) / 115][Stage 4:===================================================>   (107 + 8) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:======================================>                (82 + 34) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:============================================>          (93 + 23) / 116][Stage 5:==============================================>        (98 + 18) / 116][Stage 5:===============================================>      (103 + 13) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.529396504 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR   partitionIndex = 125  OR  partitionIndex = 139 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.725813031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (56 + 64) / 120][Stage 6:===========================>                           (60 + 60) / 120][Stage 6:==============================>                        (67 + 53) / 120][Stage 6:==================================>                    (75 + 45) / 120][Stage 6:==========================================>            (92 + 28) / 120][Stage 6:===============================================>      (106 + 14) / 120][Stage 6:======================================================>(119 + 1) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:============================>                          (63 + 58) / 121][Stage 7:=================================>                     (73 + 48) / 121][Stage 7:=====================================>                 (82 + 39) / 121][Stage 7:===========================================>           (95 + 26) / 121][Stage 7:=================================================>    (111 + 10) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.754029617 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611213969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 60) / 120][Stage 8:===========================>                           (61 + 59) / 120][Stage 8:================================>                      (70 + 50) / 120][Stage 8:======================================>                (84 + 36) / 120][Stage 8:==============================================>       (104 + 16) / 120][Stage 8:=================================================>    (110 + 10) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:=============================>                         (64 + 57) / 121][Stage 9:===================================>                   (79 + 42) / 121][Stage 9:==========================================>            (94 + 27) / 121][Stage 9:===============================================>      (106 + 15) / 121][Stage 9:=====================================================> (117 + 4) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.288248994 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596850212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:===========================>                          (62 + 58) / 120][Stage 10:=================================>                    (75 + 45) / 120][Stage 10:============================================>         (98 + 22) / 120][Stage 10:================================================>    (109 + 11) / 120][Stage 10:===================================================>  (115 + 5) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:==========================>                           (60 + 61) / 121][Stage 11:==============================>                       (68 + 53) / 121][Stage 11:=================================>                    (75 + 46) / 121][Stage 11:==========================================>           (96 + 25) / 121][Stage 11:==============================================>      (107 + 14) / 121][Stage 11:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.17159231 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR   partitionIndex = 200  OR  partitionIndex = 186 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59961314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (64 + 51) / 115][Stage 12:================================>                     (69 + 46) / 115][Stage 12:========================================>             (86 + 29) / 115][Stage 12:==============================================>       (98 + 17) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:===============================>                      (68 + 48) / 116][Stage 13:====================================>                 (78 + 38) / 116][Stage 13:========================================>             (86 + 30) / 116][Stage 13:==========================================>           (91 + 25) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.495976392 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  p artitionIndex = 2  OR  partitionIndex = 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568148857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=========================>                            (57 + 64) / 121][Stage 14:=============================>                        (67 + 54) / 121][Stage 14:====================================>                 (82 + 39) / 121][Stage 14:===========================================>          (98 + 23) / 121][Stage 14:==============================================>      (107 + 14) / 121][Stage 14:====================================================> (118 + 3) / 121]                                                                                [Stage 15:==========================>                           (59 + 63) / 122][Stage 15:===========================>                          (61 + 61) / 122][Stage 15:==============================>                       (68 + 54) / 122][Stage 15:====================================>                 (83 + 39) / 122][Stage 15:=============================================>       (105 + 17) / 122][Stage 15:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.966309992 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518137326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==================================>                   (72 + 41) / 113][Stage 16:=========================================>            (86 + 27) / 113][Stage 16:============================================>         (94 + 19) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:=================================>                    (71 + 43) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:==========================================>           (90 + 24) / 114][Stage 17:==============================================>      (101 + 13) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.756753122 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483751436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:===================================>                  (78 + 40) / 118][Stage 18:========================================>             (89 + 29) / 118][Stage 18:============================================>         (98 + 20) / 118][Stage 18:================================================>    (107 + 11) / 118][Stage 18:====================================================> (114 + 4) / 118][Stage 18:=====================================================>(117 + 1) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:=====================================>                (82 + 37) / 119][Stage 19:============================================>        (101 + 18) / 119][Stage 19:=================================================>    (110 + 9) / 119][Stage 19:===================================================>  (113 + 6) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.083721366 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.579826569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=======================>                              (52 + 68) / 120][Stage 20:============================>                         (63 + 57) / 120][Stage 20:=================================>                    (74 + 46) / 120][Stage 20:===========================================>          (96 + 24) / 120][Stage 20:================================================>    (110 + 10) / 120][Stage 20:====================================================> (116 + 4) / 120]                                                                                [Stage 21:===========================>                          (62 + 59) / 121][Stage 21:===============================>                      (70 + 51) / 121][Stage 21:=====================================>                (85 + 36) / 121][Stage 21:=============================================>       (104 + 17) / 121][Stage 21:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.875397999 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46656755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (73 + 45) / 118][Stage 22:====================================>                 (80 + 38) / 118][Stage 22:========================================>             (89 + 29) / 118][Stage 22:=============================================>       (102 + 16) / 118][Stage 22:===================================================>  (113 + 5) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (75 + 44) / 119][Stage 23:====================================>                 (81 + 38) / 119][Stage 23:==========================================>           (93 + 26) / 119][Stage 23:===============================================>     (107 + 12) / 119][Stage 23:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.70457453 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482568793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (66 + 49) / 115][Stage 24:==================================>                   (74 + 41) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:==============================================>      (101 + 14) / 115][Stage 24:===================================================>  (109 + 6) / 115][Stage 24:=====================================================>(113 + 2) / 115]                                                                                [Stage 25:================================>                     (69 + 47) / 116][Stage 25:=======================================>              (85 + 31) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.187755709 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509331563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:===============================>                      (70 + 50) / 120][Stage 26:=======================================>              (88 + 32) / 120][Stage 26:==============================================>      (105 + 15) / 120][Stage 26:================================================>    (110 + 10) / 120][Stage 26:====================================================> (117 + 3) / 120]                                                                                [Stage 27:===========================>                          (62 + 59) / 121][Stage 27:================================>                     (72 + 49) / 121][Stage 27:========================================>             (90 + 31) / 121][Stage 27:============================================>        (101 + 20) / 121][Stage 27:===================================================>  (115 + 6) / 121][Stage 27:====================================================> (118 + 3) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.163032942 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483047955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (71 + 44) / 115][Stage 28:=======================================>              (84 + 31) / 115][Stage 28:==============================================>       (99 + 16) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:=====================================================>(113 + 2) / 115]                                                                                [Stage 29:=================================>                    (71 + 45) / 116][Stage 29:========================================>             (86 + 30) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.456894281 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413658432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (82 + 33) / 115][Stage 30:===========================================>          (92 + 23) / 115][Stage 30:==================================================>   (108 + 7) / 115]                                                                                [Stage 31:======================================>               (83 + 33) / 116][Stage 31:==========================================>           (91 + 25) / 116][Stage 31:=============================================>       (100 + 16) / 116][Stage 31:===================================================>  (111 + 5) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.93645351 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402536763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (81 + 34) / 115][Stage 32:==========================================>           (91 + 24) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:=====================================================>(113 + 2) / 115]                                                                                [Stage 33:========================================>             (86 + 30) / 116][Stage 33:=============================================>        (97 + 19) / 116][Stage 33:===============================================>     (103 + 13) / 116][Stage 33:===============================================>     (104 + 12) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.670193206 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  p artitionIndex = 9  OR  partitionIndex = 23 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453568277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:===================================>                  (78 + 40) / 118][Stage 34:==========================================>           (93 + 25) / 118][Stage 34:===============================================>     (106 + 12) / 118][Stage 34:====================================================> (115 + 3) / 118]                                                                                [Stage 35:==================================>                   (75 + 44) / 119][Stage 35:====================================>                 (80 + 39) / 119][Stage 35:========================================>             (90 + 29) / 119][Stage 35:==============================================>      (105 + 14) / 119][Stage 35:====================================================> (115 + 4) / 119][Stage 35:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.934365307 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491097497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===========================>                          (62 + 58) / 120][Stage 36:================================>                     (72 + 48) / 120][Stage 36:===========================================>          (96 + 24) / 120][Stage 36:================================================>    (110 + 10) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:==============================>                       (69 + 52) / 121][Stage 37:========================================>             (91 + 30) / 121][Stage 37:===============================================>     (108 + 13) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.43487695 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470959643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:================================>                     (69 + 44) / 113][Stage 38:======================================>               (80 + 33) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:================================>                     (68 + 46) / 114][Stage 39:===========================================>          (92 + 22) / 114][Stage 39:==============================================>      (101 + 13) / 114][Stage 39:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.667660005 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  p artitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519277012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:=============================>                        (65 + 55) / 120][Stage 40:=====================================>                (83 + 37) / 120][Stage 40:=============================================>       (102 + 18) / 120][Stage 40:====================================================> (116 + 4) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:==============================>                       (69 + 52) / 121][Stage 41:=========================================>            (93 + 28) / 121][Stage 41:===============================================>     (109 + 12) / 121][Stage 41:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.426078049 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501362265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:================================>                     (72 + 46) / 118][Stage 42:===================================>                  (77 + 41) / 118][Stage 42:======================================>               (85 + 33) / 118][Stage 42:============================================>         (98 + 20) / 118][Stage 42:====================================================> (114 + 4) / 118][Stage 42:=====================================================>(117 + 1) / 118]                                                                                [Stage 43:=================================>                    (73 + 46) / 119][Stage 43:==================================>                   (77 + 42) / 119][Stage 43:=========================================>            (92 + 27) / 119][Stage 43:==============================================>      (104 + 15) / 119][Stage 43:===================================================>  (114 + 5) / 119][Stage 43:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.506792184 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413707713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (71 + 42) / 113][Stage 44:=======================================>              (82 + 31) / 113][Stage 44:=============================================>        (95 + 18) / 113][Stage 44:==================================================>   (105 + 8) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:======================================>               (82 + 32) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:==================================================>   (106 + 8) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.060415186 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425473664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (66 + 49) / 115][Stage 46:======================================>               (83 + 32) / 115][Stage 46:==============================================>       (98 + 17) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:================================>                     (69 + 47) / 116][Stage 47:=====================================>                (80 + 36) / 116][Stage 47:==============================================>      (101 + 15) / 116][Stage 47:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.922738103 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  p artitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561543384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:=============================>                        (65 + 55) / 120][Stage 48:========================================>             (90 + 30) / 120][Stage 48:================================================>    (110 + 10) / 120][Stage 48:=====================================================>(119 + 1) / 120]                                                                                [Stage 49:=============================>                        (66 + 55) / 121][Stage 49:===================================>                  (79 + 42) / 121][Stage 49:============================================>        (101 + 20) / 121][Stage 49:===================================================>  (116 + 5) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.493421212 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477820383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:============================>                         (60 + 53) / 113][Stage 50:=======================================>              (83 + 30) / 113][Stage 50:=================================================>    (104 + 9) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:================================>                     (68 + 46) / 114][Stage 51:=======================================>              (84 + 30) / 114][Stage 51:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.351315019 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443115932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:=============================>                        (61 + 52) / 113][Stage 52:==================================>                   (72 + 41) / 113][Stage 52:============================================>         (93 + 20) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:=============================>                        (63 + 51) / 114][Stage 53:====================================>                 (77 + 37) / 114][Stage 53:=============================================>        (95 + 19) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.351937382 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432684304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (65 + 50) / 115][Stage 54:===================================>                  (75 + 40) / 115][Stage 54:============================================>         (95 + 20) / 115][Stage 54:================================================>    (105 + 10) / 115]                                                                                [Stage 55:================================>                     (70 + 46) / 116][Stage 55:======================================>               (82 + 34) / 116][Stage 55:==============================================>      (101 + 15) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.036835929 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403523807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:==================================>                   (76 + 42) / 118][Stage 56:======================================>               (85 + 33) / 118][Stage 56:=============================================>        (99 + 19) / 118][Stage 56:================================================>    (108 + 10) / 118][Stage 56:=====================================================>(116 + 2) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:==================================>                   (75 + 44) / 119][Stage 57:=====================================>                (83 + 36) / 119][Stage 57:============================================>        (101 + 18) / 119][Stage 57:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.507626116 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  p artitionIndex = 54  OR  partitionIndex = 40 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443630853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:===============================>                      (65 + 48) / 113][Stage 58:=======================================>              (82 + 31) / 113][Stage 58:===============================================>     (102 + 11) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:===============================>                      (66 + 48) / 114][Stage 59:========================================>             (85 + 29) / 114][Stage 59:===============================================>     (102 + 12) / 114][Stage 59:====================================================> (110 + 4) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.880348744 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447654244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:===========================>                          (61 + 60) / 121][Stage 60:================================>                     (72 + 49) / 121][Stage 60:=========================================>            (92 + 29) / 121][Stage 60:=====================================================>(119 + 2) / 121]                                                                                [Stage 61:===========================>                          (61 + 61) / 122][Stage 61:============================>                         (65 + 57) / 122][Stage 61:===================================>                  (80 + 42) / 122][Stage 61:============================================>        (102 + 20) / 122][Stage 61:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.425293521 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427543491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==============================>                       (65 + 50) / 115][Stage 62:====================================>                 (78 + 37) / 115][Stage 62:==========================================>           (91 + 24) / 115][Stage 62:==================================================>   (108 + 7) / 115]                                                                                [Stage 63:=================================>                    (71 + 45) / 116][Stage 63:========================================>             (86 + 30) / 116][Stage 63:==================================================>   (108 + 8) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.708791626 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR   partitionIndex = 73  OR  partitionIndex = 87 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395368246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:=================================>                    (74 + 44) / 118][Stage 64:====================================>                 (80 + 38) / 118][Stage 64:==============================================>      (104 + 14) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:====================================>                 (81 + 38) / 119][Stage 65:=========================================>            (91 + 28) / 119][Stage 65:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.433727326 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  p artitionIndex = 56  OR  partitionIndex = 12 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392637439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===================================>                  (74 + 39) / 113][Stage 66:========================================>             (85 + 28) / 113][Stage 66:=============================================>        (96 + 17) / 113][Stage 66:==================================================>   (105 + 8) / 113][Stage 66:====================================================> (110 + 3) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:====================================>                 (77 + 37) / 114][Stage 67:=========================================>            (87 + 27) / 114][Stage 67:=============================================>        (96 + 18) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:====================================================> (110 + 4) / 114][Stage 67:=====================================================>(112 + 2) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.057924399 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  p artitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392543939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:====================================>                 (79 + 39) / 118][Stage 68:========================================>             (89 + 29) / 118][Stage 68:=============================================>       (102 + 16) / 118][Stage 68:=====================================================>(116 + 2) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:===================================>                  (78 + 41) / 119][Stage 69:=========================================>            (92 + 27) / 119][Stage 69:===============================================>     (106 + 13) / 119][Stage 69:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.507739104 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  p artitionIndex = 71  OR  partitionIndex = 85 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469134562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (62 + 58) / 120][Stage 70:===============================>                      (70 + 50) / 120][Stage 70:========================================>             (90 + 30) / 120][Stage 70:==================================================>   (113 + 7) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (68 + 53) / 121][Stage 71:======================================>               (87 + 34) / 121][Stage 71:===========================================>         (100 + 21) / 121][Stage 71:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.366991654 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401337303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:==================================>                   (75 + 43) / 118][Stage 72:=====================================>                (83 + 35) / 118][Stage 72:===========================================>          (96 + 22) / 118][Stage 72:================================================>    (108 + 10) / 118][Stage 72:=====================================================>(116 + 2) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:=================================>                    (74 + 45) / 119][Stage 73:====================================>                 (81 + 38) / 119][Stage 73:========================================>             (89 + 30) / 119][Stage 73:=============================================>       (102 + 17) / 119][Stage 73:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.511183117 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485369766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:====================================>                 (79 + 39) / 118][Stage 74:============================================>         (97 + 21) / 118][Stage 74:==================================================>   (110 + 8) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:======================================>               (85 + 34) / 119][Stage 75:============================================>        (100 + 19) / 119][Stage 75:==================================================>   (112 + 7) / 119][Stage 75:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.28897105 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  par titionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370978923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (81 + 34) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:=============================================>        (96 + 19) / 115][Stage 76:=================================================>    (106 + 9) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:======================================>               (83 + 33) / 116][Stage 77:============================================>         (96 + 20) / 116][Stage 77:===============================================>     (105 + 11) / 116][Stage 77:=================================================>    (107 + 9) / 116][Stage 77:===================================================>  (111 + 5) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.761959993 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397058552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (71 + 44) / 115][Stage 78:=======================================>              (84 + 31) / 115][Stage 78:===============================================>     (102 + 13) / 115][Stage 78:====================================================> (112 + 3) / 115]                                                                                [Stage 79:===============================>                      (68 + 48) / 116][Stage 79:===================================>                  (77 + 39) / 116][Stage 79:==========================================>           (91 + 25) / 116][Stage 79:================================================>    (106 + 10) / 116][Stage 79:===================================================>  (110 + 6) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.256426786 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419817552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:=============================>                        (62 + 51) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:===============================================>     (102 + 11) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:============================>                         (60 + 54) / 114][Stage 81:======================================>               (81 + 33) / 114][Stage 81:=============================================>        (96 + 18) / 114][Stage 81:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.319056753 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  pa rtitionIndex = 16  OR  partitionIndex = 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391042696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===============================>                      (67 + 48) / 115][Stage 82:===================================>                  (75 + 40) / 115][Stage 82:=========================================>            (89 + 26) / 115][Stage 82:=================================================>    (106 + 9) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:==================================>                   (74 + 42) / 116][Stage 83:======================================>               (82 + 34) / 116][Stage 83:==============================================>      (101 + 15) / 116][Stage 83:================================================>    (106 + 10) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.90190521 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435307553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:================================>                     (73 + 47) / 120][Stage 84:===========================================>          (96 + 24) / 120][Stage 84:================================================>    (110 + 10) / 120]                                                                                [Stage 85:============================>                         (63 + 58) / 121][Stage 85:==============================>                       (69 + 52) / 121][Stage 85:=======================================>              (88 + 33) / 121][Stage 85:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.199042799 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR   partitionIndex = 178  OR  partitionIndex = 164 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423471723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:==============================>                       (68 + 53) / 121][Stage 86:======================================>               (86 + 35) / 121][Stage 86:==============================================>      (107 + 14) / 121][Stage 86:=====================================================>(119 + 2) / 121]                                                                                [Stage 87:============================>                         (64 + 58) / 122][Stage 87:=================================>                    (76 + 46) / 122][Stage 87:=========================================>            (93 + 29) / 122][Stage 87:===============================================>     (110 + 12) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.707720728 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346642759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (81 + 34) / 115][Stage 88:=========================================>            (88 + 27) / 115][Stage 88:=================================================>    (106 + 9) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:=======================================>              (85 + 31) / 116][Stage 89:=============================================>        (97 + 19) / 116][Stage 89:===============================================>     (104 + 12) / 116][Stage 89:==================================================>   (108 + 8) / 116][Stage 89:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.792028693 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387422367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:===================================>                  (78 + 40) / 118][Stage 90:=======================================>              (86 + 32) / 118][Stage 90:===========================================>          (95 + 23) / 118][Stage 90:==================================================>   (111 + 7) / 118]                                                                                [Stage 91:=================================>                    (74 + 45) / 119][Stage 91:===================================>                  (78 + 41) / 119][Stage 91:=======================================>              (86 + 33) / 119][Stage 91:============================================>        (101 + 18) / 119][Stage 91:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.539332905 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR   partitionIndex = 97  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432649627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:===========================>                          (62 + 59) / 121][Stage 92:===================================>                  (80 + 41) / 121][Stage 92:==============================================>      (106 + 15) / 121]                                                                                [Stage 93:===========================>                          (62 + 60) / 122][Stage 93:===============================>                      (72 + 50) / 122][Stage 93:==========================================>           (97 + 25) / 122][Stage 93:===============================================>     (109 + 13) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.164210252 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397859615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===================================>                  (75 + 40) / 115][Stage 94:=========================================>            (89 + 26) / 115][Stage 94:================================================>    (105 + 10) / 115][Stage 94:==================================================>   (108 + 7) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:================================>                     (69 + 47) / 116][Stage 95:======================================>               (82 + 34) / 116][Stage 95:============================================>         (96 + 20) / 116][Stage 95:=================================================>    (107 + 9) / 116][Stage 95:====================================================> (112 + 4) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.187540555 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  p artitionIndex = 102  OR  partitionIndex = 103 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407964002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:============================>                         (64 + 57) / 121][Stage 96:=================================>                    (76 + 45) / 121][Stage 96:============================================>         (99 + 22) / 121][Stage 96:====================================================> (117 + 4) / 121]                                                                                [Stage 97:===========================>                          (63 + 59) / 122][Stage 97:================================>                     (74 + 48) / 122][Stage 97:==========================================>           (95 + 27) / 122][Stage 97:===============================================>     (109 + 13) / 122][Stage 97:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.548118492 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  p artitionIndex = 76  OR  partitionIndex = 62 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360244536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (78 + 35) / 113][Stage 98:==========================================>           (88 + 25) / 113][Stage 98:===============================================>     (102 + 11) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:=======================================>              (84 + 30) / 114][Stage 99:==============================================>       (98 + 16) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:====================================================> (110 + 4) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.217293256 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38071281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (77 + 41) / 118][Stage 100:=======================================>             (88 + 30) / 118][Stage 100:=================================================>   (110 + 8) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:=================================>                   (76 + 43) / 119][Stage 101:======================================>              (86 + 33) / 119][Stage 101:=============================================>      (105 + 14) / 119][Stage 101:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.188914482 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393073103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (75 + 40) / 115][Stage 102:=====================================>               (81 + 34) / 115][Stage 102:===========================================>         (95 + 20) / 115][Stage 102:=================================================>   (108 + 7) / 115][Stage 102:===================================================> (112 + 3) / 115]                                                                                [Stage 103:===================================>                 (78 + 38) / 116][Stage 103:=========================================>           (91 + 25) / 116][Stage 103:================================================>    (107 + 9) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.078940011 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342702789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (81 + 34) / 115][Stage 104:=======================================>             (86 + 29) / 115][Stage 104:============================================>        (96 + 19) / 115][Stage 104:==================================================>  (109 + 6) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:=========================================>           (90 + 26) / 116][Stage 105:============================================>        (98 + 18) / 116][Stage 105:===================================================> (112 + 4) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.945197697 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  p artitionIndex = 6  OR  partitionIndex = 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377057481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (73 + 45) / 118][Stage 106:=====================================>               (84 + 34) / 118][Stage 106:============================================>       (101 + 17) / 118][Stage 106:==================================================>  (113 + 5) / 118]                                                                                [Stage 107:=================================>                   (76 + 43) / 119][Stage 107:=======================================>             (88 + 31) / 119][Stage 107:=============================================>      (105 + 14) / 119][Stage 107:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.414828545 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392627663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:================================>                    (73 + 45) / 118][Stage 108:===================================>                 (80 + 38) / 118][Stage 108:=======================================>             (88 + 30) / 118][Stage 108:============================================>       (102 + 16) / 118][Stage 108:===================================================> (114 + 4) / 118][Stage 108:====================================================>(116 + 2) / 118]                                                                                [Stage 109:================================>                    (73 + 46) / 119][Stage 109:=================================>                   (75 + 44) / 119][Stage 109:=====================================>               (84 + 35) / 119][Stage 109:===========================================>         (98 + 21) / 119][Stage 109:================================================>    (110 + 9) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.603728768 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357408609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:======================================>              (82 + 31) / 113][Stage 110:==========================================>          (90 + 23) / 113][Stage 110:==============================================>     (100 + 13) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:======================================>              (83 + 31) / 114][Stage 111:==========================================>          (91 + 23) / 114][Stage 111:=============================================>       (98 + 16) / 114][Stage 111:=================================================>   (106 + 8) / 114][Stage 111:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.172522464 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 197 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352167975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (80 + 33) / 113][Stage 112:==========================================>          (90 + 23) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:=================================>                   (72 + 42) / 114][Stage 113:=======================================>             (84 + 30) / 114][Stage 113:============================================>        (96 + 18) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.787860764 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370038283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==============================>                      (67 + 48) / 115][Stage 114:====================================>                (80 + 35) / 115][Stage 114:===========================================>         (95 + 20) / 115][Stage 114:==================================================>  (110 + 5) / 115]                                                                                [Stage 115:==================================>                  (76 + 40) / 116][Stage 115:==========================================>          (94 + 22) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.618480994 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR   partitionIndex = 106  OR  partitionIndex = 92 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371915528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (71 + 44) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:==============================================>     (103 + 12) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:===============================>                     (69 + 47) / 116][Stage 117:======================================>              (84 + 32) / 116][Stage 117:=============================================>       (99 + 17) / 116][Stage 117:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.676304369 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401407646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:============================>                        (64 + 56) / 120][Stage 118:====================================>                (82 + 38) / 120][Stage 118:=============================================>      (106 + 14) / 120][Stage 118:====================================================>(118 + 2) / 120]                                                                                [Stage 119:==========================>                          (61 + 60) / 121][Stage 119:============================>                        (65 + 56) / 121][Stage 119:===================================>                 (81 + 40) / 121][Stage 119:============================================>       (103 + 18) / 121][Stage 119:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.304416118 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401991248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:===========================>                         (63 + 57) / 120][Stage 120:==================================>                  (78 + 42) / 120][Stage 120:===========================================>        (101 + 19) / 120][Stage 120:==================================================>  (115 + 5) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:==================================>                  (79 + 42) / 121][Stage 121:============================================>       (103 + 18) / 121][Stage 121:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.866982015 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR   partitionIndex = 182  OR  partitionIndex = 183 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396194593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:============================>                        (64 + 57) / 121][Stage 122:===================================>                 (81 + 40) / 121][Stage 122:===========================================>        (101 + 20) / 121][Stage 122:====================================================>(119 + 2) / 121]                                                                                [Stage 123:===========================>                         (63 + 59) / 122][Stage 123:===================================>                 (81 + 41) / 122][Stage 123:===========================================>         (99 + 23) / 122][Stage 123:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.308920333 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39873812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:=============================>                       (67 + 53) / 120][Stage 124:===================================>                 (81 + 39) / 120][Stage 124:==============================================>     (107 + 13) / 120][Stage 124:===================================================> (117 + 3) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:=============================>                       (67 + 54) / 121][Stage 125:===================================>                 (82 + 39) / 121][Stage 125:===========================================>        (101 + 20) / 121][Stage 125:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.294051895 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  p artitionIndex = 10  OR  partitionIndex = 11 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363823947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:=================================>                   (74 + 44) / 118][Stage 126:======================================>              (85 + 33) / 118][Stage 126:============================================>       (100 + 18) / 118][Stage 126:==================================================>  (112 + 6) / 118]                                                                                [Stage 127:==================================>                  (77 + 42) / 119][Stage 127:====================================>                (82 + 37) / 119][Stage 127:===========================================>         (97 + 22) / 119][Stage 127:===============================================>    (109 + 10) / 119][Stage 127:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.492142542 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  p artitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370226825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===================================>                 (76 + 37) / 113][Stage 128:=========================================>           (88 + 25) / 113][Stage 128:============================================>        (94 + 19) / 113][Stage 128:==================================================>  (108 + 5) / 113]                                                                                [Stage 129:======================================>              (83 + 31) / 114][Stage 129:==========================================>          (91 + 23) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.995834282 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  p artitionIndex = 32  OR  partitionIndex = 33 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398697921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:============================>                        (61 + 52) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:==============================================>     (100 + 13) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:==============================>                      (65 + 49) / 114][Stage 131:=====================================>               (80 + 34) / 114][Stage 131:============================================>        (95 + 19) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.194626334 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  p artitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370905466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (70 + 45) / 115][Stage 132:=========================================>           (89 + 26) / 115][Stage 132:=============================================>       (99 + 16) / 115][Stage 132:===================================================> (112 + 3) / 115]                                                                                [Stage 133:==============================>                      (66 + 50) / 116][Stage 133:=====================================>               (82 + 34) / 116][Stage 133:==========================================>          (92 + 24) / 116][Stage 133:=============================================>      (102 + 14) / 116][Stage 133:==================================================>  (110 + 6) / 116][Stage 133:===================================================> (112 + 4) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.105275578 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358944555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:==================================>                  (77 + 41) / 118][Stage 134:==========================================>          (95 + 23) / 118][Stage 134:=================================================>   (110 + 8) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:=================================>                   (75 + 44) / 119][Stage 135:=======================================>             (88 + 31) / 119][Stage 135:=============================================>      (105 + 14) / 119][Stage 135:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.487798378 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  p artitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396155034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:==============================>                      (69 + 52) / 121][Stage 136:===================================>                 (82 + 39) / 121][Stage 136:===============================================>    (110 + 11) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:=============================>                       (68 + 54) / 122][Stage 137:====================================>                (83 + 39) / 122][Stage 137:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.107169365 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  p artitionIndex = 28  OR  partitionIndex = 14 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408872321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (81 + 34) / 115][Stage 138:=========================================>           (89 + 26) / 115][Stage 138:=============================================>      (100 + 15) / 115][Stage 138:===================================================> (111 + 4) / 115]                                                                                [Stage 139:=====================================>               (83 + 33) / 116][Stage 139:===========================================>         (96 + 20) / 116][Stage 139:===============================================>    (105 + 11) / 116][Stage 139:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 4.046242018 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR   partitionIndex = 208  OR  partitionIndex = 194 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371492479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (73 + 42) / 115][Stage 140:======================================>              (83 + 32) / 115][Stage 140:=============================================>      (101 + 14) / 115][Stage 140:===================================================> (111 + 4) / 115]                                                                                [Stage 141:==================================>                  (75 + 41) / 116][Stage 141:========================================>            (89 + 27) / 116][Stage 141:===============================================>    (105 + 11) / 116][Stage 141:===================================================> (113 + 3) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.069023939 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391610695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (61 + 60) / 121][Stage 142:==============================>                      (70 + 51) / 121][Stage 142:======================================>              (88 + 33) / 121][Stage 142:=============================================>      (105 + 16) / 121]                                                                                [Stage 143:===========================>                         (64 + 58) / 122][Stage 143:==============================>                      (71 + 51) / 122][Stage 143:=========================================>           (96 + 26) / 122][Stage 143:===============================================>    (111 + 11) / 122][Stage 143:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.688161078 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR   partitionIndex = 236  OR  partitionIndex = 192 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383325351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:=============================>                       (63 + 50) / 113][Stage 144:==================================>                  (73 + 40) / 113][Stage 144:==============================================>     (101 + 12) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:=================================>                   (72 + 42) / 114][Stage 145:====================================>                (79 + 35) / 114][Stage 145:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.017371098 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  p artitionIndex = 50  OR  partitionIndex = 36 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39371818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 59) / 120][Stage 146:==============================>                      (70 + 50) / 120][Stage 146:=======================================>             (89 + 31) / 120][Stage 146:===============================================>    (110 + 10) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:================================>                    (74 + 47) / 121][Stage 147:========================================>            (93 + 28) / 121][Stage 147:=================================================>   (112 + 9) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.459913753 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384245294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:===================================>                 (75 + 38) / 113][Stage 148:==========================================>          (90 + 23) / 113][Stage 148:=================================================>   (106 + 7) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:==============================>                      (65 + 49) / 114][Stage 149:=====================================>               (80 + 34) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.386956214 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396127687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:===============================>                     (71 + 49) / 120][Stage 150:===================================>                 (80 + 40) / 120][Stage 150:============================================>       (103 + 17) / 120][Stage 150:====================================================>(119 + 1) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:===============================>                     (73 + 48) / 121][Stage 151:=======================================>             (90 + 31) / 121][Stage 151:==============================================>     (108 + 13) / 121][Stage 151:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.254032391 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400431379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:===============================>                     (71 + 49) / 120][Stage 152:========================================>            (92 + 28) / 120][Stage 152:===============================================>    (110 + 10) / 120][Stage 152:====================================================>(119 + 1) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:===============================>                     (72 + 49) / 121][Stage 153:======================================>              (87 + 34) / 121][Stage 153:==============================================>     (108 + 13) / 121][Stage 153:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.152892634 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR   partitionIndex = 124  OR  partitionIndex = 125 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390549392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:==============================>                      (69 + 51) / 120][Stage 154:=======================================>             (89 + 31) / 120][Stage 154:===============================================>    (110 + 10) / 120][Stage 154:====================================================>(119 + 1) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:==============================>                      (69 + 52) / 121][Stage 155:=====================================>               (86 + 35) / 121][Stage 155:==============================================>     (109 + 12) / 121][Stage 155:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.343346057 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377803277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===============================>                     (68 + 47) / 115][Stage 156:====================================>                (80 + 35) / 115][Stage 156:=============================================>      (101 + 14) / 115][Stage 156:===================================================> (112 + 3) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:================================>                    (72 + 44) / 116][Stage 157:=======================================>             (87 + 29) / 116][Stage 157:==============================================>     (103 + 13) / 116][Stage 157:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.016698361 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  p artitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350053501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:=============================================>       (96 + 17) / 113][Stage 158:===================================================> (109 + 4) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===================================>                 (77 + 37) / 114][Stage 159:============================================>        (95 + 19) / 114][Stage 159:===============================================>    (104 + 10) / 114][Stage 159:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.045071 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355808657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=================================>                   (74 + 44) / 118][Stage 160:====================================>                (82 + 36) / 118][Stage 160:===========================================>         (97 + 21) / 118][Stage 160:==================================================>  (113 + 5) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:=======================================>             (89 + 30) / 119][Stage 161:==============================================>     (107 + 12) / 119][Stage 161:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.272788466 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351592265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=================================>                   (71 + 42) / 113][Stage 162:===================================>                 (76 + 37) / 113][Stage 162:==========================================>          (90 + 23) / 113][Stage 162:=================================================>   (106 + 7) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:==================================>                  (75 + 39) / 114][Stage 163:=======================================>             (85 + 29) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:=================================================>   (107 + 7) / 114][Stage 163:===================================================> (111 + 3) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.071790954 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394592164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:=============================>                       (67 + 53) / 120][Stage 164:======================================>              (87 + 33) / 120][Stage 164:==============================================>     (107 + 13) / 120][Stage 164:===================================================> (117 + 3) / 120]                                                                                [Stage 165:==========================>                          (61 + 60) / 121][Stage 165:=============================>                       (67 + 54) / 121][Stage 165:======================================>              (87 + 34) / 121][Stage 165:=============================================>      (107 + 14) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.159507716 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377755238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (70 + 45) / 115][Stage 166:========================================>            (87 + 28) / 115][Stage 166:==============================================>     (102 + 13) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:===============================>                     (70 + 46) / 116][Stage 167:===========================================>         (95 + 21) / 116][Stage 167:=================================================>   (108 + 8) / 116][Stage 167:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.888090511 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372508283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=============================>                       (65 + 50) / 115][Stage 168:====================================>                (79 + 36) / 115][Stage 168:=========================================>           (91 + 24) / 115][Stage 168:=============================================>      (100 + 15) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:===============================>                     (68 + 48) / 116][Stage 169:======================================>              (85 + 31) / 116][Stage 169:===========================================>         (96 + 20) / 116][Stage 169:=================================================>   (108 + 8) / 116][Stage 169:==================================================>  (111 + 5) / 116][Stage 169:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.05473597 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364813902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:==================================>                  (77 + 41) / 118][Stage 170:=====================================>               (83 + 35) / 118][Stage 170:=========================================>           (93 + 25) / 118][Stage 170:==============================================>     (105 + 13) / 118][Stage 170:==================================================>  (113 + 5) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:=================================>                   (76 + 43) / 119][Stage 171:=====================================>               (84 + 35) / 119][Stage 171:===========================================>         (97 + 22) / 119][Stage 171:===============================================>    (108 + 11) / 119][Stage 171:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.792749718 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  p artitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372766824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:==================================>                  (76 + 42) / 118][Stage 172:=======================================>             (87 + 31) / 118][Stage 172:============================================>       (101 + 17) / 118][Stage 172:==================================================>  (112 + 6) / 118][Stage 172:====================================================>(116 + 2) / 118]                                                                                [Stage 173:=================================>                   (76 + 43) / 119][Stage 173:======================================>              (86 + 33) / 119][Stage 173:===========================================>         (98 + 21) / 119][Stage 173:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.382998313 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  p artitionIndex = 68  OR  partitionIndex = 69 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395781687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:===============================>                     (71 + 49) / 120][Stage 174:====================================>                (83 + 37) / 120][Stage 174:=============================================>      (106 + 14) / 120]                                                                                [Stage 175:============================>                        (66 + 55) / 121][Stage 175:================================>                    (74 + 47) / 121][Stage 175:==========================================>          (96 + 25) / 121][Stage 175:=================================================>   (113 + 8) / 121][Stage 175:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.353332532 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  pa rtitionIndex = 7  OR  partitionIndex = 21 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387064304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (62 + 58) / 120][Stage 176:==============================>                      (69 + 51) / 120][Stage 176:======================================>              (88 + 32) / 120][Stage 176:=================================================>   (111 + 9) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:==============================>                      (70 + 51) / 121][Stage 177:=======================================>             (90 + 31) / 121][Stage 177:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.238000737 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR   partitionIndex = 129  OR  partitionIndex = 143 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364780142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===============================>                     (68 + 47) / 115][Stage 178:======================================>              (83 + 32) / 115][Stage 178:=============================================>      (100 + 15) / 115][Stage 178:==================================================>  (109 + 6) / 115]                                                                                [Stage 179:=================================>                   (74 + 42) / 116][Stage 179:=========================================>           (91 + 25) / 116][Stage 179:==============================================>     (104 + 12) / 116][Stage 179:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.801239637 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381731149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===============================>                     (69 + 46) / 115][Stage 180:=====================================>               (81 + 34) / 115][Stage 180:============================================>        (96 + 19) / 115][Stage 180:=================================================>   (107 + 8) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:===============================>                     (68 + 48) / 116][Stage 181:======================================>              (85 + 31) / 116][Stage 181:=============================================>      (101 + 15) / 116][Stage 181:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.90041973 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397066171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:===================================>                 (79 + 39) / 118][Stage 182:========================================>            (91 + 27) / 118][Stage 182:==============================================>     (105 + 13) / 118][Stage 182:====================================================>(116 + 2) / 118]                                                                                [Stage 183:==================================>                  (77 + 42) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:===========================================>         (97 + 22) / 119][Stage 183:==================================================>  (113 + 6) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.366979254 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.325915436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:========================================>            (87 + 28) / 115][Stage 184:============================================>        (97 + 18) / 115][Stage 184:==================================================>  (109 + 6) / 115]                                                                                [Stage 185:=====================================>               (83 + 33) / 116][Stage 185:==========================================>          (94 + 22) / 116][Stage 185:===============================================>    (106 + 10) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.835750222 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36000835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (73 + 45) / 118][Stage 186:=================================>                   (74 + 44) / 118][Stage 186:=====================================>               (83 + 35) / 118][Stage 186:===========================================>         (97 + 21) / 118][Stage 186:==============================================>     (106 + 12) / 118][Stage 186:====================================================>(116 + 2) / 118]                                                                                [Stage 187:================================>                    (74 + 45) / 119][Stage 187:==================================>                  (77 + 42) / 119][Stage 187:=====================================>               (84 + 35) / 119][Stage 187:==========================================>          (96 + 23) / 119][Stage 187:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.723911676 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR   partitionIndex = 194  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372316303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:==============================>                      (65 + 48) / 113][Stage 188:========================================>            (86 + 27) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:=================================================>   (106 + 7) / 113]                                                                                [Stage 189:=============================>                       (64 + 50) / 114][Stage 189:=================================>                   (73 + 41) / 114][Stage 189:===========================================>         (94 + 20) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31393059 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR   partitionIndex = 72  OR  partitionIndex = 73 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349827102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (73 + 45) / 118][Stage 190:===================================>                 (79 + 39) / 118][Stage 190:========================================>            (91 + 27) / 118][Stage 190:=============================================>      (104 + 14) / 118][Stage 190:==================================================>  (113 + 5) / 118][Stage 190:====================================================>(117 + 1) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:==================================>                  (77 + 42) / 119][Stage 191:=====================================>               (84 + 35) / 119][Stage 191:=========================================>           (93 + 26) / 119][Stage 191:===============================================>    (108 + 11) / 119][Stage 191:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.691331509 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 119 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380441046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:==============================>                      (64 + 49) / 113][Stage 192:======================================>              (83 + 30) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=================================>                   (71 + 43) / 114][Stage 193:========================================>            (87 + 27) / 114][Stage 193:==============================================>      (99 + 15) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.40410064 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351095845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:====================================>                (78 + 35) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:==============================================>     (102 + 11) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:====================================>                (79 + 35) / 114][Stage 195:=======================================>             (86 + 28) / 114][Stage 195:=============================================>       (98 + 16) / 114][Stage 195:==================================================>  (108 + 6) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.194264804 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362776498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=================================>                   (73 + 42) / 115][Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=============================================>      (100 + 15) / 115][Stage 196:===================================================> (111 + 4) / 115]                                                                                [Stage 197:===================================>                 (77 + 39) / 116][Stage 197:=======================================>             (87 + 29) / 116][Stage 197:=============================================>      (101 + 15) / 116][Stage 197:================================================>    (107 + 9) / 116][Stage 197:===================================================> (112 + 4) / 116][Stage 197:====================================================>(114 + 2) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.122745128 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351808708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:===================================>                 (78 + 40) / 118][Stage 198:========================================>            (91 + 27) / 118][Stage 198:==================================================>  (112 + 6) / 118][Stage 198:====================================================>(117 + 1) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:====================================>                (82 + 37) / 119][Stage 199:==========================================>          (96 + 23) / 119][Stage 199:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.170186999 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393119362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:============================>                        (61 + 52) / 113][Stage 200:=================================>                   (72 + 41) / 113][Stage 200:=========================================>           (89 + 24) / 113][Stage 200:==============================================>     (100 + 13) / 113]                                                                                [Stage 201:=============================>                       (63 + 51) / 114][Stage 201:====================================>                (78 + 36) / 114][Stage 201:============================================>        (95 + 19) / 114][Stage 201:===================================================> (110 + 4) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.67563757 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m29.488s
user	11m53.908s
sys	0m56.820s
