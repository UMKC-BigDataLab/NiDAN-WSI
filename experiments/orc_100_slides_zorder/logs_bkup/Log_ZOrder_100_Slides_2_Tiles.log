Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 09:21:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:22:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:22:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:22:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 09:22:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:22:19 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523092208-0548).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.360172202 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========>                                             (19 + 96) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 12.465262714 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.62046631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================================>                    (72 + 43) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:=====================================================> (111 + 4) / 115]                                                                                [Stage 3:======================================>                (81 + 35) / 116][Stage 3:=======================================>               (83 + 33) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:=============================================>         (95 + 21) / 116][Stage 3:================================================>     (105 + 11) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 4.740255709 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.709867134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:======================>                                (50 + 71) / 121][Stage 4:=========================>                             (55 + 66) / 121][Stage 4:=========================>                             (57 + 64) / 121][Stage 4:=============================>                         (65 + 56) / 121][Stage 4:================================>                      (72 + 49) / 121][Stage 4:===================================>                   (79 + 42) / 121][Stage 4:=========================================>             (91 + 30) / 121][Stage 4:=================================================>    (111 + 10) / 121][Stage 4:======================================================>(120 + 1) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:==============================>                        (68 + 54) / 122][Stage 5:==================================>                    (76 + 46) / 122][Stage 5:====================================>                  (82 + 40) / 122][Stage 5:===========================================>           (97 + 25) / 122][Stage 5:===================================================>   (114 + 8) / 122][Stage 5:=====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.752675829 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.688245425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (71 + 47) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:====================================>                  (78 + 40) / 118][Stage 6:=========================================>             (89 + 29) / 118][Stage 6:===============================================>      (104 + 14) / 118][Stage 6:====================================================>  (113 + 5) / 118][Stage 6:======================================================>(117 + 1) / 118]                                                                                [Stage 7:=================================>                     (72 + 47) / 119][Stage 7:=================================>                     (73 + 46) / 119][Stage 7:======================================>                (84 + 35) / 119][Stage 7:=============================================>         (99 + 20) / 119][Stage 7:===================================================>   (112 + 7) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.907192625 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503881079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:==========================================>            (89 + 26) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:====================================================>  (109 + 6) / 115][Stage 8:=====================================================> (112 + 3) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:=============================================>         (97 + 19) / 116][Stage 9:================================================>     (105 + 11) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.926755407 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496327095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (79 + 36) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:========================================>             (86 + 29) / 115][Stage 10:=============================================>        (97 + 18) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:=====================================================>(113 + 2) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:========================================>             (87 + 29) / 116][Stage 11:============================================>         (95 + 21) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:=====================================================>(114 + 2) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.538112514 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527481794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (71 + 47) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:===================================>                  (77 + 41) / 118][Stage 12:======================================>               (84 + 34) / 118][Stage 12:=========================================>            (91 + 27) / 118][Stage 12:============================================>        (100 + 18) / 118][Stage 12:==================================================>   (111 + 7) / 118][Stage 12:=====================================================>(117 + 1) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:==================================>                   (77 + 42) / 119][Stage 13:=======================================>              (86 + 33) / 119][Stage 13:===========================================>          (95 + 24) / 119][Stage 13:==============================================>      (104 + 15) / 119][Stage 13:================================================>    (109 + 10) / 119][Stage 13:=====================================================>(117 + 2) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.558351573 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591482498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:==============================>                       (67 + 53) / 120][Stage 14:====================================>                 (80 + 40) / 120][Stage 14:===========================================>          (97 + 23) / 120][Stage 14:===============================================>     (107 + 13) / 120][Stage 14:==================================================>   (113 + 7) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:============================>                         (64 + 57) / 121][Stage 15:================================>                     (73 + 48) / 121][Stage 15:========================================>             (90 + 31) / 121][Stage 15:================================================>    (110 + 11) / 121][Stage 15:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.059090928 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561925404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (66 + 54) / 120][Stage 16:====================================>                 (82 + 38) / 120][Stage 16:=============================================>       (102 + 18) / 120][Stage 16:====================================================> (117 + 3) / 120]                                                                                [Stage 17:===========================>                          (62 + 59) / 121][Stage 17:================================>                     (73 + 48) / 121][Stage 17:=========================================>            (92 + 29) / 121][Stage 17:============================================>        (101 + 20) / 121][Stage 17:==================================================>   (113 + 8) / 121][Stage 17:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.592484007 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428704801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=====================================>                (80 + 35) / 115][Stage 18:=======================================>              (85 + 30) / 115][Stage 18:==============================================>       (98 + 17) / 115][Stage 18:===================================================>  (109 + 6) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:=======================================>              (85 + 31) / 116][Stage 19:==============================================>       (99 + 17) / 116][Stage 19:===================================================>  (111 + 5) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.144956746 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513251209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (72 + 41) / 113][Stage 20:======================================>               (81 + 32) / 113][Stage 20:==========================================>           (89 + 24) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=====================================>                (80 + 34) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:==============================================>      (101 + 13) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:====================================================> (111 + 3) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.899800042 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476502653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (71 + 47) / 118][Stage 22:===================================>                  (78 + 40) / 118][Stage 22:==========================================>           (92 + 26) / 118][Stage 22:=============================================>       (102 + 16) / 118][Stage 22:===================================================>  (113 + 5) / 118][Stage 22:====================================================> (115 + 3) / 118]                                                                                [Stage 23:=================================>                    (74 + 45) / 119][Stage 23:======================================>               (85 + 34) / 119][Stage 23:===========================================>          (96 + 23) / 119][Stage 23:==============================================>      (105 + 14) / 119][Stage 23:===================================================>  (114 + 5) / 119][Stage 23:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.828939877 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477547697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (72 + 46) / 118][Stage 24:====================================>                 (79 + 39) / 118][Stage 24:=============================================>       (101 + 17) / 118][Stage 24:====================================================> (114 + 4) / 118][Stage 24:=====================================================>(117 + 1) / 118]                                                                                [Stage 25:=================================>                    (73 + 46) / 119][Stage 25:====================================>                 (80 + 39) / 119][Stage 25:============================================>         (99 + 20) / 119][Stage 25:====================================================> (115 + 4) / 119][Stage 25:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.24401544 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468490668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=================================>                    (73 + 45) / 118][Stage 26:===================================>                  (78 + 40) / 118][Stage 26:=====================================>                (82 + 36) / 118][Stage 26:===========================================>          (96 + 22) / 118][Stage 26:===================================================>  (113 + 5) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (75 + 44) / 119][Stage 27:==================================>                   (76 + 43) / 119][Stage 27:=======================================>              (86 + 33) / 119][Stage 27:=============================================>       (103 + 16) / 119][Stage 27:===================================================>  (113 + 6) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.118175156 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446858079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:==================================>                   (75 + 43) / 118][Stage 28:======================================>               (84 + 34) / 118][Stage 28:===========================================>          (96 + 22) / 118][Stage 28:=================================================>    (109 + 9) / 118][Stage 28:=====================================================>(116 + 2) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:=================================>                    (74 + 45) / 119][Stage 29:====================================>                 (81 + 38) / 119][Stage 29:========================================>             (89 + 30) / 119][Stage 29:===========================================>          (96 + 23) / 119][Stage 29:===============================================>     (106 + 13) / 119][Stage 29:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.850548806 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518858028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===========================>                          (61 + 60) / 121][Stage 30:================================>                     (73 + 48) / 121][Stage 30:=========================================>            (94 + 27) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (70 + 52) / 122][Stage 31:======================================>               (87 + 35) / 122][Stage 31:==============================================>      (108 + 14) / 122][Stage 31:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.185161734 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398722126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (83 + 32) / 115][Stage 32:==========================================>           (90 + 25) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:======================================>               (83 + 33) / 116][Stage 33:===========================================>          (93 + 23) / 116][Stage 33:===============================================>     (104 + 12) / 116][Stage 33:===================================================>  (111 + 5) / 116][Stage 33:====================================================> (112 + 4) / 116][Stage 33:=====================================================>(114 + 2) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.024617119 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435946844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (82 + 33) / 115][Stage 34:==========================================>           (91 + 24) / 115][Stage 34:=================================================>    (106 + 9) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:========================================>             (87 + 29) / 116][Stage 35:==============================================>       (99 + 17) / 116][Stage 35:==================================================>   (108 + 8) / 116][Stage 35:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.188819546 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480213505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (71 + 44) / 115][Stage 36:========================================>             (86 + 29) / 115][Stage 36:===============================================>     (103 + 12) / 115][Stage 36:====================================================> (111 + 4) / 115]                                                                                [Stage 37:================================>                     (69 + 47) / 116][Stage 37:=======================================>              (84 + 32) / 116][Stage 37:===============================================>     (104 + 12) / 116][Stage 37:====================================================> (112 + 4) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.981467107 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532915572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:==============================>                       (69 + 52) / 121][Stage 38:======================================>               (87 + 34) / 121][Stage 38:=================================================>    (112 + 9) / 121][Stage 38:==================================================>   (114 + 7) / 121][Stage 38:===================================================>  (115 + 6) / 121][Stage 38:=====================================================>(119 + 2) / 121]                                                                                [Stage 39:===========================>                          (63 + 59) / 122][Stage 39:==================================>                   (78 + 44) / 122][Stage 39:=============================================>       (105 + 17) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.560040144 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471284256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==================================>                   (74 + 41) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:==================================================>   (108 + 7) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:=================================>                    (71 + 45) / 116][Stage 41:======================================>               (83 + 33) / 116][Stage 41:============================================>         (96 + 20) / 116][Stage 41:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.124441881 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502782056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:===============================>                      (71 + 50) / 121][Stage 42:=======================================>              (89 + 32) / 121][Stage 42:==================================================>   (113 + 8) / 121][Stage 42:=====================================================>(119 + 2) / 121]                                                                                [Stage 43:===========================>                          (63 + 59) / 122][Stage 43:=================================>                    (76 + 46) / 122][Stage 43:===========================================>          (98 + 24) / 122][Stage 43:================================================>    (112 + 10) / 122][Stage 43:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.4891697 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457734613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:====================================>                 (79 + 39) / 118][Stage 44:============================================>         (98 + 20) / 118][Stage 44:==================================================>   (111 + 7) / 118][Stage 44:=====================================================>(116 + 2) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:=================================>                    (74 + 45) / 119][Stage 45:=========================================>            (91 + 28) / 119][Stage 45:===============================================>     (107 + 12) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.156790684 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460647722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:=============================>                        (61 + 52) / 113][Stage 46:================================>                     (69 + 44) / 113][Stage 46:===========================================>          (91 + 22) / 113][Stage 46:==================================================>   (106 + 7) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:==============================>                       (65 + 49) / 114][Stage 47:=====================================>                (80 + 34) / 114][Stage 47:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.262104059 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433354116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==============================>                       (66 + 49) / 115][Stage 48:==================================>                   (74 + 41) / 115][Stage 48:==========================================>           (90 + 25) / 115][Stage 48:=================================================>    (106 + 9) / 115][Stage 48:===================================================>  (109 + 6) / 115][Stage 48:====================================================> (112 + 3) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:==================================>                   (74 + 42) / 116][Stage 49:========================================>             (88 + 28) / 116][Stage 49:=============================================>       (100 + 16) / 116][Stage 49:=================================================>    (107 + 9) / 116][Stage 49:==================================================>   (108 + 8) / 116][Stage 49:===================================================>  (111 + 5) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.768397882 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454377302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:===============================>                      (66 + 47) / 113][Stage 50:==============================================>       (98 + 15) / 113][Stage 50:===================================================>  (108 + 5) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:==============================>                       (65 + 49) / 114][Stage 51:======================================>               (82 + 32) / 114][Stage 51:==============================================>       (99 + 15) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.947034194 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457333433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:====================================>                 (79 + 39) / 118][Stage 52:=============================================>        (99 + 19) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:=======================================>              (86 + 33) / 119][Stage 53:============================================>        (100 + 19) / 119][Stage 53:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.914145414 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419617232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:=============================================>       (101 + 17) / 118][Stage 54:=====================================================>(117 + 1) / 118]                                                                                [Stage 55:=================================>                    (73 + 46) / 119][Stage 55:====================================>                 (80 + 39) / 119][Stage 55:==========================================>           (93 + 26) / 119][Stage 55:===================================================>  (113 + 6) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.925135929 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402970359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (71 + 42) / 113][Stage 56:======================================>               (81 + 32) / 113][Stage 56:============================================>         (93 + 20) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:====================================================> (109 + 4) / 113]                                                                                [Stage 57:====================================>                 (76 + 38) / 114][Stage 57:==========================================>           (90 + 24) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:================================================>    (104 + 10) / 114][Stage 57:===================================================>  (108 + 6) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.885687299 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412106848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (71 + 47) / 118][Stage 58:====================================>                 (80 + 38) / 118][Stage 58:===========================================>          (95 + 23) / 118][Stage 58:===================================================>  (112 + 6) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:======================================>               (85 + 34) / 119][Stage 59:==============================================>      (104 + 15) / 119][Stage 59:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.104097757 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454012822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:================================>                     (67 + 46) / 113][Stage 60:======================================>               (80 + 33) / 113][Stage 60:==============================================>       (97 + 16) / 113][Stage 60:===================================================>  (108 + 5) / 113]                                                                                [Stage 61:=============================>                        (62 + 52) / 114][Stage 61:=================================>                    (71 + 43) / 114][Stage 61:=========================================>            (87 + 27) / 114][Stage 61:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.279682215 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385561605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==================================>                   (72 + 41) / 113][Stage 62:=========================================>            (86 + 27) / 113][Stage 62:==============================================>       (97 + 16) / 113][Stage 62:==================================================>   (106 + 7) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:======================================>               (81 + 33) / 114][Stage 63:===========================================>          (92 + 22) / 114][Stage 63:===============================================>     (102 + 12) / 114][Stage 63:=====================================================>(112 + 2) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.324664758 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422107901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:===============================>                      (65 + 48) / 113][Stage 64:===================================>                  (75 + 38) / 113][Stage 64:==========================================>           (88 + 25) / 113][Stage 64:====================================================> (109 + 4) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:===============================>                      (67 + 47) / 114][Stage 65:=======================================>              (84 + 30) / 114][Stage 65:===============================================>     (103 + 11) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.271339749 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389233036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=======================================>              (85 + 30) / 115][Stage 66:=============================================>        (96 + 19) / 115][Stage 66:===================================================>  (109 + 6) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:=======================================>              (84 + 32) / 116][Stage 67:===========================================>          (94 + 22) / 116][Stage 67:==============================================>      (102 + 14) / 116]                                                                                Time elapsed: 2.821146079 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439288355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (62 + 58) / 120][Stage 68:===============================>                      (70 + 50) / 120][Stage 68:============================================>         (98 + 22) / 120][Stage 68:=================================================>    (111 + 9) / 120][Stage 68:====================================================> (116 + 4) / 120][Stage 68:=====================================================>(118 + 2) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:=================================>                    (74 + 47) / 121][Stage 69:=========================================>            (93 + 28) / 121][Stage 69:==============================================>      (106 + 15) / 121][Stage 69:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.785592862 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41585172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==================================>                   (74 + 41) / 115][Stage 70:=========================================>            (88 + 27) / 115][Stage 70:==============================================>      (101 + 14) / 115][Stage 70:=====================================================>(113 + 2) / 115]                                                                                [Stage 71:==================================>                   (75 + 41) / 116][Stage 71:=========================================>            (90 + 26) / 116][Stage 71:===================================================>  (110 + 6) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.487819976 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451831355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (67 + 54) / 121][Stage 72:==================================>                   (77 + 44) / 121][Stage 72:============================================>        (101 + 20) / 121][Stage 72:=====================================================>(119 + 2) / 121]                                                                                [Stage 73:===========================>                          (63 + 59) / 122][Stage 73:==============================>                       (70 + 52) / 122][Stage 73:=========================================>            (93 + 29) / 122][Stage 73:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.364630326 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384272341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=====================================>                (80 + 35) / 115][Stage 74:=========================================>            (88 + 27) / 115][Stage 74:=============================================>        (96 + 19) / 115][Stage 74:==================================================>   (108 + 7) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=======================================>              (84 + 32) / 116][Stage 75:===========================================>          (94 + 22) / 116][Stage 75:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.611271433 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438772154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=================================>                    (73 + 45) / 118][Stage 76:===================================>                  (77 + 41) / 118][Stage 76:=======================================>              (87 + 31) / 118][Stage 76:=============================================>       (102 + 16) / 118][Stage 76:==================================================>   (111 + 7) / 118][Stage 76:=====================================================>(117 + 1) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:===================================>                  (79 + 40) / 119][Stage 77:========================================>             (90 + 29) / 119][Stage 77:================================================>    (109 + 10) / 119][Stage 77:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.61494638 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453271839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:===========================>                          (62 + 58) / 120][Stage 78:================================>                     (73 + 47) / 120][Stage 78:==========================================>           (94 + 26) / 120][Stage 78:===================================================>  (114 + 6) / 120]                                                                                [Stage 79:===========================>                          (61 + 60) / 121][Stage 79:===============================>                      (70 + 51) / 121][Stage 79:=========================================>            (93 + 28) / 121][Stage 79:==================================================>   (114 + 7) / 121][Stage 79:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.240769472 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433198575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:=================================>                    (75 + 46) / 121][Stage 80:========================================>             (91 + 30) / 121][Stage 80:===============================================>     (108 + 13) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:==============================>                       (70 + 52) / 122][Stage 81:=====================================>                (85 + 37) / 122][Stage 81:==================================================>   (115 + 7) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.257004403 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363498814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=====================================>                (80 + 35) / 115][Stage 82:========================================>             (86 + 29) / 115][Stage 82:=============================================>        (97 + 18) / 115][Stage 82:====================================================> (112 + 3) / 115]                                                                                [Stage 83:======================================>               (82 + 34) / 116][Stage 83:========================================>             (88 + 28) / 116][Stage 83:===============================================>     (103 + 13) / 116][Stage 83:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.571958568 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390807361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (73 + 45) / 118][Stage 84:====================================>                 (79 + 39) / 118][Stage 84:========================================>             (88 + 30) / 118][Stage 84:============================================>         (98 + 20) / 118][Stage 84:==================================================>   (111 + 7) / 118]                                                                                [Stage 85:==================================>                   (75 + 44) / 119][Stage 85:==================================>                   (77 + 42) / 119][Stage 85:==========================================>           (94 + 25) / 119][Stage 85:================================================>    (109 + 10) / 119][Stage 85:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.425382058 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394417913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (68 + 47) / 115][Stage 86:====================================>                 (77 + 38) / 115][Stage 86:=========================================>            (88 + 27) / 115][Stage 86:============================================>         (95 + 20) / 115][Stage 86:===================================================>  (109 + 6) / 115]                                                                                [Stage 87:======================================>               (82 + 34) / 116][Stage 87:=============================================>        (98 + 18) / 116][Stage 87:===============================================>     (105 + 11) / 116][Stage 87:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.00708535 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421719199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (67 + 46) / 113][Stage 88:====================================>                 (77 + 36) / 113][Stage 88:===============================================>     (102 + 11) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:===============================>                      (66 + 48) / 114][Stage 89:=====================================>                (79 + 35) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.214564429 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38735587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=================================>                    (73 + 45) / 118][Stage 90:===================================>                  (77 + 41) / 118][Stage 90:=====================================>                (83 + 35) / 118][Stage 90:============================================>         (98 + 20) / 118][Stage 90:===================================================>  (113 + 5) / 118][Stage 90:=====================================================>(117 + 1) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:==================================>                   (75 + 44) / 119][Stage 91:===================================>                  (79 + 40) / 119][Stage 91:=======================================>              (86 + 33) / 119][Stage 91:============================================>         (98 + 21) / 119][Stage 91:===================================================>  (114 + 5) / 119][Stage 91:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.757021593 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398468746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===============================>                      (68 + 47) / 115][Stage 92:=======================================>              (85 + 30) / 115][Stage 92:==============================================>      (100 + 15) / 115][Stage 92:===================================================>  (110 + 5) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:================================>                     (70 + 46) / 116][Stage 93:=====================================>                (80 + 36) / 116][Stage 93:=============================================>        (97 + 19) / 116][Stage 93:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.904489985 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381406672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:==================================>                   (76 + 42) / 118][Stage 94:====================================>                 (80 + 38) / 118][Stage 94:=======================================>              (86 + 32) / 118][Stage 94:==============================================>      (103 + 15) / 118]                                                                                [Stage 95:==================================>                   (75 + 44) / 119][Stage 95:=====================================>                (83 + 36) / 119][Stage 95:===========================================>          (95 + 24) / 119][Stage 95:===============================================>     (107 + 12) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.264369968 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386017466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (73 + 45) / 118][Stage 96:====================================>                 (79 + 39) / 118][Stage 96:=======================================>              (86 + 32) / 118][Stage 96:=============================================>       (101 + 17) / 118][Stage 96:===================================================>  (112 + 6) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:===================================>                  (78 + 41) / 119][Stage 97:========================================>             (89 + 30) / 119][Stage 97:==============================================>      (105 + 14) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.359334149 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383780899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:==================================>                   (76 + 42) / 118][Stage 98:=========================================>            (91 + 27) / 118][Stage 98:===============================================>     (106 + 12) / 118][Stage 98:=====================================================>(117 + 1) / 118]                                                                                [Stage 99:=================================>                    (73 + 46) / 119][Stage 99:==================================>                   (76 + 43) / 119][Stage 99:==========================================>           (94 + 25) / 119][Stage 99:==============================================>      (105 + 14) / 119][Stage 99:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.190580933 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407314994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=============================>                       (62 + 51) / 113][Stage 100:====================================>                (78 + 35) / 113][Stage 100:===========================================>         (92 + 21) / 113][Stage 100:==================================================>  (108 + 5) / 113]                                                                                [Stage 101:===========================>                         (59 + 55) / 114][Stage 101:=============================>                       (64 + 50) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:====================================================>(112 + 2) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.324644519 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421125478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==============================>                      (70 + 51) / 121][Stage 102:=======================================>             (91 + 30) / 121][Stage 102:=================================================>   (113 + 8) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (67 + 55) / 122][Stage 103:==================================>                  (79 + 43) / 122][Stage 103:===========================================>        (101 + 21) / 122][Stage 103:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.174997904 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428827282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (64 + 56) / 120][Stage 104:==================================>                  (77 + 43) / 120][Stage 104:==========================================>          (97 + 23) / 120][Stage 104:=============================================>      (105 + 15) / 120][Stage 104:===================================================> (117 + 3) / 120]                                                                                [Stage 105:============================>                        (66 + 55) / 121][Stage 105:====================================>                (83 + 38) / 121][Stage 105:==========================================>          (96 + 25) / 121][Stage 105:=================================================>   (112 + 9) / 121][Stage 105:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.482320261 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36522114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (79 + 36) / 115][Stage 106:======================================>              (83 + 32) / 115][Stage 106:===========================================>         (94 + 21) / 115][Stage 106:==================================================>  (109 + 6) / 115][Stage 106:====================================================>(113 + 2) / 115]                                                                                [Stage 107:======================================>              (84 + 32) / 116][Stage 107:=========================================>           (91 + 25) / 116][Stage 107:=============================================>      (102 + 14) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.826634538 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437292889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:===========================>                         (63 + 58) / 121][Stage 108:===============================>                     (72 + 49) / 121][Stage 108:=========================================>           (95 + 26) / 121][Stage 108:=================================================>   (112 + 9) / 121]                                                                                [Stage 109:===========================>                         (64 + 58) / 122][Stage 109:=================================>                   (76 + 46) / 122][Stage 109:=========================================>           (96 + 26) / 122][Stage 109:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.156376126 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405310967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:============================>                        (60 + 53) / 113][Stage 110:================================>                    (69 + 44) / 113][Stage 110:==========================================>          (91 + 22) / 113][Stage 110:===================================================> (110 + 3) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:================================>                    (69 + 45) / 114][Stage 111:======================================>              (82 + 32) / 114][Stage 111:==============================================>     (102 + 12) / 114][Stage 111:===================================================> (110 + 4) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.397228471 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363509455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===================================>                 (76 + 37) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:=================================================>   (106 + 7) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:==================================>                  (74 + 40) / 114][Stage 113:=========================================>           (90 + 24) / 114][Stage 113:============================================>        (96 + 18) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.033459095 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=144", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=144,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409855222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 59) / 121][Stage 114:==============================>                      (69 + 52) / 121][Stage 114:=======================================>             (91 + 30) / 121][Stage 114:=============================================>      (106 + 15) / 121]                                                                                [Stage 115:==========================>                          (62 + 60) / 122][Stage 115:==============================>                      (70 + 52) / 122][Stage 115:=====================================>               (86 + 36) / 122][Stage 115:==============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.11345569 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359499742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (77 + 36) / 113][Stage 116:==========================================>          (90 + 23) / 113][Stage 116:=============================================>       (97 + 16) / 113][Stage 116:==================================================>  (108 + 5) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:=====================================>               (81 + 33) / 114][Stage 117:==========================================>          (92 + 22) / 114][Stage 117:==================================================>  (108 + 6) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.09495931 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338949836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (81 + 34) / 115][Stage 118:========================================>            (87 + 28) / 115][Stage 118:============================================>        (97 + 18) / 115][Stage 118:==================================================>  (109 + 6) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:=====================================>               (83 + 33) / 116][Stage 119:==========================================>          (93 + 23) / 116][Stage 119:=============================================>      (102 + 14) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.763468857 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367729868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:=================================>                   (74 + 44) / 118][Stage 120:=======================================>             (88 + 30) / 118][Stage 120:=============================================>      (104 + 14) / 118][Stage 120:===================================================> (114 + 4) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:==================================>                  (77 + 42) / 119][Stage 121:==========================================>          (96 + 23) / 119][Stage 121:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.894412173 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355028308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (72 + 41) / 113][Stage 122:=======================================>             (84 + 29) / 113][Stage 122:============================================>        (94 + 19) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===================================>                 (76 + 38) / 114][Stage 123:=======================================>             (86 + 28) / 114][Stage 123:============================================>        (96 + 18) / 114][Stage 123:==================================================>  (108 + 6) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.086643224 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=119", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=119,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360392305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (78 + 35) / 113][Stage 124:===========================================>         (92 + 21) / 113][Stage 124:==============================================>     (102 + 11) / 113][Stage 124:===================================================> (109 + 4) / 113]                                                                                [Stage 125:====================================>                (79 + 35) / 114][Stage 125:==========================================>          (92 + 22) / 114][Stage 125:================================================>    (105 + 9) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.037261548 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421433138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (61 + 60) / 121][Stage 126:===============================>                     (71 + 50) / 121][Stage 126:=========================================>           (94 + 27) / 121][Stage 126:=================================================>   (112 + 9) / 121][Stage 126:====================================================>(120 + 1) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:============================>                        (66 + 56) / 122][Stage 127:=================================>                   (76 + 46) / 122][Stage 127:===========================================>         (99 + 23) / 122][Stage 127:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.112130325 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361280828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (72 + 41) / 113][Stage 128:======================================>              (83 + 30) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:==============================================>     (100 + 13) / 113][Stage 128:==================================================>  (108 + 5) / 113]                                                                                [Stage 129:=====================================>               (81 + 33) / 114][Stage 129:========================================>            (87 + 27) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:=================================================>   (107 + 7) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.185296638 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340924323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=======================================>             (86 + 29) / 115][Stage 130:============================================>        (96 + 19) / 115][Stage 130:===================================================> (112 + 3) / 115]                                                                                [Stage 131:========================================>            (88 + 28) / 116][Stage 131:==========================================>          (93 + 23) / 116][Stage 131:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.547516672 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379935707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:===================================>                 (80 + 38) / 118][Stage 132:============================================>       (101 + 17) / 118][Stage 132:=================================================>   (110 + 8) / 118]                                                                                [Stage 133:=================================>                   (76 + 43) / 119][Stage 133:====================================>                (82 + 37) / 119][Stage 133:=============================================>      (103 + 16) / 119][Stage 133:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.046146956 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41237543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:===========================>                         (63 + 58) / 121][Stage 134:==================================>                  (78 + 43) / 121][Stage 134:=============================================>      (105 + 16) / 121]                                                                                [Stage 135:==========================>                          (61 + 61) / 122][Stage 135:=============================>                       (68 + 54) / 122][Stage 135:====================================>                (85 + 37) / 122][Stage 135:============================================>       (105 + 17) / 122]                                                                                Time elapsed: 3.075430609 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398689147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=============================>                       (66 + 54) / 120][Stage 136:====================================>                (83 + 37) / 120][Stage 136:===============================================>    (110 + 10) / 120][Stage 136:====================================================>(119 + 1) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:=============================>                       (68 + 53) / 121][Stage 137:====================================>                (83 + 38) / 121][Stage 137:==============================================>     (109 + 12) / 121][Stage 137:====================================================>(119 + 2) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.302910752 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363764735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:==================================>                  (77 + 41) / 118][Stage 138:=======================================>             (89 + 29) / 118][Stage 138:=================================================>   (110 + 8) / 118][Stage 138:====================================================>(117 + 1) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:==================================>                  (77 + 42) / 119][Stage 139:========================================>            (91 + 28) / 119][Stage 139:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.020575355 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389502457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:=============================>                       (63 + 50) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:============================>                        (61 + 53) / 114][Stage 141:=================================>                   (73 + 41) / 114][Stage 141:============================================>        (96 + 18) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.81102201 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340863123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:====================================>                (80 + 35) / 115][Stage 142:=======================================>             (86 + 29) / 115][Stage 142:=============================================>      (101 + 14) / 115][Stage 142:===================================================> (111 + 4) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=====================================>               (82 + 34) / 116][Stage 143:==========================================>          (92 + 24) / 116][Stage 143:=============================================>      (101 + 15) / 116][Stage 143:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.903378843 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379227105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:=====================================>               (81 + 34) / 115][Stage 144:============================================>        (97 + 18) / 115][Stage 144:=================================================>   (107 + 8) / 115][Stage 144:===================================================> (111 + 4) / 115][Stage 144:=====================================================(115 + 0) / 115]                                                                                [Stage 145:================================>                    (72 + 44) / 116][Stage 145:========================================>            (88 + 28) / 116][Stage 145:===============================================>    (105 + 11) / 116][Stage 145:===================================================> (112 + 4) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.609932987 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40942746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (63 + 57) / 120][Stage 146:==============================>                      (70 + 50) / 120][Stage 146:==========================================>          (97 + 23) / 120][Stage 146:=================================================>   (113 + 7) / 120][Stage 146:====================================================>(118 + 2) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:============================>                        (66 + 55) / 121][Stage 147:=====================================>               (85 + 36) / 121][Stage 147:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.079899903 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400634133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:==============================>                      (69 + 52) / 121][Stage 148:=======================================>             (91 + 30) / 121][Stage 148:=================================================>   (112 + 9) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=================================>                   (76 + 46) / 122][Stage 149:==========================================>          (97 + 25) / 122][Stage 149:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.001125034 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417495786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (82 + 33) / 115][Stage 150:========================================>            (88 + 27) / 115][Stage 150:===========================================>         (95 + 20) / 115][Stage 150:===================================================> (111 + 4) / 115]                                                                                [Stage 151:=======================================>             (87 + 29) / 116][Stage 151:===========================================>         (96 + 20) / 116][Stage 151:===============================================>    (105 + 11) / 116][Stage 151:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.854687588 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348851368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:=========================================>           (89 + 26) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:===================================================> (111 + 4) / 115]                                                                                [Stage 153:========================================>            (88 + 28) / 116][Stage 153:============================================>       (100 + 16) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.75126682 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378211382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (66 + 49) / 115][Stage 154:===================================>                 (77 + 38) / 115][Stage 154:=========================================>           (91 + 24) / 115][Stage 154:==================================================>  (109 + 6) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:===============================>                     (68 + 48) / 116][Stage 155:=====================================>               (81 + 35) / 116][Stage 155:=============================================>      (101 + 15) / 116][Stage 155:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.80791354 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400392492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:=============================>                       (67 + 54) / 121][Stage 156:========================================>            (92 + 29) / 121][Stage 156:==============================================>     (108 + 13) / 121][Stage 156:====================================================>(119 + 2) / 121]                                                                                [Stage 157:===========================>                         (64 + 58) / 122][Stage 157:================================>                    (75 + 47) / 122][Stage 157:==========================================>          (98 + 24) / 122][Stage 157:=================================================>   (115 + 7) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.320349947 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370650258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 41) / 115][Stage 158:============================================>        (96 + 19) / 115][Stage 158:================================================>    (106 + 9) / 115]                                                                                [Stage 159:================================>                    (72 + 44) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:===================================================> (113 + 3) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.847937487 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide92"
dataSource: String = /nidan/orc/individualORC/slide92

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381465792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=============================>                       (63 + 50) / 113][Stage 160:==================================>                  (73 + 40) / 113][Stage 160:==========================================>          (90 + 23) / 113][Stage 160:==============================================>     (101 + 12) / 113][Stage 160:===================================================> (109 + 4) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:============================>                        (61 + 53) / 114][Stage 161:===============================>                     (68 + 46) / 114][Stage 161:====================================>                (78 + 36) / 114][Stage 161:=============================================>       (98 + 16) / 114][Stage 161:==================================================>  (108 + 6) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.614534563 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467026964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:================================>                    (73 + 45) / 118][Stage 162:==================================>                  (77 + 41) / 118][Stage 162:=====================================>               (84 + 34) / 118][Stage 162:==========================================>          (94 + 24) / 118][Stage 162:====================================================>(116 + 2) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:===================================>                 (79 + 40) / 119][Stage 163:====================================>                (81 + 38) / 119][Stage 163:==========================================>          (96 + 23) / 119][Stage 163:=============================================>      (105 + 14) / 119][Stage 163:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.72394969 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37147136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===============================>                     (69 + 46) / 115][Stage 164:======================================>              (84 + 31) / 115][Stage 164:=============================================>       (99 + 16) / 115][Stage 164:=================================================>   (107 + 8) / 115]                                                                                [Stage 165:================================>                    (72 + 44) / 116][Stage 165:========================================>            (88 + 28) / 116][Stage 165:==============================================>     (103 + 13) / 116][Stage 165:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.830764273 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337334272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (82 + 33) / 115][Stage 166:========================================>            (88 + 27) / 115][Stage 166:============================================>        (96 + 19) / 115][Stage 166:==================================================>  (109 + 6) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:==========================================>          (92 + 24) / 116][Stage 167:==============================================>     (103 + 13) / 116][Stage 167:====================================================>(114 + 2) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.274141742 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399174668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:=============================>                       (62 + 51) / 113][Stage 168:===================================>                 (75 + 38) / 113][Stage 168:==============================================>     (100 + 13) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==============================>                      (65 + 49) / 114][Stage 169:========================================>            (87 + 27) / 114][Stage 169:================================================>    (105 + 9) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.030746448 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407193793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:=============================>                       (67 + 53) / 120][Stage 170:=====================================>               (86 + 34) / 120][Stage 170:=============================================>      (106 + 14) / 120][Stage 170:====================================================>(119 + 1) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:============================>                        (66 + 55) / 121][Stage 171:====================================>                (84 + 37) / 121][Stage 171:==============================================>     (108 + 13) / 121][Stage 171:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.089904657 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384117461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (71 + 44) / 115][Stage 172:======================================>              (83 + 32) / 115][Stage 172:==============================================>     (102 + 13) / 115][Stage 172:===================================================> (111 + 4) / 115]                                                                                [Stage 173:===============================>                     (69 + 47) / 116][Stage 173:=====================================>               (83 + 33) / 116][Stage 173:============================================>        (98 + 18) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.027999799 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412771832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 60) / 120][Stage 174:==============================>                      (68 + 52) / 120][Stage 174:=====================================>               (84 + 36) / 120][Stage 174:==============================================>     (107 + 13) / 120][Stage 174:====================================================>(119 + 1) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:=============================>                       (68 + 53) / 121][Stage 175:=====================================>               (85 + 36) / 121][Stage 175:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.019285492 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389851398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:==============================>                      (70 + 50) / 120][Stage 176:=========================================>           (94 + 26) / 120][Stage 176:=================================================>   (111 + 9) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:==============================>                      (70 + 51) / 121][Stage 177:=====================================>               (85 + 36) / 121][Stage 177:=============================================>      (106 + 15) / 121][Stage 177:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.433796189 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343853812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:====================================>                (80 + 35) / 115][Stage 178:=========================================>           (89 + 26) / 115][Stage 178:===============================================>    (104 + 11) / 115][Stage 178:===================================================> (111 + 4) / 115]                                                                                [Stage 179:=======================================>             (86 + 30) / 116][Stage 179:=========================================>           (90 + 26) / 116][Stage 179:===============================================>    (105 + 11) / 116][Stage 179:===================================================> (113 + 3) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.244418868 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385182204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (73 + 45) / 118][Stage 180:=================================>                   (75 + 43) / 118][Stage 180:===================================>                 (79 + 39) / 118][Stage 180:=========================================>           (92 + 26) / 118][Stage 180:==============================================>     (105 + 13) / 118][Stage 180:==================================================>  (113 + 5) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:=================================>                   (75 + 44) / 119][Stage 181:==================================>                  (77 + 42) / 119][Stage 181:====================================>                (83 + 36) / 119][Stage 181:============================================>       (101 + 18) / 119][Stage 181:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.653852848 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433723498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 60) / 121][Stage 182:============================>                        (66 + 55) / 121][Stage 182:======================================>              (87 + 34) / 121][Stage 182:===================================================> (118 + 3) / 121]                                                                                [Stage 183:==========================>                          (61 + 61) / 122][Stage 183:===========================>                         (63 + 59) / 122][Stage 183:===================================>                 (82 + 40) / 122][Stage 183:==============================================>     (109 + 13) / 122][Stage 183:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.026598255 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410059323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (61 + 59) / 120][Stage 184:=================================>                   (75 + 45) / 120][Stage 184:===========================================>        (101 + 19) / 120][Stage 184:===================================================> (116 + 4) / 120]                                                                                [Stage 185:===========================>                         (62 + 59) / 121][Stage 185:==============================>                      (70 + 51) / 121][Stage 185:==========================================>          (96 + 25) / 121][Stage 185:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.048876526 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353474863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:====================================>                (78 + 35) / 113][Stage 186:=========================================>           (88 + 25) / 113][Stage 186:============================================>        (94 + 19) / 113][Stage 186:================================================>    (104 + 9) / 113][Stage 186:===================================================> (109 + 4) / 113]                                                                                [Stage 187:=====================================>               (80 + 34) / 114][Stage 187:=========================================>           (90 + 24) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.17924456 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486595286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=================================>                   (74 + 44) / 118][Stage 188:======================================>              (85 + 33) / 118][Stage 188:============================================>        (98 + 20) / 118][Stage 188:=================================================>   (110 + 8) / 118][Stage 188:====================================================>(117 + 1) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:==================================>                  (77 + 42) / 119][Stage 189:=========================================>           (94 + 25) / 119][Stage 189:==============================================>     (106 + 13) / 119][Stage 189:===================================================> (115 + 4) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.469342222 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377481939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:=====================================>               (80 + 33) / 113][Stage 190:==============================================>     (100 + 13) / 113][Stage 190:====================================================>(111 + 2) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:============================>                        (62 + 52) / 114][Stage 191:=================================>                   (72 + 42) / 114][Stage 191:===========================================>         (94 + 20) / 114][Stage 191:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.38048124 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3335789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (84 + 31) / 115][Stage 192:============================================>        (97 + 18) / 115][Stage 192:===============================================>    (105 + 10) / 115][Stage 192:==================================================>  (109 + 6) / 115]                                                                                [Stage 193:======================================>              (85 + 31) / 116][Stage 193:============================================>        (97 + 19) / 116][Stage 193:===============================================>    (106 + 10) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.95870446 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350562913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (79 + 34) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:==============================================>     (101 + 12) / 113][Stage 194:==================================================>  (108 + 5) / 113]                                                                                [Stage 195:======================================>              (82 + 32) / 114][Stage 195:===========================================>         (93 + 21) / 114][Stage 195:==============================================>     (103 + 11) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.862158394 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390066199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==============================>                      (67 + 48) / 115][Stage 196:=================================>                   (73 + 42) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:=================================================>   (107 + 8) / 115][Stage 196:==================================================>  (109 + 6) / 115][Stage 196:====================================================>(113 + 2) / 115]                                                                                [Stage 197:===================================>                 (78 + 38) / 116][Stage 197:=======================================>             (87 + 29) / 116][Stage 197:=============================================>      (101 + 15) / 116][Stage 197:==================================================>  (111 + 5) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.99092832 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398034524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:===============================>                     (68 + 45) / 113][Stage 198:=============================================>       (98 + 15) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:=================================>                   (71 + 43) / 114][Stage 199:==========================================>          (92 + 22) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.154788764 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393096669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==============================>                      (70 + 51) / 121][Stage 200:=======================================>             (90 + 31) / 121][Stage 200:=================================================>   (113 + 8) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:==============================>                      (70 + 52) / 122][Stage 201:=======================================>             (90 + 32) / 122][Stage 201:=============================================>      (107 + 15) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.222595359 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/23 09:31:51 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:53074) dropped. RpcEnv already stopped.
17/05/23 09:31:51 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:53074) dropped. RpcEnv already stopped.
17/05/23 09:31:51 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:43258) dropped. RpcEnv already stopped.
17/05/23 09:31:51 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:43258) dropped. RpcEnv already stopped.

real	10m2.466s
user	11m23.448s
sys	0m37.044s
