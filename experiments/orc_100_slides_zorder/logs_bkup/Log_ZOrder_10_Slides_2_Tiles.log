Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 00:00:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:01:05 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:01:05 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:01:05 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 00:01:08 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:01:18 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522000107-0392).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.383914804 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==============>                                        (31 + 84) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.438359982 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.666668233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:============================>                          (59 + 54) / 113][Stage 2:=================================>                     (69 + 44) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:====================================>                  (76 + 37) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:===================================>                   (74 + 40) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:=======================================>               (82 + 32) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:============================================>          (92 + 22) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.164653547 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.695810237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (61 + 53) / 114][Stage 5:================================>                      (67 + 47) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:============================================>          (93 + 21) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.752228642 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.668860458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:===========================>                           (61 + 60) / 121][Stage 6:===============================>                       (69 + 52) / 121][Stage 6:=====================================>                 (82 + 39) / 121][Stage 6:========================================>              (90 + 31) / 121][Stage 6:===============================================>      (107 + 14) / 121][Stage 6:=====================================================> (117 + 4) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:====================================>                  (82 + 40) / 122][Stage 7:=============================================>        (103 + 19) / 122][Stage 7:===============================================>      (107 + 15) / 122][Stage 7:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.220082766 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611412356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (57 + 56) / 113][Stage 8:==============================>                        (62 + 51) / 113][Stage 8:====================================>                  (76 + 37) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:===========================>                           (58 + 56) / 114][Stage 9:============================>                          (59 + 55) / 114][Stage 9:==================================>                    (71 + 43) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:===============================================>       (99 + 15) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:=====================================================> (110 + 4) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.305822283 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497775471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===================================>                  (75 + 39) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:===================================================>  (109 + 5) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.961482813 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554019836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==================================>                   (72 + 41) / 113][Stage 12:=====================================>                (79 + 34) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:=============================================>        (96 + 17) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:===================================>                  (74 + 40) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:===========================================>          (92 + 22) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:===================================================>  (108 + 6) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.952475763 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636078223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (58 + 62) / 120][Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===============================>                      (69 + 51) / 120][Stage 14:========================================>             (91 + 29) / 120][Stage 14:==============================================>      (105 + 15) / 120][Stage 14:================================================>    (110 + 10) / 120][Stage 14:====================================================> (116 + 4) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (62 + 59) / 121][Stage 15:=================================>                    (75 + 46) / 121][Stage 15:=========================================>            (92 + 29) / 121][Stage 15:===============================================>     (109 + 12) / 121][Stage 15:====================================================> (117 + 4) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.102595743 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591875261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:===============================>                      (69 + 51) / 120][Stage 16:========================================>             (89 + 31) / 120][Stage 16:================================================>    (110 + 10) / 120][Stage 16:=====================================================>(119 + 1) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (67 + 54) / 121][Stage 17:====================================>                 (82 + 39) / 121][Stage 17:===========================================>          (97 + 24) / 121][Stage 17:==============================================>      (106 + 15) / 121][Stage 17:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.636648 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467108374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==================================>                   (72 + 41) / 113][Stage 18:========================================>             (85 + 28) / 113][Stage 18:==========================================>           (88 + 25) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:===================================>                  (74 + 40) / 114][Stage 19:========================================>             (86 + 28) / 114][Stage 19:=============================================>        (97 + 17) / 114][Stage 19:==================================================>   (106 + 8) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.79949612 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53214302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:=================================>                    (70 + 43) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:==========================>                           (56 + 58) / 114][Stage 21:==============================>                       (64 + 50) / 114][Stage 21:====================================>                 (77 + 37) / 114][Stage 21:==============================================>      (100 + 14) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.597820834 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485442618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==============================>                       (66 + 49) / 115][Stage 22:======================================>               (81 + 34) / 115][Stage 22:==============================================>       (98 + 17) / 115][Stage 22:==================================================>   (108 + 7) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:===============================>                      (68 + 48) / 116][Stage 23:========================================>             (86 + 30) / 116][Stage 23:===============================================>     (103 + 13) / 116][Stage 23:==================================================>   (108 + 8) / 116][Stage 23:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.254770976 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455404676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:====================================>                 (76 + 37) / 113][Stage 24:=======================================>              (83 + 30) / 113][Stage 24:============================================>         (93 + 20) / 113][Stage 24:==============================================>      (100 + 13) / 113][Stage 24:===================================================>  (108 + 5) / 113]                                                                                [Stage 25:======================================>               (81 + 33) / 114][Stage 25:==========================================>           (90 + 24) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.830582709 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507053261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (61 + 59) / 120][Stage 26:================================>                     (73 + 47) / 120][Stage 26:========================================>             (90 + 30) / 120][Stage 26:=================================================>    (111 + 9) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:=============================>                        (65 + 56) / 121][Stage 27:==================================>                   (77 + 44) / 121][Stage 27:=========================================>            (94 + 27) / 121][Stage 27:===============================================>     (109 + 12) / 121][Stage 27:=================================================>    (112 + 9) / 121][Stage 27:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.844941259 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508772583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (65 + 56) / 121][Stage 28:==================================>                   (77 + 44) / 121][Stage 28:=============================================>       (105 + 16) / 121][Stage 28:===================================================>  (116 + 5) / 121][Stage 28:=====================================================>(119 + 2) / 121]                                                                                [Stage 29:===========================>                          (62 + 60) / 122][Stage 29:==================================>                   (79 + 43) / 122][Stage 29:==========================================>           (97 + 25) / 122][Stage 29:===================================================>  (116 + 6) / 122][Stage 29:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.618230368 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520541685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (66 + 55) / 121][Stage 30:==================================>                   (77 + 44) / 121][Stage 30:===========================================>         (100 + 21) / 121][Stage 30:===================================================>  (116 + 5) / 121]                                                                                [Stage 31:===========================>                          (62 + 60) / 122][Stage 31:=================================>                    (75 + 47) / 122][Stage 31:===========================================>          (98 + 24) / 122][Stage 31:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.267293065 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408985096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (81 + 34) / 115][Stage 32:============================================>         (94 + 21) / 115][Stage 32:==================================================>   (108 + 7) / 115]                                                                                [Stage 33:======================================>               (82 + 34) / 116][Stage 33:=========================================>            (89 + 27) / 116][Stage 33:==============================================>      (102 + 14) / 116][Stage 33:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.840548074 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410934258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=======================================>              (84 + 31) / 115][Stage 34:=============================================>        (96 + 19) / 115][Stage 34:===================================================>  (110 + 5) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:======================================>               (82 + 34) / 116][Stage 35:===========================================>          (93 + 23) / 116][Stage 35:=============================================>        (98 + 18) / 116][Stage 35:================================================>    (106 + 10) / 116][Stage 35:=================================================>    (107 + 9) / 116][Stage 35:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.136390546 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515527887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===========================>                          (61 + 59) / 120][Stage 36:====================================>                 (80 + 40) / 120][Stage 36:============================================>         (99 + 21) / 120][Stage 36:==================================================>   (113 + 7) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:==============================>                       (68 + 53) / 121][Stage 37:==========================================>           (95 + 26) / 121][Stage 37:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.213625221 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53247659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (75 + 43) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:============================================>         (97 + 21) / 118][Stage 38:================================================>    (108 + 10) / 118][Stage 38:====================================================> (114 + 4) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:=====================================>                (83 + 36) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:==============================================>      (104 + 15) / 119][Stage 39:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.598863964 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489256767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:===========================>                          (61 + 59) / 120][Stage 40:==================================>                   (76 + 44) / 120][Stage 40:============================================>         (99 + 21) / 120][Stage 40:===================================================>  (114 + 6) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:===============================>                      (70 + 51) / 121][Stage 41:========================================>             (90 + 31) / 121][Stage 41:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.186149912 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494505329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (60 + 53) / 113][Stage 42:================================>                     (67 + 46) / 113][Stage 42:=========================================>            (87 + 26) / 113][Stage 42:===============================================>     (101 + 12) / 113][Stage 42:====================================================> (109 + 4) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:=============================>                        (63 + 51) / 114][Stage 43:====================================>                 (77 + 37) / 114][Stage 43:============================================>         (93 + 21) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.423152642 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410545261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=======================================>              (84 + 31) / 115][Stage 44:============================================>         (94 + 21) / 115][Stage 44:================================================>    (105 + 10) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:============================================>         (95 + 21) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.734022318 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462776447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:=============================>                        (66 + 54) / 120][Stage 46:=======================================>              (88 + 32) / 120][Stage 46:===============================================>     (108 + 12) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:===============================>                      (70 + 51) / 121][Stage 47:======================================>               (86 + 35) / 121][Stage 47:=============================================>       (104 + 17) / 121][Stage 47:====================================================> (118 + 3) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.266065298 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426949565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:==================================>                   (76 + 42) / 118][Stage 48:========================================>             (88 + 30) / 118][Stage 48:============================================>        (100 + 18) / 118][Stage 48:==================================================>   (111 + 7) / 118][Stage 48:=====================================================>(117 + 1) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:==================================>                   (77 + 42) / 119][Stage 49:=======================================>              (86 + 33) / 119][Stage 49:=============================================>       (103 + 16) / 119][Stage 49:====================================================> (116 + 3) / 119][Stage 49:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.645396325 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472782831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:=============================>                        (62 + 51) / 113][Stage 50:====================================>                 (76 + 37) / 113][Stage 50:===========================================>          (90 + 23) / 113][Stage 50:==================================================>   (106 + 7) / 113][Stage 50:=====================================================>(111 + 2) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:===========================>                          (59 + 55) / 114][Stage 51:=============================>                        (62 + 52) / 114][Stage 51:======================================>               (82 + 32) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.461658154 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475452092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:=============================>                        (65 + 56) / 121][Stage 52:=====================================>                (83 + 38) / 121][Stage 52:============================================>        (102 + 19) / 121][Stage 52:====================================================> (118 + 3) / 121]                                                                                [Stage 53:===========================>                          (62 + 60) / 122][Stage 53:===============================>                      (72 + 50) / 122][Stage 53:==========================================>           (95 + 27) / 122][Stage 53:==================================================>   (114 + 8) / 122][Stage 53:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.226697495 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438238229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (69 + 46) / 115][Stage 54:======================================>               (81 + 34) / 115][Stage 54:===============================================>     (103 + 12) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:===============================>                      (68 + 48) / 116][Stage 55:=====================================>                (81 + 35) / 116][Stage 55:=============================================>        (98 + 18) / 116][Stage 55:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.719522425 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397068345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (80 + 33) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:===============================================>     (102 + 11) / 113][Stage 56:====================================================> (110 + 3) / 113]                                                                                [Stage 57:======================================>               (82 + 32) / 114][Stage 57:============================================>         (93 + 21) / 114][Stage 57:===============================================>     (102 + 12) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.923053312 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394038246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (81 + 34) / 115][Stage 58:========================================>             (87 + 28) / 115][Stage 58:===============================================>     (102 + 13) / 115][Stage 58:=====================================================>(113 + 2) / 115]                                                                                [Stage 59:=======================================>              (84 + 32) / 116][Stage 59:============================================>         (95 + 21) / 116][Stage 59:==================================================>   (108 + 8) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.85584569 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403473567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=====================================>                (78 + 35) / 113][Stage 60:==========================================>           (88 + 25) / 113][Stage 60:==============================================>       (97 + 16) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:======================================>               (82 + 32) / 114][Stage 61:=============================================>        (96 + 18) / 114][Stage 61:=================================================>    (105 + 9) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.940679285 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449514113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (61 + 52) / 113][Stage 62:=================================>                    (70 + 43) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (58 + 56) / 114][Stage 63:============================>                         (61 + 53) / 114][Stage 63:==================================>                   (73 + 41) / 114][Stage 63:============================================>         (94 + 20) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.18134404 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380268886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:>                                                       (0 + 0) / 115][Stage 64:======================================>               (81 + 34) / 115][Stage 64:==========================================>           (90 + 25) / 115][Stage 64:================================================>    (105 + 10) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:========================================>             (86 + 30) / 116][Stage 65:===========================================>          (93 + 23) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.058854451 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378506406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (80 + 35) / 115][Stage 66:========================================>             (86 + 29) / 115][Stage 66:===============================================>     (103 + 12) / 115][Stage 66:===================================================>  (109 + 6) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:=======================================>              (84 + 32) / 116][Stage 67:=========================================>            (90 + 26) / 116][Stage 67:===============================================>     (104 + 12) / 116][Stage 67:====================================================> (112 + 4) / 116][Stage 67:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.00863093 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4788723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=====================================>                (79 + 36) / 115][Stage 68:======================================>               (83 + 32) / 115][Stage 68:============================================>         (94 + 21) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:======================================>               (82 + 34) / 116][Stage 69:============================================>         (95 + 21) / 116][Stage 69:===============================================>     (104 + 12) / 116][Stage 69:===================================================>  (111 + 5) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.710708204 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=166", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=166,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465834798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (59 + 61) / 120][Stage 70:===========================>                          (61 + 59) / 120][Stage 70:==================================>                   (76 + 44) / 120][Stage 70:============================================>         (99 + 21) / 120][Stage 70:===================================================>  (115 + 5) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (69 + 52) / 121][Stage 71:=====================================>                (83 + 38) / 121][Stage 71:================================================>    (110 + 11) / 121][Stage 71:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.158203942 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369886247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:==========================================>           (90 + 25) / 115][Stage 72:================================================>    (105 + 10) / 115][Stage 72:====================================================> (112 + 3) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:=====================================>                (81 + 35) / 116][Stage 73:=========================================>            (90 + 26) / 116][Stage 73:===============================================>     (103 + 13) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.143190646 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507483166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=====================================>                (78 + 35) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:===================================================>  (107 + 6) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:====================================>                 (78 + 36) / 114][Stage 75:========================================>             (86 + 28) / 114][Stage 75:============================================>         (94 + 20) / 114][Stage 75:================================================>    (104 + 10) / 114][Stage 75:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.151491053 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428909337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:===================================>                  (75 + 38) / 113][Stage 76:=============================================>        (96 + 17) / 113][Stage 76:====================================================> (109 + 4) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:==============================>                       (64 + 50) / 114][Stage 77:======================================>               (81 + 33) / 114][Stage 77:==============================================>       (99 + 15) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.992657938 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389596032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===================================>                  (75 + 38) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:============================================>         (94 + 19) / 113][Stage 78:==================================================>   (106 + 7) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:=======================================>              (83 + 31) / 114][Stage 79:==========================================>           (90 + 24) / 114][Stage 79:==============================================>      (101 + 13) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.181421049 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424363478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:===============================>                      (70 + 51) / 121][Stage 80:======================================>               (86 + 35) / 121][Stage 80:===============================================>     (108 + 13) / 121][Stage 80:=====================================================>(120 + 1) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:=============================>                        (66 + 56) / 122][Stage 81:========================================>             (91 + 31) / 122][Stage 81:=============================================>       (105 + 17) / 122][Stage 81:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.240853403 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36763427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (83 + 32) / 115][Stage 82:========================================>             (86 + 29) / 115][Stage 82:================================================>    (105 + 10) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:=======================================>              (84 + 32) / 116][Stage 83:==========================================>           (91 + 25) / 116][Stage 83:==============================================>      (101 + 15) / 116][Stage 83:==================================================>   (109 + 7) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.070211745 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382946993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:==================================>                   (75 + 43) / 118][Stage 84:========================================>             (89 + 29) / 118][Stage 84:=============================================>       (101 + 17) / 118][Stage 84:===============================================>     (106 + 12) / 118]                                                                                [Stage 85:==================================>                   (75 + 44) / 119][Stage 85:===================================>                  (79 + 40) / 119][Stage 85:========================================>             (89 + 30) / 119][Stage 85:===============================================>     (107 + 12) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.453799706 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434756782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:==============================>                       (67 + 53) / 120][Stage 86:=====================================>                (83 + 37) / 120][Stage 86:============================================>        (101 + 19) / 120][Stage 86:=====================================================>(118 + 2) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:==============================>                       (69 + 52) / 121][Stage 87:=====================================>                (85 + 36) / 121][Stage 87:==============================================>      (106 + 15) / 121][Stage 87:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.198488796 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422685361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:==============================>                       (63 + 50) / 113][Stage 88:===================================>                  (75 + 38) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:=============================>                        (62 + 52) / 114][Stage 89:====================================>                 (76 + 38) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.995461053 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372237794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===================================>                  (75 + 38) / 113][Stage 90:==========================================>           (89 + 24) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:======================================>               (81 + 33) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:===================================================>  (108 + 6) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.401020299 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408067761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:=============================>                        (62 + 51) / 113][Stage 92:=========================================>            (86 + 27) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:===========================>                          (59 + 55) / 114][Stage 93:=============================>                        (62 + 52) / 114][Stage 93:======================================>               (82 + 32) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.09582534 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385314017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:===================================>                  (77 + 41) / 118][Stage 94:=====================================>                (82 + 36) / 118][Stage 94:=========================================>            (91 + 27) / 118][Stage 94:==============================================>      (103 + 15) / 118][Stage 94:=====================================================>(117 + 1) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:==================================>                   (76 + 43) / 119][Stage 95:=========================================>            (91 + 28) / 119][Stage 95:===============================================>     (107 + 12) / 119][Stage 95:=====================================================>(117 + 2) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.52234999 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407973681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (71 + 44) / 115][Stage 96:=========================================>            (89 + 26) / 115][Stage 96:==================================================>   (107 + 8) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:================================>                     (69 + 47) / 116][Stage 97:=====================================>                (80 + 36) / 116][Stage 97:==============================================>       (99 + 17) / 116][Stage 97:=====================================================>(114 + 2) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.804779007 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513572838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:=============================>                        (66 + 55) / 121][Stage 98:====================================>                 (81 + 40) / 121][Stage 98:===============================================>     (109 + 12) / 121][Stage 98:=====================================================>(120 + 1) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:=============================>                        (67 + 55) / 122][Stage 99:======================================>               (86 + 36) / 122][Stage 99:===============================================>     (110 + 12) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.075689813 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370435858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (79 + 34) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:==============================================>     (102 + 11) / 113][Stage 100:===================================================> (110 + 3) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:=======================================>             (84 + 30) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:=================================================>   (107 + 7) / 114][Stage 101:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.14600013 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375349139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (73 + 45) / 118][Stage 102:===================================>                 (79 + 39) / 118][Stage 102:=======================================>             (87 + 31) / 118][Stage 102:==============================================>     (105 + 13) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:====================================>                (82 + 37) / 119][Stage 103:============================================>        (99 + 20) / 119][Stage 103:=================================================>   (111 + 8) / 119][Stage 103:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.367351351 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420653807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (65 + 55) / 120][Stage 104:==================================>                  (79 + 41) / 120][Stage 104:===========================================>        (100 + 20) / 120][Stage 104:=================================================>   (111 + 9) / 120][Stage 104:====================================================>(119 + 1) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:============================>                        (66 + 55) / 121][Stage 105:===================================>                 (81 + 40) / 121][Stage 105:==========================================>         (100 + 21) / 121][Stage 105:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.399239263 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367408919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (73 + 40) / 113][Stage 106:====================================>                (78 + 35) / 113][Stage 106:==========================================>          (91 + 22) / 113][Stage 106:==============================================>     (102 + 11) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:======================================>              (83 + 31) / 114][Stage 107:==========================================>          (92 + 22) / 114][Stage 107:==============================================>     (101 + 13) / 114][Stage 107:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.006597246 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420386548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:========================================>            (87 + 26) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (59 + 55) / 114][Stage 109:==============================>                      (66 + 48) / 114][Stage 109:=======================================>             (86 + 28) / 114][Stage 109:================================================>    (105 + 9) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.743966172 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434650191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:==============================>                      (68 + 52) / 120][Stage 110:=====================================>               (84 + 36) / 120][Stage 110:===========================================>         (99 + 21) / 120][Stage 110:=================================================>   (113 + 7) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:==============================>                      (69 + 52) / 121][Stage 111:====================================>                (84 + 37) / 121][Stage 111:===============================================>    (110 + 11) / 121][Stage 111:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.492097117 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386847285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (66 + 47) / 113][Stage 112:========================================>            (86 + 27) / 113][Stage 112:=============================================>       (98 + 15) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:============================>                        (61 + 53) / 114][Stage 113:=================================>                   (73 + 41) / 114][Stage 113:============================================>        (95 + 19) / 114][Stage 113:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.197113554 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338018777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (83 + 32) / 115][Stage 114:=========================================>           (90 + 25) / 115][Stage 114:===============================================>    (105 + 10) / 115][Stage 114:===================================================> (111 + 4) / 115]                                                                                [Stage 115:======================================>              (85 + 31) / 116][Stage 115:===========================================>         (95 + 21) / 116][Stage 115:===============================================>    (106 + 10) / 116][Stage 115:===================================================> (113 + 3) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.930785576 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344729219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=====================================>               (81 + 34) / 115][Stage 116:==========================================>          (92 + 23) / 115][Stage 116:================================================>    (106 + 9) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:=====================================>               (83 + 33) / 116][Stage 117:=========================================>           (90 + 26) / 116][Stage 117:=============================================>      (101 + 15) / 116][Stage 117:==================================================>  (110 + 6) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.75299269 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40970237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (64 + 56) / 120][Stage 118:===================================>                 (80 + 40) / 120][Stage 118:============================================>       (102 + 18) / 120][Stage 118:===================================================> (117 + 3) / 120]                                                                                [Stage 119:===========================>                         (62 + 59) / 121][Stage 119:===============================>                     (72 + 49) / 121][Stage 119:=======================================>             (91 + 30) / 121][Stage 119:==================================================>  (116 + 5) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.198744651 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391793468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (66 + 47) / 113][Stage 120:========================================>            (87 + 26) / 113][Stage 120:===================================================> (109 + 4) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:=================================>                   (71 + 43) / 114][Stage 121:===========================================>         (93 + 21) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.3236758 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389071688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:=======================================>             (84 + 29) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:===================================>                 (77 + 37) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.155233056 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343229781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (79 + 36) / 115][Stage 124:========================================>            (87 + 28) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:===============================================>    (105 + 10) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (82 + 34) / 116][Stage 125:==========================================>          (92 + 24) / 116][Stage 125:=============================================>      (101 + 15) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.840656905 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385048929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=============================>                       (65 + 50) / 115][Stage 126:=======================================>             (86 + 29) / 115][Stage 126:============================================>        (96 + 19) / 115][Stage 126:================================================>    (106 + 9) / 115]                                                                                [Stage 127:====================================>                (80 + 36) / 116][Stage 127:==========================================>          (93 + 23) / 116][Stage 127:==============================================>     (104 + 12) / 116][Stage 127:===================================================> (112 + 4) / 116][Stage 127:====================================================>(114 + 2) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.540170857 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407579534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (60 + 53) / 113][Stage 128:================================>                    (69 + 44) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:=================================================>   (105 + 8) / 113]                                                                                [Stage 129:============================>                        (61 + 53) / 114][Stage 129:=================================>                   (71 + 43) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.130069129 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411005415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (63 + 57) / 120][Stage 130:================================>                    (73 + 47) / 120][Stage 130:========================================>            (91 + 29) / 120][Stage 130:=============================================>      (105 + 15) / 120][Stage 130:====================================================>(118 + 2) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:=============================>                       (67 + 54) / 121][Stage 131:====================================>                (83 + 38) / 121][Stage 131:==========================================>          (96 + 25) / 121][Stage 131:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.258998438 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386034851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==============================>                      (67 + 48) / 115][Stage 132:===================================>                 (77 + 38) / 115][Stage 132:=========================================>           (91 + 24) / 115][Stage 132:=============================================>      (101 + 14) / 115][Stage 132:===================================================> (111 + 4) / 115]                                                                                [Stage 133:===================================>                 (77 + 39) / 116][Stage 133:=========================================>           (91 + 25) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.072759049 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344681424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (82 + 33) / 115][Stage 134:=========================================>           (90 + 25) / 115][Stage 134:=============================================>      (100 + 15) / 115][Stage 134:==================================================>  (109 + 6) / 115]                                                                                [Stage 135:=======================================>             (86 + 30) / 116][Stage 135:=============================================>      (101 + 15) / 116][Stage 135:==================================================>  (110 + 6) / 116][Stage 135:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.931145669 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494940133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=============================>                       (66 + 54) / 120][Stage 136:=================================>                   (76 + 44) / 120][Stage 136:========================================>            (92 + 28) / 120][Stage 136:=================================================>   (112 + 8) / 120][Stage 136:====================================================>(119 + 1) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:==============================>                      (70 + 51) / 121][Stage 137:======================================>              (87 + 34) / 121][Stage 137:==============================================>     (108 + 13) / 121][Stage 137:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.273503798 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386322693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:==============================>                      (64 + 49) / 113][Stage 138:====================================>                (77 + 36) / 113][Stage 138:===============================================>    (103 + 10) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:==============================>                      (65 + 49) / 114][Stage 139:=====================================>               (81 + 33) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.25356356 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=160,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383168793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (71 + 44) / 115][Stage 140:=========================================>           (89 + 26) / 115][Stage 140:=============================================>      (101 + 14) / 115][Stage 140:===================================================> (112 + 3) / 115]                                                                                [Stage 141:==============================>                      (66 + 50) / 116][Stage 141:=================================>                   (73 + 43) / 116][Stage 141:===========================================>         (95 + 21) / 116][Stage 141:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.663389133 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399431577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (61 + 59) / 120][Stage 142:===============================>                     (71 + 49) / 120][Stage 142:=======================================>             (90 + 30) / 120][Stage 142:====================================================>(118 + 2) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:================================>                    (75 + 46) / 121][Stage 143:======================================>              (88 + 33) / 121][Stage 143:=============================================>      (106 + 15) / 121]                                                                                Time elapsed: 2.875799218 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389079156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:============================>                        (60 + 53) / 113][Stage 144:=====================================>               (81 + 32) / 113][Stage 144:==============================================>     (100 + 13) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:=============================>                       (63 + 51) / 114][Stage 145:=================================>                   (73 + 41) / 114][Stage 145:===========================================>         (94 + 20) / 114][Stage 145:==================================================>  (109 + 5) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.220835651 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358264391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:====================================>                (77 + 36) / 113][Stage 146:========================================>            (87 + 26) / 113][Stage 146:===============================================>    (103 + 10) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:====================================>                (78 + 36) / 114][Stage 147:==========================================>          (91 + 23) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.953415283 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409398441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (65 + 56) / 121][Stage 148:=======================================>             (90 + 31) / 121][Stage 148:============================================>       (104 + 17) / 121][Stage 148:====================================================>(119 + 2) / 121]                                                                                [Stage 149:===========================>                         (63 + 59) / 122][Stage 149:==============================>                      (71 + 51) / 122][Stage 149:===========================================>         (99 + 23) / 122][Stage 149:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.232716164 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363709933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:===================================>                 (78 + 40) / 118][Stage 150:========================================>            (91 + 27) / 118][Stage 150:==============================================>     (105 + 13) / 118][Stage 150:===================================================> (115 + 3) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:===================================>                 (80 + 39) / 119][Stage 151:======================================>              (86 + 33) / 119][Stage 151:==============================================>     (106 + 13) / 119][Stage 151:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.310265326 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375578276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (79 + 39) / 118][Stage 152:======================================>              (86 + 32) / 118][Stage 152:==============================================>     (106 + 12) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:===================================>                 (80 + 39) / 119][Stage 153:========================================>            (92 + 27) / 119][Stage 153:=============================================>      (103 + 16) / 119][Stage 153:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.196239149 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401933382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (64 + 56) / 120][Stage 154:=================================>                   (76 + 44) / 120][Stage 154:==========================================>          (97 + 23) / 120][Stage 154:====================================================>(119 + 1) / 120]                                                                                [Stage 155:=============================>                       (67 + 54) / 121][Stage 155:===================================>                 (81 + 40) / 121][Stage 155:===========================================>         (99 + 22) / 121][Stage 155:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.188550932 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370855776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=================================>                   (72 + 43) / 115][Stage 156:=======================================>             (86 + 29) / 115][Stage 156:=============================================>       (99 + 16) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:=====================================>               (81 + 35) / 116][Stage 157:==========================================>          (93 + 23) / 116][Stage 157:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.770634732 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355149013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:=======================================>             (84 + 29) / 113][Stage 158:=============================================>       (98 + 15) / 113][Stage 158:==================================================>  (107 + 6) / 113]                                                                                [Stage 159:======================================>              (83 + 31) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:=============================================>      (100 + 14) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.846208312 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374786538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:====================================>                (79 + 36) / 115][Stage 160:==========================================>          (93 + 22) / 115][Stage 160:==============================================>     (103 + 12) / 115][Stage 160:====================================================>(113 + 2) / 115][Stage 160:====================================================>(114 + 1) / 115]                                                                                [Stage 161:================================>                    (72 + 44) / 116][Stage 161:======================================>              (84 + 32) / 116][Stage 161:=============================================>      (101 + 15) / 116][Stage 161:===================================================> (113 + 3) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.770135151 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363002997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (80 + 33) / 113][Stage 162:=========================================>           (89 + 24) / 113][Stage 162:==============================================>     (100 + 13) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:=======================================>             (84 + 30) / 114][Stage 163:==========================================>          (91 + 23) / 114][Stage 163:===============================================>    (104 + 10) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.346655629 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383265121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:==============================>                      (65 + 48) / 113][Stage 164:=======================================>             (85 + 28) / 113][Stage 164:================================================>    (104 + 9) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:===============================>                     (68 + 46) / 114][Stage 165:=======================================>             (84 + 30) / 114][Stage 165:==============================================>      (99 + 15) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.376563341 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383543562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (71 + 44) / 115][Stage 166:====================================>                (79 + 36) / 115][Stage 166:=============================================>      (101 + 14) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:====================================>                (80 + 36) / 116][Stage 167:=========================================>           (91 + 25) / 116][Stage 167:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.69167636 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408650208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:=============================>                       (67 + 53) / 120][Stage 168:====================================>                (83 + 37) / 120][Stage 168:==========================================>          (96 + 24) / 120][Stage 168:=================================================>   (112 + 8) / 120]                                                                                [Stage 169:===========================>                         (62 + 59) / 121][Stage 169:================================>                    (74 + 47) / 121][Stage 169:========================================>            (92 + 29) / 121][Stage 169:===============================================>    (110 + 11) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.293106195 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402899048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (66 + 55) / 121][Stage 170:======================================>              (87 + 34) / 121][Stage 170:=============================================>      (107 + 14) / 121][Stage 170:====================================================>(119 + 2) / 121]                                                                                [Stage 171:==========================>                          (61 + 61) / 122][Stage 171:===========================>                         (63 + 59) / 122][Stage 171:===================================>                 (82 + 40) / 122][Stage 171:==============================================>     (109 + 13) / 122][Stage 171:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.132575705 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=189,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355856618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (80 + 33) / 113][Stage 172:=======================================>             (85 + 28) / 113][Stage 172:==============================================>     (100 + 13) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:====================================>                (78 + 36) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:=================================================>   (107 + 7) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.017114306 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393562687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=================================>                   (73 + 42) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>      (101 + 14) / 115][Stage 174:===================================================> (112 + 3) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:===============================>                     (68 + 48) / 116][Stage 175:=====================================>               (81 + 35) / 116][Stage 175:============================================>       (100 + 16) / 116][Stage 175:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.889397502 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336733995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (83 + 32) / 115][Stage 176:============================================>        (96 + 19) / 115][Stage 176:================================================>    (106 + 9) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:=====================================>               (82 + 34) / 116][Stage 177:========================================>            (89 + 27) / 116][Stage 177:==============================================>     (104 + 12) / 116][Stage 177:==================================================>  (111 + 5) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.862774641 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382361225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:=============================>                       (62 + 51) / 113][Stage 178:===================================>                 (76 + 37) / 113][Stage 178:==============================================>     (101 + 12) / 113][Stage 178:===================================================> (110 + 3) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:============================>                        (62 + 52) / 114][Stage 179:=======================================>             (85 + 29) / 114][Stage 179:==============================================>     (103 + 11) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.242312732 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448674201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (72 + 41) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:=========================================>           (89 + 24) / 113][Stage 180:=============================================>       (97 + 16) / 113][Stage 180:=================================================>   (106 + 7) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:==================================>                  (74 + 40) / 114][Stage 181:======================================>              (83 + 31) / 114][Stage 181:===========================================>         (93 + 21) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.178581503 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43782184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:===============================>                     (71 + 49) / 120][Stage 182:====================================>                (82 + 38) / 120][Stage 182:=================================================>   (113 + 7) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:=================================>                   (77 + 44) / 121][Stage 183:======================================>              (88 + 33) / 121][Stage 183:=================================================>   (113 + 8) / 121][Stage 183:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.347711787 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342435439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (82 + 33) / 115][Stage 184:=========================================>           (91 + 24) / 115][Stage 184:==================================================>  (110 + 5) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:=====================================>               (81 + 35) / 116][Stage 185:=======================================>             (87 + 29) / 116][Stage 185:===============================================>    (105 + 11) / 116][Stage 185:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.671015337 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353154222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (72 + 41) / 113][Stage 186:=======================================>             (84 + 29) / 113][Stage 186:============================================>        (94 + 19) / 113][Stage 186:================================================>    (104 + 9) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:====================================>                (78 + 36) / 114][Stage 187:==========================================>          (91 + 23) / 114][Stage 187:==================================================>  (108 + 6) / 114][Stage 187:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.995406236 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359558723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:=================================>                   (75 + 43) / 118][Stage 188:=======================================>             (88 + 30) / 118][Stage 188:============================================>       (102 + 16) / 118][Stage 188:===================================================> (114 + 4) / 118]                                                                                [Stage 189:================================>                    (74 + 45) / 119][Stage 189:===================================>                 (79 + 40) / 119][Stage 189:=====================================>               (85 + 34) / 119][Stage 189:=============================================>      (105 + 14) / 119][Stage 189:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.359121047 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393776073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:=============================>                       (67 + 53) / 120][Stage 190:====================================>                (83 + 37) / 120][Stage 190:=============================================>      (106 + 14) / 120]                                                                                [Stage 191:===========================>                         (63 + 58) / 121][Stage 191:===============================>                     (73 + 48) / 121][Stage 191:========================================>            (92 + 29) / 121][Stage 191:=================================================>   (112 + 9) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.137935961 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367847227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:==================================>                  (77 + 41) / 118][Stage 192:=====================================>               (84 + 34) / 118][Stage 192:============================================>       (100 + 18) / 118][Stage 192:===================================================> (114 + 4) / 118]                                                                                [Stage 193:==================================>                  (77 + 42) / 119][Stage 193:=====================================>               (84 + 35) / 119][Stage 193:========================================>            (92 + 27) / 119][Stage 193:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.222364366 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397341374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (63 + 57) / 120][Stage 194:=================================>                   (75 + 45) / 120][Stage 194:=========================================>           (93 + 27) / 120][Stage 194:=================================================>   (112 + 8) / 120]                                                                                [Stage 195:============================>                        (66 + 55) / 121][Stage 195:==================================>                  (79 + 42) / 121][Stage 195:=======================================>             (91 + 30) / 121][Stage 195:===============================================>    (110 + 11) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.110277344 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423014542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:===========================>                         (62 + 59) / 121][Stage 196:=================================>                   (76 + 45) / 121][Stage 196:==========================================>         (100 + 21) / 121][Stage 196:===============================================>    (110 + 11) / 121][Stage 196:====================================================>(120 + 1) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (67 + 55) / 122][Stage 197:========================================>            (94 + 28) / 122][Stage 197:==============================================>     (109 + 13) / 122][Stage 197:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.216868756 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400071477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (66 + 47) / 113][Stage 198:========================================>            (86 + 27) / 113][Stage 198:=================================================>   (106 + 7) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:=================================>                   (71 + 43) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:===================================================> (110 + 4) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.063157464 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365844709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (74 + 44) / 118][Stage 200:=====================================>               (83 + 35) / 118][Stage 200:========================================>            (90 + 28) / 118][Stage 200:==============================================>     (106 + 12) / 118][Stage 200:===================================================> (115 + 3) / 118]                                                                                [Stage 201:=================================>                   (75 + 44) / 119][Stage 201:======================================>              (86 + 33) / 119][Stage 201:===========================================>         (97 + 22) / 119][Stage 201:===============================================>    (108 + 11) / 119][Stage 201:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.449226984 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m58.831s
user	11m32.928s
sys	0m34.940s
