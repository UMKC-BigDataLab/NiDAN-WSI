Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 02:41:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:41:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:41:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:41:29 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 02:41:31 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 02:41:42 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522024131-0403).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.397473911 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (51 + 64) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.541045317 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  p artitionIndex = 61  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.83331052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======================>                               (48 + 65) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:===============================================>       (97 + 16) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:==============================================>        (97 + 17) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.283580097 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637086927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:>                                                        (0 + 0) / 115][Stage 4:====================================>                  (77 + 38) / 115][Stage 4:======================================>                (81 + 34) / 115][Stage 4:========================================>              (85 + 30) / 115][Stage 4:============================================>          (92 + 23) / 115][Stage 4:================================================>     (104 + 11) / 115][Stage 4:===================================================>   (108 + 7) / 115][Stage 4:=====================================================> (112 + 3) / 115]                                                                                [Stage 5:======================================>                (81 + 35) / 116][Stage 5:=======================================>               (83 + 33) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:=============================================>         (95 + 21) / 116][Stage 5:==============================================>        (99 + 17) / 116][Stage 5:====================================================>  (111 + 5) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.388355359 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.663769792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (58 + 62) / 120][Stage 6:=============================>                         (65 + 55) / 120][Stage 6:=================================>                     (74 + 46) / 120][Stage 6:=====================================>                 (82 + 38) / 120][Stage 6:==========================================>            (92 + 28) / 120][Stage 6:==============================================>       (104 + 16) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:============================>                          (63 + 58) / 121][Stage 7:==================================>                    (76 + 45) / 121][Stage 7:====================================>                  (80 + 41) / 121][Stage 7:=============================================>         (99 + 22) / 121][Stage 7:===============================================>      (107 + 14) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.449688584 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559168689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:================================>                      (70 + 48) / 118][Stage 8:=================================>                     (72 + 46) / 118][Stage 8:===================================>                   (76 + 42) / 118][Stage 8:========================================>              (87 + 31) / 118][Stage 8:===================================================>   (111 + 7) / 118][Stage 8:======================================================>(117 + 1) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:=====================================>                 (81 + 38) / 119][Stage 9:==========================================>            (91 + 28) / 119][Stage 9:============================================>          (97 + 22) / 119][Stage 9:=================================================>    (108 + 11) / 119][Stage 9:=====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.926598888 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553294044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:===================================>                  (75 + 40) / 115][Stage 10:========================================>             (87 + 28) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:==================================================>   (107 + 8) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:==============================>                       (66 + 50) / 116][Stage 11:===================================>                  (76 + 40) / 116][Stage 11:========================================>             (86 + 30) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.348492755 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.608543644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:==============================>                       (68 + 52) / 120][Stage 12:====================================>                 (80 + 40) / 120][Stage 12:=========================================>            (92 + 28) / 120][Stage 12:=============================================>       (103 + 17) / 120][Stage 12:===================================================>  (114 + 6) / 120][Stage 12:====================================================> (117 + 3) / 120]                                                                                [Stage 13:=======================>                              (53 + 68) / 121][Stage 13:=============================>                        (65 + 56) / 121][Stage 13:==================================>                   (78 + 43) / 121][Stage 13:=========================================>            (92 + 29) / 121][Stage 13:=============================================>       (105 + 16) / 121][Stage 13:==================================================>   (114 + 7) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.645777414 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519626386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (70 + 45) / 115][Stage 14:====================================>                 (77 + 38) / 115][Stage 14:===========================================>          (92 + 23) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:================================>                     (69 + 47) / 116][Stage 15:=======================================>              (85 + 31) / 116][Stage 15:============================================>         (96 + 20) / 116][Stage 15:===============================================>     (104 + 12) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:====================================================> (113 + 3) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.016553648 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502803837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:======================================>               (83 + 32) / 115][Stage 16:============================================>         (95 + 20) / 115][Stage 16:==================================================>   (107 + 8) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:=====================================================>(113 + 2) / 115]                                                                                [Stage 17:=====================================>                (81 + 35) / 116][Stage 17:=========================================>            (90 + 26) / 116][Stage 17:==============================================>      (102 + 14) / 116][Stage 17:===============================================>     (105 + 11) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.040992902 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  p artitionIndex = 4  OR  partitionIndex = 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47  OR  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562280014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (59 + 61) / 120][Stage 18:==============================>                       (67 + 53) / 120][Stage 18:======================================>               (86 + 34) / 120][Stage 18:=============================================>       (103 + 17) / 120][Stage 18:==================================================>   (113 + 7) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:=================================>                    (75 + 46) / 121][Stage 19:========================================>             (91 + 30) / 121][Stage 19:=============================================>       (104 + 17) / 121][Stage 19:=================================================>    (112 + 9) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.05778438 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  p artitionIndex = 84  OR  partitionIndex = 70 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553257976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:================================>                     (69 + 44) / 113][Stage 20:=========================================>            (86 + 27) / 113][Stage 20:===============================================>     (102 + 11) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:====================================================> (110 + 3) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:================================>                     (69 + 45) / 114][Stage 21:==========================================>           (90 + 24) / 114][Stage 21:==============================================>       (99 + 15) / 114][Stage 21:===============================================>     (103 + 11) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.222461668 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR   partitionIndex = 130  OR  partitionIndex = 131 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59213145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:=========================================>            (86 + 27) / 113][Stage 22:==================================================>   (106 + 7) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:==================================>                   (72 + 42) / 114][Stage 23:===========================================>          (91 + 23) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.330938789 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525130801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (59 + 61) / 120][Stage 24:============================>                         (63 + 57) / 120][Stage 24:===================================>                  (78 + 42) / 120][Stage 24:==========================================>           (94 + 26) / 120][Stage 24:==================================================>   (112 + 8) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:=============================>                        (67 + 54) / 121][Stage 25:===================================>                  (80 + 41) / 121][Stage 25:==========================================>           (96 + 25) / 121][Stage 25:=============================================>       (105 + 16) / 121][Stage 25:====================================================> (117 + 4) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.855103378 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444868519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (70 + 43) / 113][Stage 26:=======================================>              (83 + 30) / 113][Stage 26:============================================>         (93 + 20) / 113][Stage 26:===============================================>     (102 + 11) / 113][Stage 26:===================================================>  (107 + 6) / 113]                                                                                [Stage 27:====================================>                 (78 + 36) / 114][Stage 27:=========================================>            (88 + 26) / 114][Stage 27:============================================>         (94 + 20) / 114][Stage 27:===============================================>     (103 + 11) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.125609901 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR   partitionIndex = 208  OR  partitionIndex = 194 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433573252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==================================>                   (73 + 40) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:===========================================>          (91 + 22) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:===================================================>  (107 + 6) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=======================================>              (84 + 30) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:==================================================>   (106 + 8) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.567422408 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR   partitionIndex = 112  OR  partitionIndex = 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511531782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:================================>                     (73 + 47) / 120][Stage 30:============================================>        (100 + 20) / 120][Stage 30:====================================================> (117 + 3) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:=============================>                        (66 + 55) / 121][Stage 31:=====================================>                (83 + 38) / 121][Stage 31:==============================================>      (106 + 15) / 121][Stage 31:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.285557635 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  pa rtitionIndex = 24  OR  partitionIndex = 10 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479423233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:===============================>                      (65 + 48) / 113][Stage 32:===================================>                  (75 + 38) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:====================================================> (109 + 4) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:======================================>               (82 + 32) / 114][Stage 33:=============================================>        (95 + 19) / 114][Stage 33:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.736408485 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  p artitionIndex = 13  OR  partitionIndex = 27 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511673361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:==============================>                       (69 + 52) / 121][Stage 34:=====================================>                (83 + 38) / 121][Stage 34:==============================================>      (107 + 14) / 121][Stage 34:====================================================> (118 + 3) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:==============================>                       (69 + 53) / 122][Stage 35:======================================>               (88 + 34) / 122][Stage 35:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.236015703 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498187666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:============================>                         (63 + 57) / 120][Stage 36:====================================>                 (82 + 38) / 120][Stage 36:=============================================>       (104 + 16) / 120]                                                                                [Stage 37:============================>                         (63 + 58) / 121][Stage 37:=================================>                    (74 + 47) / 121][Stage 37:=======================================>              (88 + 33) / 121][Stage 37:==============================================>      (107 + 14) / 121][Stage 37:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.457394797 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42926677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:====================================>                 (77 + 36) / 113][Stage 38:==========================================>           (89 + 24) / 113][Stage 38:================================================>    (103 + 10) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:====================================>                 (78 + 36) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:===============================================>     (102 + 12) / 114][Stage 39:====================================================> (111 + 3) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.588896153 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  p artitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466677018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (64 + 51) / 115][Stage 40:=================================>                    (71 + 44) / 115][Stage 40:==========================================>           (90 + 25) / 115][Stage 40:==============================================>      (101 + 14) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:==================================>                   (74 + 42) / 116][Stage 41:========================================>             (88 + 28) / 116][Stage 41:=============================================>        (97 + 19) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.064876419 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492924961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==============================>                       (64 + 51) / 115][Stage 42:=====================================>                (79 + 36) / 115][Stage 42:===========================================>          (92 + 23) / 115][Stage 42:==================================================>   (107 + 8) / 115]                                                                                [Stage 43:===================================>                  (76 + 40) / 116][Stage 43:=========================================>            (89 + 27) / 116][Stage 43:===============================================>     (104 + 12) / 116][Stage 43:==================================================>   (109 + 7) / 116][Stage 43:====================================================> (113 + 3) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.20081413 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR   partitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50304622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:============================>                         (59 + 54) / 113][Stage 44:=================================>                    (71 + 42) / 113][Stage 44:===========================================>          (91 + 22) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:====================================================> (109 + 4) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:==============================>                       (64 + 50) / 114][Stage 45:======================================>               (82 + 32) / 114][Stage 45:=============================================>        (97 + 17) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.779962025 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  p artitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389410747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:======================================>               (83 + 32) / 115][Stage 46:==========================================>           (90 + 25) / 115][Stage 46:==============================================>      (101 + 14) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:====================================================> (112 + 3) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=======================================>              (85 + 31) / 116][Stage 47:===========================================>          (94 + 22) / 116][Stage 47:===============================================>     (105 + 11) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.41323332 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR   partitionIndex = 97  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389445927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (82 + 33) / 115][Stage 48:==========================================>           (90 + 25) / 115][Stage 48:===============================================>     (104 + 11) / 115][Stage 48:=====================================================>(113 + 2) / 115]                                                                                [Stage 49:========================================>             (86 + 30) / 116][Stage 49:=============================================>        (98 + 18) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.657583693 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  pa rtitionIndex = 20  OR  partitionIndex = 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478971222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (76 + 42) / 118][Stage 50:=========================================>            (91 + 27) / 118][Stage 50:==============================================>      (104 + 14) / 118][Stage 50:====================================================> (115 + 3) / 118]                                                                                [Stage 51:==================================>                   (76 + 43) / 119][Stage 51:========================================>             (89 + 30) / 119][Stage 51:=============================================>       (102 + 17) / 119][Stage 51:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.346468582 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR   partitionIndex = 140  OR  partitionIndex = 126 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378950584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (79 + 36) / 115][Stage 52:======================================>               (81 + 34) / 115][Stage 52:============================================>         (94 + 21) / 115][Stage 52:==================================================>   (107 + 8) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:======================================>               (83 + 33) / 116][Stage 53:============================================>         (96 + 20) / 116][Stage 53:==================================================>   (108 + 8) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.925531245 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414244223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:=================================>                    (74 + 44) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:==========================================>           (92 + 26) / 118][Stage 54:===============================================>     (105 + 13) / 118][Stage 54:=====================================================>(116 + 2) / 118]                                                                                [Stage 55:==================================>                   (75 + 44) / 119][Stage 55:=====================================>                (82 + 37) / 119][Stage 55:===========================================>          (95 + 24) / 119][Stage 55:==================================================>   (112 + 7) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.539619393 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400432507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==================================>                   (72 + 41) / 113][Stage 56:======================================>               (81 + 32) / 113][Stage 56:============================================>         (94 + 19) / 113][Stage 56:===============================================>      (99 + 14) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:==================================>                   (73 + 41) / 114][Stage 57:========================================>             (86 + 28) / 114][Stage 57:=============================================>        (97 + 17) / 114][Stage 57:=================================================>    (105 + 9) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.310799859 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:========================================>             (85 + 28) / 113][Stage 58:==================================================>   (106 + 7) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:==============================>                       (65 + 49) / 114][Stage 59:=====================================>                (80 + 34) / 114][Stage 59:==============================================>      (100 + 14) / 114][Stage 59:==================================================>   (107 + 7) / 114][Stage 59:=====================================================>(112 + 2) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.647235505 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457794132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:================================>                     (67 + 46) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:============================>                         (60 + 54) / 114][Stage 61:==================================>                   (73 + 41) / 114][Stage 61:==============================================>       (99 + 15) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.260930348 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381351309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (82 + 33) / 115][Stage 62:============================================>         (95 + 20) / 115][Stage 62:=================================================>    (106 + 9) / 115]                                                                                [Stage 63:=======================================>              (85 + 31) / 116][Stage 63:============================================>         (95 + 21) / 116][Stage 63:===============================================>     (105 + 11) / 116][Stage 63:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.794380716 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR   partitionIndex = 160  OR  partitionIndex = 161 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416983989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (71 + 42) / 113][Stage 64:======================================>               (81 + 32) / 113][Stage 64:===========================================>          (92 + 21) / 113][Stage 64:===============================================>     (101 + 12) / 113][Stage 64:===================================================>  (108 + 5) / 113]                                                                                [Stage 65:========================================>             (85 + 29) / 114][Stage 65:=============================================>        (95 + 19) / 114][Stage 65:===============================================>     (102 + 12) / 114][Stage 65:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.035174522 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413211554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:====================================>                 (76 + 37) / 113][Stage 66:=========================================>            (86 + 27) / 113][Stage 66:=============================================>        (96 + 17) / 113][Stage 66:====================================================> (110 + 3) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:=======================================>              (84 + 30) / 114][Stage 67:============================================>         (94 + 20) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.1525994 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  par titionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373505075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (81 + 34) / 115][Stage 68:===========================================>          (92 + 23) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:=======================================>              (84 + 32) / 116][Stage 69:========================================>             (88 + 28) / 116][Stage 69:==============================================>      (101 + 15) / 116][Stage 69:==================================================>   (108 + 8) / 116][Stage 69:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.848513563 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424235555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:====================================>                 (76 + 37) / 113][Stage 70:========================================>             (85 + 28) / 113][Stage 70:==============================================>       (97 + 16) / 113][Stage 70:==================================================>   (106 + 7) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:=======================================>              (83 + 31) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.135373578 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462382785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (65 + 56) / 121][Stage 72:=====================================>                (85 + 36) / 121][Stage 72:=============================================>       (103 + 18) / 121][Stage 72:====================================================> (117 + 4) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:================================>                     (73 + 49) / 122][Stage 73:========================================>             (91 + 31) / 122][Stage 73:===============================================>     (110 + 12) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.610925729 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  p artitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417592087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (72 + 43) / 115][Stage 74:==========================================>           (91 + 24) / 115][Stage 74:===============================================>     (102 + 13) / 115][Stage 74:====================================================> (112 + 3) / 115]                                                                                [Stage 75:===================================>                  (76 + 40) / 116][Stage 75:========================================>             (86 + 30) / 116][Stage 75:=============================================>        (97 + 19) / 116][Stage 75:=================================================>    (107 + 9) / 116][Stage 75:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.277221531 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428181528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (69 + 46) / 115][Stage 76:===========================================>          (93 + 22) / 115][Stage 76:===============================================>     (102 + 13) / 115][Stage 76:=================================================>    (106 + 9) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:====================================>                 (78 + 38) / 116][Stage 77:===========================================>          (93 + 23) / 116][Stage 77:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.931640094 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 197 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407680027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:=================================>                    (74 + 44) / 118][Stage 78:======================================>               (84 + 34) / 118][Stage 78:=============================================>       (102 + 16) / 118][Stage 78:=====================================================>(116 + 2) / 118]                                                                                [Stage 79:==================================>                   (75 + 44) / 119][Stage 79:======================================>               (84 + 35) / 119][Stage 79:============================================>        (101 + 18) / 119][Stage 79:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.229708542 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361417163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=====================================>                (79 + 36) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:==============================================>      (101 + 14) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(113 + 2) / 115]                                                                                [Stage 81:========================================>             (86 + 30) / 116][Stage 81:===========================================>          (93 + 23) / 116][Stage 81:================================================>    (106 + 10) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.942015283 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428012005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:===============================>                      (66 + 47) / 113][Stage 82:==========================================>           (88 + 25) / 113][Stage 82:===============================================>     (101 + 12) / 113][Stage 82:====================================================> (109 + 4) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:==================================>                   (73 + 41) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:=================================================>    (105 + 9) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.465036756 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR   partitionIndex = 144  OR  partitionIndex = 130 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 130 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40656648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (65 + 50) / 115][Stage 84:====================================>                 (78 + 37) / 115][Stage 84:============================================>         (94 + 21) / 115][Stage 84:=================================================>    (106 + 9) / 115][Stage 84:====================================================> (111 + 4) / 115]                                                                                [Stage 85:===================================>                  (76 + 40) / 116][Stage 85:==========================================>           (92 + 24) / 116][Stage 85:==============================================>      (102 + 14) / 116][Stage 85:==================================================>   (109 + 7) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.204913004 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377338123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===================================>                  (75 + 38) / 113][Stage 86:==========================================>           (89 + 24) / 113][Stage 86:=============================================>        (96 + 17) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:=====================================>                (80 + 34) / 114][Stage 87:==========================================>           (89 + 25) / 114][Stage 87:===============================================>     (103 + 11) / 114][Stage 87:====================================================> (111 + 3) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.291578738 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384792312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (75 + 38) / 113][Stage 88:=========================================>            (86 + 27) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:===============================================>     (102 + 11) / 113][Stage 88:===================================================>  (108 + 5) / 113]                                                                                [Stage 89:========================================>             (86 + 28) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:===============================================>     (103 + 11) / 114][Stage 89:====================================================> (111 + 3) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.656414973 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438576023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:============================>                         (59 + 54) / 113][Stage 90:==================================>                   (73 + 40) / 113][Stage 90:==============================================>       (97 + 16) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:=============================>                        (62 + 52) / 114][Stage 91:====================================>                 (78 + 36) / 114][Stage 91:==============================================>      (100 + 14) / 114][Stage 91:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.184263122 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429857187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (63 + 58) / 121][Stage 92:=====================================>                (84 + 37) / 121][Stage 92:============================================>        (101 + 20) / 121][Stage 92:====================================================> (118 + 3) / 121]                                                                                [Stage 93:============================>                         (65 + 57) / 122][Stage 93:==================================>                   (79 + 43) / 122][Stage 93:============================================>        (103 + 19) / 122][Stage 93:===================================================>  (116 + 6) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.817057539 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426251152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:============================>                         (64 + 57) / 121][Stage 94:=====================================>                (85 + 36) / 121][Stage 94:==============================================>      (106 + 15) / 121][Stage 94:====================================================> (118 + 3) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:==============================>                       (68 + 54) / 122][Stage 95:===================================>                  (80 + 42) / 122][Stage 95:===========================================>         (101 + 21) / 122][Stage 95:==================================================>   (114 + 8) / 122][Stage 95:====================================================> (119 + 3) / 122][Stage 95:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.777725676 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR   partitionIndex = 194  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361810018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (82 + 33) / 115][Stage 96:========================================>             (87 + 28) / 115][Stage 96:=============================================>        (96 + 19) / 115][Stage 96:=================================================>    (106 + 9) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:========================================>             (87 + 29) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:==================================================>   (108 + 8) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.953134236 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR   partitionIndex = 195  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380489472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (81 + 32) / 113][Stage 98:==========================================>           (89 + 24) / 113][Stage 98:=============================================>        (96 + 17) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:=====================================>                (80 + 34) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.116770253 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353251704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:======================================>              (84 + 31) / 115][Stage 100:===========================================>         (95 + 20) / 115][Stage 100:===============================================>    (104 + 11) / 115]                                                                                [Stage 101:=======================================>             (86 + 30) / 116][Stage 101:===========================================>         (95 + 21) / 116][Stage 101:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.597126551 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370980773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (75 + 38) / 113][Stage 102:=======================================>             (85 + 28) / 113][Stage 102:============================================>        (95 + 18) / 113][Stage 102:==================================================>  (108 + 5) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:=================================>                   (71 + 43) / 114][Stage 103:======================================>              (82 + 32) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:=================================================>   (106 + 8) / 114][Stage 103:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.11641092 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 92  OR  partitionIndex = 93 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401602912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===============================>                     (68 + 47) / 115][Stage 104:======================================>              (84 + 31) / 115][Stage 104:=============================================>       (98 + 17) / 115][Stage 104:=================================================>   (107 + 8) / 115]                                                                                [Stage 105:====================================>                (79 + 37) / 116][Stage 105:=========================================>           (90 + 26) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.810052775 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  p artitionIndex = 43  OR  partitionIndex = 57 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377577197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (79 + 36) / 115][Stage 106:========================================>            (88 + 27) / 115][Stage 106:=============================================>       (98 + 17) / 115][Stage 106:=================================================>   (107 + 8) / 115]                                                                                [Stage 107:=====================================>               (83 + 33) / 116][Stage 107:==========================================>          (93 + 23) / 116][Stage 107:==============================================>     (103 + 13) / 116][Stage 107:=================================================>   (109 + 7) / 116][Stage 107:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.722206437 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  p artitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403082256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (77 + 38) / 115][Stage 108:=========================================>           (89 + 26) / 115][Stage 108:=============================================>      (100 + 15) / 115][Stage 108:====================================================>(113 + 2) / 115]                                                                                [Stage 109:=================================>                   (74 + 42) / 116][Stage 109:========================================>            (88 + 28) / 116][Stage 109:============================================>        (97 + 19) / 116][Stage 109:===============================================>    (106 + 10) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.401495191 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  p artitionIndex = 11  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455696541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:===========================>                         (63 + 58) / 121][Stage 110:======================================>              (88 + 33) / 121][Stage 110:=============================================>      (105 + 16) / 121][Stage 110:====================================================>(119 + 2) / 121]                                                                                [Stage 111:==========================>                          (62 + 60) / 122][Stage 111:=================================>                   (76 + 46) / 122][Stage 111:===========================================>         (99 + 23) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.2768967 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36097773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:======================================>              (84 + 31) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:==============================================>     (102 + 13) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:========================================>            (89 + 27) / 116][Stage 113:=============================================>      (101 + 15) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.655938789 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380893507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=======================================>             (85 + 30) / 115][Stage 114:=========================================>           (91 + 24) / 115][Stage 114:===============================================>    (105 + 10) / 115][Stage 114:===================================================> (112 + 3) / 115]                                                                                [Stage 115:=====================================>               (82 + 34) / 116][Stage 115:========================================>            (89 + 27) / 116][Stage 115:============================================>       (100 + 16) / 116][Stage 115:==================================================>  (111 + 5) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.947944404 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483716148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=============================>                       (64 + 51) / 115][Stage 116:==================================>                  (75 + 40) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:==============================================>     (103 + 12) / 115][Stage 116:===================================================> (112 + 3) / 115]                                                                                [Stage 117:==============================>                      (67 + 49) / 116][Stage 117:===================================>                 (78 + 38) / 116][Stage 117:========================================>            (89 + 27) / 116][Stage 117:============================================>       (100 + 16) / 116][Stage 117:=================================================>   (108 + 8) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.499137027 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  p artitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38469412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (71 + 44) / 115][Stage 118:========================================>            (88 + 27) / 115][Stage 118:==============================================>     (103 + 12) / 115][Stage 118:===================================================> (112 + 3) / 115]                                                                                [Stage 119:==================================>                  (76 + 40) / 116][Stage 119:===========================================>         (95 + 21) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.249477186 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  p artitionIndex = 67  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395394061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==================================>                  (75 + 40) / 115][Stage 120:=========================================>           (90 + 25) / 115][Stage 120:==============================================>     (103 + 12) / 115][Stage 120:===================================================> (112 + 3) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:====================================>                (80 + 36) / 116][Stage 121:============================================>        (97 + 19) / 116][Stage 121:=================================================>   (109 + 7) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.11319325 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR   partitionIndex = 64  OR  partitionIndex = 65 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384007596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==================================>                  (75 + 40) / 115][Stage 122:===========================================>         (95 + 20) / 115][Stage 122:===================================================> (111 + 4) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:===============================>                     (68 + 48) / 116][Stage 123:======================================>              (84 + 32) / 116][Stage 123:=========================================>           (91 + 25) / 116][Stage 123:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.833999237 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39289277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:==============================>                      (64 + 49) / 113][Stage 124:===================================>                 (75 + 38) / 113][Stage 124:================================================>    (104 + 9) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:===============================>                     (67 + 47) / 114][Stage 125:====================================>                (78 + 36) / 114][Stage 125:=============================================>       (97 + 17) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.301968412 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  p artitionIndex = 86  OR  partitionIndex = 98 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39332071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==============================>                      (67 + 48) / 115][Stage 126:=====================================>               (81 + 34) / 115][Stage 126:============================================>        (97 + 18) / 115][Stage 126:=================================================>   (108 + 7) / 115][Stage 126:====================================================>(114 + 1) / 115]                                                                                [Stage 127:================================>                    (71 + 45) / 116][Stage 127:======================================>              (84 + 32) / 116][Stage 127:=============================================>      (102 + 14) / 116][Stage 127:==================================================>  (110 + 6) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.945040958 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  p artitionIndex = 44  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423114206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 60) / 121][Stage 128:==============================>                      (70 + 51) / 121][Stage 128:=======================================>             (90 + 31) / 121][Stage 128:============================================>       (103 + 18) / 121][Stage 128:====================================================>(120 + 1) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:============================>                        (66 + 56) / 122][Stage 129:===================================>                 (82 + 40) / 122][Stage 129:============================================>       (105 + 17) / 122][Stage 129:==================================================>  (117 + 5) / 122][Stage 129:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.501904538 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429755751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:>                                                      (0 + 0) / 121][Stage 130:==========================>                          (60 + 61) / 121][Stage 130:==============================>                      (69 + 52) / 121][Stage 130:====================================>                (84 + 37) / 121][Stage 130:===============================================>    (111 + 10) / 121][Stage 130:====================================================>(120 + 1) / 121]                                                                                [Stage 131:===========================>                         (63 + 59) / 122][Stage 131:==================================>                  (79 + 43) / 122][Stage 131:===========================================>         (99 + 23) / 122][Stage 131:=================================================>   (114 + 8) / 122][Stage 131:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.496326009 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  p artitionIndex = 12  OR  partitionIndex = 13 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55  OR  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417464922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:==============================>                      (70 + 50) / 120][Stage 132:===================================>                 (80 + 40) / 120][Stage 132:============================================>       (103 + 17) / 120][Stage 132:====================================================>(119 + 1) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:=============================>                       (68 + 53) / 121][Stage 133:=====================================>               (85 + 36) / 121][Stage 133:===========================================>        (102 + 19) / 121][Stage 133:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.469121837 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389910294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=================================>                   (72 + 43) / 115][Stage 134:=====================================>               (82 + 33) / 115][Stage 134:==============================================>     (102 + 13) / 115][Stage 134:====================================================>(113 + 2) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:================================>                    (71 + 45) / 116][Stage 135:==========================================>          (92 + 24) / 116][Stage 135:==============================================>     (103 + 13) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.810219711 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374273792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (74 + 44) / 118][Stage 136:====================================>                (81 + 37) / 118][Stage 136:============================================>       (100 + 18) / 118][Stage 136:===================================================> (115 + 3) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:======================================>              (87 + 32) / 119][Stage 137:==========================================>          (95 + 24) / 119][Stage 137:================================================>    (110 + 9) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.234637373 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36079636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===================================>                 (76 + 37) / 113][Stage 138:=======================================>             (85 + 28) / 113][Stage 138:=========================================>           (88 + 25) / 113][Stage 138:=================================================>   (106 + 7) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:=======================================>             (84 + 30) / 114][Stage 139:============================================>        (96 + 18) / 114][Stage 139:==============================================>     (103 + 11) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.378303322 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403444925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (64 + 49) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:==============================>                      (66 + 48) / 114][Stage 141:=====================================>               (80 + 34) / 114][Stage 141:==============================================>      (99 + 15) / 114][Stage 141:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.253485713 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR   partitionIndex = 148  OR  partitionIndex = 134 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395498413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===================================>                 (77 + 38) / 115][Stage 142:============================================>        (96 + 19) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:================================>                    (72 + 44) / 116][Stage 143:======================================>              (85 + 31) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.767836765 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  p artitionIndex = 50  OR  partitionIndex = 36 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40782674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:=============================>                       (67 + 54) / 121][Stage 144:===================================>                 (82 + 39) / 121][Stage 144:===========================================>        (102 + 19) / 121][Stage 144:==================================================>  (116 + 5) / 121][Stage 144:====================================================>(119 + 2) / 121]                                                                                [Stage 145:==========================>                          (61 + 61) / 122][Stage 145:===========================>                         (64 + 58) / 122][Stage 145:====================================>                (83 + 39) / 122][Stage 145:============================================>       (105 + 17) / 122][Stage 145:==================================================>  (116 + 6) / 122][Stage 145:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.685312413 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368029465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:=================================>                   (75 + 43) / 118][Stage 146:=========================================>           (92 + 26) / 118][Stage 146:=============================================>      (103 + 15) / 118][Stage 146:==================================================>  (113 + 5) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:=================================>                   (75 + 44) / 119][Stage 147:======================================>              (87 + 32) / 119][Stage 147:============================================>       (102 + 17) / 119][Stage 147:===================================================> (116 + 3) / 119][Stage 147:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.432289706 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346092299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (84 + 31) / 115][Stage 148:==========================================>          (93 + 22) / 115][Stage 148:=================================================>   (108 + 7) / 115][Stage 148:====================================================>(113 + 2) / 115]                                                                                [Stage 149:=====================================>               (82 + 34) / 116][Stage 149:========================================>            (88 + 28) / 116][Stage 149:=============================================>      (102 + 14) / 116][Stage 149:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.766456064 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369263208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==================================>                  (74 + 39) / 113][Stage 150:=======================================>             (84 + 29) / 113][Stage 150:==============================================>      (99 + 14) / 113][Stage 150:=================================================>   (105 + 8) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:==================================>                  (74 + 40) / 114][Stage 151:========================================>            (88 + 26) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:==================================================>  (109 + 5) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.178395952 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  p artitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364098448 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=================================>                   (72 + 41) / 113][Stage 152:====================================>                (77 + 36) / 113][Stage 152:===========================================>         (92 + 21) / 113][Stage 152:==============================================>     (100 + 13) / 113][Stage 152:==================================================>  (107 + 6) / 113]                                                                                [Stage 153:=====================================>               (80 + 34) / 114][Stage 153:=========================================>           (89 + 25) / 114][Stage 153:=============================================>       (97 + 17) / 114][Stage 153:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.060911352 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391774194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:==============================>                      (64 + 49) / 113][Stage 154:======================================>              (82 + 31) / 113][Stage 154:================================================>    (104 + 9) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:==============================>                      (66 + 48) / 114][Stage 155:======================================>              (82 + 32) / 114][Stage 155:=============================================>       (98 + 16) / 114][Stage 155:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.347471254 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41143267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (77 + 38) / 115][Stage 156:=========================================>           (89 + 26) / 115][Stage 156:=============================================>      (101 + 14) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:================================>                    (71 + 45) / 116][Stage 157:=====================================>               (83 + 33) / 116][Stage 157:===========================================>         (96 + 20) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:==================================================>  (110 + 6) / 116][Stage 157:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.994793887 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394665744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:================================>                    (69 + 44) / 113][Stage 158:============================================>        (95 + 18) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:============================>                        (61 + 53) / 114][Stage 159:================================>                    (69 + 45) / 114][Stage 159:==========================================>          (92 + 22) / 114][Stage 159:===============================================>    (104 + 10) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.425017138 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  p artitionIndex = 6  OR  partitionIndex = 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390181905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=============================>                       (63 + 50) / 113][Stage 160:================================>                    (70 + 43) / 113][Stage 160:===========================================>         (92 + 21) / 113][Stage 160:==================================================>  (108 + 5) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:==============================>                      (65 + 49) / 114][Stage 161:=======================================>             (84 + 30) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.704986471 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  pa rtitionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380952109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (74 + 44) / 118][Stage 162:=====================================>               (84 + 34) / 118][Stage 162:===========================================>         (96 + 22) / 118][Stage 162:===============================================>    (107 + 11) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:========================================>            (90 + 29) / 119][Stage 163:============================================>       (101 + 18) / 119][Stage 163:==================================================>  (113 + 6) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.548176159 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402834493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:============================>                        (65 + 55) / 120][Stage 164:==================================>                  (79 + 41) / 120][Stage 164:============================================>       (103 + 17) / 120][Stage 164:===================================================> (117 + 3) / 120]                                                                                [Stage 165:===========================>                         (62 + 59) / 121][Stage 165:==============================>                      (70 + 51) / 121][Stage 165:==========================================>         (100 + 21) / 121][Stage 165:==================================================>  (115 + 6) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.69314187 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR   partitionIndex = 212  OR  partitionIndex = 213 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35570635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (79 + 36) / 115][Stage 166:======================================>              (84 + 31) / 115][Stage 166:=============================================>       (99 + 16) / 115][Stage 166:=================================================>   (107 + 8) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=====================================>               (82 + 34) / 116][Stage 167:==========================================>          (92 + 24) / 116][Stage 167:=============================================>       (99 + 17) / 116][Stage 167:=================================================>   (109 + 7) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.96804935 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392996353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:================================>                    (69 + 44) / 113][Stage 168:=========================================>           (88 + 25) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:=================================>                   (72 + 42) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.375617474 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  p artitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422795708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (63 + 57) / 120][Stage 170:===================================>                 (81 + 39) / 120][Stage 170:=============================================>      (104 + 16) / 120][Stage 170:=================================================>   (113 + 7) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:================================>                    (75 + 46) / 121][Stage 171:==========================================>          (97 + 24) / 121][Stage 171:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.159819577 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  p artitionIndex = 60  OR  partitionIndex = 68 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402322028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (62 + 59) / 121][Stage 172:================================>                    (74 + 47) / 121][Stage 172:========================================>            (92 + 29) / 121][Stage 172:=================================================>   (112 + 9) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:=============================>                       (69 + 53) / 122][Stage 173:======================================>              (88 + 34) / 122][Stage 173:===============================================>    (111 + 11) / 122][Stage 173:====================================================>(120 + 2) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.490623504 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379936201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:=====================================>               (83 + 35) / 118][Stage 174:===========================================>         (96 + 22) / 118][Stage 174:==================================================>  (113 + 5) / 118]                                                                                [Stage 175:================================>                    (74 + 45) / 119][Stage 175:===================================>                 (80 + 39) / 119][Stage 175:=========================================>           (93 + 26) / 119][Stage 175:================================================>    (110 + 9) / 119][Stage 175:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.219798856 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  p artitionIndex = 68  OR  partitionIndex = 69 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385976583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:==================================================>  (108 + 5) / 113]                                                                                [Stage 177:============================>                        (62 + 52) / 114][Stage 177:=================================>                   (72 + 42) / 114][Stage 177:=========================================>           (90 + 24) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.337527702 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  p artitionIndex = 102  OR  partitionIndex = 103 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409270932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:==============================>                      (70 + 51) / 121][Stage 178:======================================>              (89 + 32) / 121][Stage 178:===============================================>    (111 + 10) / 121][Stage 178:====================================================>(120 + 1) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:============================>                        (65 + 57) / 122][Stage 179:====================================>                (85 + 37) / 122][Stage 179:=============================================>      (106 + 16) / 122][Stage 179:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.35934236 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397855308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:===============================>                     (72 + 49) / 121][Stage 180:======================================>              (89 + 32) / 121][Stage 180:==================================================>  (115 + 6) / 121]                                                                                [Stage 181:============================>                        (65 + 57) / 122][Stage 181:=================================>                   (77 + 45) / 122][Stage 181:==========================================>          (97 + 25) / 122][Stage 181:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.34821917 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  p artitionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499077995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (75 + 43) / 118][Stage 182:====================================>                (82 + 36) / 118][Stage 182:============================================>       (100 + 18) / 118][Stage 182:==================================================>  (112 + 6) / 118]                                                                                [Stage 183:================================>                    (74 + 45) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:=========================================>           (94 + 25) / 119][Stage 183:================================================>    (110 + 9) / 119][Stage 183:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.335969457 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  p artitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363724835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (72 + 46) / 118][Stage 184:===================================>                 (80 + 38) / 118][Stage 184:==========================================>          (95 + 23) / 118][Stage 184:==============================================>     (106 + 12) / 118][Stage 184:====================================================>(117 + 1) / 118]                                                                                [Stage 185:================================>                    (74 + 45) / 119][Stage 185:=================================>                   (76 + 43) / 119][Stage 185:========================================>            (91 + 28) / 119][Stage 185:=============================================>      (105 + 14) / 119][Stage 185:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.461430812 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366851366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (76 + 42) / 118][Stage 186:=====================================>               (84 + 34) / 118][Stage 186:============================================>        (98 + 20) / 118][Stage 186:===================================================> (114 + 4) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:==================================>                  (78 + 41) / 119][Stage 187:========================================>            (90 + 29) / 119][Stage 187:=============================================>      (104 + 15) / 119][Stage 187:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.409338566 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173  OR   partitionIndex = 174  OR  partitionIndex = 160 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 160 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376931784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (73 + 45) / 118][Stage 188:===================================>                 (78 + 40) / 118][Stage 188:=======================================>             (88 + 30) / 118][Stage 188:============================================>       (101 + 17) / 118]                                                                                [Stage 189:================================>                    (74 + 45) / 119][Stage 189:===================================>                 (80 + 39) / 119][Stage 189:==========================================>          (96 + 23) / 119][Stage 189:===============================================>    (108 + 11) / 119][Stage 189:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.307526469 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370578419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (73 + 45) / 118][Stage 190:===================================>                 (80 + 38) / 118][Stage 190:==========================================>          (95 + 23) / 118][Stage 190:=================================================>   (111 + 7) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:======================================>              (86 + 33) / 119][Stage 191:===========================================>         (97 + 22) / 119][Stage 191:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.036619026 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383057446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==============================>                      (66 + 49) / 115][Stage 192:=====================================>               (82 + 33) / 115][Stage 192:=============================================>      (101 + 14) / 115][Stage 192:=================================================>   (107 + 8) / 115]                                                                                [Stage 193:===================================>                 (78 + 38) / 116][Stage 193:=============================================>       (99 + 17) / 116][Stage 193:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.694728572 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  p artitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389186209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (72 + 43) / 115][Stage 194:=======================================>             (85 + 30) / 115][Stage 194:=============================================>       (98 + 17) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:================================>                    (71 + 45) / 116][Stage 195:=======================================>             (87 + 29) / 116][Stage 195:=============================================>      (101 + 15) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:===================================================> (113 + 3) / 116][Stage 195:====================================================>(114 + 2) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.451520087 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40542999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:================================>                    (69 + 44) / 113][Stage 196:=========================================>           (88 + 25) / 113][Stage 196:==================================================>  (108 + 5) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:============================>                        (62 + 52) / 114][Stage 197:====================================>                (78 + 36) / 114][Stage 197:==============================================>      (99 + 15) / 114][Stage 197:==================================================>  (109 + 5) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.468470499 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361335101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (79 + 36) / 115][Stage 198:======================================>              (84 + 31) / 115][Stage 198:============================================>        (96 + 19) / 115][Stage 198:=================================================>   (108 + 7) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:======================================>              (84 + 32) / 116][Stage 199:==========================================>          (94 + 22) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:=================================================>   (108 + 8) / 116][Stage 199:==================================================>  (111 + 5) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.403894066 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  p artitionIndex = 88  OR  partitionIndex = 74 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36916681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (80 + 33) / 113][Stage 200:=========================================>           (88 + 25) / 113][Stage 200:=============================================>       (98 + 15) / 113][Stage 200:===================================================> (109 + 4) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:==================================>                  (75 + 39) / 114][Stage 201:=======================================>             (85 + 29) / 114][Stage 201:==========================================>          (92 + 22) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.035111749 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 02:51:43 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:50774) dropped. RpcEnv already stopped.

real	10m31.147s
user	11m49.008s
sys	0m57.044s
