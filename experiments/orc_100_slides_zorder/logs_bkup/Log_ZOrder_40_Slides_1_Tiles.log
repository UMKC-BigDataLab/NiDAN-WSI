Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 04:40:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:41:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:41:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:41:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 04:41:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 04:41:26 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522044115-0414).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.374276618 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.648922456 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.826857477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (50 + 71) / 121][Stage 2:=========================>                             (57 + 64) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:=============================>                         (65 + 56) / 121][Stage 2:================================>                      (71 + 50) / 121][Stage 2:======================================>                (84 + 37) / 121][Stage 2:=============================================>        (101 + 20) / 121][Stage 2:===================================================>   (113 + 8) / 121]                                                                                [Stage 3:===========================>                           (60 + 62) / 122][Stage 3:===========================>                           (62 + 60) / 122][Stage 3:=============================>                         (65 + 57) / 122][Stage 3:===================================>                   (79 + 43) / 122][Stage 3:========================================>              (90 + 32) / 122][Stage 3:============================================>          (99 + 23) / 122][Stage 3:====================================================>  (116 + 6) / 122][Stage 3:======================================================>(120 + 2) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.24758783 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.676490374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (53 + 60) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:========================================>              (84 + 29) / 113][Stage 4:==============================================>        (96 + 17) / 113][Stage 4:===================================================>   (105 + 8) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (56 + 58) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:=================================>                     (69 + 45) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:=================================================>    (104 + 10) / 114]                                                                                Time elapsed: 4.259569804 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.67079911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:================================>                      (67 + 46) / 113][Stage 6:====================================>                  (75 + 38) / 113][Stage 6:===========================================>           (90 + 23) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:===============================================>       (98 + 16) / 114][Stage 7:====================================================>  (108 + 6) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.141626148 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.594556484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (72 + 46) / 118][Stage 8:====================================>                  (78 + 40) / 118][Stage 8:==========================================>            (91 + 27) / 118][Stage 8:=============================================>        (100 + 18) / 118][Stage 8:==================================================>    (109 + 9) / 118][Stage 8:======================================================>(117 + 1) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:===================================>                   (76 + 43) / 119][Stage 9:===========================================>           (94 + 25) / 119][Stage 9:================================================>     (107 + 12) / 119][Stage 9:====================================================>  (114 + 5) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.909516794 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510003445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (71 + 42) / 113][Stage 10:======================================>               (80 + 33) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:=====================================>                (80 + 34) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:==================================================>   (106 + 8) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.058435729 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53382042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:======================================>               (85 + 33) / 118][Stage 12:=============================================>       (101 + 17) / 118][Stage 12:=================================================>    (109 + 9) / 118][Stage 12:==================================================>   (110 + 8) / 118][Stage 12:=====================================================>(117 + 1) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:=================================>                    (74 + 45) / 119][Stage 13:========================================>             (90 + 29) / 119][Stage 13:=============================================>       (102 + 17) / 119][Stage 13:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.634755408 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543200317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===============================>                      (69 + 51) / 120][Stage 14:====================================>                 (82 + 38) / 120][Stage 14:===========================================>          (96 + 24) / 120][Stage 14:=================================================>    (111 + 9) / 120][Stage 14:=====================================================>(118 + 2) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:==============================>                       (69 + 52) / 121][Stage 15:==================================>                   (77 + 44) / 121][Stage 15:=========================================>            (93 + 28) / 121][Stage 15:===============================================>     (108 + 13) / 121][Stage 15:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.934031825 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508344297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:====================================>                 (76 + 37) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:===========================================>          (91 + 22) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:===================================================>  (108 + 5) / 113]                                                                                [Stage 17:========================================>             (85 + 29) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:==============================================>       (99 + 15) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.625409486 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546018608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:===========================>                          (61 + 60) / 121][Stage 18:===============================>                      (70 + 51) / 121][Stage 18:=========================================>            (94 + 27) / 121][Stage 18:==================================================>   (113 + 8) / 121]                                                                                [Stage 19:===========================>                          (62 + 60) / 122][Stage 19:==============================>                       (68 + 54) / 122][Stage 19:==================================>                   (77 + 45) / 122][Stage 19:==========================================>           (95 + 27) / 122][Stage 19:=============================================>       (105 + 17) / 122][Stage 19:==================================================>   (113 + 9) / 122][Stage 19:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.680668725 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57186715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:============================>                         (63 + 57) / 120][Stage 20:====================================>                 (81 + 39) / 120][Stage 20:=============================================>       (104 + 16) / 120][Stage 20:====================================================> (117 + 3) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:================================>                     (73 + 48) / 121][Stage 21:=========================================>            (93 + 28) / 121][Stage 21:==============================================>      (107 + 14) / 121][Stage 21:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.376932306 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453573516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=====================================>                (78 + 35) / 113][Stage 22:=======================================>              (83 + 30) / 113][Stage 22:============================================>         (94 + 19) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:==================================>                   (73 + 41) / 114][Stage 23:=======================================>              (84 + 30) / 114][Stage 23:=============================================>        (95 + 19) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.510105277 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460501924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (72 + 46) / 118][Stage 24:=================================>                    (73 + 45) / 118][Stage 24:=====================================>                (81 + 37) / 118][Stage 24:==============================================>      (103 + 15) / 118][Stage 24:====================================================> (114 + 4) / 118]                                                                                [Stage 25:==================================>                   (76 + 43) / 119][Stage 25:=====================================>                (83 + 36) / 119][Stage 25:============================================>         (98 + 21) / 119][Stage 25:================================================>    (109 + 10) / 119][Stage 25:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.316782321 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414332479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (82 + 33) / 115][Stage 26:===========================================>          (92 + 23) / 115][Stage 26:===============================================>     (103 + 12) / 115][Stage 26:====================================================> (112 + 3) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:=====================================>                (81 + 35) / 116][Stage 27:========================================>             (86 + 30) / 116][Stage 27:=============================================>       (100 + 16) / 116][Stage 27:==================================================>   (109 + 7) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.042750343 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450036182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=================================>                    (73 + 45) / 118][Stage 28:=====================================>                (83 + 35) / 118][Stage 28:==============================================>      (103 + 15) / 118][Stage 28:==================================================>   (111 + 7) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:===================================>                  (79 + 40) / 119][Stage 29:==========================================>           (93 + 26) / 119][Stage 29:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.211018115 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501835469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:===============================>                      (65 + 48) / 113][Stage 30:=====================================>                (78 + 35) / 113][Stage 30:==============================================>      (100 + 13) / 113][Stage 30:==================================================>   (106 + 7) / 113]                                                                                [Stage 31:=============================>                        (62 + 52) / 114][Stage 31:==================================>                   (73 + 41) / 114][Stage 31:========================================>             (85 + 29) / 114][Stage 31:================================================>    (104 + 10) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.256589835 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415040941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:======================================>               (82 + 33) / 115][Stage 32:=======================================>              (85 + 30) / 115][Stage 32:==============================================>       (98 + 17) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:=====================================================>(113 + 2) / 115]                                                                                [Stage 33:=======================================>              (84 + 32) / 116][Stage 33:=============================================>        (97 + 19) / 116][Stage 33:==================================================>   (109 + 7) / 116][Stage 33:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.232964559 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452409391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=======================================>              (83 + 30) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:=============================================>        (96 + 17) / 113][Stage 34:===================================================>  (107 + 6) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:========================================>             (85 + 29) / 114][Stage 35:=============================================>        (96 + 18) / 114][Stage 35:================================================>    (104 + 10) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.13104897 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488211474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=============================>                        (62 + 51) / 113][Stage 36:=================================>                    (71 + 42) / 113][Stage 36:===========================================>          (91 + 22) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:=================================>                    (71 + 43) / 114][Stage 37:=========================================>            (87 + 27) / 114][Stage 37:====================================================> (110 + 4) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.423409657 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494019357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:=================================>                    (71 + 42) / 113][Stage 38:=============================================>        (95 + 18) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=============================>                        (62 + 52) / 114][Stage 39:====================================>                 (76 + 38) / 114][Stage 39:============================================>         (93 + 21) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.58196047 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461360626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (72 + 43) / 115][Stage 40:========================================>             (86 + 29) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:===================================================>  (110 + 5) / 115]                                                                                [Stage 41:=====================================>                (81 + 35) / 116][Stage 41:==============================================>      (102 + 14) / 116][Stage 41:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.794346578 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419354737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=====================================>                (80 + 35) / 115][Stage 42:======================================>               (83 + 32) / 115][Stage 42:============================================>         (94 + 21) / 115][Stage 42:=================================================>    (106 + 9) / 115][Stage 42:====================================================> (111 + 4) / 115]                                                                                [Stage 43:=====================================>                (81 + 35) / 116][Stage 43:=============================================>        (97 + 19) / 116][Stage 43:===============================================>     (105 + 11) / 116][Stage 43:====================================================> (113 + 3) / 116][Stage 43:=====================================================>(114 + 2) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.714856758 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452024868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:====================================>                 (77 + 38) / 115][Stage 44:===========================================>          (93 + 22) / 115][Stage 44:=================================================>    (106 + 9) / 115][Stage 44:===================================================>  (109 + 6) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:=================================>                    (73 + 43) / 116][Stage 45:=========================================>            (90 + 26) / 116][Stage 45:==================================================>   (109 + 7) / 116][Stage 45:=====================================================>(114 + 2) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.248065169 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395458221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:======================================>               (81 + 34) / 115][Stage 46:==========================================>           (91 + 24) / 115][Stage 46:=================================================>    (106 + 9) / 115][Stage 46:=====================================================>(113 + 2) / 115]                                                                                [Stage 47:======================================>               (82 + 34) / 116][Stage 47:=========================================>            (90 + 26) / 116][Stage 47:==================================================>   (108 + 8) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.588872812 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386699126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=======================================>              (84 + 31) / 115][Stage 48:===========================================>          (92 + 23) / 115][Stage 48:==============================================>       (99 + 16) / 115][Stage 48:==================================================>   (107 + 8) / 115][Stage 48:===================================================>  (110 + 5) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:=======================================>              (84 + 32) / 116][Stage 49:==========================================>           (91 + 25) / 116][Stage 49:===============================================>     (103 + 13) / 116][Stage 49:=====================================================>(114 + 2) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.447985726 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431560346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===============================>                      (67 + 48) / 115][Stage 50:=======================================>              (85 + 30) / 115][Stage 50:==============================================>      (100 + 15) / 115][Stage 50:====================================================> (111 + 4) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:=====================================>                (80 + 36) / 116][Stage 51:==========================================>           (92 + 24) / 116][Stage 51:================================================>    (106 + 10) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.043177386 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=178", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=178,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49524232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (68 + 53) / 121][Stage 52:=======================================>              (89 + 32) / 121][Stage 52:===============================================>     (109 + 12) / 121][Stage 52:=====================================================>(119 + 2) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:============================>                         (65 + 57) / 122][Stage 53:====================================>                 (83 + 39) / 122][Stage 53:=============================================>       (105 + 17) / 122][Stage 53:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.198680126 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40538046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (71 + 42) / 113][Stage 54:=======================================>              (83 + 30) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:===============================================>     (102 + 11) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:====================================>                 (78 + 36) / 114][Stage 55:=========================================>            (88 + 26) / 114][Stage 55:==============================================>      (101 + 13) / 114][Stage 55:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.067334839 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381747426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (82 + 33) / 115][Stage 56:==========================================>           (90 + 25) / 115][Stage 56:==============================================>       (99 + 16) / 115][Stage 56:===================================================>  (109 + 6) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:========================================>             (87 + 29) / 116][Stage 57:===========================================>          (94 + 22) / 116][Stage 57:===============================================>     (105 + 11) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.958471422 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374497497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (82 + 33) / 115][Stage 58:=============================================>        (97 + 18) / 115][Stage 58:==================================================>   (107 + 8) / 115]                                                                                [Stage 59:======================================>               (83 + 33) / 116][Stage 59:==========================================>           (92 + 24) / 116][Stage 59:==================================================>   (108 + 8) / 116][Stage 59:=====================================================>(114 + 2) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.141536572 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425951562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (71 + 44) / 115][Stage 60:========================================>             (86 + 29) / 115][Stage 60:==============================================>      (101 + 14) / 115][Stage 60:===================================================>  (110 + 5) / 115]                                                                                [Stage 61:===============================>                      (68 + 48) / 116][Stage 61:===================================>                  (77 + 39) / 116][Stage 61:============================================>         (95 + 21) / 116][Stage 61:===============================================>     (105 + 11) / 116][Stage 61:=====================================================>(114 + 2) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.323398877 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431318703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===================================>                  (76 + 39) / 115][Stage 62:==========================================>           (91 + 24) / 115][Stage 62:=================================================>    (106 + 9) / 115][Stage 62:====================================================> (112 + 3) / 115]                                                                                [Stage 63:===============================>                      (68 + 48) / 116][Stage 63:=======================================>              (84 + 32) / 116][Stage 63:==========================================>           (91 + 25) / 116][Stage 63:==================================================>   (108 + 8) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.695244301 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44815661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:============================>                         (63 + 57) / 120][Stage 64:====================================>                 (81 + 39) / 120][Stage 64:=============================================>       (102 + 18) / 120][Stage 64:====================================================> (116 + 4) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:==============================>                       (68 + 53) / 121][Stage 65:==================================>                   (78 + 43) / 121][Stage 65:================================================>    (110 + 11) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.03193101 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467723408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (61 + 60) / 121][Stage 66:==============================>                       (68 + 53) / 121][Stage 66:=====================================>                (84 + 37) / 121][Stage 66:===============================================>     (108 + 13) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:===============================>                      (71 + 51) / 122][Stage 67:===========================================>         (100 + 22) / 122][Stage 67:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.090945304 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393692652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:==================================>                   (75 + 43) / 118][Stage 68:======================================>               (85 + 33) / 118][Stage 68:===========================================>          (94 + 24) / 118][Stage 68:=====================================================>(116 + 2) / 118]                                                                                [Stage 69:=================================>                    (74 + 45) / 119][Stage 69:====================================>                 (80 + 39) / 119][Stage 69:==========================================>           (94 + 25) / 119][Stage 69:==============================================>      (104 + 15) / 119][Stage 69:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.328937273 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425190718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===============================>                      (68 + 47) / 115][Stage 70:=======================================>              (85 + 30) / 115][Stage 70:==============================================>       (99 + 16) / 115][Stage 70:===================================================>  (110 + 5) / 115]                                                                                [Stage 71:================================>                     (69 + 47) / 116][Stage 71:===========================================>          (94 + 22) / 116][Stage 71:===============================================>     (103 + 13) / 116][Stage 71:==================================================>   (109 + 7) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.34366015 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433039769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:==============================>                       (64 + 49) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:===============================================>     (101 + 12) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:===============================================>     (102 + 12) / 114][Stage 73:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.49438237 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412487187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (73 + 45) / 118][Stage 74:=====================================>                (82 + 36) / 118][Stage 74:===============================================>     (105 + 13) / 118][Stage 74:=====================================================>(116 + 2) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:==================================>                   (76 + 43) / 119][Stage 75:=======================================>              (87 + 32) / 119][Stage 75:================================================>    (108 + 11) / 119][Stage 75:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.991626222 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400019137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:==================================>                   (75 + 43) / 118][Stage 76:======================================>               (85 + 33) / 118][Stage 76:===============================================>     (106 + 12) / 118][Stage 76:=====================================================>(116 + 2) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:====================================>                 (80 + 39) / 119][Stage 77:=========================================>            (92 + 27) / 119][Stage 77:================================================>    (109 + 10) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.99142002 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408185569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (69 + 46) / 115][Stage 78:======================================>               (82 + 33) / 115][Stage 78:============================================>         (95 + 20) / 115][Stage 78:=================================================>    (106 + 9) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:======================================>               (83 + 33) / 116][Stage 79:============================================>         (95 + 21) / 116][Stage 79:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.895276454 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429156793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:==============================>                       (69 + 52) / 121][Stage 80:======================================>               (86 + 35) / 121][Stage 80:==================================================>   (113 + 8) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:=============================>                        (66 + 56) / 122][Stage 81:=====================================>                (84 + 38) / 122][Stage 81:==============================================>      (108 + 14) / 122][Stage 81:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.16779228 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432209485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (63 + 58) / 121][Stage 82:================================>                     (73 + 48) / 121][Stage 82:===========================================>          (98 + 23) / 121][Stage 82:====================================================> (118 + 3) / 121]                                                                                [Stage 83:============================>                         (64 + 58) / 122][Stage 83:================================>                     (74 + 48) / 122][Stage 83:==========================================>           (95 + 27) / 122][Stage 83:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.008178043 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432604546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (62 + 59) / 121][Stage 84:==============================>                       (69 + 52) / 121][Stage 84:=========================================>            (93 + 28) / 121][Stage 84:==================================================>   (113 + 8) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:===============================>                      (71 + 51) / 122][Stage 85:======================================>               (87 + 35) / 122][Stage 85:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.064756167 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416727142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:===============================>                      (66 + 47) / 113][Stage 86:=======================================>              (83 + 30) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:==================================>                   (72 + 42) / 114][Stage 87:=========================================>            (87 + 27) / 114][Stage 87:===============================================>     (103 + 11) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.036637493 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428086288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (61 + 60) / 121][Stage 88:===============================>                      (70 + 51) / 121][Stage 88:==========================================>           (95 + 26) / 121][Stage 88:===================================================>  (115 + 6) / 121]                                                                                [Stage 89:===========================>                          (63 + 59) / 122][Stage 89:=================================>                    (75 + 47) / 122][Stage 89:==========================================>           (97 + 25) / 122][Stage 89:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.013113897 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385142076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:=====================================>                (81 + 37) / 118][Stage 90:========================================>             (88 + 30) / 118][Stage 90:==============================================>      (103 + 15) / 118][Stage 90:====================================================> (115 + 3) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:=================================>                    (74 + 45) / 119][Stage 91:====================================>                 (81 + 38) / 119][Stage 91:======================================>               (85 + 34) / 119][Stage 91:============================================>         (99 + 20) / 119][Stage 91:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.324113336 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364253692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (71 + 42) / 113][Stage 92:=========================================>            (86 + 27) / 113][Stage 92:============================================>         (94 + 19) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:====================================================> (110 + 3) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:==================================>                   (72 + 42) / 114][Stage 93:======================================>               (81 + 33) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:===============================================>     (103 + 11) / 114][Stage 93:===================================================>  (109 + 5) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.361211442 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364482633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (82 + 33) / 115][Stage 94:=========================================>            (88 + 27) / 115][Stage 94:================================================>    (105 + 10) / 115][Stage 94:=====================================================>(113 + 2) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:===========================================>          (93 + 23) / 116][Stage 95:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.786943151 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346552542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (83 + 32) / 115][Stage 96:============================================>         (95 + 20) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:=====================================>                (81 + 35) / 116][Stage 97:=========================================>            (90 + 26) / 116][Stage 97:==================================================>   (108 + 8) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.85691285 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356437781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (81 + 34) / 115][Stage 98:========================================>             (86 + 29) / 115][Stage 98:==============================================>       (98 + 17) / 115][Stage 98:================================================>    (105 + 10) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:========================================>             (86 + 30) / 116][Stage 99:==============================================>       (99 + 17) / 116][Stage 99:=================================================>    (107 + 9) / 116][Stage 99:====================================================> (113 + 3) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.074805337 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405556837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:==============================>                      (70 + 51) / 121][Stage 100:=======================================>             (90 + 31) / 121][Stage 100:===============================================>    (110 + 11) / 121][Stage 100:====================================================>(119 + 2) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:============================>                        (65 + 57) / 122][Stage 101:=====================================>               (86 + 36) / 122][Stage 101:===============================================>    (111 + 11) / 122][Stage 101:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.210375396 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37879711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (74 + 44) / 118][Stage 102:====================================>                (82 + 36) / 118][Stage 102:============================================>        (99 + 19) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:================================>                    (74 + 45) / 119][Stage 103:===================================>                 (80 + 39) / 119][Stage 103:===========================================>         (98 + 21) / 119][Stage 103:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.047299724 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35134966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=======================================>             (85 + 30) / 115][Stage 104:==========================================>          (93 + 22) / 115][Stage 104:===============================================>    (105 + 10) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:======================================>              (85 + 31) / 116][Stage 105:==========================================>          (92 + 24) / 116][Stage 105:==============================================>     (104 + 12) / 116][Stage 105:================================================>    (107 + 9) / 116][Stage 105:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.172817843 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44423717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:============================>                        (64 + 57) / 121][Stage 106:==============================>                      (70 + 51) / 121][Stage 106:======================================>              (89 + 32) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:===========================>                         (64 + 58) / 122][Stage 107:====================================>                (84 + 38) / 122][Stage 107:=============================================>      (106 + 16) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.953426047 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514141949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:==============================>                      (65 + 48) / 113][Stage 108:===================================>                 (75 + 38) / 113][Stage 108:=============================================>       (96 + 17) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:===============================>                     (67 + 47) / 114][Stage 109:=======================================>             (85 + 29) / 114][Stage 109:================================================>    (105 + 9) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.052570381 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410219134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (62 + 58) / 120][Stage 110:===============================>                     (71 + 49) / 120][Stage 110:======================================>              (87 + 33) / 120][Stage 110:===============================================>    (109 + 11) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:================================>                    (74 + 47) / 121][Stage 111:===========================================>        (101 + 20) / 121][Stage 111:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.98991259 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412513323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:=================================>                   (76 + 44) / 120][Stage 112:=========================================>           (95 + 25) / 120][Stage 112:===================================================> (116 + 4) / 120]                                                                                [Stage 113:===========================>                         (63 + 58) / 121][Stage 113:===================================>                 (80 + 41) / 121][Stage 113:==============================================>     (109 + 12) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.96012433 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372278963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:>                                                      (0 + 0) / 115][Stage 114:================================>                    (70 + 45) / 115][Stage 114:====================================>                (80 + 35) / 115][Stage 114:===========================================>         (95 + 20) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:===============================>                     (69 + 47) / 116][Stage 115:=====================================>               (81 + 35) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.765124872 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362473944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (74 + 44) / 118][Stage 116:===================================>                 (80 + 38) / 118][Stage 116:==========================================>          (94 + 24) / 118][Stage 116:=================================================>   (110 + 8) / 118][Stage 116:====================================================>(117 + 1) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:==================================>                  (78 + 41) / 119][Stage 117:========================================>            (90 + 29) / 119][Stage 117:===============================================>    (109 + 10) / 119][Stage 117:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.094696404 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391986501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:===================================>                 (75 + 38) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:==================================================>  (107 + 6) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:=================================>                   (73 + 41) / 114][Stage 119:===========================================>         (93 + 21) / 114][Stage 119:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.187796413 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39943759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:>                                                      (0 + 0) / 120][Stage 120:==========================>                          (61 + 59) / 120][Stage 120:================================>                    (74 + 46) / 120][Stage 120:=======================================>             (90 + 30) / 120][Stage 120:===============================================>    (110 + 10) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:===============================>                     (71 + 50) / 121][Stage 121:======================================>              (87 + 34) / 121][Stage 121:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 2.940360366 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362807405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (74 + 44) / 118][Stage 122:==========================================>          (94 + 24) / 118][Stage 122:==================================================>  (112 + 6) / 118][Stage 122:====================================================>(117 + 1) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:==================================>                  (77 + 42) / 119][Stage 123:========================================>            (91 + 28) / 119][Stage 123:==============================================>     (107 + 12) / 119][Stage 123:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.982874514 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358882549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:===================================>                 (78 + 40) / 118][Stage 124:=======================================>             (89 + 29) / 118][Stage 124:================================================>    (109 + 9) / 118]                                                                                [Stage 125:================================>                    (74 + 45) / 119][Stage 125:=====================================>               (84 + 35) / 119][Stage 125:==========================================>          (95 + 24) / 119][Stage 125:=================================================>   (112 + 7) / 119][Stage 125:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.950861245 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378445446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==============================>                      (66 + 49) / 115][Stage 126:=================================>                   (72 + 43) / 115][Stage 126:=========================================>           (89 + 26) / 115][Stage 126:================================================>    (106 + 9) / 115]                                                                                [Stage 127:=================================>                   (74 + 42) / 116][Stage 127:=====================================>               (82 + 34) / 116][Stage 127:===========================================>         (95 + 21) / 116][Stage 127:================================================>    (107 + 9) / 116][Stage 127:==================================================>  (110 + 6) / 116][Stage 127:===================================================> (113 + 3) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.470749193 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383621087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (74 + 44) / 118][Stage 128:=======================================>             (89 + 29) / 118][Stage 128:==============================================>     (105 + 13) / 118][Stage 128:===================================================> (115 + 3) / 118]                                                                                [Stage 129:================================>                    (74 + 45) / 119][Stage 129:=====================================>               (85 + 34) / 119][Stage 129:============================================>        (99 + 20) / 119][Stage 129:==============================================>     (107 + 12) / 119][Stage 129:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.241588619 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39442095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:=============================>                       (63 + 50) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:==============================================>     (101 + 12) / 113][Stage 130:==================================================>  (108 + 5) / 113][Stage 130:===================================================> (110 + 3) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:=================================>                   (73 + 41) / 114][Stage 131:=========================================>           (90 + 24) / 114][Stage 131:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.281468456 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357101661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (81 + 34) / 115][Stage 132:=========================================>           (89 + 26) / 115][Stage 132:=================================================>   (107 + 8) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:======================================>              (84 + 32) / 116][Stage 133:=======================================>             (86 + 30) / 116][Stage 133:=============================================>      (101 + 15) / 116][Stage 133:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.617427674 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405320392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 60) / 120][Stage 134:================================>                    (74 + 46) / 120][Stage 134:=========================================>           (93 + 27) / 120][Stage 134:==================================================>  (115 + 5) / 120]                                                                                [Stage 135:===========================>                         (63 + 58) / 121][Stage 135:==================================>                  (79 + 42) / 121][Stage 135:===========================================>        (101 + 20) / 121][Stage 135:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.86559964 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372725143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:=================================>                   (74 + 44) / 118][Stage 136:======================================>              (85 + 33) / 118][Stage 136:============================================>       (100 + 18) / 118][Stage 136:==================================================>  (113 + 5) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:=================================>                   (75 + 44) / 119][Stage 137:=======================================>             (88 + 31) / 119][Stage 137:=============================================>      (103 + 16) / 119][Stage 137:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.982010461 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402227259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (61 + 60) / 121][Stage 138:================================>                    (74 + 47) / 121][Stage 138:==========================================>          (96 + 25) / 121][Stage 138:=================================================>   (113 + 8) / 121][Stage 138:====================================================>(120 + 1) / 121]                                                                                [Stage 139:==========================>                          (61 + 61) / 122][Stage 139:=============================>                       (69 + 53) / 122][Stage 139:===================================>                 (81 + 41) / 122][Stage 139:===========================================>        (101 + 21) / 122][Stage 139:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.273967301 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338172184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (81 + 34) / 115][Stage 140:=========================================>           (89 + 26) / 115][Stage 140:=================================================>   (108 + 7) / 115][Stage 140:====================================================>(113 + 2) / 115][Stage 140:====================================================>(114 + 1) / 115]                                                                                [Stage 141:======================================>              (84 + 32) / 116][Stage 141:=========================================>           (90 + 26) / 116][Stage 141:==============================================>     (104 + 12) / 116][Stage 141:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.837810985 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384188047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:===============================>                     (67 + 46) / 113][Stage 142:=====================================>               (80 + 33) / 113][Stage 142:===============================================>    (103 + 10) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==============================>                      (66 + 48) / 114][Stage 143:====================================>                (79 + 35) / 114][Stage 143:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.035765211 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385035411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:==================================>                  (73 + 40) / 113][Stage 144:==========================================>          (90 + 23) / 113][Stage 144:=================================================>   (106 + 7) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:===============================>                     (68 + 46) / 114][Stage 145:======================================>              (83 + 31) / 114][Stage 145:==============================================>     (102 + 12) / 114][Stage 145:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.122853516 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371016335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (73 + 45) / 118][Stage 146:=====================================>               (83 + 35) / 118][Stage 146:============================================>       (102 + 16) / 118][Stage 146:=====================================================(118 + 0) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:==================================>                  (78 + 41) / 119][Stage 147:=========================================>           (94 + 25) / 119][Stage 147:=================================================>   (111 + 8) / 119][Stage 147:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.831560817 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399754309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (65 + 56) / 121][Stage 148:==================================>                  (78 + 43) / 121][Stage 148:===========================================>        (101 + 20) / 121][Stage 148:===================================================> (117 + 4) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:============================>                        (65 + 57) / 122][Stage 149:===================================>                 (82 + 40) / 122][Stage 149:===========================================>        (103 + 19) / 122][Stage 149:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.059303941 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395767314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (64 + 56) / 120][Stage 150:===================================>                 (81 + 39) / 120][Stage 150:=============================================>      (105 + 15) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:===============================>                     (71 + 50) / 121][Stage 151:==========================================>          (96 + 25) / 121][Stage 151:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.041670149 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372555661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:==================================>                  (76 + 42) / 118][Stage 152:=======================================>             (89 + 29) / 118][Stage 152:==============================================>     (105 + 13) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:====================================>                (83 + 36) / 119][Stage 153:===========================================>        (100 + 19) / 119][Stage 153:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.872825956 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358954926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:====================================>                (77 + 36) / 113][Stage 154:=========================================>           (89 + 24) / 113][Stage 154:==============================================>      (99 + 14) / 113][Stage 154:=================================================>   (106 + 7) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:======================================>              (83 + 31) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:==============================================>     (103 + 11) / 114][Stage 155:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.094455836 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385299391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (61 + 52) / 113][Stage 156:==================================>                  (73 + 40) / 113][Stage 156:==========================================>          (91 + 22) / 113][Stage 156:================================================>    (104 + 9) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:=============================>                       (64 + 50) / 114][Stage 157:=================================>                   (72 + 42) / 114][Stage 157:=========================================>           (89 + 25) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.067765528 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396901396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (62 + 59) / 121][Stage 158:==================================>                  (78 + 43) / 121][Stage 158:========================================>            (93 + 28) / 121][Stage 158:==================================================>  (115 + 6) / 121]                                                                                [Stage 159:===========================>                         (64 + 58) / 122][Stage 159:===============================>                     (73 + 49) / 122][Stage 159:=======================================>             (92 + 30) / 122][Stage 159:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 2.916240546 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335041171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (82 + 33) / 115][Stage 160:===========================================>         (95 + 20) / 115][Stage 160:==================================================>  (110 + 5) / 115]                                                                                [Stage 161:======================================>              (84 + 32) / 116][Stage 161:===========================================>         (95 + 21) / 116][Stage 161:=================================================>   (109 + 7) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.66839472 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36005059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (78 + 35) / 113][Stage 162:=========================================>           (89 + 24) / 113][Stage 162:==============================================>      (99 + 14) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:=====================================>               (81 + 33) / 114][Stage 163:============================================>        (95 + 19) / 114][Stage 163:==============================================>     (103 + 11) / 114][Stage 163:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.898187211 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394179325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:============================>                        (64 + 56) / 120][Stage 164:==================================>                  (79 + 41) / 120][Stage 164:===========================================>         (99 + 21) / 120][Stage 164:====================================================>(118 + 2) / 120]                                                                                [Stage 165:==========================>                          (61 + 60) / 121][Stage 165:================================>                    (74 + 47) / 121][Stage 165:=========================================>           (95 + 26) / 121][Stage 165:=================================================>   (113 + 8) / 121][Stage 165:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.056450879 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482468316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===============================>                     (69 + 46) / 115][Stage 166:===================================>                 (78 + 37) / 115][Stage 166:=========================================>           (91 + 24) / 115][Stage 166:==================================================>  (109 + 6) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=================================>                   (74 + 42) / 116][Stage 167:=======================================>             (87 + 29) / 116][Stage 167:============================================>        (98 + 18) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.701444248 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38027171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===============================>                     (68 + 47) / 115][Stage 168:====================================>                (80 + 35) / 115][Stage 168:============================================>        (97 + 18) / 115][Stage 168:===============================================>    (105 + 10) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:==================================>                  (75 + 41) / 116][Stage 169:=======================================>             (86 + 30) / 116][Stage 169:============================================>       (100 + 16) / 116][Stage 169:===================================================> (112 + 4) / 116][Stage 169:===================================================> (113 + 3) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.307703573 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388691103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:============================>                        (64 + 56) / 120][Stage 170:====================================>                (83 + 37) / 120][Stage 170:=================================================>   (111 + 9) / 120]                                                                                [Stage 171:============================>                        (65 + 56) / 121][Stage 171:================================>                    (75 + 46) / 121][Stage 171:==========================================>          (97 + 24) / 121][Stage 171:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.95973095 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359797168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:=================================>                   (75 + 43) / 118][Stage 172:===================================>                 (79 + 39) / 118][Stage 172:=======================================>             (88 + 30) / 118][Stage 172:================================================>    (109 + 9) / 118][Stage 172:====================================================>(117 + 1) / 118]                                                                                [Stage 173:=================================>                   (75 + 44) / 119][Stage 173:====================================>                (82 + 37) / 119][Stage 173:========================================>            (91 + 28) / 119][Stage 173:============================================>       (102 + 17) / 119][Stage 173:===================================================> (115 + 4) / 119][Stage 173:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.696178213 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382670059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=============================>                       (65 + 50) / 115][Stage 174:===================================>                 (76 + 39) / 115][Stage 174:=========================================>           (91 + 24) / 115][Stage 174:==============================================>     (103 + 12) / 115]                                                                                [Stage 175:================================>                    (71 + 45) / 116][Stage 175:==========================================>          (92 + 24) / 116][Stage 175:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.756125879 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340746593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (84 + 31) / 115][Stage 176:===========================================>         (94 + 21) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:==========================================>          (92 + 24) / 116][Stage 177:==============================================>     (103 + 13) / 116][Stage 177:==================================================>  (110 + 6) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.82444673 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383138541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:==============================>                      (64 + 49) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:==============================================>     (102 + 11) / 113][Stage 178:===================================================> (110 + 3) / 113]                                                                                [Stage 179:============================>                        (62 + 52) / 114][Stage 179:=================================>                   (71 + 43) / 114][Stage 179:=======================================>             (86 + 28) / 114][Stage 179:============================================>        (96 + 18) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.28857691 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379558726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:======================================>              (84 + 31) / 115][Stage 180:=============================================>       (99 + 16) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:=====================================>               (82 + 34) / 116][Stage 181:=======================================>             (86 + 30) / 116][Stage 181:=============================================>      (101 + 15) / 116][Stage 181:=================================================>   (109 + 7) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.923687741 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414393604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:==============================>                      (66 + 47) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:============================>                        (61 + 53) / 114][Stage 183:==============================>                      (66 + 48) / 114][Stage 183:====================================>                (79 + 35) / 114][Stage 183:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 3.001065287 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381207733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (70 + 45) / 115][Stage 184:=====================================>               (82 + 33) / 115][Stage 184:===========================================>         (95 + 20) / 115][Stage 184:==================================================>  (109 + 6) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:===============================>                     (69 + 47) / 116][Stage 185:======================================>              (85 + 31) / 116][Stage 185:============================================>       (100 + 16) / 116][Stage 185:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.953315156 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357626658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (77 + 41) / 118][Stage 186:========================================>            (91 + 27) / 118][Stage 186:==================================================>  (112 + 6) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:==================================>                  (77 + 42) / 119][Stage 187:======================================>              (87 + 32) / 119][Stage 187:============================================>       (102 + 17) / 119][Stage 187:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.074834937 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376258712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===============================>                     (69 + 46) / 115][Stage 188:=====================================>               (82 + 33) / 115][Stage 188:=============================================>      (100 + 15) / 115][Stage 188:===================================================> (111 + 4) / 115]                                                                                [Stage 189:================================>                    (72 + 44) / 116][Stage 189:=======================================>             (86 + 30) / 116][Stage 189:============================================>       (100 + 16) / 116][Stage 189:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.746480993 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447763276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=================================>                   (72 + 41) / 113][Stage 190:=======================================>             (84 + 29) / 113][Stage 190:===========================================>         (93 + 20) / 113][Stage 190:=================================================>   (106 + 7) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===================================>                 (77 + 37) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:=============================================>       (98 + 16) / 114][Stage 191:==============================================>     (102 + 12) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.27786682 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391164252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===============================>                     (71 + 49) / 120][Stage 192:==========================================>          (97 + 23) / 120][Stage 192:==================================================>  (114 + 6) / 120][Stage 192:=====================================================(120 + 0) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:===============================>                     (71 + 50) / 121][Stage 193:=======================================>             (90 + 31) / 121][Stage 193:=============================================>      (105 + 16) / 121][Stage 193:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.107836164 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384907506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (72 + 43) / 115][Stage 194:==========================================>          (93 + 22) / 115][Stage 194:==================================================>  (109 + 6) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:================================>                    (72 + 44) / 116][Stage 195:===========================================>         (96 + 20) / 116][Stage 195:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.809807861 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342815959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (83 + 32) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:=================================================>   (108 + 7) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:======================================>              (85 + 31) / 116][Stage 197:=========================================>           (91 + 25) / 116][Stage 197:=============================================>      (102 + 14) / 116][Stage 197:=================================================>   (109 + 7) / 116][Stage 197:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.263577059 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464882663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (81 + 34) / 115][Stage 198:=======================================>             (86 + 29) / 115][Stage 198:===========================================>         (95 + 20) / 115][Stage 198:===============================================>    (104 + 11) / 115][Stage 198:===================================================> (112 + 3) / 115]                                                                                [Stage 199:======================================>              (85 + 31) / 116][Stage 199:============================================>        (97 + 19) / 116][Stage 199:==============================================>     (103 + 13) / 116][Stage 199:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.933992811 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399301383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:===========================>                         (63 + 58) / 121][Stage 200:=================================>                   (77 + 44) / 121][Stage 200:==========================================>         (100 + 21) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (68 + 54) / 122][Stage 201:===================================>                 (82 + 40) / 122][Stage 201:===========================================>        (102 + 20) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.000117812 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.926s
user	11m27.092s
sys	0m28.568s
