Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 05:20:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:20:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:20:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:20:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 05:20:58 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 05:21:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522052058-0418).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.373266674 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===================>                                   (40 + 75) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 12.850056624 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.904991844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (44 + 77) / 121][Stage 2:========================>                              (54 + 67) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:==============================>                        (67 + 54) / 121][Stage 2:===================================>                   (79 + 42) / 121][Stage 2:=========================================>             (92 + 29) / 121][Stage 2:================================================>     (108 + 13) / 121][Stage 2:=====================================================> (117 + 4) / 121]                                                                                [Stage 3:===========================>                           (61 + 61) / 122][Stage 3:============================>                          (63 + 59) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:=================================>                     (75 + 47) / 122][Stage 3:====================================>                  (82 + 40) / 122][Stage 3:============================================>         (100 + 22) / 122][Stage 3:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.909123795 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.604854775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:====================================>                  (77 + 38) / 115][Stage 4:=======================================>               (83 + 32) / 115][Stage 4:============================================>          (94 + 21) / 115][Stage 4:==============================================>        (98 + 17) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:======================================>                (82 + 34) / 116][Stage 5:========================================>              (86 + 30) / 116][Stage 5:==============================================>        (98 + 18) / 116][Stage 5:================================================>     (104 + 12) / 116][Stage 5:==================================================>    (107 + 9) / 116][Stage 5:=====================================================> (112 + 4) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.48704631 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.756218364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=======================>                               (51 + 70) / 121][Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:==================================>                    (75 + 46) / 121][Stage 6:========================================>              (90 + 31) / 121][Stage 6:=============================================>        (101 + 20) / 121][Stage 6:===================================================>   (114 + 7) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:==============================>                        (67 + 55) / 122][Stage 7:==================================>                    (77 + 45) / 122][Stage 7:========================================>              (89 + 33) / 122][Stage 7:============================================>          (98 + 24) / 122][Stage 7:=====================================================> (118 + 4) / 122][Stage 7:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.400189371 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.675268369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:=============================>                         (65 + 56) / 121][Stage 8:===================================>                   (79 + 42) / 121][Stage 8:============================================>          (97 + 24) / 121][Stage 8:===============================================>      (107 + 14) / 121][Stage 8:=====================================================> (118 + 3) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:================================>                      (73 + 49) / 122][Stage 9:=======================================>               (88 + 34) / 122][Stage 9:==============================================>       (106 + 16) / 122][Stage 9:===================================================>   (114 + 8) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.411292292 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.592368125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:===============================>                      (71 + 49) / 120][Stage 10:======================================>               (86 + 34) / 120][Stage 10:=============================================>       (104 + 16) / 120][Stage 10:===================================================>  (114 + 6) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (66 + 55) / 121][Stage 11:====================================>                 (82 + 39) / 121][Stage 11:===========================================>          (97 + 24) / 121][Stage 11:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.731316344 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.558907715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:===================================>                  (78 + 40) / 118][Stage 12:=======================================>              (87 + 31) / 118][Stage 12:============================================>         (98 + 20) / 118][Stage 12:================================================>    (107 + 11) / 118][Stage 12:==================================================>   (111 + 7) / 118][Stage 12:====================================================> (114 + 4) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:==================================>                   (76 + 43) / 119][Stage 13:========================================>             (90 + 29) / 119][Stage 13:==============================================>      (104 + 15) / 119][Stage 13:================================================>    (109 + 10) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.143935849 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566944706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:============================>                         (63 + 57) / 120][Stage 14:===================================>                  (79 + 41) / 120][Stage 14:============================================>         (99 + 21) / 120][Stage 14:================================================>    (110 + 10) / 120][Stage 14:===================================================>  (114 + 6) / 120]                                                                                [Stage 15:===========================>                          (62 + 59) / 121][Stage 15:============================>                         (64 + 57) / 121][Stage 15:===================================>                  (80 + 41) / 121][Stage 15:==========================================>           (96 + 25) / 121][Stage 15:===============================================>     (109 + 12) / 121][Stage 15:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.095250738 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573728613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:===========================>                          (61 + 60) / 121][Stage 16:==============================>                       (68 + 53) / 121][Stage 16:========================================>             (90 + 31) / 121][Stage 16:=============================================>       (105 + 16) / 121][Stage 16:=================================================>    (112 + 9) / 121][Stage 16:=====================================================>(120 + 1) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:============================>                         (64 + 58) / 122][Stage 17:================================>                     (74 + 48) / 122][Stage 17:===========================================>          (98 + 24) / 122][Stage 17:===================================================>  (116 + 6) / 122][Stage 17:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.179484765 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497841458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:=================================>                    (73 + 45) / 118][Stage 18:====================================>                 (80 + 38) / 118][Stage 18:=============================================>        (99 + 19) / 118][Stage 18:===================================================>  (113 + 5) / 118][Stage 18:=====================================================>(117 + 1) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:==================================>                   (77 + 42) / 119][Stage 19:========================================>             (89 + 30) / 119][Stage 19:===============================================>     (107 + 12) / 119][Stage 19:===================================================>  (114 + 5) / 119][Stage 19:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.635023985 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485679109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==============================>                       (64 + 51) / 115][Stage 20:=================================>                    (71 + 44) / 115][Stage 20:==========================================>           (90 + 25) / 115][Stage 20:=================================================>    (106 + 9) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:=================================>                    (72 + 44) / 116][Stage 21:=======================================>              (85 + 31) / 116][Stage 21:=============================================>        (97 + 19) / 116][Stage 21:==================================================>   (108 + 8) / 116][Stage 21:==================================================>   (109 + 7) / 116][Stage 21:===================================================>  (111 + 5) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.642066811 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430760176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=====================================>                (79 + 36) / 115][Stage 22:========================================>             (86 + 29) / 115][Stage 22:============================================>         (95 + 20) / 115][Stage 22:=================================================>    (106 + 9) / 115][Stage 22:=====================================================>(113 + 2) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:======================================>               (82 + 34) / 116][Stage 23:========================================>             (86 + 30) / 116][Stage 23:=============================================>        (97 + 19) / 116][Stage 23:==================================================>   (108 + 8) / 116][Stage 23:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.564157488 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537125289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:=============================>                        (65 + 55) / 120][Stage 24:===================================>                  (78 + 42) / 120][Stage 24:=============================================>       (102 + 18) / 120][Stage 24:==================================================>   (113 + 7) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:============================>                         (63 + 58) / 121][Stage 25:=================================>                    (74 + 47) / 121][Stage 25:==========================================>           (95 + 26) / 121][Stage 25:================================================>    (111 + 10) / 121][Stage 25:===================================================>  (116 + 5) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.395843681 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477764219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:======================================>               (84 + 34) / 118][Stage 26:===========================================>          (96 + 22) / 118][Stage 26:==============================================>      (104 + 14) / 118][Stage 26:==================================================>   (111 + 7) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (77 + 42) / 119][Stage 27:=========================================>            (91 + 28) / 119][Stage 27:============================================>        (101 + 18) / 119][Stage 27:================================================>    (108 + 11) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.255983196 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468302701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==============================>                       (65 + 50) / 115][Stage 28:====================================>                 (77 + 38) / 115][Stage 28:=============================================>        (96 + 19) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:================================>                     (70 + 46) / 116][Stage 29:=======================================>              (85 + 31) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.033004138 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433174265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (81 + 34) / 115][Stage 30:======================================>               (83 + 32) / 115][Stage 30:===========================================>          (92 + 23) / 115][Stage 30:===============================================>     (103 + 12) / 115][Stage 30:===================================================>  (109 + 6) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:======================================>               (82 + 34) / 116][Stage 31:=========================================>            (90 + 26) / 116][Stage 31:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.899421797 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456060714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (73 + 45) / 118][Stage 32:====================================>                 (80 + 38) / 118][Stage 32:===========================================>          (95 + 23) / 118][Stage 32:===============================================>     (106 + 12) / 118][Stage 32:====================================================> (114 + 4) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:==================================>                   (75 + 44) / 119][Stage 33:=========================================>            (92 + 27) / 119][Stage 33:===============================================>     (107 + 12) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.43237673 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484723045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:=============================>                        (61 + 52) / 113][Stage 34:=================================>                    (70 + 43) / 113][Stage 34:===========================================>          (91 + 22) / 113][Stage 34:===================================================>  (107 + 6) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:=============================>                        (62 + 52) / 114][Stage 35:====================================>                 (76 + 38) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.3890021 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45250332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:==================================>                   (75 + 43) / 118][Stage 36:======================================>               (84 + 34) / 118][Stage 36:============================================>         (98 + 20) / 118][Stage 36:==================================================>   (110 + 8) / 118]                                                                                [Stage 37:==================================>                   (75 + 44) / 119][Stage 37:====================================>                 (80 + 39) / 119][Stage 37:=============================================>       (102 + 17) / 119][Stage 37:================================================>    (109 + 10) / 119][Stage 37:===================================================>  (113 + 6) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.833460008 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452080338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:>                                                       (0 + 0) / 118][Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (76 + 42) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:=======================================>              (86 + 32) / 118][Stage 38:=============================================>       (102 + 16) / 118][Stage 38:===================================================>  (112 + 6) / 118][Stage 38:====================================================> (115 + 3) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:======================================>               (84 + 35) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:============================================>        (101 + 18) / 119][Stage 39:================================================>    (108 + 11) / 119][Stage 39:==================================================>   (111 + 8) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.150600289 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482729597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:============================>                         (63 + 57) / 120][Stage 40:================================>                     (72 + 48) / 120][Stage 40:============================================>        (100 + 20) / 120][Stage 40:===================================================>  (115 + 5) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:==================================>                   (77 + 44) / 121][Stage 41:==========================================>           (96 + 25) / 121][Stage 41:==================================================>   (113 + 8) / 121][Stage 41:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.593963114 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4834151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:=============================>                        (62 + 51) / 113][Stage 42:====================================>                 (77 + 36) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:======================================>               (81 + 33) / 114][Stage 43:===============================================>     (102 + 12) / 114][Stage 43:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.174220842 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405901618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:======================================>               (83 + 32) / 115][Stage 44:=============================================>        (96 + 19) / 115][Stage 44:==================================================>   (108 + 7) / 115]                                                                                [Stage 45:=======================================>              (85 + 31) / 116][Stage 45:==============================================>       (99 + 17) / 116][Stage 45:====================================================> (113 + 3) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.687607149 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53254385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:================================>                     (67 + 46) / 113][Stage 46:======================================>               (80 + 33) / 113][Stage 46:=============================================>        (95 + 18) / 113][Stage 46:====================================================> (109 + 4) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:================================>                     (68 + 46) / 114][Stage 47:========================================>             (86 + 28) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.46757222 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448826845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===============================>                      (68 + 47) / 115][Stage 48:=======================================>              (85 + 30) / 115][Stage 48:=============================================>        (97 + 18) / 115][Stage 48:===================================================>  (109 + 6) / 115][Stage 48:====================================================> (112 + 3) / 115]                                                                                [Stage 49:===================================>                  (77 + 39) / 116][Stage 49:==========================================>           (92 + 24) / 116][Stage 49:=============================================>       (100 + 16) / 116][Stage 49:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.028848874 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417330282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (71 + 42) / 113][Stage 50:========================================>             (84 + 29) / 113][Stage 50:===========================================>          (91 + 22) / 113][Stage 50:=================================================>    (104 + 9) / 113][Stage 50:=====================================================>(111 + 2) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:=====================================>                (80 + 34) / 114][Stage 51:==========================================>           (89 + 25) / 114][Stage 51:=============================================>        (96 + 18) / 114][Stage 51:================================================>    (104 + 10) / 114][Stage 51:==================================================>   (107 + 7) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.508134677 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471043251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (68 + 53) / 121][Stage 52:========================================>             (90 + 31) / 121][Stage 52:=================================================>    (112 + 9) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:================================>                     (73 + 49) / 122][Stage 53:======================================>               (88 + 34) / 122][Stage 53:===============================================>     (110 + 12) / 122][Stage 53:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.288695063 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394288093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 38) / 113][Stage 54:========================================>             (84 + 29) / 113][Stage 54:=============================================>        (95 + 18) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:===================================================>  (108 + 5) / 113][Stage 54:=====================================================>(111 + 2) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:====================================>                 (77 + 37) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.742753047 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431081296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (60 + 53) / 113][Stage 56:===============================>                      (65 + 48) / 113][Stage 56:====================================>                 (77 + 36) / 113][Stage 56:===============================================>      (99 + 14) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (61 + 53) / 114][Stage 57:===============================>                      (67 + 47) / 114][Stage 57:=======================================>              (83 + 31) / 114][Stage 57:=============================================>        (97 + 17) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.017384313 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418606487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:====================================>                 (79 + 39) / 118][Stage 58:=========================================>            (91 + 27) / 118][Stage 58:==================================================>   (111 + 7) / 118][Stage 58:=====================================================>(117 + 1) / 118]                                                                                [Stage 59:=================================>                    (74 + 45) / 119][Stage 59:======================================>               (85 + 34) / 119][Stage 59:=============================================>       (103 + 16) / 119][Stage 59:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.301630551 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457859759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:==============================>                       (67 + 53) / 120][Stage 60:=====================================>                (84 + 36) / 120][Stage 60:==============================================>      (106 + 14) / 120][Stage 60:====================================================> (117 + 3) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:=============================>                        (66 + 55) / 121][Stage 61:====================================>                 (81 + 40) / 121][Stage 61:===========================================>         (100 + 21) / 121][Stage 61:==================================================>   (114 + 7) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.583356965 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474970665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (60 + 53) / 113][Stage 62:================================>                     (69 + 44) / 113][Stage 62:=========================================>            (86 + 27) / 113][Stage 62:===============================================>     (101 + 12) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:==============================>                       (65 + 49) / 114][Stage 63:=======================================>              (83 + 31) / 114][Stage 63:===============================================>     (102 + 12) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.490454063 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397524764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:===================================>                  (77 + 41) / 118][Stage 64:========================================>             (88 + 30) / 118][Stage 64:==============================================>      (104 + 14) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:===================================>                  (78 + 41) / 119][Stage 65:==========================================>           (94 + 25) / 119][Stage 65:================================================>    (108 + 11) / 119][Stage 65:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.443282499 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53807987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:>                                                       (0 + 0) / 113][Stage 66:===========================>                          (58 + 55) / 113][Stage 66:==============================>                       (63 + 50) / 113][Stage 66:=======================================>              (82 + 31) / 113][Stage 66:==============================================>       (97 + 16) / 113][Stage 66:==================================================>   (106 + 7) / 113]                                                                                [Stage 67:==============================>                       (64 + 50) / 114][Stage 67:====================================>                 (78 + 36) / 114][Stage 67:=============================================>        (97 + 17) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.238234581 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458737783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:===========================>                          (62 + 58) / 120][Stage 68:================================>                     (73 + 47) / 120][Stage 68:============================================>         (99 + 21) / 120][Stage 68:===================================================>  (114 + 6) / 120]                                                                                [Stage 69:=============================>                        (66 + 55) / 121][Stage 69:==================================>                   (77 + 44) / 121][Stage 69:==========================================>           (96 + 25) / 121][Stage 69:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.08121017 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473982741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:===============================>                      (71 + 49) / 120][Stage 70:==========================================>           (94 + 26) / 120][Stage 70:==================================================>   (112 + 8) / 120]                                                                                [Stage 71:===========================>                          (62 + 59) / 121][Stage 71:==================================>                   (77 + 44) / 121][Stage 71:==========================================>           (96 + 25) / 121][Stage 71:==================================================>   (114 + 7) / 121][Stage 71:====================================================> (118 + 3) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.211902043 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418195405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===============================>                      (68 + 47) / 115][Stage 72:======================================>               (81 + 34) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:==================================================>   (108 + 7) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:==================================>                   (75 + 41) / 116][Stage 73:=========================================>            (89 + 27) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:=====================================================>(114 + 2) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.800132386 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40664334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (60 + 53) / 113][Stage 74:==================================>                   (72 + 41) / 113][Stage 74:============================================>         (94 + 19) / 113][Stage 74:=================================================>    (104 + 9) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:===============================>                      (67 + 47) / 114][Stage 75:======================================>               (81 + 33) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.43440118 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411681059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:=================================>                    (70 + 43) / 113][Stage 76:========================================>             (85 + 28) / 113][Stage 76:==============================================>      (100 + 13) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:===================================>                  (74 + 40) / 114][Stage 77:=============================================>        (97 + 17) / 114][Stage 77:===================================================>  (108 + 6) / 114][Stage 77:=====================================================>(112 + 2) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.63019958 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3707409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:========================================>             (86 + 29) / 115][Stage 78:==============================================>       (98 + 17) / 115][Stage 78:===============================================>     (103 + 12) / 115][Stage 78:====================================================> (112 + 3) / 115]                                                                                [Stage 79:========================================>             (88 + 28) / 116][Stage 79:==============================================>       (99 + 17) / 116][Stage 79:===================================================>  (110 + 6) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.082673452 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425327032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (61 + 60) / 121][Stage 80:================================>                     (73 + 48) / 121][Stage 80:========================================>             (90 + 31) / 121][Stage 80:================================================>    (111 + 10) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:==================================>                   (77 + 45) / 122][Stage 81:===========================================>         (101 + 21) / 122][Stage 81:==================================================>   (115 + 7) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.291281602 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408074125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==================================>                   (73 + 42) / 115][Stage 82:========================================>             (86 + 29) / 115][Stage 82:==============================================>       (98 + 17) / 115][Stage 82:===================================================>  (109 + 6) / 115]                                                                                [Stage 83:==============================>                       (65 + 51) / 116][Stage 83:=================================>                    (73 + 43) / 116][Stage 83:==============================================>       (99 + 17) / 116][Stage 83:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.758441732 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397280962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (66 + 49) / 115][Stage 84:====================================>                 (77 + 38) / 115][Stage 84:========================================>             (86 + 29) / 115][Stage 84:===============================================>     (104 + 11) / 115][Stage 84:====================================================> (111 + 4) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:====================================>                 (79 + 37) / 116][Stage 85:===========================================>          (94 + 22) / 116][Stage 85:================================================>    (106 + 10) / 116][Stage 85:=====================================================>(114 + 2) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.326210236 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396200358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (73 + 42) / 115][Stage 86:========================================>             (87 + 28) / 115][Stage 86:==============================================>       (98 + 17) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=================================>                    (72 + 44) / 116][Stage 87:========================================>             (86 + 30) / 116][Stage 87:===============================================>     (105 + 11) / 116][Stage 87:====================================================> (112 + 4) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.227667932 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387658925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:==================================>                   (75 + 43) / 118][Stage 88:========================================>             (89 + 29) / 118][Stage 88:===============================================>     (105 + 13) / 118][Stage 88:=====================================================>(116 + 2) / 118]                                                                                [Stage 89:=================================>                    (73 + 46) / 119][Stage 89:==================================>                   (75 + 44) / 119][Stage 89:=======================================>              (86 + 33) / 119][Stage 89:=================================================>    (110 + 9) / 119][Stage 89:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.341190173 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436233774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:============================>                         (63 + 57) / 120][Stage 90:====================================>                 (80 + 40) / 120][Stage 90:=============================================>       (104 + 16) / 120][Stage 90:=====================================================>(118 + 2) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:==============================>                       (68 + 53) / 121][Stage 91:========================================>             (90 + 31) / 121][Stage 91:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.384971183 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38643976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:==================================>                   (75 + 43) / 118][Stage 92:=========================================>            (90 + 28) / 118][Stage 92:===============================================>     (105 + 13) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:=====================================>                (83 + 36) / 119][Stage 93:=============================================>       (103 + 16) / 119][Stage 93:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.916203981 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373765571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (73 + 45) / 118][Stage 94:=====================================>                (82 + 36) / 118][Stage 94:=============================================>        (99 + 19) / 118][Stage 94:=================================================>    (109 + 9) / 118][Stage 94:=====================================================>(117 + 1) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:==================================>                   (77 + 42) / 119][Stage 95:==========================================>           (93 + 26) / 119][Stage 95:================================================>    (108 + 11) / 119][Stage 95:====================================================> (116 + 3) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.424140533 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375692299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (75 + 43) / 118][Stage 96:=======================================>              (86 + 32) / 118][Stage 96:============================================>         (98 + 20) / 118][Stage 96:================================================>    (108 + 10) / 118][Stage 96:=====================================================>(116 + 2) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:==================================>                   (77 + 42) / 119][Stage 97:==========================================>           (93 + 26) / 119][Stage 97:==============================================>      (105 + 14) / 119][Stage 97:====================================================> (116 + 3) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.951237898 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393081646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (72 + 43) / 115][Stage 98:===========================================>          (92 + 23) / 115][Stage 98:===============================================>     (103 + 12) / 115][Stage 98:====================================================> (112 + 3) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:===============================>                      (67 + 49) / 116][Stage 99:==================================>                   (75 + 41) / 116][Stage 99:==============================================>      (101 + 15) / 116][Stage 99:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.970868752 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378603029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (76 + 37) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:==============================================>     (100 + 13) / 113][Stage 100:===================================================> (110 + 3) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:==================================>                  (75 + 39) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:================================================>    (105 + 9) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.017032571 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406384077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:=================================>                   (71 + 42) / 113][Stage 102:============================================>        (94 + 19) / 113][Stage 102:=================================================>   (105 + 8) / 113][Stage 102:===================================================> (110 + 3) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:====================================>                (78 + 36) / 114][Stage 103:==============================================>     (102 + 12) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.577797187 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43025077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (64 + 56) / 120][Stage 104:=================================>                   (75 + 45) / 120][Stage 104:======================================>              (88 + 32) / 120][Stage 104:=================================================>   (113 + 7) / 120]                                                                                [Stage 105:===========================>                         (63 + 58) / 121][Stage 105:===================================>                 (80 + 41) / 121][Stage 105:===========================================>        (101 + 20) / 121][Stage 105:=================================================>   (114 + 7) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.413808889 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409688549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:============================>                        (64 + 57) / 121][Stage 106:================================>                    (74 + 47) / 121][Stage 106:==========================================>          (96 + 25) / 121][Stage 106:=================================================>   (113 + 8) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:===========================>                         (63 + 59) / 122][Stage 107:=================================>                   (76 + 46) / 122][Stage 107:=======================================>             (91 + 31) / 122][Stage 107:===============================================>    (111 + 11) / 122][Stage 107:===================================================> (119 + 3) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.91408695 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407526421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:=============================>                       (62 + 51) / 113][Stage 108:===================================>                 (75 + 38) / 113][Stage 108:=============================================>       (97 + 16) / 113][Stage 108:================================================>    (104 + 9) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:============================>                        (62 + 52) / 114][Stage 109:=================================>                   (73 + 41) / 114][Stage 109:=========================================>           (90 + 24) / 114][Stage 109:=================================================>   (107 + 7) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.53026196 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403206425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 60) / 121][Stage 110:=================================>                   (76 + 45) / 121][Stage 110:==========================================>          (96 + 25) / 121][Stage 110:=================================================>   (113 + 8) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (67 + 55) / 122][Stage 111:====================================>                (84 + 38) / 122][Stage 111:============================================>       (104 + 18) / 122][Stage 111:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.256735298 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378552788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==============================>                      (66 + 49) / 115][Stage 112:===================================>                 (77 + 38) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:===============================================>    (105 + 10) / 115][Stage 112:==================================================>  (110 + 5) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:================================>                    (71 + 45) / 116][Stage 113:=====================================>               (81 + 35) / 116][Stage 113:============================================>        (97 + 19) / 116][Stage 113:=================================================>   (108 + 8) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.116515572 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373422089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:================================>                    (73 + 45) / 118][Stage 114:=====================================>               (83 + 35) / 118][Stage 114:============================================>       (101 + 17) / 118][Stage 114:====================================================>(116 + 2) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:======================================>              (86 + 33) / 119][Stage 115:=============================================>      (103 + 16) / 119][Stage 115:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.146812109 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363738631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (73 + 45) / 118][Stage 116:====================================>                (82 + 36) / 118][Stage 116:============================================>       (100 + 18) / 118][Stage 116:===================================================> (115 + 3) / 118]                                                                                [Stage 117:=================================>                   (75 + 44) / 119][Stage 117:=======================================>             (88 + 31) / 119][Stage 117:============================================>       (101 + 18) / 119][Stage 117:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.254714587 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398629886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:===========================>                         (62 + 59) / 121][Stage 118:====================================>                (84 + 37) / 121][Stage 118:==========================================>          (97 + 24) / 121][Stage 118:==================================================>  (116 + 5) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:============================>                        (66 + 56) / 122][Stage 119:===================================>                 (82 + 40) / 122][Stage 119:=============================================>      (107 + 15) / 122][Stage 119:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.35353997 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500821163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 61) / 121][Stage 120:============================>                        (64 + 57) / 121][Stage 120:====================================>                (84 + 37) / 121][Stage 120:===========================================>        (101 + 20) / 121][Stage 120:===================================================> (117 + 4) / 121]                                                                                [Stage 121:============================>                        (65 + 57) / 122][Stage 121:===================================>                 (81 + 41) / 122][Stage 121:==========================================>         (100 + 22) / 122][Stage 121:===================================================> (118 + 4) / 122][Stage 121:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.532497703 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363597131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:==================================>                  (77 + 41) / 118][Stage 122:=======================================>             (87 + 31) / 118][Stage 122:===============================================>    (108 + 10) / 118][Stage 122:====================================================>(117 + 1) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:===================================>                 (79 + 40) / 119][Stage 123:=======================================>             (89 + 30) / 119][Stage 123:==============================================>     (107 + 12) / 119][Stage 123:===================================================> (115 + 4) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.500491639 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400807915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:>                                                      (0 + 0) / 113][Stage 124:===========================>                         (59 + 54) / 113][Stage 124:===============================>                     (68 + 45) / 113][Stage 124:========================================>            (86 + 27) / 113][Stage 124:==============================================>     (102 + 11) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (62 + 52) / 114][Stage 125:=====================================>               (81 + 33) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:=================================================>   (107 + 7) / 114][Stage 125:===================================================> (110 + 4) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.416916653 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3610749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (74 + 39) / 113][Stage 126:========================================>            (86 + 27) / 113][Stage 126:=============================================>       (98 + 15) / 113][Stage 126:==================================================>  (108 + 5) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:====================================>                (78 + 36) / 114][Stage 127:=========================================>           (89 + 25) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:==================================================>  (109 + 5) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.181908802 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412081058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (62 + 58) / 120][Stage 128:===============================>                     (71 + 49) / 120][Stage 128:=========================================>           (95 + 25) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:============================>                        (65 + 56) / 121][Stage 129:===================================>                 (81 + 40) / 121][Stage 129:===========================================>        (101 + 20) / 121][Stage 129:====================================================>(119 + 2) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.294504337 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392842504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (62 + 58) / 120][Stage 130:===============================>                     (72 + 48) / 120][Stage 130:===========================================>         (98 + 22) / 120][Stage 130:===================================================> (116 + 4) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:==============================>                      (69 + 52) / 121][Stage 131:=======================================>             (90 + 31) / 121][Stage 131:===============================================>    (111 + 10) / 121][Stage 131:===================================================> (117 + 4) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.437477111 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335609661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (82 + 33) / 115][Stage 132:=======================================>             (85 + 30) / 115][Stage 132:=============================================>      (100 + 15) / 115][Stage 132:==================================================>  (110 + 5) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=====================================>               (83 + 33) / 116][Stage 133:========================================>            (89 + 27) / 116][Stage 133:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.688112005 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380460515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (71 + 44) / 115][Stage 134:======================================>              (84 + 31) / 115][Stage 134:=============================================>       (98 + 17) / 115][Stage 134:===================================================> (112 + 3) / 115]                                                                                [Stage 135:=================================>                   (73 + 43) / 116][Stage 135:========================================>            (89 + 27) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.040865812 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35334137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==================================>                  (73 + 40) / 113][Stage 136:=======================================>             (85 + 28) / 113][Stage 136:=============================================>       (96 + 17) / 113][Stage 136:==================================================>  (107 + 6) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:=======================================>             (86 + 28) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:=================================================>   (106 + 8) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.053851102 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380968198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (63 + 50) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:=================================================>   (106 + 7) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:=======================================>             (84 + 30) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.141165219 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395782475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:============================>                        (65 + 55) / 120][Stage 140:==================================>                  (78 + 42) / 120][Stage 140:==========================================>          (97 + 23) / 120][Stage 140:=================================================>   (112 + 8) / 120][Stage 140:====================================================>(119 + 1) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:==============================>                      (70 + 51) / 121][Stage 141:======================================>              (88 + 33) / 121][Stage 141:===============================================>    (111 + 10) / 121][Stage 141:===================================================> (118 + 3) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.510415751 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359822055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (72 + 46) / 118][Stage 142:==================================>                  (76 + 42) / 118][Stage 142:=========================================>           (92 + 26) / 118][Stage 142:=================================================>   (111 + 7) / 118][Stage 142:====================================================>(117 + 1) / 118]                                                                                [Stage 143:================================>                    (74 + 45) / 119][Stage 143:====================================>                (83 + 36) / 119][Stage 143:===============================================>    (109 + 10) / 119][Stage 143:====================================================>(117 + 2) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.447488146 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396123936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:============================>                        (66 + 55) / 121][Stage 144:========================================>            (92 + 29) / 121][Stage 144:===============================================>    (110 + 11) / 121]                                                                                [Stage 145:==========================>                          (62 + 60) / 122][Stage 145:==============================>                      (70 + 52) / 122][Stage 145:======================================>              (88 + 34) / 122][Stage 145:=================================================>   (115 + 7) / 122][Stage 145:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.329494507 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408388163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:============================>                        (65 + 56) / 121][Stage 146:==================================>                  (78 + 43) / 121][Stage 146:===========================================>        (101 + 20) / 121][Stage 146:==================================================>  (116 + 5) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:===========================>                         (64 + 58) / 122][Stage 147:================================>                    (75 + 47) / 122][Stage 147:===========================================>        (102 + 20) / 122][Stage 147:====================================================>(120 + 2) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.794011527 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349201114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=====================================>               (80 + 33) / 113][Stage 148:========================================>            (87 + 26) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:===================================>                 (77 + 37) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:=============================================>      (100 + 14) / 114][Stage 149:==================================================>  (108 + 6) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.730834422 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370492796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=============================>                       (65 + 50) / 115][Stage 150:==================================>                  (75 + 40) / 115][Stage 150:==========================================>          (92 + 23) / 115][Stage 150:=================================================>   (107 + 8) / 115]                                                                                [Stage 151:===================================>                 (77 + 39) / 116][Stage 151:==========================================>          (92 + 24) / 116][Stage 151:===============================================>    (105 + 11) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.859355263 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373555968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==================================>                  (74 + 39) / 113][Stage 152:======================================>              (82 + 31) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:=================================================>   (106 + 7) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:=====================================>               (80 + 34) / 114][Stage 153:========================================>            (88 + 26) / 114][Stage 153:==============================================>      (99 + 15) / 114][Stage 153:==================================================>  (108 + 6) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.260586678 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397809862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (61 + 59) / 120][Stage 154:=============================>                       (67 + 53) / 120][Stage 154:======================================>              (88 + 32) / 120][Stage 154:===================================================> (116 + 4) / 120]                                                                                [Stage 155:===========================>                         (63 + 58) / 121][Stage 155:================================>                    (74 + 47) / 121][Stage 155:==========================================>          (96 + 25) / 121][Stage 155:==================================================>  (116 + 5) / 121][Stage 155:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.355204184 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379066649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:==============================>                      (64 + 49) / 113][Stage 156:======================================>              (82 + 31) / 113][Stage 156:===============================================>    (103 + 10) / 113][Stage 156:==================================================>  (108 + 5) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:===============================>                     (67 + 47) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.282034639 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347039325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (79 + 34) / 113][Stage 158:=========================================>           (89 + 24) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:===================================================> (110 + 3) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===================================>                 (76 + 38) / 114][Stage 159:=========================================>           (90 + 24) / 114][Stage 159:=============================================>       (97 + 17) / 114][Stage 159:==================================================>  (109 + 5) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.222551509 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498550932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (61 + 60) / 121][Stage 160:==============================>                      (70 + 51) / 121][Stage 160:=========================================>           (94 + 27) / 121][Stage 160:==============================================>     (108 + 13) / 121]                                                                                [Stage 161:==========================>                          (62 + 60) / 122][Stage 161:================================>                    (74 + 48) / 122][Stage 161:========================================>            (94 + 28) / 122][Stage 161:==============================================>     (110 + 12) / 122][Stage 161:===================================================> (119 + 3) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.501098087 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37950337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (75 + 40) / 115][Stage 162:===========================================>         (95 + 20) / 115][Stage 162:===============================================>    (104 + 11) / 115]                                                                                [Stage 163:================================>                    (72 + 44) / 116][Stage 163:========================================>            (88 + 28) / 116][Stage 163:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.561867726 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392134019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:=============================>                       (68 + 53) / 121][Stage 164:====================================>                (84 + 37) / 121][Stage 164:============================================>       (104 + 17) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:==========================>                          (61 + 61) / 122][Stage 165:===========================>                         (64 + 58) / 122][Stage 165:=================================>                   (77 + 45) / 122][Stage 165:=============================================>      (106 + 16) / 122][Stage 165:===================================================> (118 + 4) / 122][Stage 165:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.512355009 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347125765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:=========================================>           (88 + 25) / 113][Stage 166:==============================================>      (99 + 14) / 113][Stage 166:=================================================>   (105 + 8) / 113][Stage 166:==================================================>  (108 + 5) / 113]                                                                                [Stage 167:====================================>                (79 + 35) / 114][Stage 167:==========================================>          (91 + 23) / 114][Stage 167:=============================================>       (98 + 16) / 114][Stage 167:=================================================>   (107 + 7) / 114][Stage 167:==================================================>  (109 + 5) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.078822837 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38967793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=================================>                   (73 + 42) / 115][Stage 168:========================================>            (88 + 27) / 115][Stage 168:===========================================>         (94 + 21) / 115][Stage 168:=================================================>   (108 + 7) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:================================>                    (71 + 45) / 116][Stage 169:====================================>                (80 + 36) / 116][Stage 169:==========================================>          (94 + 22) / 116][Stage 169:================================================>    (107 + 9) / 116][Stage 169:==================================================>  (110 + 6) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.390860519 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425146267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:===================================>                 (80 + 40) / 120][Stage 170:=========================================>           (95 + 25) / 120][Stage 170:====================================================>(118 + 2) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:==============================>                      (70 + 51) / 121][Stage 171:==================================>                  (79 + 42) / 121][Stage 171:=============================================>      (105 + 16) / 121][Stage 171:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.30166225 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391527197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (64 + 57) / 121][Stage 172:==================================>                  (79 + 42) / 121][Stage 172:=============================================>      (105 + 16) / 121][Stage 172:====================================================>(119 + 2) / 121]                                                                                [Stage 173:==========================>                          (62 + 60) / 122][Stage 173:=================================>                   (76 + 46) / 122][Stage 173:======================================>              (88 + 34) / 122][Stage 173:=================================================>   (113 + 9) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.423775243 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=104,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343890552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===================================>                 (75 + 38) / 113][Stage 174:=========================================>           (89 + 24) / 113][Stage 174:==============================================>     (102 + 11) / 113][Stage 174:==================================================>  (107 + 6) / 113][Stage 174:==================================================>  (108 + 5) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:==================================>                  (74 + 40) / 114][Stage 175:========================================>            (87 + 27) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:==================================================>  (109 + 5) / 114][Stage 175:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.278132137 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355903438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (75 + 43) / 118][Stage 176:=======================================>             (87 + 31) / 118][Stage 176:==============================================>     (106 + 12) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:===================================>                 (79 + 40) / 119][Stage 177:=========================================>           (94 + 25) / 119][Stage 177:===============================================>    (108 + 11) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.049828573 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391526857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:============================>                        (64 + 57) / 121][Stage 178:====================================>                (84 + 37) / 121][Stage 178:==============================================>     (109 + 12) / 121][Stage 178:====================================================>(119 + 2) / 121]                                                                                [Stage 179:==========================>                          (62 + 60) / 122][Stage 179:==============================>                      (71 + 51) / 122][Stage 179:=======================================>             (91 + 31) / 122][Stage 179:==============================================>     (110 + 12) / 122][Stage 179:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.424679984 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=212", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=212,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416896295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (64 + 56) / 120][Stage 180:==================================>                  (78 + 42) / 120][Stage 180:=============================================>      (104 + 16) / 120][Stage 180:====================================================>(119 + 1) / 120]                                                                                [Stage 181:==========================>                          (61 + 60) / 121][Stage 181:============================>                        (64 + 57) / 121][Stage 181:====================================>                (83 + 38) / 121][Stage 181:=============================================>      (106 + 15) / 121][Stage 181:====================================================>(119 + 2) / 121][Stage 181:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.432562193 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409483086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===============================>                     (68 + 47) / 115][Stage 182:====================================>                (79 + 36) / 115][Stage 182:==========================================>          (93 + 22) / 115][Stage 182:==================================================>  (109 + 6) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:==============================>                      (67 + 49) / 116][Stage 183:=====================================>               (81 + 35) / 116][Stage 183:==========================================>          (93 + 23) / 116][Stage 183:==============================================>     (104 + 12) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.984245737 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370818596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (72 + 46) / 118][Stage 184:===================================>                 (80 + 38) / 118][Stage 184:========================================>            (90 + 28) / 118][Stage 184:===============================================>    (108 + 10) / 118]                                                                                [Stage 185:================================>                    (74 + 45) / 119][Stage 185:=====================================>               (84 + 35) / 119][Stage 185:===========================================>        (100 + 19) / 119][Stage 185:=================================================>   (111 + 8) / 119][Stage 185:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.111642209 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359771413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==============================>                      (66 + 49) / 115][Stage 186:====================================>                (80 + 35) / 115][Stage 186:===========================================>         (94 + 21) / 115][Stage 186:=================================================>   (107 + 8) / 115]                                                                                [Stage 187:==================================>                  (75 + 41) / 116][Stage 187:========================================>            (89 + 27) / 116][Stage 187:==============================================>     (104 + 12) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.753886184 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341005361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (80 + 35) / 115][Stage 188:=======================================>             (86 + 29) / 115][Stage 188:============================================>        (96 + 19) / 115][Stage 188:===================================================> (111 + 4) / 115]                                                                                [Stage 189:=====================================>               (82 + 34) / 116][Stage 189:==========================================>          (94 + 22) / 116][Stage 189:================================================>    (107 + 9) / 116][Stage 189:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.751994716 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3306866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (80 + 35) / 115][Stage 190:=========================================>           (90 + 25) / 115][Stage 190:===============================================>    (104 + 11) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:======================================>              (84 + 32) / 116][Stage 191:=======================================>             (87 + 29) / 116][Stage 191:=============================================>      (101 + 15) / 116][Stage 191:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.651806127 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357415984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:==================================>                  (77 + 41) / 118][Stage 192:======================================>              (86 + 32) / 118][Stage 192:============================================>       (102 + 16) / 118][Stage 192:===================================================> (114 + 4) / 118]                                                                                [Stage 193:=================================>                   (75 + 44) / 119][Stage 193:======================================>              (87 + 32) / 119][Stage 193:=============================================>      (103 + 16) / 119][Stage 193:==================================================>  (113 + 6) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.522476378 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365044793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:=================================>                   (75 + 43) / 118][Stage 194:=====================================>               (83 + 35) / 118][Stage 194:==========================================>          (94 + 24) / 118][Stage 194:===============================================>    (107 + 11) / 118][Stage 194:====================================================>(116 + 2) / 118]                                                                                [Stage 195:==================================>                  (77 + 42) / 119][Stage 195:======================================>              (87 + 32) / 119][Stage 195:==========================================>          (96 + 23) / 119][Stage 195:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.454025572 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362427743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (79 + 34) / 113][Stage 196:===========================================>         (92 + 21) / 113][Stage 196:================================================>    (104 + 9) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:=====================================>               (80 + 34) / 114][Stage 197:===========================================>         (93 + 21) / 114][Stage 197:=============================================>      (100 + 14) / 114][Stage 197:=================================================>   (106 + 8) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.645947415 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435477706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:==========================>                          (61 + 60) / 121][Stage 198:================================>                    (75 + 46) / 121][Stage 198:==========================================>         (100 + 21) / 121][Stage 198:==================================================>  (115 + 6) / 121]                                                                                [Stage 199:===========================>                         (64 + 58) / 122][Stage 199:=================================>                   (78 + 44) / 122][Stage 199:==========================================>         (100 + 22) / 122][Stage 199:==================================================>  (117 + 5) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.338609704 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347043823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:====================================>                (77 + 36) / 113][Stage 200:=========================================>           (88 + 25) / 113][Stage 200:============================================>        (95 + 18) / 113][Stage 200:===============================================>    (103 + 10) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:==================================>                  (74 + 40) / 114][Stage 201:=======================================>             (85 + 29) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:==================================================>  (108 + 6) / 114][Stage 201:====================================================>(112 + 2) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.635419872 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m31.249s
user	11m55.992s
sys	0m53.656s
