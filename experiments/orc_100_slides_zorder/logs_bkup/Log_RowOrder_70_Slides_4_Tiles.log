Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 09:43:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:43:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:43:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:43:48 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 09:43:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 09:44:00 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522094350-0443).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.462109241 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.692845434 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR   partitionIndex = 176  OR  partitionIndex = 132 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.746447845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (44 + 69) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:====================================>                  (76 + 37) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===============================>                       (65 + 49) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:========================================>              (83 + 31) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.301972902 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  p artitionIndex = 45  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.770468056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (56 + 57) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:====================================>                  (76 + 37) / 113][Stage 4:============================================>          (92 + 21) / 113][Stage 4:===================================================>   (105 + 8) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:===================================================>   (106 + 8) / 114][Stage 5:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.281645767 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.584478227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:================================>                      (70 + 48) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:===================================>                   (77 + 41) / 118][Stage 6:=====================================>                 (81 + 37) / 118][Stage 6:==========================================>            (91 + 27) / 118][Stage 6:================================================>     (105 + 13) / 118][Stage 6:===================================================>   (110 + 8) / 118]                                                                                [Stage 7:================================>                      (71 + 48) / 119][Stage 7:===================================>                   (76 + 43) / 119][Stage 7:======================================>                (84 + 35) / 119][Stage 7:========================================>              (88 + 31) / 119][Stage 7:=============================================>        (100 + 19) / 119][Stage 7:================================================>     (107 + 12) / 119][Stage 7:====================================================>  (113 + 6) / 119][Stage 7:======================================================>(117 + 2) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.686780404 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.63640372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (58 + 62) / 120][Stage 8:===========================>                           (61 + 59) / 120][Stage 8:==============================>                        (67 + 53) / 120][Stage 8:=======================================>               (87 + 33) / 120][Stage 8:=============================================>        (101 + 19) / 120][Stage 8:==================================================>    (111 + 9) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:===============================>                       (69 + 52) / 121][Stage 9:===================================>                   (78 + 43) / 121][Stage 9:========================================>              (90 + 31) / 121][Stage 9:===================================================>   (114 + 7) / 121][Stage 9:======================================================>(119 + 2) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.726818442 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR   partitionIndex = 120  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.624941826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 109)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
-------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  p artitionIndex = 74  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476275307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:======================================>               (82 + 33) / 115][Stage 10:=========================================>            (88 + 27) / 115][Stage 10:==============================================>      (100 + 15) / 115][Stage 10:====================================================> (111 + 4) / 115][Stage 10:====================================================> (112 + 3) / 115]                                                                                [Stage 11:=======================================>              (84 + 32) / 116][Stage 11:===========================================>          (94 + 22) / 116][Stage 11:==================================================>   (108 + 8) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.151139207 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  p artitionIndex = 14  OR  partitionIndex = 15 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44343977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:======================================>               (81 + 34) / 115][Stage 12:=========================================>            (89 + 26) / 115][Stage 12:=============================================>        (97 + 18) / 115][Stage 12:===============================================>     (104 + 11) / 115][Stage 12:===================================================>  (110 + 5) / 115][Stage 12:=====================================================>(113 + 2) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:======================================>               (82 + 34) / 116][Stage 13:=========================================>            (89 + 27) / 116][Stage 13:=============================================>        (98 + 18) / 116][Stage 13:================================================>    (106 + 10) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:====================================================> (113 + 3) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.096854569 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  p artitionIndex = 37  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.612345909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:================================>                     (72 + 49) / 121][Stage 14:====================================>                 (82 + 39) / 121][Stage 14:============================================>        (101 + 20) / 121][Stage 14:==================================================>   (114 + 7) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:================================>                     (73 + 49) / 122][Stage 15:=========================================>            (93 + 29) / 122][Stage 15:================================================>    (111 + 11) / 122][Stage 15:==================================================>   (115 + 7) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.026314992 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47039723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (73 + 45) / 118][Stage 16:====================================>                 (79 + 39) / 118][Stage 16:===========================================>          (95 + 23) / 118][Stage 16:===================================================>  (113 + 5) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:===================================>                  (79 + 40) / 119][Stage 17:===========================================>          (95 + 24) / 119][Stage 17:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.349538913 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458949176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:======================================>               (83 + 32) / 115][Stage 18:===========================================>          (93 + 22) / 115][Stage 18:===============================================>     (103 + 12) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:========================================>             (86 + 30) / 116][Stage 19:============================================>         (96 + 20) / 116][Stage 19:===============================================>     (105 + 11) / 116][Stage 19:=================================================>    (107 + 9) / 116][Stage 19:===================================================>  (111 + 5) / 116][Stage 19:====================================================> (112 + 4) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.825955281 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  p artitionIndex = 99  OR  partitionIndex = 113 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421971826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:======================================>               (82 + 33) / 115][Stage 20:=========================================>            (88 + 27) / 115][Stage 20:=================================================>    (106 + 9) / 115][Stage 20:====================================================> (111 + 4) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:======================================>               (83 + 33) / 116][Stage 21:=========================================>            (89 + 27) / 116][Stage 21:============================================>         (95 + 21) / 116][Stage 21:================================================>    (106 + 10) / 116][Stage 21:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.225395287 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  p artitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475153523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (73 + 45) / 118][Stage 22:=====================================>                (82 + 36) / 118][Stage 22:============================================>         (97 + 21) / 118][Stage 22:==================================================>   (111 + 7) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (74 + 45) / 119][Stage 23:=====================================>                (82 + 37) / 119][Stage 23:==========================================>           (94 + 25) / 119][Stage 23:==============================================>      (104 + 15) / 119][Stage 23:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.712328485 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511850811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:============================>                         (64 + 57) / 121][Stage 24:======================================>               (86 + 35) / 121][Stage 24:============================================>        (101 + 20) / 121][Stage 24:===================================================>  (115 + 6) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:=============================>                        (67 + 55) / 122][Stage 25:====================================>                 (83 + 39) / 122][Stage 25:===========================================>         (101 + 21) / 122][Stage 25:================================================>    (112 + 10) / 122][Stage 25:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.769997655 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR   partitionIndex = 112  OR  partitionIndex = 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495394403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:============================>                         (64 + 56) / 120][Stage 26:==================================>                   (76 + 44) / 120][Stage 26:===========================================>          (97 + 23) / 120][Stage 26:================================================>    (109 + 11) / 120][Stage 26:====================================================> (116 + 4) / 120]                                                                                [Stage 27:===========================>                          (62 + 59) / 121][Stage 27:=================================>                    (75 + 46) / 121][Stage 27:=========================================>            (92 + 29) / 121][Stage 27:==================================================>   (113 + 8) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.718922024 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 205 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469467427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===============================>                      (68 + 47) / 115][Stage 28:======================================>               (83 + 32) / 115][Stage 28:==============================================>       (98 + 17) / 115][Stage 28:==================================================>   (108 + 7) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:==================================>                   (74 + 42) / 116][Stage 29:===========================================>          (93 + 23) / 116][Stage 29:===============================================>     (104 + 12) / 116][Stage 29:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.120767458 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49096809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:===============================>                      (69 + 51) / 120][Stage 30:======================================>               (86 + 34) / 120][Stage 30:=================================================>    (111 + 9) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:================================>                     (73 + 48) / 121][Stage 31:==========================================>           (96 + 25) / 121][Stage 31:===================================================>  (116 + 5) / 121][Stage 31:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.393393743 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116  OR  partitionIndex = 72 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116  OR  partitionIndex = 72 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451038912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:==================================>                   (75 + 43) / 118][Stage 32:=======================================>              (86 + 32) / 118][Stage 32:===========================================>          (95 + 23) / 118][Stage 32:==================================================>   (110 + 8) / 118]                                                                                [Stage 33:=================================>                    (74 + 45) / 119][Stage 33:=====================================>                (83 + 36) / 119][Stage 33:============================================>         (97 + 22) / 119][Stage 33:==============================================>      (104 + 15) / 119][Stage 33:===================================================>  (114 + 5) / 119][Stage 33:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.577818347 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  p artitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469524047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==================================>                   (74 + 41) / 115][Stage 34:===========================================>          (92 + 23) / 115][Stage 34:==================================================>   (108 + 7) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:===============================>                      (67 + 49) / 116][Stage 35:===================================>                  (76 + 40) / 116][Stage 35:==========================================>           (91 + 25) / 116][Stage 35:===============================================>     (105 + 11) / 116][Stage 35:=====================================================>(114 + 2) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.371136097 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522376223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:===========================>                          (62 + 59) / 121][Stage 36:=================================>                    (75 + 46) / 121][Stage 36:===========================================>          (97 + 24) / 121][Stage 36:==================================================>   (113 + 8) / 121]                                                                                [Stage 37:===========================>                          (63 + 59) / 122][Stage 37:===============================>                      (72 + 50) / 122][Stage 37:========================================>             (91 + 31) / 122][Stage 37:==============================================>      (108 + 14) / 122][Stage 37:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.33504215 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR   partitionIndex = 216  OR  partitionIndex = 217 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216  OR  partitionIndex = 217 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442618847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (75 + 43) / 118][Stage 38:==========================================>           (93 + 25) / 118][Stage 38:====================================================> (114 + 4) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:==================================>                   (75 + 44) / 119][Stage 39:=======================================>              (86 + 33) / 119][Stage 39:==============================================>      (104 + 15) / 119][Stage 39:====================================================> (116 + 3) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.448527046 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528884062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:===========================>                          (61 + 59) / 120][Stage 40:====================================>                 (80 + 40) / 120][Stage 40:=============================================>       (104 + 16) / 120][Stage 40:=====================================================>(118 + 2) / 120]                                                                                [Stage 41:=============================>                        (66 + 55) / 121][Stage 41:==================================>                   (77 + 44) / 121][Stage 41:=========================================>            (94 + 27) / 121][Stage 41:===============================================>     (109 + 12) / 121][Stage 41:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.658203245 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR   partitionIndex = 148  OR  partitionIndex = 134 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483371627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:============================>                         (64 + 56) / 120][Stage 42:===================================>                  (78 + 42) / 120][Stage 42:=============================================>       (102 + 18) / 120][Stage 42:===================================================>  (115 + 5) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:===============================>                      (71 + 50) / 121][Stage 43:=====================================>                (83 + 38) / 121][Stage 43:===============================================>     (108 + 13) / 121][Stage 43:==================================================>   (114 + 7) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.761926751 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424992715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==============================>                       (64 + 51) / 115][Stage 44:=================================>                    (72 + 43) / 115][Stage 44:=========================================>            (89 + 26) / 115][Stage 44:===============================================>     (102 + 13) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:================================>                     (70 + 46) / 116][Stage 45:========================================>             (88 + 28) / 116][Stage 45:===============================================>     (105 + 11) / 116][Stage 45:===================================================>  (110 + 6) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.092716581 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413911283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===================================>                  (74 + 39) / 113][Stage 46:========================================>             (85 + 28) / 113][Stage 46:=============================================>        (95 + 18) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:====================================================> (109 + 4) / 113]                                                                                [Stage 47:====================================>                 (76 + 38) / 114][Stage 47:=========================================>            (88 + 26) / 114][Stage 47:==============================================>      (100 + 14) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.459083996 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR   partitionIndex = 8  OR  partitionIndex = 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439398377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (73 + 45) / 118][Stage 48:====================================>                 (79 + 39) / 118][Stage 48:==========================================>           (92 + 26) / 118][Stage 48:===============================================>     (106 + 12) / 118][Stage 48:====================================================> (115 + 3) / 118]                                                                                [Stage 49:==================================>                   (75 + 44) / 119][Stage 49:=====================================>                (82 + 37) / 119][Stage 49:=======================================>              (87 + 32) / 119][Stage 49:==============================================>      (105 + 14) / 119][Stage 49:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.587784396 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR   partitionIndex = 133  OR  partitionIndex = 147 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45398658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:==============================>                       (67 + 53) / 120][Stage 50:====================================>                 (80 + 40) / 120][Stage 50:============================================>         (98 + 22) / 120][Stage 50:====================================================> (116 + 4) / 120]                                                                                [Stage 51:============================>                         (63 + 58) / 121][Stage 51:================================>                     (73 + 48) / 121][Stage 51:=====================================>                (85 + 36) / 121][Stage 51:================================================>    (110 + 11) / 121][Stage 51:=====================================================>(119 + 2) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.712759985 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40641434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:====================================>                 (76 + 37) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:=============================================>        (96 + 17) / 113][Stage 52:==================================================>   (105 + 8) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=====================================>                (80 + 34) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.289363535 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523956608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:===================================>                  (77 + 41) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:=========================================>            (90 + 28) / 118][Stage 54:=============================================>       (101 + 17) / 118][Stage 54:===================================================>  (113 + 5) / 118]                                                                                [Stage 55:==================================>                   (75 + 44) / 119][Stage 55:======================================>               (84 + 35) / 119][Stage 55:==========================================>           (94 + 25) / 119][Stage 55:===============================================>     (107 + 12) / 119][Stage 55:====================================================> (116 + 3) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.809870031 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR   partitionIndex = 166  OR  partitionIndex = 152 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480025258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:================================>                     (73 + 48) / 121][Stage 56:=========================================>            (92 + 29) / 121][Stage 56:===============================================>     (109 + 12) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=================================>                    (75 + 47) / 122][Stage 57:==========================================>           (96 + 26) / 122][Stage 57:==================================================>   (114 + 8) / 122][Stage 57:=====================================================>(120 + 2) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.732999864 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  pa rtitionIndex = 20  OR  partitionIndex = 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400582343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (74 + 44) / 118][Stage 58:========================================>             (89 + 29) / 118][Stage 58:============================================>         (97 + 21) / 118][Stage 58:===================================================>  (113 + 5) / 118]                                                                                [Stage 59:=================================>                    (74 + 45) / 119][Stage 59:====================================>                 (81 + 38) / 119][Stage 59:=========================================>            (91 + 28) / 119][Stage 59:=============================================>       (103 + 16) / 119][Stage 59:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.45721323 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441870865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==============================>                       (64 + 51) / 115][Stage 60:===================================>                  (75 + 40) / 115][Stage 60:========================================>             (87 + 28) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:===================================================>  (110 + 5) / 115][Stage 60:=====================================================>(113 + 2) / 115]                                                                                [Stage 61:=================================>                    (73 + 43) / 116][Stage 61:==========================================>           (92 + 24) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:====================================================> (113 + 3) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.407466443 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  p artitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400470322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:=================================>                    (74 + 44) / 118][Stage 62:=======================================>              (86 + 32) / 118][Stage 62:===============================================>     (105 + 13) / 118][Stage 62:=====================================================>(116 + 2) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:===================================>                  (79 + 40) / 119][Stage 63:========================================>             (90 + 29) / 119][Stage 63:=================================================>    (110 + 9) / 119][Stage 63:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.141089857 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542535002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:===============================>                      (69 + 51) / 120][Stage 64:========================================>             (90 + 30) / 120][Stage 64:===============================================>     (108 + 12) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:=================================>                    (75 + 46) / 121][Stage 65:=======================================>              (89 + 32) / 121][Stage 65:==============================================>      (106 + 15) / 121][Stage 65:===================================================>  (116 + 5) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.818594297 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR   partitionIndex = 192  OR  partitionIndex = 193 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465233154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:============================>                         (63 + 58) / 121][Stage 66:=====================================>                (83 + 38) / 121][Stage 66:================================================>    (111 + 10) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:=============================>                        (66 + 56) / 122][Stage 67:===================================>                  (80 + 42) / 122][Stage 67:===========================================>         (100 + 22) / 122][Stage 67:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.28792399 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428160465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===============================>                      (67 + 48) / 115][Stage 68:====================================>                 (77 + 38) / 115][Stage 68:===========================================>          (92 + 23) / 115][Stage 68:===============================================>     (102 + 13) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:=================================>                    (71 + 45) / 116][Stage 69:========================================>             (86 + 30) / 116][Stage 69:============================================>         (95 + 21) / 116][Stage 69:================================================>    (106 + 10) / 116][Stage 69:====================================================> (113 + 3) / 116][Stage 69:=====================================================>(114 + 2) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.779622835 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  p artitionIndex = 59  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427243402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (60 + 53) / 113][Stage 70:==================================>                   (73 + 40) / 113][Stage 70:============================================>         (94 + 19) / 113][Stage 70:==================================================>   (105 + 8) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (65 + 49) / 114][Stage 71:=======================================>              (83 + 31) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.389139329 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440414901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:===========================>                          (62 + 58) / 120][Stage 72:==============================>                       (68 + 52) / 120][Stage 72:=======================================>              (88 + 32) / 120][Stage 72:===============================================>     (108 + 12) / 120]                                                                                [Stage 73:============================>                         (64 + 57) / 121][Stage 73:===============================>                      (70 + 51) / 121][Stage 73:==========================================>           (95 + 26) / 121][Stage 73:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.379042239 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390076432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:>                                                       (0 + 0) / 113][Stage 74:===================================>                  (75 + 38) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:===========================================>          (91 + 22) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:====================================>                 (78 + 36) / 114][Stage 75:============================================>         (94 + 20) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.296223914 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473457238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:===========================================>          (91 + 22) / 113][Stage 76:====================================================> (109 + 4) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:==============================>                       (64 + 50) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:============================================>         (94 + 20) / 114][Stage 77:===================================================>  (109 + 5) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.493226536 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401396886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:================================>                     (68 + 45) / 113][Stage 78:=======================================>              (83 + 30) / 113][Stage 78:===============================================>     (101 + 12) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:==============================>                       (64 + 50) / 114][Stage 79:========================================>             (85 + 29) / 114][Stage 79:===============================================>     (103 + 11) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.299380984 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  par titionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388805208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (76 + 42) / 118][Stage 80:========================================>             (89 + 29) / 118][Stage 80:==============================================>      (104 + 14) / 118]                                                                                [Stage 81:=================================>                    (74 + 45) / 119][Stage 81:====================================>                 (80 + 39) / 119][Stage 81:=========================================>            (92 + 27) / 119][Stage 81:=================================================>    (110 + 9) / 119][Stage 81:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.214716794 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  pa rtitionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397877835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (74 + 44) / 118][Stage 82:===================================>                  (77 + 41) / 118][Stage 82:=====================================>                (83 + 35) / 118][Stage 82:=========================================>            (90 + 28) / 118][Stage 82:============================================>        (100 + 18) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:===================================>                  (78 + 41) / 119][Stage 83:======================================>               (84 + 35) / 119][Stage 83:==========================================>           (94 + 25) / 119][Stage 83:===============================================>     (106 + 13) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.561037656 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  p artitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383283271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (73 + 45) / 118][Stage 84:=====================================>                (81 + 37) / 118][Stage 84:=============================================>       (102 + 16) / 118][Stage 84:=====================================================>(116 + 2) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:===================================>                  (79 + 40) / 119][Stage 85:=========================================>            (91 + 28) / 119][Stage 85:==============================================>      (104 + 15) / 119][Stage 85:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.099584513 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR   partitionIndex = 132  OR  partitionIndex = 133 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175  OR  partitionIndex = 176  OR  partitionIndex = 132  OR  partitionIndex = 133 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397309213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (76 + 37) / 113][Stage 86:=========================================>            (87 + 26) / 113][Stage 86:=============================================>        (96 + 17) / 113][Stage 86:===================================================>  (108 + 5) / 113]                                                                                [Stage 87:==================================>                   (73 + 41) / 114][Stage 87:========================================>             (85 + 29) / 114][Stage 87:============================================>         (93 + 21) / 114][Stage 87:==================================================>   (106 + 8) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.790621241 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417545393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (67 + 53) / 120][Stage 88:====================================>                 (82 + 38) / 120][Stage 88:============================================>         (99 + 21) / 120][Stage 88:====================================================> (116 + 4) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:==============================>                       (69 + 52) / 121][Stage 89:===================================>                  (79 + 42) / 121][Stage 89:=============================================>       (104 + 17) / 121][Stage 89:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.323500035 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425713497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (63 + 57) / 120][Stage 90:====================================>                 (81 + 39) / 120][Stage 90:============================================>         (99 + 21) / 120][Stage 90:=====================================================>(118 + 2) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:==============================>                       (69 + 52) / 121][Stage 91:=========================================>            (93 + 28) / 121][Stage 91:==============================================>      (107 + 14) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.509985445 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380675824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (74 + 44) / 118][Stage 92:====================================>                 (80 + 38) / 118][Stage 92:=======================================>              (86 + 32) / 118][Stage 92:============================================>         (97 + 21) / 118][Stage 92:===================================================>  (112 + 6) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:=====================================>                (82 + 37) / 119][Stage 93:=======================================>              (87 + 32) / 119][Stage 93:===========================================>          (96 + 23) / 119][Stage 93:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.577340044 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  p artitionIndex = 43  OR  partitionIndex = 57 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418011794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:============================>                         (63 + 58) / 121][Stage 94:===================================>                  (80 + 41) / 121][Stage 94:============================================>        (101 + 20) / 121][Stage 94:====================================================> (117 + 4) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:=============================>                        (67 + 55) / 122][Stage 95:=======================================>              (89 + 33) / 122][Stage 95:==============================================>      (106 + 16) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.097310066 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3860743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (67 + 48) / 115][Stage 96:===================================>                  (76 + 39) / 115][Stage 96:========================================>             (87 + 28) / 115][Stage 96:=================================================>    (106 + 9) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:================================>                     (69 + 47) / 116][Stage 97:=====================================>                (81 + 35) / 116][Stage 97:===========================================>          (93 + 23) / 116][Stage 97:================================================>    (106 + 10) / 116][Stage 97:=====================================================>(114 + 2) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101639639 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR   partitionIndex = 230  OR  partitionIndex = 216 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 216 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446763519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (85 + 30) / 115][Stage 98:=============================================>        (96 + 19) / 115][Stage 98:==================================================>   (108 + 7) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:==========================================>           (91 + 25) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:====================================================> (112 + 4) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.868508251 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421783746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:============================>                        (66 + 55) / 121][Stage 100:=====================================>               (86 + 35) / 121][Stage 100:=============================================>      (105 + 16) / 121][Stage 100:====================================================>(119 + 2) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:=============================>                       (68 + 54) / 122][Stage 101:=======================================>             (92 + 30) / 122][Stage 101:==============================================>     (109 + 13) / 122][Stage 101:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.258605762 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384807996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===============================>                     (69 + 46) / 115][Stage 102:========================================>            (88 + 27) / 115][Stage 102:==============================================>     (103 + 12) / 115][Stage 102:=================================================>   (107 + 8) / 115]                                                                                [Stage 103:===============================>                     (70 + 46) / 116][Stage 103:========================================>            (89 + 27) / 116][Stage 103:==============================================>     (104 + 12) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.910000353 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR   partitionIndex = 101  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378090716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=================================>                   (71 + 42) / 113][Stage 104:=====================================>               (80 + 33) / 113][Stage 104:==========================================>          (90 + 23) / 113][Stage 104:===============================================>    (103 + 10) / 113][Stage 104:====================================================>(111 + 2) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:=================================>                   (73 + 41) / 114][Stage 105:======================================>              (83 + 31) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:===============================================>    (104 + 10) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.388638987 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359857123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:======================================>              (83 + 32) / 115][Stage 106:===========================================>         (94 + 21) / 115][Stage 106:================================================>    (106 + 9) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:=======================================>             (87 + 29) / 116][Stage 107:=============================================>      (102 + 14) / 116][Stage 107:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.72607459 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37922972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (70 + 45) / 115][Stage 108:=======================================>             (86 + 29) / 115][Stage 108:===============================================>    (105 + 10) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:====================================>                (79 + 37) / 116][Stage 109:==========================================>          (93 + 23) / 116][Stage 109:===============================================>    (105 + 11) / 116][Stage 109:==================================================>  (110 + 6) / 116][Stage 109:===================================================> (113 + 3) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.553161478 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR   partitionIndex = 193  OR  partitionIndex = 207 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236  OR  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366451862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (75 + 43) / 118][Stage 110:====================================>                (81 + 37) / 118][Stage 110:=========================================>           (92 + 26) / 118][Stage 110:================================================>    (109 + 9) / 118][Stage 110:====================================================>(117 + 1) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:==================================>                  (78 + 41) / 119][Stage 111:============================================>        (99 + 20) / 119][Stage 111:==================================================>  (113 + 6) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.485909254 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR   partitionIndex = 204  OR  partitionIndex = 190 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 190 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37243302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===================================>                 (76 + 39) / 115][Stage 112:==========================================>          (92 + 23) / 115][Stage 112:===============================================>    (105 + 10) / 115][Stage 112:===================================================> (112 + 3) / 115]                                                                                [Stage 113:=====================================>               (82 + 34) / 116][Stage 113:=========================================>           (91 + 25) / 116][Stage 113:==============================================>     (103 + 13) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.878763941 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340557526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (81 + 34) / 115][Stage 114:=========================================>           (90 + 25) / 115][Stage 114:=============================================>      (100 + 15) / 115][Stage 114:===================================================> (111 + 4) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:=====================================>               (83 + 33) / 116][Stage 115:============================================>       (100 + 16) / 116][Stage 115:===================================================> (113 + 3) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.896349212 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR   partitionIndex = 226  OR  partitionIndex = 212 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377507794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (72 + 43) / 115][Stage 116:===========================================>         (94 + 21) / 115][Stage 116:================================================>    (106 + 9) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:===================================>                 (78 + 38) / 116][Stage 117:============================================>        (97 + 19) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.737551524 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  p artitionIndex = 62  OR  partitionIndex = 63 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62  OR  partitionIndex = 63 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344970878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (80 + 35) / 115][Stage 118:======================================>              (83 + 32) / 115][Stage 118:===========================================>         (94 + 21) / 115][Stage 118:==================================================>  (109 + 6) / 115]                                                                                [Stage 119:=======================================>             (86 + 30) / 116][Stage 119:===========================================>         (96 + 20) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.923366473 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  p artitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388975208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:============================>                        (60 + 53) / 113][Stage 120:===================================>                 (76 + 37) / 113][Stage 120:========================================>            (87 + 26) / 113][Stage 120:================================================>    (104 + 9) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==============================>                      (66 + 48) / 114][Stage 121:======================================>              (82 + 32) / 114][Stage 121:==============================================>     (103 + 11) / 114][Stage 121:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.37640481 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402335728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:=============================>                       (67 + 54) / 121][Stage 122:====================================>                (84 + 37) / 121][Stage 122:===============================================>    (111 + 10) / 121]                                                                                [Stage 123:==========================>                          (61 + 61) / 122][Stage 123:==============================>                      (71 + 51) / 122][Stage 123:======================================>              (88 + 34) / 122][Stage 123:============================================>       (105 + 17) / 122][Stage 123:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.38321521 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415894008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (63 + 58) / 121][Stage 124:==============================>                      (70 + 51) / 121][Stage 124:========================================>            (93 + 28) / 121][Stage 124:===================================================> (117 + 4) / 121]                                                                                [Stage 125:===========================>                         (64 + 58) / 122][Stage 125:==================================>                  (79 + 43) / 122][Stage 125:==========================================>          (97 + 25) / 122][Stage 125:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.323910115 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 141 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341471229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (81 + 34) / 115][Stage 126:======================================>              (84 + 31) / 115][Stage 126:==========================================>          (93 + 22) / 115][Stage 126:===============================================>    (105 + 10) / 115][Stage 126:===================================================> (111 + 4) / 115]                                                                                [Stage 127:=======================================>             (86 + 30) / 116][Stage 127:============================================>        (97 + 19) / 116][Stage 127:==============================================>     (104 + 12) / 116][Stage 127:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.906389062 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  p artitionIndex = 86  OR  partitionIndex = 98 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48421269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (62 + 58) / 120][Stage 128:==============================>                      (68 + 52) / 120][Stage 128:==================================>                  (78 + 42) / 120][Stage 128:============================================>       (103 + 17) / 120][Stage 128:==================================================>  (114 + 6) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:=================================>                   (76 + 45) / 121][Stage 129:=========================================>           (94 + 27) / 121][Stage 129:==================================================>  (115 + 6) / 121][Stage 129:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.56309004 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402483348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:===========================>                         (63 + 58) / 121][Stage 130:================================>                    (74 + 47) / 121][Stage 130:======================================>              (88 + 33) / 121][Stage 130:==================================================>  (116 + 5) / 121]                                                                                [Stage 131:==========================>                          (62 + 60) / 122][Stage 131:===========================>                         (64 + 58) / 122][Stage 131:====================================>                (83 + 39) / 122][Stage 131:============================================>       (104 + 18) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.330512734 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR   partitionIndex = 114  OR  partitionIndex = 100 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396617551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (62 + 58) / 120][Stage 132:===================================>                 (80 + 40) / 120][Stage 132:============================================>       (102 + 18) / 120][Stage 132:===================================================> (116 + 4) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:===========================>                         (63 + 58) / 121][Stage 133:==================================>                  (78 + 43) / 121][Stage 133:===========================================>        (102 + 19) / 121][Stage 133:===================================================> (118 + 3) / 121][Stage 133:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.432003334 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336539033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (82 + 33) / 115][Stage 134:===========================================>         (95 + 20) / 115][Stage 134:================================================>    (106 + 9) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=====================================>               (83 + 33) / 116][Stage 135:=========================================>           (90 + 26) / 116][Stage 135:===============================================>    (106 + 10) / 116][Stage 135:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.601713942 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  p artitionIndex = 91  OR  partitionIndex = 105 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337149836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (81 + 34) / 115][Stage 136:========================================>            (87 + 28) / 115][Stage 136:===============================================>    (104 + 11) / 115][Stage 136:==================================================>  (110 + 5) / 115]                                                                                [Stage 137:=======================================>             (87 + 29) / 116][Stage 137:=============================================>      (101 + 15) / 116][Stage 137:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.679855433 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369686792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (75 + 43) / 118][Stage 138:======================================>              (86 + 32) / 118][Stage 138:===========================================>         (97 + 21) / 118][Stage 138:=================================================>   (111 + 7) / 118]                                                                                [Stage 139:================================>                    (74 + 45) / 119][Stage 139:===================================>                 (79 + 40) / 119][Stage 139:======================================>              (86 + 33) / 119][Stage 139:=========================================>           (94 + 25) / 119][Stage 139:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.423590549 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351006717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==================================>                  (74 + 39) / 113][Stage 140:=========================================>           (88 + 25) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:===================================================> (109 + 4) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:======================================>              (82 + 32) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:=================================================>   (106 + 8) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.251757241 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  pa rtitionIndex = 24  OR  partitionIndex = 10 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383763253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:=============================>                       (63 + 50) / 113][Stage 142:===================================>                 (75 + 38) / 113][Stage 142:=============================================>       (96 + 17) / 113][Stage 142:===================================================> (110 + 3) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:=============================>                       (63 + 51) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.398950356 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388189606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:================================>                    (69 + 44) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:===================================================> (109 + 4) / 113]                                                                                [Stage 145:============================>                        (61 + 53) / 114][Stage 145:=================================>                   (73 + 41) / 114][Stage 145:========================================>            (88 + 26) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.576981562 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370591574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==============================>                      (66 + 49) / 115][Stage 146:=====================================>               (82 + 33) / 115][Stage 146:=============================================>       (99 + 16) / 115][Stage 146:===============================================>    (104 + 11) / 115][Stage 146:==================================================>  (110 + 5) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:===============================>                     (68 + 48) / 116][Stage 147:=====================================>               (83 + 33) / 116][Stage 147:============================================>        (98 + 18) / 116][Stage 147:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.236007035 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  p artitionIndex = 29  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392030877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:==============================>                      (65 + 48) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:==============================================>      (99 + 14) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:============================>                        (61 + 53) / 114][Stage 149:====================================>                (79 + 35) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.329763751 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  p artitionIndex = 9  OR  partitionIndex = 23 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408026165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:============================>                        (65 + 56) / 121][Stage 150:===================================>                 (81 + 40) / 121][Stage 150:===========================================>         (99 + 22) / 121][Stage 150:====================================================>(120 + 1) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:=============================>                       (68 + 54) / 122][Stage 151:======================================>              (88 + 34) / 122][Stage 151:===============================================>    (112 + 10) / 122][Stage 151:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.304660198 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  p artitionIndex = 36  OR  partitionIndex = 37 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350469875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (76 + 37) / 113][Stage 152:======================================>              (83 + 30) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:==================================================>  (108 + 5) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:======================================>              (83 + 31) / 114][Stage 153:===========================================>         (93 + 21) / 114][Stage 153:============================================>        (96 + 18) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(112 + 2) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.348223078 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR   partitionIndex = 124  OR  partitionIndex = 125 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354396027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (70 + 43) / 113][Stage 154:=====================================>               (80 + 33) / 113][Stage 154:=========================================>           (88 + 25) / 113][Stage 154:=============================================>       (98 + 15) / 113][Stage 154:===================================================> (109 + 4) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=======================================>             (86 + 28) / 114][Stage 155:============================================>        (95 + 19) / 114][Stage 155:=================================================>   (107 + 7) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.247191308 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  pa rtitionIndex = 5  OR  partitionIndex = 19 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48  OR  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359762022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=================================>                   (75 + 43) / 118][Stage 156:=====================================>               (84 + 34) / 118][Stage 156:============================================>       (100 + 18) / 118][Stage 156:===================================================> (114 + 4) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:====================================>                (81 + 38) / 119][Stage 157:===========================================>         (97 + 22) / 119][Stage 157:==============================================>     (107 + 12) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.516890704 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  p artitionIndex = 11  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354021405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (71 + 42) / 113][Stage 158:==========================================>          (91 + 22) / 113][Stage 158:=============================================>       (96 + 17) / 113][Stage 158:=================================================>   (105 + 8) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:==================================>                  (75 + 39) / 114][Stage 159:=======================================>             (86 + 28) / 114][Stage 159:===========================================>         (94 + 20) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(112 + 2) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.567162684 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR   partitionIndex = 110  OR  partitionIndex = 96 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387431224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (71 + 44) / 115][Stage 160:====================================>                (79 + 36) / 115][Stage 160:=============================================>      (100 + 15) / 115][Stage 160:================================================>    (106 + 9) / 115][Stage 160:==================================================>  (110 + 5) / 115]                                                                                [Stage 161:===================================>                 (78 + 38) / 116][Stage 161:===========================================>         (95 + 21) / 116][Stage 161:==============================================>     (104 + 12) / 116][Stage 161:===================================================> (112 + 4) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.364635514 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  p artitionIndex = 50  OR  partitionIndex = 36 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391093895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:=======================================>             (89 + 31) / 120][Stage 162:===============================================>    (109 + 11) / 120]                                                                                [Stage 163:============================>                        (64 + 57) / 121][Stage 163:================================>                    (74 + 47) / 121][Stage 163:========================================>            (93 + 28) / 121][Stage 163:=================================================>   (114 + 7) / 121][Stage 163:====================================================>(119 + 2) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.538978449 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397037133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:==============================>                      (69 + 51) / 120][Stage 164:======================================>              (88 + 32) / 120][Stage 164:==============================================>     (107 + 13) / 120][Stage 164:===================================================> (117 + 3) / 120]                                                                                [Stage 165:==========================>                          (61 + 60) / 121][Stage 165:============================>                        (64 + 57) / 121][Stage 165:===================================>                 (80 + 41) / 121][Stage 165:==========================================>          (98 + 23) / 121][Stage 165:==================================================>  (116 + 5) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.432910615 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394503004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (70 + 45) / 115][Stage 166:=========================================>           (90 + 25) / 115][Stage 166:================================================>    (106 + 9) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:==================================>                  (75 + 41) / 116][Stage 167:========================================>            (89 + 27) / 116][Stage 167:=============================================>      (102 + 14) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.822471973 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393722362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===================================>                 (77 + 38) / 115][Stage 168:=========================================>           (90 + 25) / 115][Stage 168:===============================================>    (104 + 11) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:===================================>                 (78 + 38) / 116][Stage 169:==========================================>          (93 + 23) / 116][Stage 169:===============================================>    (106 + 10) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.867562747 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3793526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=============================>                       (65 + 50) / 115][Stage 170:==================================>                  (74 + 41) / 115][Stage 170:=========================================>           (90 + 25) / 115][Stage 170:=================================================>   (107 + 8) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:===================================>                 (78 + 38) / 116][Stage 171:=========================================>           (90 + 26) / 116][Stage 171:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.840279005 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40652818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:============================>                        (65 + 56) / 121][Stage 172:==================================>                  (78 + 43) / 121][Stage 172:===========================================>         (99 + 22) / 121][Stage 172:==================================================>  (115 + 6) / 121]                                                                                [Stage 173:==========================>                          (62 + 60) / 122][Stage 173:==============================>                      (70 + 52) / 122][Stage 173:=======================================>             (92 + 30) / 122][Stage 173:=================================================>   (115 + 7) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.415962706 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR   partitionIndex = 184  OR  partitionIndex = 185 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388896708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:===============================>                     (72 + 48) / 120][Stage 174:=======================================>             (89 + 31) / 120][Stage 174:=================================================>   (112 + 8) / 120]                                                                                [Stage 175:===========================>                         (63 + 58) / 121][Stage 175:===============================>                     (72 + 49) / 121][Stage 175:======================================>              (89 + 32) / 121][Stage 175:=================================================>   (112 + 9) / 121][Stage 175:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.333872063 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR   partitionIndex = 73  OR  partitionIndex = 87 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36606974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (72 + 43) / 115][Stage 176:======================================>              (84 + 31) / 115][Stage 176:=============================================>       (99 + 16) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:===============================>                     (70 + 46) / 116][Stage 177:=====================================>               (83 + 33) / 116][Stage 177:===========================================>         (95 + 21) / 116][Stage 177:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.742798658 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344960639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:====================================>                (78 + 35) / 113][Stage 178:========================================>            (87 + 26) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===================================>                 (76 + 38) / 114][Stage 179:======================================>              (83 + 31) / 114][Stage 179:============================================>        (95 + 19) / 114][Stage 179:==================================================>  (108 + 6) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.236928156 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR   partitionIndex = 125  OR  partitionIndex = 139 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168  OR  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381387986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (80 + 33) / 113][Stage 180:===========================================>         (92 + 21) / 113][Stage 180:================================================>    (104 + 9) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:=======================================>             (85 + 29) / 114][Stage 181:=============================================>       (97 + 17) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.812828824 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  p artitionIndex = 10  OR  partitionIndex = 11 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10  OR  partitionIndex = 11 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383438632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:=============================>                       (63 + 50) / 113][Stage 182:=====================================>               (80 + 33) / 113][Stage 182:==========================================>          (90 + 23) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:============================>                        (62 + 52) / 114][Stage 183:===============================>                     (68 + 46) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.520604814 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  p artitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395257806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:=============================>                       (67 + 53) / 120][Stage 184:==================================>                  (77 + 43) / 120][Stage 184:===========================================>        (100 + 20) / 120][Stage 184:==================================================>  (115 + 5) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:============================>                        (65 + 56) / 121][Stage 185:====================================>                (84 + 37) / 121][Stage 185:============================================>       (104 + 17) / 121][Stage 185:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.121617016 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386656141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===========================>                         (62 + 58) / 120][Stage 186:==================================>                  (77 + 43) / 120][Stage 186:===========================================>         (99 + 21) / 120][Stage 186:==================================================>  (114 + 6) / 120]                                                                                [Stage 187:============================>                        (64 + 57) / 121][Stage 187:===============================>                     (71 + 50) / 121][Stage 187:=========================================>           (95 + 26) / 121][Stage 187:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.254468088 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40982151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:===========================>                         (62 + 58) / 120][Stage 188:====================================>                (82 + 38) / 120][Stage 188:===============================================>    (109 + 11) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (68 + 53) / 121][Stage 189:=========================================>           (94 + 27) / 121][Stage 189:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.040076835 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388204306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:==============================>                      (70 + 50) / 120][Stage 190:=======================================>             (89 + 31) / 120][Stage 190:===================================================> (117 + 3) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:================================>                    (74 + 47) / 121][Stage 191:==========================================>          (96 + 25) / 121][Stage 191:===================================================> (117 + 4) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.215266812 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  p artitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374116165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:==============================>                      (64 + 49) / 113][Stage 192:==================================>                  (74 + 39) / 113][Stage 192:=============================================>       (98 + 15) / 113][Stage 192:===================================================> (109 + 4) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:============================>                        (61 + 53) / 114][Stage 193:================================>                    (70 + 44) / 114][Stage 193:=====================================>               (80 + 34) / 114][Stage 193:============================================>        (95 + 19) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.252818183 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378641398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (73 + 45) / 118][Stage 194:======================================>              (85 + 33) / 118][Stage 194:============================================>       (100 + 18) / 118][Stage 194:=================================================>   (111 + 7) / 118][Stage 194:====================================================>(116 + 2) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:====================================>                (81 + 38) / 119][Stage 195:==========================================>          (96 + 23) / 119][Stage 195:==============================================>     (107 + 12) / 119][Stage 195:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.278111297 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407078882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:============================>                        (66 + 55) / 121][Stage 196:=================================>                   (77 + 44) / 121][Stage 196:==========================================>          (98 + 23) / 121][Stage 196:====================================================>(120 + 1) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (69 + 53) / 122][Stage 197:==================================>                  (79 + 43) / 122][Stage 197:=============================================>      (107 + 15) / 122][Stage 197:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.311459396 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  p artitionIndex = 6  OR  partitionIndex = 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 6  OR  partitionIndex = 7 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382905231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:================================>                    (69 + 44) / 113][Stage 198:=====================================>               (79 + 34) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:===============================>                     (67 + 47) / 114][Stage 199:======================================>              (82 + 32) / 114][Stage 199:============================================>        (95 + 19) / 114][Stage 199:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.544798025 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m19.862s
user	11m53.256s
sys	0m52.588s
