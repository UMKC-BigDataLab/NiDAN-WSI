Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 00:31:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:31:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:31:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:31:43 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 00:31:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 00:31:56 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522003145-0395).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.731378613 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=============>                                         (28 + 87) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:=======================>                               (49 + 67) / 116][Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.898487855 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.777022343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==============>                                        (29 + 84) / 113][Stage 2:=======================>                               (49 + 64) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:===============================================>       (98 + 15) / 113][Stage 2:====================================================>  (107 + 6) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:==============================>                        (64 + 50) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:=========================================>             (86 + 28) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.150785046 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR   partitionIndex = 128  OR  partitionIndex = 129 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128  OR  partitionIndex = 129 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617007941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===============================>                       (64 + 49) / 113][Stage 4:===================================>                   (72 + 41) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:==========================================>            (88 + 25) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:====================================>                  (76 + 38) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:===========================================>           (90 + 24) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.420894346 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  pa rtitionIndex = 24  OR  partitionIndex = 10 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 10 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.66646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=======================>                               (51 + 70) / 121][Stage 6:==========================>                            (58 + 63) / 121][Stage 6:===============================>                       (70 + 51) / 121][Stage 6:====================================>                  (80 + 41) / 121][Stage 6:==========================================>            (93 + 28) / 121][Stage 6:==============================================>       (104 + 17) / 121][Stage 6:====================================================>  (115 + 6) / 121][Stage 6:======================================================>(120 + 1) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:==============================>                        (68 + 54) / 122][Stage 7:=================================>                     (75 + 47) / 122][Stage 7:=======================================>               (87 + 35) / 122][Stage 7:===============================================>      (107 + 15) / 122][Stage 7:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.499382975 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527718273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:=========================================>             (86 + 29) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:====================================================>  (110 + 5) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:=============================================>         (96 + 20) / 116][Stage 9:===============================================>      (101 + 15) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.505519664 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.640218821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:============================>                         (64 + 57) / 121][Stage 10:==================================>                   (77 + 44) / 121][Stage 10:=======================================>              (89 + 32) / 121][Stage 10:===========================================>          (98 + 23) / 121][Stage 10:=================================================>    (112 + 9) / 121][Stage 10:=====================================================>(120 + 1) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:============================>                         (65 + 57) / 122][Stage 11:================================>                     (73 + 49) / 122][Stage 11:=======================================>              (89 + 33) / 122][Stage 11:===========================================>          (99 + 23) / 122][Stage 11:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.164507245 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524195291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=================================>                    (70 + 43) / 113][Stage 12:===================================>                  (75 + 38) / 113][Stage 12:========================================>             (84 + 29) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:===================================================>  (107 + 6) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===================================>                  (74 + 40) / 114][Stage 13:======================================>               (81 + 33) / 114][Stage 13:==========================================>           (90 + 24) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.954568946 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  p artitionIndex = 15  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 28  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591532785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:=============================>                        (67 + 54) / 121][Stage 14:=====================================>                (85 + 36) / 121][Stage 14:==========================================>           (95 + 26) / 121][Stage 14:============================================>        (102 + 19) / 121][Stage 14:==============================================>      (107 + 14) / 121][Stage 14:=====================================================>(119 + 2) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:============================>                         (65 + 57) / 122][Stage 15:=================================>                    (75 + 47) / 122][Stage 15:======================================>               (87 + 35) / 122][Stage 15:==============================================>      (108 + 14) / 122][Stage 15:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.099190185 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR   partitionIndex = 136  OR  partitionIndex = 122 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562163723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:=============================>                        (61 + 52) / 113][Stage 16:==================================>                   (73 + 40) / 113][Stage 16:=============================================>        (95 + 18) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:====================================>                 (78 + 36) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.751558957 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR   partitionIndex = 114  OR  partitionIndex = 100 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 100 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572260851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (59 + 61) / 120][Stage 18:=============================>                        (66 + 54) / 120][Stage 18:===================================>                  (78 + 42) / 120][Stage 18:========================================>             (91 + 29) / 120][Stage 18:===============================================>     (108 + 12) / 120][Stage 18:==================================================>   (113 + 7) / 120][Stage 18:=====================================================>(119 + 1) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:===============================>                      (71 + 50) / 121][Stage 19:=====================================>                (85 + 36) / 121][Stage 19:============================================>        (102 + 19) / 121][Stage 19:====================================================> (117 + 4) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.01585495 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  p artitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550216935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:====================================>                 (77 + 36) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:===================================================>  (107 + 6) / 113][Stage 20:====================================================> (110 + 3) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:=================================>                    (70 + 44) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.703958019 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR   partitionIndex = 226  OR  partitionIndex = 212 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 212 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481783481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:======================================>               (80 + 33) / 113][Stage 22:===========================================>          (91 + 22) / 113][Stage 22:===============================================>     (101 + 12) / 113][Stage 22:=====================================================>(111 + 2) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===================================>                  (75 + 39) / 114][Stage 23:======================================>               (81 + 33) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:==============================================>      (100 + 14) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.589467179 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  p artitionIndex = 46  OR  partitionIndex = 32 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 32 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505381026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:================================>                     (69 + 46) / 115][Stage 24:=====================================>                (79 + 36) / 115][Stage 24:===============================================>     (102 + 13) / 115][Stage 24:====================================================> (111 + 4) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:================================>                     (70 + 46) / 116][Stage 25:======================================>               (83 + 33) / 116][Stage 25:=========================================>            (90 + 26) / 116][Stage 25:==============================================>      (101 + 15) / 116][Stage 25:=================================================>    (107 + 9) / 116][Stage 25:====================================================> (113 + 3) / 116][Stage 25:=====================================================>(114 + 2) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.507645094 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  p artitionIndex = 85  OR  partitionIndex = 86 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510255493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:================================>                     (67 + 46) / 113][Stage 26:===========================================>          (91 + 22) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:============================>                         (61 + 53) / 114][Stage 27:==================================>                   (72 + 42) / 114][Stage 27:============================================>         (94 + 20) / 114][Stage 27:=================================================>    (105 + 9) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.891150757 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  p artitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453149633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==================================>                   (73 + 40) / 113][Stage 28:=========================================>            (86 + 27) / 113][Stage 28:============================================>         (94 + 19) / 113][Stage 28:===============================================>     (102 + 11) / 113][Stage 28:==================================================>   (106 + 7) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:==================================>                   (73 + 41) / 114][Stage 29:=======================================>              (84 + 30) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:================================================>    (104 + 10) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.983003366 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  p artitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496644154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:==================================>                   (76 + 42) / 118][Stage 30:=====================================>                (83 + 35) / 118][Stage 30:===========================================>          (96 + 22) / 118][Stage 30:=============================================>       (102 + 16) / 118][Stage 30:================================================>    (107 + 11) / 118][Stage 30:==================================================>   (111 + 7) / 118][Stage 30:=====================================================>(117 + 1) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:===================================>                  (79 + 40) / 119][Stage 31:=======================================>              (87 + 32) / 119][Stage 31:===============================================>     (106 + 13) / 119][Stage 31:===================================================>  (113 + 6) / 119][Stage 31:====================================================> (116 + 3) / 119][Stage 31:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.436582222 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440154296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:>                                                       (0 + 0) / 113][Stage 32:===================================>                  (75 + 38) / 113][Stage 32:=========================================>            (87 + 26) / 113][Stage 32:==============================================>       (97 + 16) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:=====================================================>(111 + 2) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:==========================================>           (90 + 24) / 114][Stage 33:==============================================>       (98 + 16) / 114][Stage 33:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.358854357 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR   partitionIndex = 164  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 164  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504946247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:===========================>                          (61 + 60) / 121][Stage 34:=================================>                    (75 + 46) / 121][Stage 34:===========================================>         (100 + 21) / 121][Stage 34:====================================================> (117 + 4) / 121][Stage 34:=====================================================>(120 + 1) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:=============================>                        (66 + 56) / 122][Stage 35:====================================>                 (83 + 39) / 122][Stage 35:==============================================>      (107 + 15) / 122][Stage 35:====================================================> (118 + 4) / 122][Stage 35:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.601710857 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445840043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===================================>                  (74 + 39) / 113][Stage 36:=======================================>              (82 + 31) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:==================================================>   (105 + 8) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:====================================>                 (77 + 37) / 114][Stage 37:==========================================>           (90 + 24) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:===================================================>  (108 + 6) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.212959455 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  p artitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49326507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (60 + 53) / 113][Stage 38:==================================>                   (73 + 40) / 113][Stage 38:===========================================>          (91 + 22) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:=============================>                        (62 + 52) / 114][Stage 39:====================================>                 (77 + 37) / 114][Stage 39:=============================================>        (96 + 18) / 114][Stage 39:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.548093045 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR   partitionIndex = 93  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529626002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:============================>                         (60 + 53) / 113][Stage 40:====================================>                 (76 + 37) / 113][Stage 40:===========================================>          (90 + 23) / 113][Stage 40:================================================>    (103 + 10) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:==================================>                   (73 + 41) / 114][Stage 41:===========================================>          (91 + 23) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.378571349 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479205711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (70 + 43) / 113][Stage 42:====================================>                 (76 + 37) / 113][Stage 42:=========================================>            (86 + 27) / 113][Stage 42:=============================================>        (95 + 18) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:======================================>               (81 + 33) / 114][Stage 43:===========================================>          (91 + 23) / 114][Stage 43:==============================================>       (98 + 16) / 114][Stage 43:==================================================>   (106 + 8) / 114][Stage 43:===================================================>  (108 + 6) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.618003545 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  p artitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47832481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:============================>                         (60 + 53) / 113][Stage 44:=================================>                    (71 + 42) / 113][Stage 44:==============================================>       (97 + 16) / 113][Stage 44:===================================================>  (108 + 5) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:===============================>                      (66 + 48) / 114][Stage 45:=======================================>              (83 + 31) / 114][Stage 45:=============================================>        (96 + 18) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.544157602 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR   partitionIndex = 134  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465865412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (62 + 58) / 120][Stage 46:===============================>                      (70 + 50) / 120][Stage 46:======================================>               (86 + 34) / 120][Stage 46:=============================================>       (104 + 16) / 120][Stage 46:=====================================================>(118 + 2) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:==============================>                       (68 + 53) / 121][Stage 47:===================================>                  (80 + 41) / 121][Stage 47:============================================>        (101 + 20) / 121][Stage 47:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.511895858 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  p artitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591860389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===========================>                          (62 + 58) / 120][Stage 48:=================================>                    (74 + 46) / 120][Stage 48:============================================>        (101 + 19) / 120][Stage 48:==================================================>   (113 + 7) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:===============================>                      (71 + 50) / 121][Stage 49:=========================================>            (92 + 29) / 121][Stage 49:==================================================>   (114 + 7) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.288884908 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR   partitionIndex = 122  OR  partitionIndex = 123 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 122  OR  partitionIndex = 123 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488181204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 59) / 120][Stage 50:===============================>                      (71 + 49) / 120][Stage 50:======================================>               (86 + 34) / 120][Stage 50:==============================================>      (106 + 14) / 120][Stage 50:=====================================================>(118 + 2) / 120]                                                                                [Stage 51:===========================>                          (62 + 59) / 121][Stage 51:================================>                     (72 + 49) / 121][Stage 51:=======================================>              (89 + 32) / 121][Stage 51:===============================================>     (108 + 13) / 121][Stage 51:====================================================> (117 + 4) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.781670279 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  p artitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451430533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (60 + 60) / 120][Stage 52:============================>                         (64 + 56) / 120][Stage 52:===================================>                  (78 + 42) / 120][Stage 52:==========================================>           (95 + 25) / 120][Stage 52:====================================================> (116 + 4) / 120]                                                                                [Stage 53:============================>                         (64 + 57) / 121][Stage 53:=================================>                    (76 + 45) / 121][Stage 53:==========================================>           (96 + 25) / 121][Stage 53:===============================================>     (108 + 13) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.550829657 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436084531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:=============================>                        (62 + 51) / 113][Stage 54:======================================>               (80 + 33) / 113][Stage 54:==============================================>      (100 + 13) / 113][Stage 54:====================================================> (110 + 3) / 113]                                                                                [Stage 55:============================>                         (61 + 53) / 114][Stage 55:===================================>                  (74 + 40) / 114][Stage 55:=============================================>        (97 + 17) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.591417735 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR   partitionIndex = 65  OR  partitionIndex = 79 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108  OR  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443597202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:==============================>                       (64 + 49) / 113][Stage 56:===================================>                  (75 + 38) / 113][Stage 56:============================================>         (93 + 20) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:================================>                     (69 + 45) / 114][Stage 57:=======================================>              (84 + 30) / 114][Stage 57:================================================>    (104 + 10) / 114][Stage 57:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.476976755 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR   partitionIndex = 135  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551490633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:============================>                         (63 + 57) / 120][Stage 58:===================================>                  (78 + 42) / 120][Stage 58:=============================================>       (103 + 17) / 120][Stage 58:=====================================================>(118 + 2) / 120]                                                                                [Stage 59:=============================>                        (67 + 54) / 121][Stage 59:=====================================>                (85 + 36) / 121][Stage 59:=============================================>       (103 + 18) / 121][Stage 59:===================================================>  (116 + 5) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.460983353 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  par titionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475620428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:============================>                         (64 + 57) / 121][Stage 60:=====================================>                (84 + 37) / 121][Stage 60:=============================================>       (104 + 17) / 121][Stage 60:====================================================> (117 + 4) / 121]                                                                                [Stage 61:===========================>                          (63 + 59) / 122][Stage 61:=================================>                    (75 + 47) / 122][Stage 61:==========================================>           (95 + 27) / 122][Stage 61:===================================================>  (117 + 5) / 122][Stage 61:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.445973634 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  p artitionIndex = 84  OR  partitionIndex = 70 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 70 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421942912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (73 + 45) / 118][Stage 62:====================================>                 (79 + 39) / 118][Stage 62:=========================================>            (91 + 27) / 118][Stage 62:================================================>    (107 + 11) / 118][Stage 62:====================================================> (115 + 3) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:=================================>                    (74 + 45) / 119][Stage 63:=======================================>              (86 + 33) / 119][Stage 63:========================================>             (90 + 29) / 119][Stage 63:==================================================>   (111 + 8) / 119][Stage 63:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.58487601 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  p artitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468024717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:============================>                         (63 + 57) / 120][Stage 64:=================================>                    (74 + 46) / 120][Stage 64:=========================================>            (93 + 27) / 120][Stage 64:===================================================>  (115 + 5) / 120]                                                                                [Stage 65:============================>                         (63 + 58) / 121][Stage 65:================================>                     (73 + 48) / 121][Stage 65:==========================================>           (95 + 26) / 121][Stage 65:===================================================>  (115 + 6) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.330550834 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473306224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:=============================>                        (66 + 54) / 120][Stage 66:====================================>                 (82 + 38) / 120][Stage 66:=============================================>       (104 + 16) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:================================>                     (72 + 49) / 121][Stage 67:========================================>             (90 + 31) / 121][Stage 67:==================================================>   (113 + 8) / 121][Stage 67:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.258740394 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  p artitionIndex = 33  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371367102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:============================================>         (94 + 21) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:====================================================> (111 + 4) / 115]                                                                                [Stage 69:=======================================>              (85 + 31) / 116][Stage 69:===========================================>          (94 + 22) / 116][Stage 69:===============================================>     (104 + 12) / 116][Stage 69:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.773428278 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409831816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===================================>                  (74 + 39) / 113][Stage 70:========================================>             (85 + 28) / 113][Stage 70:============================================>         (94 + 19) / 113][Stage 70:===============================================>     (101 + 12) / 113][Stage 70:===================================================>  (107 + 6) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:====================================>                 (77 + 37) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.051963306 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  pa rtitionIndex = 3  OR  partitionIndex = 17 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425036437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:============================>                         (64 + 56) / 120][Stage 72:=================================>                    (74 + 46) / 120][Stage 72:======================================>               (86 + 34) / 120][Stage 72:==============================================>      (106 + 14) / 120]                                                                                [Stage 73:===========================>                          (62 + 59) / 121][Stage 73:===============================>                      (71 + 50) / 121][Stage 73:===========================================>          (97 + 24) / 121][Stage 73:================================================>    (110 + 11) / 121][Stage 73:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.504621382 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR   partitionIndex = 126  OR  partitionIndex = 127 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126  OR  partitionIndex = 127 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406365511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:=============================>                        (61 + 52) / 113][Stage 74:==================================>                   (72 + 41) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:==================================================>   (106 + 7) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:=================================>                    (70 + 44) / 114][Stage 75:==========================================>           (90 + 24) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.399357116 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR   partitionIndex = 220  OR  partitionIndex = 221 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362785609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:============================================>         (95 + 20) / 115][Stage 76:===================================================>  (109 + 6) / 115]                                                                                [Stage 77:======================================>               (82 + 34) / 116][Stage 77:==========================================>           (91 + 25) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.743914696 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR   partitionIndex = 161  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407657233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:==================================>                   (75 + 43) / 118][Stage 78:=====================================>                (83 + 35) / 118][Stage 78:===========================================>          (96 + 22) / 118][Stage 78:==================================================>   (110 + 8) / 118][Stage 78:===================================================>  (113 + 5) / 118][Stage 78:=====================================================>(117 + 1) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:==================================>                   (76 + 43) / 119][Stage 79:======================================>               (85 + 34) / 119][Stage 79:============================================>        (100 + 19) / 119][Stage 79:===================================================>  (113 + 6) / 119][Stage 79:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.697882636 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  p artitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493085593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:===============================>                      (65 + 48) / 113][Stage 80:======================================>               (81 + 32) / 113][Stage 80:==============================================>      (100 + 13) / 113]                                                                                [Stage 81:============================>                         (61 + 53) / 114][Stage 81:==================================>                   (72 + 42) / 114][Stage 81:========================================>             (86 + 28) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.217858363 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389397967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:===================================>                  (77 + 41) / 118][Stage 82:=======================================>              (86 + 32) / 118][Stage 82:============================================>         (98 + 20) / 118][Stage 82:=====================================================>(116 + 2) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:====================================>                 (81 + 38) / 119][Stage 83:==========================================>           (93 + 26) / 119][Stage 83:==============================================>      (105 + 14) / 119][Stage 83:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.500563822 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  p artitionIndex = 36  OR  partitionIndex = 37 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 36  OR  partitionIndex = 37 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437395635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:============================>                         (64 + 56) / 120][Stage 84:=====================================>                (83 + 37) / 120][Stage 84:==============================================>      (106 + 14) / 120][Stage 84:=====================================================>(119 + 1) / 120]                                                                                [Stage 85:=============================>                        (66 + 55) / 121][Stage 85:===================================>                  (80 + 41) / 121][Stage 85:==============================================>      (107 + 14) / 121][Stage 85:===================================================>  (116 + 5) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.361171626 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  p artitionIndex = 41  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515393665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:============================>                         (64 + 56) / 120][Stage 86:==================================>                   (76 + 44) / 120][Stage 86:==========================================>           (95 + 25) / 120][Stage 86:====================================================> (117 + 3) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:==============================>                       (68 + 53) / 121][Stage 87:======================================>               (86 + 35) / 121][Stage 87:==================================================>   (113 + 8) / 121][Stage 87:====================================================> (118 + 3) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.555337401 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421916294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (63 + 57) / 120][Stage 88:===============================>                      (70 + 50) / 120][Stage 88:=====================================>                (83 + 37) / 120][Stage 88:================================================>    (110 + 10) / 120][Stage 88:====================================================> (117 + 3) / 120]                                                                                [Stage 89:==============================>                       (69 + 52) / 121][Stage 89:==================================>                   (77 + 44) / 121][Stage 89:============================================>         (99 + 22) / 121][Stage 89:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.392877313 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR   partitionIndex = 221  OR  partitionIndex = 235 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428931883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (62 + 59) / 121][Stage 90:=================================>                    (74 + 47) / 121][Stage 90:========================================>             (91 + 30) / 121][Stage 90:==================================================>   (113 + 8) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:================================>                     (73 + 49) / 122][Stage 91:==========================================>           (95 + 27) / 122][Stage 91:==================================================>   (113 + 9) / 122][Stage 91:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.408916076 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR   partitionIndex = 152  OR  partitionIndex = 153 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 152  OR  partitionIndex = 153 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415018744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (62 + 58) / 120][Stage 92:================================>                     (73 + 47) / 120][Stage 92:===========================================>          (96 + 24) / 120][Stage 92:=================================================>    (111 + 9) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:============================>                         (64 + 57) / 121][Stage 93:=====================================>                (84 + 37) / 121][Stage 93:==============================================>      (107 + 14) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.295728238 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343316703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=====================================>                (79 + 36) / 115][Stage 94:=======================================>              (85 + 30) / 115][Stage 94:============================================>         (95 + 20) / 115][Stage 94:===================================================>  (110 + 5) / 115][Stage 94:=====================================================>(113 + 2) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:===========================================>          (94 + 22) / 116][Stage 95:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.790674268 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  p artitionIndex = 13  OR  partitionIndex = 27 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56  OR  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426890221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:=============================>                        (66 + 55) / 121][Stage 96:=========================================>            (92 + 29) / 121][Stage 96:================================================>    (110 + 11) / 121][Stage 96:=====================================================>(119 + 2) / 121]                                                                                [Stage 97:===========================>                          (61 + 61) / 122][Stage 97:============================>                         (65 + 57) / 122][Stage 97:=================================>                    (76 + 46) / 122][Stage 97:===========================================>          (99 + 23) / 122][Stage 97:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.327620205 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 96  OR  partitionIndex = 97 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 96  OR  partitionIndex = 97 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380006755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (72 + 41) / 113][Stage 98:========================================>             (85 + 28) / 113][Stage 98:===============================================>      (99 + 14) / 113][Stage 98:==================================================>   (106 + 7) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:===================================>                  (75 + 39) / 114][Stage 99:=======================================>              (84 + 30) / 114][Stage 99:============================================>         (93 + 21) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.01850095 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421729574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:============================>                        (65 + 55) / 120][Stage 100:==================================>                  (78 + 42) / 120][Stage 100:===========================================>        (101 + 19) / 120][Stage 100:====================================================>(119 + 1) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:===============================>                     (71 + 50) / 121][Stage 101:======================================>              (88 + 33) / 121][Stage 101:===========================================>        (102 + 19) / 121][Stage 101:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.371532549 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  p artitionIndex = 75  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408919716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (63 + 57) / 120][Stage 102:=================================>                   (75 + 45) / 120][Stage 102:==========================================>          (97 + 23) / 120][Stage 102:==================================================>  (115 + 5) / 120]                                                                                [Stage 103:=============================>                       (67 + 54) / 121][Stage 103:==================================>                  (78 + 43) / 121][Stage 103:==========================================>         (100 + 21) / 121][Stage 103:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.205783336 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR   partitionIndex = 213  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424706519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (64 + 56) / 120][Stage 104:==================================>                  (77 + 43) / 120][Stage 104:==========================================>          (97 + 23) / 120][Stage 104:====================================================>(118 + 2) / 120]                                                                                [Stage 105:============================>                        (65 + 56) / 121][Stage 105:====================================>                (83 + 38) / 121][Stage 105:==========================================>          (98 + 23) / 121][Stage 105:==================================================>  (116 + 5) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.36424766 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  p artitionIndex = 76  OR  partitionIndex = 62 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 62 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36877328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:=================================>                   (74 + 44) / 118][Stage 106:====================================>                (82 + 36) / 118][Stage 106:===========================================>         (96 + 22) / 118][Stage 106:==================================================>  (113 + 5) / 118][Stage 106:====================================================>(116 + 2) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:=================================>                   (75 + 44) / 119][Stage 107:======================================>              (86 + 33) / 119][Stage 107:============================================>        (99 + 20) / 119][Stage 107:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.518192038 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  p artitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377839412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:=================================>                   (74 + 44) / 118][Stage 108:====================================>                (82 + 36) / 118][Stage 108:=========================================>           (93 + 25) / 118][Stage 108:===============================================>    (108 + 10) / 118][Stage 108:===================================================> (115 + 3) / 118]                                                                                [Stage 109:================================>                    (73 + 46) / 119][Stage 109:=================================>                   (76 + 43) / 119][Stage 109:====================================>                (83 + 36) / 119][Stage 109:==========================================>          (96 + 23) / 119][Stage 109:=================================================>   (112 + 7) / 119][Stage 109:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.282788577 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  p artitionIndex = 42  OR  partitionIndex = 43 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363069572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 41) / 113][Stage 110:======================================>              (83 + 30) / 113][Stage 110:===========================================>         (93 + 20) / 113][Stage 110:==================================================>  (107 + 6) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:===================================>                 (77 + 37) / 114][Stage 111:=======================================>             (85 + 29) / 114][Stage 111:============================================>        (95 + 19) / 114][Stage 111:================================================>    (105 + 9) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.025327025 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  par titionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372036565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (77 + 36) / 113][Stage 112:=========================================>           (89 + 24) / 113][Stage 112:===========================================>         (93 + 20) / 113][Stage 112:===============================================>    (103 + 10) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:=======================================>             (85 + 29) / 114][Stage 113:===========================================>         (94 + 20) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:==============================================>     (102 + 12) / 114][Stage 113:===================================================> (110 + 4) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.67987888 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR   partitionIndex = 170  OR  partitionIndex = 156 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355035001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (72 + 41) / 113][Stage 114:=======================================>             (84 + 29) / 113][Stage 114:===========================================>         (92 + 21) / 113][Stage 114:=================================================>   (106 + 7) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:=======================================>             (85 + 29) / 114][Stage 115:===========================================>         (93 + 21) / 114][Stage 115:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.829529551 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405605593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:==============================>                      (68 + 52) / 120][Stage 116:====================================>                (82 + 38) / 120][Stage 116:===========================================>        (101 + 19) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:================================>                    (75 + 46) / 121][Stage 117:=========================================>           (95 + 26) / 121][Stage 117:=================================================>   (112 + 9) / 121][Stage 117:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.351138648 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36119403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:==================================>                  (76 + 42) / 118][Stage 118:======================================>              (86 + 32) / 118][Stage 118:===========================================>         (97 + 21) / 118][Stage 118:=================================================>   (110 + 8) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:==================================>                  (78 + 41) / 119][Stage 119:=======================================>             (89 + 30) / 119][Stage 119:==================================================>  (113 + 6) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.527019738 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  p artitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407461695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 61) / 121][Stage 120:=============================>                       (68 + 53) / 121][Stage 120:====================================>                (84 + 37) / 121][Stage 120:=============================================>      (106 + 15) / 121][Stage 120:===================================================> (118 + 3) / 121]                                                                                [Stage 121:==========================>                          (62 + 60) / 122][Stage 121:=================================>                   (78 + 44) / 122][Stage 121:=========================================>           (96 + 26) / 122][Stage 121:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.324832873 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  p artitionIndex = 58  OR  partitionIndex = 44 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 44 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418925051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (61 + 59) / 120][Stage 122:==============================>                      (68 + 52) / 120][Stage 122:===================================>                 (80 + 40) / 120][Stage 122:===========================================>        (100 + 20) / 120][Stage 122:====================================================>(118 + 2) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:==============================>                      (69 + 52) / 121][Stage 123:===================================>                 (82 + 39) / 121][Stage 123:=============================================>      (106 + 15) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.606165751 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352519178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=================================>                   (72 + 41) / 113][Stage 124:=====================================>               (81 + 32) / 113][Stage 124:==========================================>          (91 + 22) / 113][Stage 124:===============================================>    (103 + 10) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:=======================================>             (86 + 28) / 114][Stage 125:===========================================>         (94 + 20) / 114][Stage 125:===============================================>    (104 + 10) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.152484932 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR   partitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407822356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (62 + 58) / 120][Stage 126:===============================>                     (72 + 48) / 120][Stage 126:==========================================>          (97 + 23) / 120][Stage 126:==================================================>  (114 + 6) / 120][Stage 126:====================================================>(119 + 1) / 120]                                                                                [Stage 127:===========================>                         (62 + 59) / 121][Stage 127:============================>                        (66 + 55) / 121][Stage 127:======================================>              (89 + 32) / 121][Stage 127:==============================================>     (109 + 12) / 121][Stage 127:===================================================> (118 + 3) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.766538759 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373392147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (73 + 45) / 118][Stage 128:==================================>                  (76 + 42) / 118][Stage 128:=========================================>           (92 + 26) / 118][Stage 128:=============================================>      (104 + 14) / 118][Stage 128:==================================================>  (113 + 5) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:===================================>                 (79 + 40) / 119][Stage 129:=======================================>             (88 + 31) / 119][Stage 129:=============================================>      (105 + 14) / 119][Stage 129:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.577536514 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351437576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (77 + 36) / 113][Stage 130:==========================================>          (90 + 23) / 113][Stage 130:=============================================>       (96 + 17) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:===================================================> (110 + 3) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===================================>                 (76 + 38) / 114][Stage 131:========================================>            (88 + 26) / 114][Stage 131:============================================>        (96 + 18) / 114][Stage 131:==============================================>     (102 + 12) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.17800239 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337397877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (81 + 34) / 115][Stage 132:=========================================>           (89 + 26) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=======================================>             (86 + 30) / 116][Stage 133:============================================>       (100 + 16) / 116][Stage 133:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.725100931 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  p artitionIndex = 54  OR  partitionIndex = 40 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384113802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:===============================>                     (67 + 46) / 113][Stage 134:======================================>              (82 + 31) / 113][Stage 134:=================================================>   (105 + 8) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:==============================>                      (66 + 48) / 114][Stage 135:=======================================>             (86 + 28) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(112 + 2) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.595797882 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371235665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===============================>                     (68 + 47) / 115][Stage 136:========================================>            (88 + 27) / 115][Stage 136:=============================================>      (100 + 15) / 115]                                                                                [Stage 137:=================================>                   (73 + 43) / 116][Stage 137:========================================>            (88 + 28) / 116][Stage 137:=============================================>      (102 + 14) / 116][Stage 137:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.583309992 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  p artitionIndex = 90  OR  partitionIndex = 102 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362738552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:==================================>                  (76 + 42) / 118][Stage 138:=====================================>               (84 + 34) / 118][Stage 138:===========================================>         (96 + 22) / 118][Stage 138:=================================================>   (110 + 8) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:=================================>                   (76 + 43) / 119][Stage 139:========================================>            (90 + 29) / 119][Stage 139:============================================>       (102 + 17) / 119][Stage 139:===================================================> (115 + 4) / 119][Stage 139:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.749933162 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR   partitionIndex = 185  OR  partitionIndex = 199 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228  OR  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394559997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (63 + 57) / 120][Stage 140:===============================>                     (72 + 48) / 120][Stage 140:========================================>            (92 + 28) / 120][Stage 140:=================================================>   (113 + 7) / 120]                                                                                [Stage 141:===========================>                         (63 + 58) / 121][Stage 141:==================================>                  (78 + 43) / 121][Stage 141:=========================================>           (94 + 27) / 121][Stage 141:=================================================>   (113 + 8) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.284945565 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47380485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:==============================>                      (66 + 47) / 113][Stage 142:=====================================>               (80 + 33) / 113][Stage 142:==============================================>     (102 + 11) / 113]                                                                                [Stage 143:=============================>                       (63 + 51) / 114][Stage 143:==================================>                  (74 + 40) / 114][Stage 143:==========================================>          (92 + 22) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.215591068 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390469713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:=================================>                   (75 + 45) / 120][Stage 144:=========================================>           (93 + 27) / 120][Stage 144:===============================================>    (110 + 10) / 120]                                                                                [Stage 145:===========================>                         (62 + 59) / 121][Stage 145:================================>                    (74 + 47) / 121][Stage 145:=========================================>           (95 + 26) / 121][Stage 145:=================================================>   (112 + 9) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.415433112 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR   partitionIndex = 73  OR  partitionIndex = 87 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116  OR  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405625453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:==============================>                      (68 + 52) / 120][Stage 146:====================================>                (82 + 38) / 120][Stage 146:===========================================>        (101 + 19) / 120][Stage 146:===================================================> (116 + 4) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:===========================>                         (63 + 58) / 121][Stage 147:===================================>                 (82 + 39) / 121][Stage 147:============================================>       (103 + 18) / 121][Stage 147:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.346260555 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383596142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:============================>                        (61 + 52) / 113][Stage 148:==================================>                  (74 + 39) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:==============================>                      (65 + 49) / 114][Stage 149:=====================================>               (80 + 34) / 114][Stage 149:=============================================>      (100 + 14) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.046374031 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  p artitionIndex = 102  OR  partitionIndex = 103 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370209444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===============================>                     (68 + 47) / 115][Stage 150:=====================================>               (81 + 34) / 115][Stage 150:===========================================>         (94 + 21) / 115][Stage 150:=================================================>   (107 + 8) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:====================================>                (79 + 37) / 116][Stage 151:==========================================>          (94 + 22) / 116][Stage 151:==================================================>  (110 + 6) / 116][Stage 151:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.949469734 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR   partitionIndex = 232  OR  partitionIndex = 128 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232  OR  partitionIndex = 128 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399690486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (61 + 60) / 121][Stage 152:================================>                    (75 + 46) / 121][Stage 152:=========================================>           (94 + 27) / 121][Stage 152:==================================================>  (115 + 6) / 121]                                                                                [Stage 153:==========================>                          (62 + 60) / 122][Stage 153:==============================>                      (70 + 52) / 122][Stage 153:=======================================>             (90 + 32) / 122][Stage 153:===============================================>    (111 + 11) / 122][Stage 153:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.422430685 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  p artitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369001742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=================================>                   (73 + 42) / 115][Stage 154:=======================================>             (85 + 30) / 115][Stage 154:============================================>        (97 + 18) / 115][Stage 154:==================================================>  (109 + 6) / 115]                                                                                [Stage 155:===================================>                 (77 + 39) / 116][Stage 155:========================================>            (88 + 28) / 116][Stage 155:===============================================>    (106 + 10) / 116][Stage 155:===================================================> (112 + 4) / 116][Stage 155:===================================================> (113 + 3) / 116][Stage 155:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.695012048 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR   partitionIndex = 140  OR  partitionIndex = 126 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 126 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355651264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:======================================>              (82 + 31) / 113][Stage 156:==========================================>          (91 + 22) / 113][Stage 156:==============================================>      (99 + 14) / 113][Stage 156:==================================================>  (107 + 6) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===================================>                 (77 + 37) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:==============================================>     (102 + 12) / 114][Stage 157:====================================================>(112 + 2) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.224179507 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336531917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (82 + 33) / 115][Stage 158:==========================================>          (93 + 22) / 115][Stage 158:================================================>    (106 + 9) / 115][Stage 158:===================================================> (111 + 4) / 115]                                                                                [Stage 159:======================================>              (84 + 32) / 116][Stage 159:=============================================>      (102 + 14) / 116][Stage 159:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.738673899 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR   partitionIndex = 156  OR  partitionIndex = 157 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 156  OR  partitionIndex = 157 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408801279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:=============================>                       (67 + 54) / 121][Stage 160:===================================>                 (81 + 40) / 121][Stage 160:=============================================>      (107 + 14) / 121][Stage 160:===================================================> (118 + 3) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:=============================>                       (67 + 55) / 122][Stage 161:=====================================>               (87 + 35) / 122][Stage 161:=============================================>      (107 + 15) / 122][Stage 161:====================================================>(120 + 2) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.670776021 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  p artitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398993465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:================================>                    (74 + 46) / 120][Stage 162:=======================================>             (89 + 31) / 120][Stage 162:=============================================>      (106 + 14) / 120][Stage 162:====================================================>(118 + 2) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:============================>                        (66 + 55) / 121][Stage 163:=====================================>               (86 + 35) / 121][Stage 163:==============================================>     (108 + 13) / 121][Stage 163:===================================================> (118 + 3) / 121][Stage 163:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.616846506 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR   partitionIndex = 186  OR  partitionIndex = 187 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 186  OR  partitionIndex = 187 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402877571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (60 + 53) / 113][Stage 164:==================================>                  (73 + 40) / 113][Stage 164:=========================================>           (89 + 24) / 113][Stage 164:==================================================>  (107 + 6) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:==================================>                  (74 + 40) / 114][Stage 165:============================================>        (96 + 18) / 114][Stage 165:=================================================>   (107 + 7) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.272327078 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374965091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==================================>                  (76 + 42) / 118][Stage 166:====================================>                (81 + 37) / 118][Stage 166:=======================================>             (89 + 29) / 118][Stage 166:=============================================>      (103 + 15) / 118][Stage 166:===================================================> (115 + 3) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:=================================>                   (76 + 43) / 119][Stage 167:=====================================>               (85 + 34) / 119][Stage 167:=============================================>      (103 + 16) / 119][Stage 167:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.460725886 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40214249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:==================================>                  (76 + 42) / 118][Stage 168:=====================================>               (83 + 35) / 118][Stage 168:===========================================>         (96 + 22) / 118][Stage 168:===============================================>    (107 + 11) / 118]                                                                                [Stage 169:=================================>                   (75 + 44) / 119][Stage 169:==================================>                  (77 + 42) / 119][Stage 169:=======================================>             (89 + 30) / 119][Stage 169:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.389809607 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  p artitionIndex = 61  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41611509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (63 + 57) / 120][Stage 170:=================================>                   (76 + 44) / 120][Stage 170:=======================================>             (89 + 31) / 120][Stage 170:=============================================>      (106 + 14) / 120][Stage 170:====================================================>(119 + 1) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:=============================>                       (67 + 54) / 121][Stage 171:====================================>                (83 + 38) / 121][Stage 171:=============================================>      (107 + 14) / 121][Stage 171:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.416398045 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR   partitionIndex = 168  OR  partitionIndex = 124 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168  OR  partitionIndex = 124 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407647438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:============================>                        (66 + 55) / 121][Stage 172:================================>                    (75 + 46) / 121][Stage 172:==========================================>          (98 + 23) / 121][Stage 172:===================================================> (118 + 3) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:===============================>                     (73 + 49) / 122][Stage 173:=======================================>             (91 + 31) / 122][Stage 173:=================================================>   (115 + 7) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.409043315 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  pa rtitionIndex = 16  OR  partitionIndex = 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 2 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360070151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (73 + 45) / 118][Stage 174:====================================>                (82 + 36) / 118][Stage 174:=========================================>           (93 + 25) / 118][Stage 174:=============================================>      (103 + 15) / 118][Stage 174:===================================================> (115 + 3) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:=================================>                   (76 + 43) / 119][Stage 175:=======================================>             (88 + 31) / 119][Stage 175:===========================================>         (97 + 22) / 119][Stage 175:===============================================>    (109 + 10) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.670547688 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377771836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:=============================>                       (63 + 50) / 113][Stage 176:=====================================>               (81 + 32) / 113][Stage 176:==============================================>      (99 + 14) / 113][Stage 176:==================================================>  (108 + 5) / 113]                                                                                [Stage 177:=============================>                       (63 + 51) / 114][Stage 177:====================================>                (78 + 36) / 114][Stage 177:===========================================>         (94 + 20) / 114][Stage 177:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.195299235 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369754524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==============================>                      (67 + 48) / 115][Stage 178:====================================>                (80 + 35) / 115][Stage 178:=========================================>           (90 + 25) / 115][Stage 178:==================================================>  (109 + 6) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:===============================>                     (68 + 48) / 116][Stage 179:=======================================>             (87 + 29) / 116][Stage 179:===============================================>    (105 + 11) / 116][Stage 179:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.784078351 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  p artitionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35225934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (83 + 30) / 113][Stage 180:==========================================>          (90 + 23) / 113][Stage 180:=============================================>       (98 + 15) / 113][Stage 180:====================================================>(111 + 2) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=====================================>               (80 + 34) / 114][Stage 181:========================================>            (87 + 27) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:===================================================> (111 + 3) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.485635067 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423683402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=============================>                       (63 + 50) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:=============================================>       (97 + 16) / 113][Stage 182:===================================================> (109 + 4) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=============================>                       (64 + 50) / 114][Stage 183:======================================>              (82 + 32) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.618119978 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  p artitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393577299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:==================================>                  (73 + 40) / 113][Stage 184:=======================================>             (85 + 28) / 113][Stage 184:=============================================>       (98 + 15) / 113][Stage 184:=================================================>   (106 + 7) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:================================>                    (69 + 45) / 114][Stage 185:========================================>            (88 + 26) / 114][Stage 185:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.395488142 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  par titionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367672082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=============================>                       (65 + 50) / 115][Stage 186:===================================>                 (76 + 39) / 115][Stage 186:===========================================>         (94 + 21) / 115][Stage 186:==================================================>  (109 + 6) / 115]                                                                                [Stage 187:================================>                    (71 + 45) / 116][Stage 187:==========================================>          (92 + 24) / 116][Stage 187:================================================>    (107 + 9) / 116][Stage 187:===================================================> (113 + 3) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.008087453 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118  OR  partitionIndex = 104 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 104 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343482628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===================================>                 (75 + 38) / 113][Stage 188:=======================================>             (85 + 28) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:==============================================>     (102 + 11) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=====================================>               (81 + 33) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:=============================================>       (98 + 16) / 114][Stage 189:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.10403823 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  p artitionIndex = 67  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332000812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:======================================>              (84 + 31) / 115][Stage 190:=============================================>       (99 + 16) / 115][Stage 190:===================================================> (112 + 3) / 115]                                                                                [Stage 191:=======================================>             (86 + 30) / 116][Stage 191:==========================================>          (94 + 22) / 116][Stage 191:=================================================>   (109 + 7) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.650372826 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  p artitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355411785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:===================================>                 (78 + 40) / 118][Stage 192:========================================>            (90 + 28) / 118][Stage 192:============================================>       (100 + 18) / 118][Stage 192:==================================================>  (112 + 6) / 118]                                                                                [Stage 193:================================>                    (73 + 46) / 119][Stage 193:==================================>                  (78 + 41) / 119][Stage 193:========================================>            (91 + 28) / 119][Stage 193:=============================================>      (105 + 14) / 119][Stage 193:==================================================>  (113 + 6) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.646570162 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36554272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (83 + 30) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:==============================================>     (100 + 13) / 113][Stage 194:===================================================> (110 + 3) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:==================================>                  (75 + 39) / 114][Stage 195:======================================>              (82 + 32) / 114][Stage 195:==========================================>          (92 + 22) / 114][Stage 195:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 2.992583754 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR   partitionIndex = 8  OR  partitionIndex = 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112  OR  partitionIndex = 8  OR  partitionIndex = 9 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346833293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (84 + 31) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:=================================================>   (108 + 7) / 115][Stage 196:==================================================>  (109 + 6) / 115]                                                                                [Stage 197:=======================================>             (86 + 30) / 116][Stage 197:==========================================>          (94 + 22) / 116][Stage 197:================================================>    (107 + 9) / 116][Stage 197:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.167639303 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  p artitionIndex = 40  OR  partitionIndex = 41 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 40  OR  partitionIndex = 41 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51304677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (67 + 48) / 115][Stage 198:====================================>                (79 + 36) / 115][Stage 198:=============================================>      (100 + 15) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:===============================>                     (68 + 48) / 116][Stage 199:====================================>                (80 + 36) / 116][Stage 199:=============================================>       (99 + 17) / 116][Stage 199:==============================================>     (104 + 12) / 116][Stage 199:===================================================> (113 + 3) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.05498205 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR   partitionIndex = 196  OR  partitionIndex = 182 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 182 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346399073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (71 + 42) / 113][Stage 200:======================================>              (82 + 31) / 113][Stage 200:=========================================>           (89 + 24) / 113][Stage 200:==============================================>      (99 + 14) / 113][Stage 200:====================================================>(111 + 2) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:=================================>                   (72 + 42) / 114][Stage 201:=======================================>             (85 + 29) / 114][Stage 201:=========================================>           (90 + 24) / 114][Stage 201:==================================================>  (108 + 6) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.204878538 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 00:42:02 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:48998) dropped. RpcEnv already stopped.
17/05/22 00:42:02 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:48998) dropped. RpcEnv already stopped.

real	10m37.258s
user	12m14.688s
sys	0m59.436s
