Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 10:03:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:03:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:03:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:03:18 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 10:03:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 10:03:31 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523100320-0552).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@25134e01

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.519945563 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========>                                             (20 + 95) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.445414761 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.675177444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (46 + 67) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:====================================>                  (74 + 39) / 113][Stage 2:======================================>                (80 + 33) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(111 + 2) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:==============================>                        (63 + 51) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:=========================================>             (85 + 29) / 114][Stage 3:===========================================>           (90 + 24) / 114][Stage 3:============================================>          (93 + 21) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.325282411 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.608218948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (65 + 53) / 118][Stage 4:===============================>                       (67 + 51) / 118][Stage 4:=================================>                     (71 + 47) / 118][Stage 4:==================================>                    (73 + 45) / 118][Stage 4:====================================>                  (78 + 40) / 118][Stage 4:=========================================>             (89 + 29) / 118][Stage 4:=============================================>        (100 + 18) / 118][Stage 4:===================================================>   (111 + 7) / 118][Stage 4:=====================================================> (115 + 3) / 118]                                                                                [Stage 5:=================================>                     (73 + 46) / 119][Stage 5:===================================>                   (76 + 43) / 119][Stage 5:=======================================>               (85 + 34) / 119][Stage 5:===========================================>           (95 + 24) / 119][Stage 5:=============================================>        (101 + 18) / 119][Stage 5:====================================================>  (113 + 6) / 119][Stage 5:=====================================================> (115 + 4) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.97249862 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.663958728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 60) / 120][Stage 6:============================>                          (63 + 57) / 120][Stage 6:=================================>                     (72 + 48) / 120][Stage 6:=====================================>                 (81 + 39) / 120][Stage 6:============================================>          (98 + 22) / 120][Stage 6:==================================================>    (111 + 9) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:============================>                          (63 + 58) / 121][Stage 7:===================================>                   (77 + 44) / 121][Stage 7:=========================================>             (91 + 30) / 121][Stage 7:=============================================>        (101 + 20) / 121][Stage 7:=================================================>    (110 + 11) / 121][Stage 7:===================================================>   (114 + 7) / 121][Stage 7:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 7.021775514 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.670078327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:=============================>                         (65 + 56) / 121][Stage 8:=================================>                     (73 + 48) / 121][Stage 8:==========================================>            (93 + 28) / 121][Stage 8:===================================================>   (114 + 7) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:=====================================>                 (83 + 39) / 122][Stage 9:============================================>          (98 + 24) / 122][Stage 9:===================================================>   (115 + 7) / 122][Stage 9:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.155858122 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.673582119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:==============================>                       (67 + 53) / 120][Stage 10:======================================>               (85 + 35) / 120][Stage 10:============================================>        (101 + 19) / 120][Stage 10:===================================================>  (115 + 5) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (65 + 56) / 121][Stage 11:=================================>                    (74 + 47) / 121][Stage 11:========================================>             (90 + 31) / 121][Stage 11:=============================================>       (104 + 17) / 121][Stage 11:================================================>    (111 + 10) / 121][Stage 11:=====================================================>(119 + 2) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.521694485 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616834715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:==============================>                       (69 + 52) / 121][Stage 12:======================================>               (86 + 35) / 121][Stage 12:==============================================>      (106 + 15) / 121][Stage 12:==================================================>   (114 + 7) / 121]                                                                                [Stage 13:===========================>                          (62 + 60) / 122][Stage 13:==============================>                       (70 + 52) / 122][Stage 13:======================================>               (86 + 36) / 122][Stage 13:============================================>        (102 + 20) / 122][Stage 13:================================================>    (112 + 10) / 122][Stage 13:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.706334343 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470985343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=================================>                    (70 + 43) / 113][Stage 14:====================================>                 (77 + 36) / 113][Stage 14:==========================================>           (88 + 25) / 113][Stage 14:=============================================>        (95 + 18) / 113][Stage 14:====================================================> (109 + 4) / 113]                                                                                [Stage 15:=====================================>                (79 + 35) / 114][Stage 15:=========================================>            (88 + 26) / 114][Stage 15:==============================================>       (98 + 16) / 114][Stage 15:===============================================>     (102 + 12) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:====================================================> (110 + 4) / 114][Stage 15:====================================================> (111 + 3) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.242505797 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611008577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:===================================>                  (74 + 39) / 113][Stage 16:==========================================>           (88 + 25) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:==============================>                       (65 + 49) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:==============================================>      (100 + 14) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.4399541 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542734235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (62 + 58) / 120][Stage 18:=================================>                    (74 + 46) / 120][Stage 18:============================================>         (98 + 22) / 120][Stage 18:==================================================>   (112 + 8) / 120][Stage 18:===================================================>  (115 + 5) / 120][Stage 18:=====================================================>(119 + 1) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:============================>                         (64 + 57) / 121][Stage 19:================================>                     (72 + 49) / 121][Stage 19:===========================================>          (98 + 23) / 121][Stage 19:==================================================>   (113 + 8) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.847263097 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549183836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:=================================>                    (74 + 46) / 120][Stage 20:========================================>             (91 + 29) / 120][Stage 20:===============================================>     (107 + 13) / 120][Stage 20:====================================================> (117 + 3) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:============================>                         (63 + 58) / 121][Stage 21:===================================>                  (79 + 42) / 121][Stage 21:==============================================>      (106 + 15) / 121][Stage 21:====================================================> (117 + 4) / 121][Stage 21:=====================================================>(119 + 2) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.318363746 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514550404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:===============================>                      (69 + 51) / 120][Stage 22:=======================================>              (87 + 33) / 120][Stage 22:==============================================>      (105 + 15) / 120][Stage 22:====================================================> (116 + 4) / 120][Stage 22:=====================================================>(118 + 2) / 120]                                                                                [Stage 23:============================>                         (63 + 58) / 121][Stage 23:=================================>                    (75 + 46) / 121][Stage 23:==========================================>           (96 + 25) / 121][Stage 23:================================================>    (110 + 11) / 121][Stage 23:=================================================>    (112 + 9) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.061048553 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521890268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (62 + 59) / 121][Stage 24:=================================>                    (76 + 45) / 121][Stage 24:=========================================>            (94 + 27) / 121][Stage 24:==================================================>   (114 + 7) / 121][Stage 24:====================================================> (118 + 3) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:===========================>                          (63 + 59) / 122][Stage 25:=====================================>                (84 + 38) / 122][Stage 25:===========================================>         (101 + 21) / 122][Stage 25:===================================================>  (116 + 6) / 122][Stage 25:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.94878553 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=118", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=118,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441067106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (70 + 43) / 113][Stage 26:=======================================>              (83 + 30) / 113][Stage 26:===========================================>          (90 + 23) / 113][Stage 26:================================================>    (103 + 10) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:=====================================>                (79 + 35) / 114][Stage 27:===========================================>          (91 + 23) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.242355466 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494791681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (61 + 60) / 121][Stage 28:=============================>                        (67 + 54) / 121][Stage 28:=======================================>              (89 + 32) / 121][Stage 28:===============================================>     (109 + 12) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:=============================>                        (67 + 55) / 122][Stage 29:====================================>                 (83 + 39) / 122][Stage 29:===========================================>          (99 + 23) / 122][Stage 29:==================================================>   (114 + 8) / 122][Stage 29:=====================================================>(120 + 2) / 122][Stage 29:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.351095491 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553013828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===========================>                          (62 + 59) / 121][Stage 30:================================>                     (73 + 48) / 121][Stage 30:=======================================>              (88 + 33) / 121][Stage 30:==============================================>      (106 + 15) / 121][Stage 30:===================================================>  (115 + 6) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:===============================>                      (71 + 51) / 122][Stage 31:=====================================>                (85 + 37) / 122][Stage 31:================================================>    (111 + 11) / 122][Stage 31:=====================================================>(120 + 2) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.245682638 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502202524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:=============================>                        (65 + 56) / 121][Stage 32:=================================>                    (76 + 45) / 121][Stage 32:========================================>             (90 + 31) / 121][Stage 32:===============================================>     (109 + 12) / 121][Stage 32:=====================================================>(119 + 2) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:=============================>                        (66 + 56) / 122][Stage 33:================================>                     (74 + 48) / 122][Stage 33:========================================>             (92 + 30) / 122][Stage 33:===================================================>  (117 + 5) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.334234516 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477298344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===================================>                  (74 + 39) / 113][Stage 34:==============================================>       (98 + 15) / 113][Stage 34:===================================================>  (107 + 6) / 113]                                                                                [Stage 35:============================>                         (61 + 53) / 114][Stage 35:==================================>                   (72 + 42) / 114][Stage 35:=========================================>            (88 + 26) / 114][Stage 35:================================================>    (104 + 10) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.307118368 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=178,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484240006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:===================================>                  (77 + 41) / 118][Stage 36:========================================>             (89 + 29) / 118][Stage 36:===============================================>     (106 + 12) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:====================================>                 (80 + 39) / 119][Stage 37:===========================================>          (95 + 24) / 119][Stage 37:================================================>    (108 + 11) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.603762213 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49793531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:=============================>                        (65 + 56) / 121][Stage 38:===================================>                  (80 + 41) / 121][Stage 38:============================================>        (101 + 20) / 121][Stage 38:====================================================> (118 + 3) / 121]                                                                                [Stage 39:===========================>                          (63 + 59) / 122][Stage 39:=================================>                    (76 + 46) / 122][Stage 39:===========================================>         (100 + 22) / 122][Stage 39:====================================================> (119 + 3) / 122][Stage 39:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.659695068 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57830169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (67 + 48) / 115][Stage 40:=====================================>                (79 + 36) / 115][Stage 40:==========================================>           (91 + 24) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:===================================================>  (110 + 5) / 115]                                                                                [Stage 41:=================================>                    (73 + 43) / 116][Stage 41:======================================>               (83 + 33) / 116][Stage 41:============================================>         (96 + 20) / 116][Stage 41:==============================================>      (102 + 14) / 116][Stage 41:===============================================>     (103 + 13) / 116][Stage 41:===============================================>     (105 + 11) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:==================================================>   (109 + 7) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.440578332 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485483429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:================================>                     (68 + 45) / 113][Stage 42:=========================================>            (87 + 26) / 113][Stage 42:==================================================>   (105 + 8) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:================================>                     (68 + 46) / 114][Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:===================================================>  (108 + 6) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(112 + 2) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.470685155 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399552032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=======================================>              (84 + 31) / 115][Stage 44:==============================================>      (100 + 15) / 115][Stage 44:==================================================>   (107 + 8) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:==========================================>           (91 + 25) / 116][Stage 45:==============================================>       (99 + 17) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.692053204 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485313789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:==============================>                       (64 + 49) / 113][Stage 46:======================================>               (80 + 33) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:============================>                         (61 + 53) / 114][Stage 47:=================================>                    (70 + 44) / 114][Stage 47:============================================>         (94 + 20) / 114][Stage 47:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.528768769 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418795914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (83 + 32) / 115][Stage 48:==============================================>       (98 + 17) / 115][Stage 48:===================================================>  (109 + 6) / 115][Stage 48:=====================================================>(113 + 2) / 115]                                                                                [Stage 49:=======================================>              (85 + 31) / 116][Stage 49:===========================================>          (93 + 23) / 116][Stage 49:===============================================>     (104 + 12) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.050413703 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487037974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:======================================>               (86 + 34) / 120][Stage 50:==============================================>      (105 + 15) / 120][Stage 50:===================================================>  (115 + 5) / 120]                                                                                [Stage 51:===========================>                          (62 + 59) / 121][Stage 51:================================>                     (72 + 49) / 121][Stage 51:=====================================>                (85 + 36) / 121][Stage 51:============================================>        (101 + 20) / 121][Stage 51:==================================================>   (113 + 8) / 121][Stage 51:==================================================>   (114 + 7) / 121][Stage 51:=====================================================>(119 + 2) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.8661938 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387985414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:>                                                       (0 + 0) / 113][Stage 52:==================================>                   (72 + 41) / 113][Stage 52:===========================================>          (90 + 23) / 113][Stage 52:==============================================>       (97 + 16) / 113][Stage 52:==================================================>   (106 + 7) / 113][Stage 52:=====================================================>(111 + 2) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:===================================>                  (74 + 40) / 114][Stage 53:======================================>               (82 + 32) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:==============================================>      (101 + 13) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.559079627 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380987172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (80 + 35) / 115][Stage 54:=======================================>              (85 + 30) / 115][Stage 54:=============================================>        (96 + 19) / 115][Stage 54:===================================================>  (109 + 6) / 115]                                                                                [Stage 55:=======================================>              (84 + 32) / 116][Stage 55:===========================================>          (93 + 23) / 116][Stage 55:=============================================>       (100 + 16) / 116][Stage 55:===============================================>     (104 + 12) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.028288911 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447737608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=============================>                        (61 + 52) / 113][Stage 56:==================================>                   (72 + 41) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:===============================================>     (101 + 12) / 113][Stage 56:===================================================>  (107 + 6) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:=================================>                    (71 + 43) / 114][Stage 57:=====================================>                (79 + 35) / 114][Stage 57:===========================================>          (91 + 23) / 114][Stage 57:==============================================>       (99 + 15) / 114][Stage 57:=====================================================>(112 + 2) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.133846405 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392607129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (73 + 45) / 118][Stage 58:====================================>                 (80 + 38) / 118][Stage 58:==========================================>           (92 + 26) / 118][Stage 58:=================================================>    (109 + 9) / 118][Stage 58:====================================================> (114 + 4) / 118]                                                                                [Stage 59:=================================>                    (74 + 45) / 119][Stage 59:==================================>                   (76 + 43) / 119][Stage 59:=====================================>                (82 + 37) / 119][Stage 59:==========================================>           (94 + 25) / 119][Stage 59:==============================================>      (105 + 14) / 119][Stage 59:====================================================> (116 + 3) / 119][Stage 59:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.189476065 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386265808 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:======================================>               (83 + 32) / 115][Stage 60:=============================================>        (96 + 19) / 115][Stage 60:================================================>    (105 + 10) / 115][Stage 60:=====================================================>(113 + 2) / 115]                                                                                [Stage 61:======================================>               (82 + 34) / 116][Stage 61:=============================================>        (98 + 18) / 116][Stage 61:================================================>    (106 + 10) / 116][Stage 61:====================================================> (112 + 4) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.880786954 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414212939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===============================>                      (67 + 48) / 115][Stage 62:=======================================>              (84 + 31) / 115][Stage 62:===============================================>     (103 + 12) / 115][Stage 62:===================================================>  (109 + 6) / 115]                                                                                [Stage 63:=================================>                    (71 + 45) / 116][Stage 63:========================================>             (88 + 28) / 116][Stage 63:==============================================>       (99 + 17) / 116][Stage 63:===============================================>     (105 + 11) / 116][Stage 63:====================================================> (113 + 3) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.327508058 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449400733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:===========================>                          (62 + 59) / 121][Stage 64:================================>                     (72 + 49) / 121][Stage 64:=======================================>              (89 + 32) / 121][Stage 64:===============================================>     (109 + 12) / 121][Stage 64:=====================================================>(119 + 2) / 121]                                                                                [Stage 65:============================>                         (64 + 58) / 122][Stage 65:==================================>                   (77 + 45) / 122][Stage 65:==========================================>           (97 + 25) / 122][Stage 65:==================================================>   (114 + 8) / 122][Stage 65:=====================================================>(120 + 2) / 122][Stage 65:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.410612079 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430077591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===============================>                      (67 + 48) / 115][Stage 66:===================================>                  (75 + 40) / 115][Stage 66:==========================================>           (90 + 25) / 115][Stage 66:=============================================>        (97 + 18) / 115][Stage 66:==================================================>   (107 + 8) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:=====================================>                (81 + 35) / 116][Stage 67:=========================================>            (90 + 26) / 116][Stage 67:=============================================>        (97 + 19) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:===================================================>  (111 + 5) / 116][Stage 67:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 8.75091537 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438475878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (71 + 44) / 115][Stage 68:=========================================>            (88 + 27) / 115][Stage 68:===============================================>     (103 + 12) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:===================================>                  (77 + 39) / 116][Stage 69:=========================================>            (90 + 26) / 116][Stage 69:================================================>    (106 + 10) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.942592632 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387400852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 34) / 115][Stage 70:=======================================>              (84 + 31) / 115][Stage 70:==============================================>       (99 + 16) / 115][Stage 70:=====================================================>(113 + 2) / 115]                                                                                [Stage 71:=====================================>                (80 + 36) / 116][Stage 71:========================================>             (86 + 30) / 116][Stage 71:=============================================>        (97 + 19) / 116][Stage 71:==================================================>   (109 + 7) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.806804633 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366101404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:==========================================>           (91 + 24) / 115][Stage 72:==================================================>   (108 + 7) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:======================================>               (83 + 33) / 116][Stage 73:===========================================>          (93 + 23) / 116][Stage 73:==================================================>   (108 + 8) / 116][Stage 73:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.62958418 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41146883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:================================>                     (68 + 45) / 113][Stage 74:=======================================>              (83 + 30) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:===================================================>  (107 + 6) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:==============================>                       (65 + 49) / 114][Stage 75:==================================>                   (73 + 41) / 114][Stage 75:==========================================>           (90 + 24) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:===================================================>  (109 + 5) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.34337196 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=132,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425190954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===========================>                          (61 + 59) / 120][Stage 76:=================================>                    (74 + 46) / 120][Stage 76:==============================================>      (106 + 14) / 120][Stage 76:====================================================> (117 + 3) / 120][Stage 76:=====================================================>(119 + 1) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:==================================>                   (78 + 43) / 121][Stage 77:============================================>         (99 + 22) / 121][Stage 77:===================================================>  (115 + 6) / 121][Stage 77:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.955270165 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423403889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==============================>                       (65 + 50) / 115][Stage 78:======================================>               (82 + 33) / 115][Stage 78:=============================================>        (97 + 18) / 115][Stage 78:=====================================================>(113 + 2) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:===============================>                      (67 + 49) / 116][Stage 79:=======================================>              (84 + 32) / 116][Stage 79:=============================================>       (100 + 16) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.010537271 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=22", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=22,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36806837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==================================>                   (72 + 41) / 113][Stage 80:=====================================>                (79 + 34) / 113][Stage 80:=========================================>            (87 + 26) / 113][Stage 80:===============================================>      (99 + 14) / 113][Stage 80:==================================================>   (106 + 7) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:====================================>                 (78 + 36) / 114][Stage 81:==========================================>           (90 + 24) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:====================================================> (110 + 4) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.604602269 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408279959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:============================>                         (60 + 53) / 113][Stage 82:======================================>               (80 + 33) / 113][Stage 82:==============================================>       (97 + 16) / 113][Stage 82:===================================================>  (108 + 5) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:===============================>                      (67 + 47) / 114][Stage 83:======================================>               (81 + 33) / 114][Stage 83:=============================================>        (97 + 17) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.54455607 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386407309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (71 + 42) / 113][Stage 84:======================================>               (80 + 33) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:=================================================>    (104 + 9) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:===================================>                  (75 + 39) / 114][Stage 85:=======================================>              (84 + 30) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:================================================>    (104 + 10) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.968686396 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40208312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:===============================>                      (65 + 48) / 113][Stage 86:=======================================>              (82 + 31) / 113][Stage 86:===================================================>  (107 + 6) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:==============================>                       (65 + 49) / 114][Stage 87:========================================>             (86 + 28) / 114][Stage 87:================================================>    (104 + 10) / 114][Stage 87:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.469656515 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422616426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:============================>                         (64 + 56) / 120][Stage 88:=====================================>                (84 + 36) / 120][Stage 88:===============================================>     (107 + 13) / 120]                                                                                [Stage 89:============================>                         (63 + 58) / 121][Stage 89:================================>                     (72 + 49) / 121][Stage 89:==========================================>           (95 + 26) / 121][Stage 89:================================================>    (111 + 10) / 121][Stage 89:====================================================> (117 + 4) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.985065745 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409665124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (70 + 45) / 115][Stage 90:=========================================>            (88 + 27) / 115][Stage 90:===============================================>     (104 + 11) / 115][Stage 90:====================================================> (111 + 4) / 115][Stage 90:=====================================================>(113 + 2) / 115]                                                                                [Stage 91:===============================>                      (68 + 48) / 116][Stage 91:=====================================>                (80 + 36) / 116][Stage 91:=============================================>       (100 + 16) / 116][Stage 91:================================================>    (106 + 10) / 116][Stage 91:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.224342182 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381366033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (73 + 40) / 113][Stage 92:=========================================>            (86 + 27) / 113][Stage 92:============================================>         (94 + 19) / 113][Stage 92:==================================================>   (106 + 7) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:=====================================>                (79 + 35) / 114][Stage 93:===========================================>          (92 + 22) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:==================================================>   (107 + 7) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.971017503 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410490307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:==============================>                       (68 + 53) / 121][Stage 94:=================================>                    (74 + 47) / 121][Stage 94:=========================================>            (93 + 28) / 121][Stage 94:===================================================>  (116 + 5) / 121]                                                                                [Stage 95:============================>                         (64 + 58) / 122][Stage 95:================================>                     (73 + 49) / 122][Stage 95:========================================>             (92 + 30) / 122][Stage 95:==================================================>   (113 + 9) / 122][Stage 95:====================================================> (119 + 3) / 122][Stage 95:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.388890205 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391040924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===================================>                  (76 + 39) / 115][Stage 96:=========================================>            (89 + 26) / 115][Stage 96:==============================================>      (101 + 14) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:================================>                     (70 + 46) / 116][Stage 97:==========================================>           (91 + 25) / 116][Stage 97:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.782777734 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364428618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (70 + 43) / 113][Stage 98:=========================================>            (86 + 27) / 113][Stage 98:=============================================>        (96 + 17) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:====================================>                 (77 + 37) / 114][Stage 99:=========================================>            (87 + 27) / 114][Stage 99:==============================================>      (101 + 13) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.77565281 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=8,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425515715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===========================>                         (63 + 57) / 120][Stage 100:===================================>                 (80 + 40) / 120][Stage 100:===========================================>        (101 + 19) / 120][Stage 100:====================================================>(119 + 1) / 120]                                                                                [Stage 101:==========================>                          (61 + 60) / 121][Stage 101:==============================>                      (70 + 51) / 121][Stage 101:======================================>              (87 + 34) / 121][Stage 101:=============================================>      (107 + 14) / 121][Stage 101:===================================================> (118 + 3) / 121][Stage 101:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.028940732 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353372542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=====================================>               (81 + 34) / 115][Stage 102:=========================================>           (89 + 26) / 115][Stage 102:=============================================>       (99 + 16) / 115][Stage 102:===================================================> (112 + 3) / 115]                                                                                [Stage 103:========================================>            (88 + 28) / 116][Stage 103:===========================================>         (95 + 21) / 116][Stage 103:================================================>    (107 + 9) / 116][Stage 103:==================================================>  (110 + 6) / 116][Stage 103:===================================================> (112 + 4) / 116][Stage 103:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.316302153 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359715082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===================================>                 (75 + 38) / 113][Stage 104:=========================================>           (89 + 24) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:===================================================> (110 + 3) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:====================================>                (79 + 35) / 114][Stage 105:=============================================>       (97 + 17) / 114][Stage 105:===============================================>    (104 + 10) / 114][Stage 105:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.016645809 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456993317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:==========================>                          (61 + 60) / 121][Stage 106:===============================>                     (73 + 48) / 121][Stage 106:=======================================>             (90 + 31) / 121][Stage 106:==================================================>  (115 + 6) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:============================>                        (65 + 57) / 122][Stage 107:===================================>                 (81 + 41) / 122][Stage 107:============================================>       (105 + 17) / 122][Stage 107:==================================================>  (116 + 6) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.091579342 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381731074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:====================================>                (77 + 36) / 113][Stage 108:=======================================>             (85 + 28) / 113][Stage 108:===========================================>         (93 + 20) / 113][Stage 108:==================================================>  (108 + 5) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:=================================>                   (73 + 41) / 114][Stage 109:======================================>              (82 + 32) / 114][Stage 109:==========================================>          (92 + 22) / 114][Stage 109:==============================================>     (102 + 12) / 114][Stage 109:==================================================>  (109 + 5) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.648402468 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362844652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (80 + 33) / 113][Stage 110:===========================================>         (92 + 21) / 113][Stage 110:==================================================>  (108 + 5) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:=====================================>               (81 + 33) / 114][Stage 111:============================================>        (95 + 19) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.985829449 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402554061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:==============================>                      (69 + 52) / 121][Stage 112:=======================================>             (90 + 31) / 121][Stage 112:===============================================>    (111 + 10) / 121][Stage 112:====================================================>(119 + 2) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:============================>                        (66 + 56) / 122][Stage 113:===================================>                 (81 + 41) / 122][Stage 113:============================================>       (105 + 17) / 122][Stage 113:===================================================> (118 + 4) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.297229767 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378495903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (75 + 40) / 115][Stage 114:==========================================>          (92 + 23) / 115][Stage 114:=================================================>   (107 + 8) / 115]                                                                                [Stage 115:===================================>                 (77 + 39) / 116][Stage 115:==========================================>          (93 + 23) / 116][Stage 115:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.609360572 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353149241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===================================>                 (76 + 37) / 113][Stage 116:=======================================>             (84 + 29) / 113][Stage 116:=============================================>       (97 + 16) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:=======================================>             (84 + 30) / 114][Stage 117:============================================>        (95 + 19) / 114][Stage 117:==============================================>     (101 + 13) / 114][Stage 117:=================================================>   (106 + 8) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.012641429 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355527828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (78 + 35) / 113][Stage 118:======================================>              (83 + 30) / 113][Stage 118:=============================================>       (96 + 17) / 113][Stage 118:==================================================>  (108 + 5) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:=====================================>               (81 + 33) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:==============================================>     (103 + 11) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.048800891 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404791088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:==================================>                  (77 + 43) / 120][Stage 120:==========================================>          (97 + 23) / 120][Stage 120:===================================================> (117 + 3) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:===============================>                     (71 + 50) / 121][Stage 121:=====================================>               (86 + 35) / 121][Stage 121:==============================================>     (108 + 13) / 121][Stage 121:====================================================>(119 + 2) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.86548989 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=16,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360494365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (75 + 43) / 118][Stage 122:======================================>              (85 + 33) / 118][Stage 122:============================================>        (99 + 19) / 118][Stage 122:=================================================>   (110 + 8) / 118][Stage 122:===================================================> (115 + 3) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:================================>                    (74 + 45) / 119][Stage 123:====================================>                (81 + 38) / 119][Stage 123:=========================================>           (94 + 25) / 119][Stage 123:===============================================>    (108 + 11) / 119][Stage 123:====================================================>(117 + 2) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.711725984 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357499335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=================================>                   (71 + 42) / 113][Stage 124:=====================================>               (80 + 33) / 113][Stage 124:==========================================>          (91 + 22) / 113][Stage 124:==============================================>     (102 + 11) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:=====================================>               (80 + 34) / 114][Stage 125:========================================>            (88 + 26) / 114][Stage 125:==============================================>     (101 + 13) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.061049971 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372352083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (74 + 39) / 113][Stage 126:======================================>              (83 + 30) / 113][Stage 126:=============================================>       (96 + 17) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:======================================>              (82 + 32) / 114][Stage 127:=========================================>           (90 + 24) / 114][Stage 127:===============================================>    (104 + 10) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.937254251 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386537489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:==============================>                      (64 + 49) / 113][Stage 128:=====================================>               (79 + 34) / 113][Stage 128:============================================>        (94 + 19) / 113][Stage 128:==================================================>  (107 + 6) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:===============================>                     (67 + 47) / 114][Stage 129:=====================================>               (80 + 34) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:===================================================> (111 + 3) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.103773859 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=11,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408353579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:==============================>                      (68 + 52) / 120][Stage 130:=====================================>               (86 + 34) / 120][Stage 130:=============================================>      (104 + 16) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:============================>                        (64 + 57) / 121][Stage 131:================================>                    (74 + 47) / 121][Stage 131:==========================================>          (98 + 23) / 121][Stage 131:===============================================>    (111 + 10) / 121][Stage 131:=================================================>   (113 + 8) / 121][Stage 131:===================================================> (118 + 3) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.855045869 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=219,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396768662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (62 + 58) / 120][Stage 132:==============================>                      (69 + 51) / 120][Stage 132:=========================================>           (93 + 27) / 120][Stage 132:===============================================>    (109 + 11) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:=============================>                       (68 + 53) / 121][Stage 133:====================================>                (84 + 37) / 121][Stage 133:==============================================>     (108 + 13) / 121][Stage 133:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.700109775 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413593136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (61 + 60) / 121][Stage 134:=================================>                   (76 + 45) / 121][Stage 134:============================================>       (104 + 17) / 121][Stage 134:===================================================> (117 + 4) / 121]                                                                                [Stage 135:===========================>                         (63 + 59) / 122][Stage 135:================================>                    (75 + 47) / 122][Stage 135:========================================>            (94 + 28) / 122][Stage 135:=================================================>   (114 + 8) / 122][Stage 135:====================================================>(120 + 2) / 122][Stage 135:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.335806088 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376169356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (75 + 43) / 118][Stage 136:=====================================>               (83 + 35) / 118][Stage 136:=============================================>      (103 + 15) / 118][Stage 136:====================================================>(117 + 1) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:====================================>                (82 + 37) / 119][Stage 137:===========================================>        (100 + 19) / 119][Stage 137:==================================================>  (113 + 6) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.366143635 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374978272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (71 + 44) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:==============================================>     (103 + 12) / 115][Stage 138:===============================================>    (105 + 10) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:===============================>                     (70 + 46) / 116][Stage 139:========================================>            (89 + 27) / 116][Stage 139:============================================>        (98 + 18) / 116][Stage 139:=================================================>   (109 + 7) / 116][Stage 139:====================================================>(114 + 2) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.40171273 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35920164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:==================================>                  (77 + 41) / 118][Stage 140:========================================>            (91 + 27) / 118][Stage 140:=============================================>      (104 + 14) / 118][Stage 140:====================================================>(116 + 2) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (78 + 41) / 119][Stage 141:====================================>                (83 + 36) / 119][Stage 141:=========================================>           (93 + 26) / 119][Stage 141:===============================================>    (108 + 11) / 119][Stage 141:==================================================>  (113 + 6) / 119][Stage 141:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.027264311 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373602407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=============================>                       (65 + 50) / 115][Stage 142:==================================>                  (75 + 40) / 115][Stage 142:=========================================>           (89 + 26) / 115][Stage 142:=============================================>       (99 + 16) / 115][Stage 142:=================================================>   (108 + 7) / 115]                                                                                [Stage 143:==================================>                  (75 + 41) / 116][Stage 143:=======================================>             (87 + 29) / 116][Stage 143:==============================================>     (103 + 13) / 116][Stage 143:===================================================> (112 + 4) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.095201139 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362857932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:=================================>                   (74 + 44) / 118][Stage 144:====================================>                (82 + 36) / 118][Stage 144:=========================================>           (93 + 25) / 118][Stage 144:==============================================>     (105 + 13) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:=====================================>               (84 + 35) / 119][Stage 145:========================================>            (91 + 28) / 119][Stage 145:============================================>       (102 + 17) / 119][Stage 145:===================================================> (115 + 4) / 119][Stage 145:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.898815796 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363207773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:==================================>                  (77 + 41) / 118][Stage 146:======================================>              (85 + 33) / 118][Stage 146:========================================>            (91 + 27) / 118][Stage 146:=================================================>   (110 + 8) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:====================================>                (83 + 36) / 119][Stage 147:=========================================>           (93 + 26) / 119][Stage 147:=============================================>      (103 + 16) / 119][Stage 147:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.703385924 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360984206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:=================================>                   (74 + 44) / 118][Stage 148:======================================>              (86 + 32) / 118][Stage 148:============================================>        (99 + 19) / 118][Stage 148:===============================================>    (107 + 11) / 118]                                                                                [Stage 149:=================================>                   (76 + 43) / 119][Stage 149:====================================>                (81 + 38) / 119][Stage 149:==========================================>          (96 + 23) / 119][Stage 149:=============================================>      (103 + 16) / 119][Stage 149:===================================================> (116 + 3) / 119][Stage 149:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.777260643 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350333091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (82 + 33) / 115][Stage 150:=========================================>           (90 + 25) / 115][Stage 150:=============================================>       (98 + 17) / 115][Stage 150:==================================================>  (110 + 5) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:=======================================>             (86 + 30) / 116][Stage 151:==============================================>     (104 + 12) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.740736714 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362877172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:====================================>                (81 + 37) / 118][Stage 152:============================================>       (102 + 16) / 118][Stage 152:=================================================>   (110 + 8) / 118]                                                                                [Stage 153:=================================>                   (76 + 43) / 119][Stage 153:=====================================>               (85 + 34) / 119][Stage 153:=============================================>      (105 + 14) / 119][Stage 153:===================================================> (116 + 3) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.839850925 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=238", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=238,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356097911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:====================================>                (81 + 37) / 118][Stage 154:===========================================>         (97 + 21) / 118][Stage 154:==============================================>     (106 + 12) / 118][Stage 154:===================================================> (115 + 3) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:====================================>                (82 + 37) / 119][Stage 155:=======================================>             (88 + 31) / 119][Stage 155:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.633093476 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399617871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (61 + 60) / 121][Stage 156:===============================>                     (71 + 50) / 121][Stage 156:====================================>                (83 + 38) / 121][Stage 156:============================================>       (103 + 18) / 121][Stage 156:===================================================> (117 + 4) / 121]                                                                                [Stage 157:==========================>                          (61 + 61) / 122][Stage 157:=============================>                       (68 + 54) / 122][Stage 157:==================================>                  (79 + 43) / 122][Stage 157:=======================================>             (91 + 31) / 122][Stage 157:=================================================>   (115 + 7) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.650687244 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395626318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (63 + 58) / 121][Stage 158:===================================>                 (80 + 41) / 121][Stage 158:========================================>            (93 + 28) / 121][Stage 158:=================================================>   (114 + 7) / 121]                                                                                [Stage 159:==========================>                          (62 + 60) / 122][Stage 159:================================>                    (74 + 48) / 122][Stage 159:=======================================>             (91 + 31) / 122][Stage 159:===============================================>    (112 + 10) / 122][Stage 159:===================================================> (119 + 3) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.178629458 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344709093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (82 + 33) / 115][Stage 160:==========================================>          (93 + 22) / 115][Stage 160:=================================================>   (107 + 8) / 115][Stage 160:====================================================>(113 + 2) / 115][Stage 160:====================================================>(114 + 1) / 115]                                                                                [Stage 161:=====================================>               (82 + 34) / 116][Stage 161:=========================================>           (91 + 25) / 116][Stage 161:=============================================>      (102 + 14) / 116][Stage 161:==================================================>  (111 + 5) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.911348284 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363724875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:===================================>                 (79 + 39) / 118][Stage 162:=========================================>           (93 + 25) / 118][Stage 162:===============================================>    (108 + 10) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (74 + 45) / 119][Stage 163:==================================>                  (78 + 41) / 119][Stage 163:===========================================>         (97 + 22) / 119][Stage 163:===============================================>    (109 + 10) / 119][Stage 163:===================================================> (115 + 4) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.639650597 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370496677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==============================>                      (66 + 49) / 115][Stage 164:===================================>                 (76 + 39) / 115][Stage 164:==========================================>          (93 + 22) / 115][Stage 164:=================================================>   (108 + 7) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:===================================>                 (78 + 38) / 116][Stage 165:===========================================>         (96 + 20) / 116][Stage 165:=================================================>   (109 + 7) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.902734257 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376615156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:==================================>                  (76 + 42) / 118][Stage 166:=======================================>             (88 + 30) / 118][Stage 166:=============================================>      (104 + 14) / 118][Stage 166:===================================================> (115 + 3) / 118]                                                                                [Stage 167:================================>                    (74 + 45) / 119][Stage 167:====================================>                (81 + 38) / 119][Stage 167:===========================================>        (100 + 19) / 119][Stage 167:==================================================>  (113 + 6) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.124482963 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370185715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:=================================>                   (74 + 44) / 118][Stage 168:=====================================>               (84 + 34) / 118][Stage 168:=======================================>             (89 + 29) / 118][Stage 168:=============================================>      (103 + 15) / 118][Stage 168:====================================================>(116 + 2) / 118]                                                                                [Stage 169:================================>                    (73 + 46) / 119][Stage 169:=================================>                   (76 + 43) / 119][Stage 169:=======================================>             (89 + 30) / 119][Stage 169:===========================================>        (100 + 19) / 119][Stage 169:==================================================>  (113 + 6) / 119][Stage 169:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.025208042 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427913682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (66 + 47) / 113][Stage 170:=====================================>               (79 + 34) / 113][Stage 170:==============================================>     (101 + 12) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:=================================>                   (71 + 43) / 114][Stage 171:=========================================>           (89 + 25) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.736278029 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40239798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 59) / 120][Stage 172:==============================>                      (68 + 52) / 120][Stage 172:=====================================>               (84 + 36) / 120][Stage 172:=============================================>      (105 + 15) / 120][Stage 172:===================================================> (116 + 4) / 120]                                                                                [Stage 173:============================>                        (65 + 56) / 121][Stage 173:===================================>                 (81 + 40) / 121][Stage 173:===========================================>        (101 + 20) / 121][Stage 173:==================================================>  (116 + 5) / 121][Stage 173:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.760739608 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338765554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (82 + 33) / 115][Stage 174:=========================================>           (89 + 26) / 115][Stage 174:=============================================>      (100 + 15) / 115][Stage 174:===================================================> (111 + 4) / 115]                                                                                [Stage 175:=======================================>             (87 + 29) / 116][Stage 175:============================================>        (98 + 18) / 116][Stage 175:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.700630943 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357429114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:===================================>                 (78 + 40) / 118][Stage 176:==========================================>          (94 + 24) / 118][Stage 176:=============================================>      (104 + 14) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (74 + 45) / 119][Stage 177:====================================>                (82 + 37) / 119][Stage 177:=========================================>           (93 + 26) / 119][Stage 177:=============================================>      (104 + 15) / 119][Stage 177:=================================================>   (112 + 7) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.918402456 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366087802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (64 + 51) / 115][Stage 178:=================================>                   (73 + 42) / 115][Stage 178:==========================================>          (92 + 23) / 115][Stage 178:==============================================>     (102 + 13) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:==================================>                  (76 + 40) / 116][Stage 179:========================================>            (88 + 28) / 116][Stage 179:================================================>    (107 + 9) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.051285175 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395310697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:===========================>                         (63 + 58) / 121][Stage 180:===================================>                 (82 + 39) / 121][Stage 180:==============================================>     (109 + 12) / 121]                                                                                [Stage 181:===========================>                         (63 + 59) / 122][Stage 181:==============================>                      (71 + 51) / 122][Stage 181:======================================>              (88 + 34) / 122][Stage 181:==============================================>     (108 + 14) / 122][Stage 181:==================================================>  (117 + 5) / 122][Stage 181:====================================================>(120 + 2) / 122][Stage 181:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.789058448 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385524786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (77 + 36) / 113][Stage 182:=========================================>           (88 + 25) / 113][Stage 182:==============================================>     (102 + 11) / 113][Stage 182:==================================================>  (107 + 6) / 113]                                                                                [Stage 183:=====================================>               (80 + 34) / 114][Stage 183:==========================================>          (91 + 23) / 114][Stage 183:================================================>    (105 + 9) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.9414211 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381508012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==============================>                      (67 + 48) / 115][Stage 184:======================================>              (84 + 31) / 115][Stage 184:=============================================>       (98 + 17) / 115][Stage 184:===============================================>    (105 + 10) / 115][Stage 184:==================================================>  (110 + 5) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:===============================>                     (69 + 47) / 116][Stage 185:======================================>              (85 + 31) / 116][Stage 185:=============================================>      (102 + 14) / 116][Stage 185:=================================================>   (109 + 7) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.198011508 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353342141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (71 + 42) / 113][Stage 186:====================================>                (78 + 35) / 113][Stage 186:========================================>            (87 + 26) / 113][Stage 186:==============================================>     (100 + 13) / 113][Stage 186:==================================================>  (108 + 5) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:==================================>                  (75 + 39) / 114][Stage 187:========================================>            (87 + 27) / 114][Stage 187:==============================================>     (102 + 12) / 114][Stage 187:=================================================>   (106 + 8) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.099066889 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358741698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:==================================>                  (76 + 42) / 118][Stage 188:=======================================>             (89 + 29) / 118][Stage 188:=============================================>      (103 + 15) / 118][Stage 188:=================================================>   (111 + 7) / 118][Stage 188:====================================================>(117 + 1) / 118]                                                                                [Stage 189:================================>                    (74 + 45) / 119][Stage 189:===================================>                 (80 + 39) / 119][Stage 189:============================================>        (99 + 20) / 119][Stage 189:===============================================>    (109 + 10) / 119][Stage 189:===================================================> (116 + 3) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.145500648 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376272195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=================================>                   (72 + 43) / 115][Stage 190:=====================================>               (82 + 33) / 115][Stage 190:=============================================>      (100 + 15) / 115][Stage 190:==================================================>  (109 + 6) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:===============================>                     (68 + 48) / 116][Stage 191:=====================================>               (83 + 33) / 116][Stage 191:============================================>        (98 + 18) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:==================================================>  (111 + 5) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.184447705 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386739509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:=============================>                       (67 + 53) / 120][Stage 192:======================================>              (87 + 33) / 120][Stage 192:=============================================>      (106 + 14) / 120][Stage 192:====================================================>(118 + 2) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:==============================>                      (70 + 51) / 121][Stage 193:=====================================>               (86 + 35) / 121][Stage 193:=============================================>      (105 + 16) / 121][Stage 193:====================================================>(119 + 2) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.424842391 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365903482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (73 + 40) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:=============================================>       (96 + 17) / 113][Stage 194:==================================================>  (107 + 6) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:==================================>                  (75 + 39) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:=============================================>      (100 + 14) / 114][Stage 195:==================================================>  (108 + 6) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.227754884 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341385542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (82 + 33) / 115][Stage 196:========================================>            (88 + 27) / 115][Stage 196:============================================>        (96 + 19) / 115][Stage 196:================================================>    (106 + 9) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:======================================>              (84 + 32) / 116][Stage 197:=======================================>             (87 + 29) / 116][Stage 197:===============================================>    (106 + 10) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:===================================================> (113 + 3) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.397194739 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392784888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (73 + 45) / 118][Stage 198:==================================>                  (77 + 41) / 118][Stage 198:=========================================>           (93 + 25) / 118][Stage 198:==============================================>     (106 + 12) / 118][Stage 198:===================================================> (115 + 3) / 118][Stage 198:====================================================>(117 + 1) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:==================================>                  (77 + 42) / 119][Stage 199:====================================>                (82 + 37) / 119][Stage 199:=======================================>             (89 + 30) / 119][Stage 199:=============================================>      (104 + 15) / 119][Stage 199:====================================================>(117 + 2) / 119][Stage 199:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.120617767 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389201476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:============================>                        (65 + 55) / 120][Stage 200:===================================>                 (80 + 40) / 120][Stage 200:===========================================>         (98 + 22) / 120][Stage 200:====================================================>(118 + 2) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:=============================>                       (67 + 54) / 121][Stage 201:====================================>                (84 + 37) / 121][Stage 201:==============================================>     (109 + 12) / 121][Stage 201:===================================================> (118 + 3) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.735150742 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/23 10:14:39 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:55450) dropped. RpcEnv already stopped.
17/05/23 10:14:39 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:49002) dropped. RpcEnv already stopped.
17/05/23 10:14:39 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:55450) dropped. RpcEnv already stopped.
17/05/23 10:14:39 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:49002) dropped. RpcEnv already stopped.

real	11m39.651s
user	12m24.704s
sys	1m27.100s
