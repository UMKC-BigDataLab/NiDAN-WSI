Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/23 09:01:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:02:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:02:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:02:12 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/23 09:02:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/23 09:02:25 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170523090214-0546).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.406881786 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.709337719 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.677032732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=========================>                             (55 + 63) / 118][Stage 2:============================>                          (62 + 56) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:==================================>                    (75 + 43) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:========================================>              (86 + 32) / 118][Stage 2:=============================================>        (100 + 18) / 118][Stage 2:=====================================================> (114 + 4) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (75 + 44) / 119][Stage 3:===================================>                   (77 + 42) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:=====================================>                 (82 + 37) / 119][Stage 3:=========================================>             (89 + 30) / 119][Stage 3:============================================>          (97 + 22) / 119][Stage 3:=================================================>    (109 + 10) / 119][Stage 3:===================================================>   (112 + 7) / 119][Stage 3:=====================================================> (116 + 3) / 119]                                                                                Time elapsed: 5.589972512 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.727610548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (71 + 47) / 118][Stage 4:==================================>                    (73 + 45) / 118][Stage 4:====================================>                  (78 + 40) / 118][Stage 4:=========================================>             (89 + 29) / 118][Stage 4:=============================================>        (100 + 18) / 118][Stage 4:=====================================================> (114 + 4) / 118]                                                                                [Stage 5:================================>                      (71 + 48) / 119][Stage 5:===================================>                   (77 + 42) / 119][Stage 5:=========================================>             (89 + 30) / 119][Stage 5:=============================================>         (99 + 20) / 119][Stage 5:===================================================>   (111 + 8) / 119][Stage 5:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.982880893 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.678811098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (59 + 56) / 115][Stage 6:===================================>                   (74 + 41) / 115][Stage 6:====================================>                  (77 + 38) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:==============================================>       (100 + 15) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:=====================================================> (112 + 3) / 115][Stage 6:======================================================>(113 + 2) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:===================================>                   (75 + 41) / 116][Stage 7:=======================================>               (83 + 33) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:================================================>     (104 + 12) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.149728247 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.645589137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:==============================>                        (66 + 55) / 121][Stage 8:==================================>                    (75 + 46) / 121][Stage 8:=========================================>             (92 + 29) / 121][Stage 8:=============================================>        (101 + 20) / 121][Stage 8:=================================================>    (110 + 11) / 121][Stage 8:=====================================================> (117 + 4) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:================================>                      (72 + 50) / 122][Stage 9:========================================>              (89 + 33) / 122][Stage 9:==============================================>       (106 + 16) / 122][Stage 9:==================================================>    (113 + 9) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.243481193 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.61058309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:================================>                     (69 + 44) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:===================================================>  (107 + 6) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:==============================>                       (64 + 50) / 114][Stage 11:===================================>                  (74 + 40) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:==================================================>   (106 + 8) / 114][Stage 11:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.689087797 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549078922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===================================>                  (75 + 38) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:====================================>                 (76 + 38) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.135289803 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554337637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (59 + 61) / 120][Stage 14:===========================>                          (60 + 60) / 120][Stage 14:=============================>                        (65 + 55) / 120][Stage 14:===================================>                  (78 + 42) / 120][Stage 14:============================================>        (100 + 20) / 120][Stage 14:==================================================>   (112 + 8) / 120][Stage 14:====================================================> (116 + 4) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:=============================>                        (66 + 55) / 121][Stage 15:===================================>                  (80 + 41) / 121][Stage 15:========================================>             (91 + 30) / 121][Stage 15:============================================>        (102 + 19) / 121][Stage 15:=================================================>    (112 + 9) / 121][Stage 15:=====================================================>(119 + 2) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.207102104 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:================================>                     (68 + 45) / 113][Stage 16:===========================================>          (91 + 22) / 113][Stage 16:===================================================>  (107 + 6) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:==============================>                       (65 + 49) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:=============================================>        (97 + 17) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.255015609 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.581481521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:============================>                         (63 + 58) / 121][Stage 18:================================>                     (73 + 48) / 121][Stage 18:=========================================>            (94 + 27) / 121][Stage 18:===============================================>     (109 + 12) / 121][Stage 18:====================================================> (117 + 4) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:============================>                         (65 + 57) / 122][Stage 19:======================================>               (86 + 36) / 122][Stage 19:==============================================>      (108 + 14) / 122][Stage 19:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.47037387 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521251197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:=================================>                    (73 + 45) / 118][Stage 20:=====================================>                (81 + 37) / 118][Stage 20:===========================================>          (96 + 22) / 118][Stage 20:=============================================>       (101 + 17) / 118][Stage 20:==================================================>   (110 + 8) / 118]                                                                                [Stage 21:==================================>                   (75 + 44) / 119][Stage 21:=====================================>                (83 + 36) / 119][Stage 21:============================================>         (99 + 20) / 119][Stage 21:====================================================> (115 + 4) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.412641873 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491425125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (68 + 45) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:==================================================>   (105 + 8) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===============================>                      (67 + 47) / 114][Stage 23:========================================>             (86 + 28) / 114][Stage 23:==============================================>      (100 + 14) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129054886 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527491976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:=============================>                        (66 + 55) / 121][Stage 24:==================================>                   (78 + 43) / 121][Stage 24:==============================================>      (106 + 15) / 121][Stage 24:=====================================================>(119 + 2) / 121][Stage 24:=====================================================>(120 + 1) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:=============================>                        (67 + 55) / 122][Stage 25:==================================>                   (77 + 45) / 122][Stage 25:============================================>        (102 + 20) / 122][Stage 25:===================================================>  (117 + 5) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.546888746 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511321986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:=============================>                        (67 + 54) / 121][Stage 26:========================================>             (91 + 30) / 121][Stage 26:================================================>    (111 + 10) / 121][Stage 26:====================================================> (117 + 4) / 121]                                                                                [Stage 27:===========================>                          (63 + 59) / 122][Stage 27:=================================>                    (76 + 46) / 122][Stage 27:===========================================>          (98 + 24) / 122][Stage 27:==================================================>   (115 + 7) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.693469495 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510600404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (66 + 54) / 120][Stage 28:=====================================>                (84 + 36) / 120][Stage 28:===============================================>     (107 + 13) / 120][Stage 28:====================================================> (116 + 4) / 120][Stage 28:====================================================> (117 + 3) / 120]                                                                                [Stage 29:============================>                         (63 + 58) / 121][Stage 29:====================================>                 (81 + 40) / 121][Stage 29:==============================================>      (107 + 14) / 121][Stage 29:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.451836857 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.585073293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:============================>                         (60 + 53) / 113][Stage 30:================================>                     (67 + 46) / 113][Stage 30:==========================================>           (88 + 25) / 113][Stage 30:===================================================>  (107 + 6) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:==============================>                       (65 + 49) / 114][Stage 31:===========================================>          (91 + 23) / 114][Stage 31:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.144696795 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47950313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:=============================>                        (62 + 51) / 113][Stage 32:===================================>                  (75 + 38) / 113][Stage 32:==============================================>       (98 + 15) / 113][Stage 32:=================================================>    (104 + 9) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:==============================>                       (64 + 50) / 114][Stage 33:====================================>                 (76 + 38) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:=============================================>        (96 + 18) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.654859839 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459214507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:====================================>                 (77 + 36) / 113][Stage 34:========================================>             (85 + 28) / 113][Stage 34:=================================================>    (104 + 9) / 113]                                                                                [Stage 35:====================================>                 (76 + 38) / 114][Stage 35:========================================>             (85 + 29) / 114][Stage 35:==============================================>       (99 + 15) / 114][Stage 35:===================================================>  (108 + 6) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.067881402 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611125513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=============================>                        (62 + 51) / 113][Stage 36:=====================================>                (78 + 35) / 113][Stage 36:==============================================>      (100 + 13) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:===============================>                      (67 + 47) / 114][Stage 37:====================================>                 (78 + 36) / 114][Stage 37:============================================>         (93 + 21) / 114][Stage 37:==================================================>   (106 + 8) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.170967098 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49930789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (61 + 59) / 120][Stage 38:===============================>                      (70 + 50) / 120][Stage 38:====================================>                 (82 + 38) / 120][Stage 38:============================================>        (100 + 20) / 120][Stage 38:====================================================> (117 + 3) / 120]                                                                                [Stage 39:=============================>                        (65 + 56) / 121][Stage 39:=================================>                    (76 + 45) / 121][Stage 39:=========================================>            (94 + 27) / 121][Stage 39:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.114104244 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408984873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=====================================>                (80 + 35) / 115][Stage 40:=========================================>            (88 + 27) / 115][Stage 40:==================================================>   (107 + 8) / 115]                                                                                [Stage 41:======================================>               (83 + 33) / 116][Stage 41:=========================================>            (90 + 26) / 116][Stage 41:==================================================>   (108 + 8) / 116][Stage 41:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.64294054 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494854356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===========================>                          (61 + 59) / 120][Stage 42:==============================>                       (67 + 53) / 120][Stage 42:========================================>             (90 + 30) / 120][Stage 42:=================================================>    (111 + 9) / 120][Stage 42:=====================================================>(118 + 2) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:=============================>                        (66 + 55) / 121][Stage 43:=====================================>                (83 + 38) / 121][Stage 43:================================================>    (111 + 10) / 121][Stage 43:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.294518058 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474109374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:==============================>                       (63 + 50) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:===============================================>      (99 + 14) / 113][Stage 44:===================================================>  (107 + 6) / 113]                                                                                [Stage 45:=============================>                        (62 + 52) / 114][Stage 45:===================================>                  (74 + 40) / 114][Stage 45:===============================================>     (102 + 12) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.042966147 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400934269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=====================================>                (78 + 35) / 113][Stage 46:===========================================>          (91 + 22) / 113][Stage 46:==============================================>      (100 + 13) / 113][Stage 46:===================================================>  (108 + 5) / 113]                                                                                [Stage 47:====================================>                 (76 + 38) / 114][Stage 47:=========================================>            (87 + 27) / 114][Stage 47:==============================================>       (98 + 16) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.558167988 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.619224418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:=============================>                        (65 + 56) / 121][Stage 48:==================================>                   (77 + 44) / 121][Stage 48:===========================================>         (100 + 21) / 121][Stage 48:====================================================> (118 + 3) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:============================>                         (65 + 57) / 122][Stage 49:==================================>                   (79 + 43) / 122][Stage 49:=============================================>       (105 + 17) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.165456084 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382215231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:======================================>               (83 + 32) / 115][Stage 50:=============================================>        (97 + 18) / 115][Stage 50:==================================================>   (108 + 7) / 115]                                                                                [Stage 51:======================================>               (82 + 34) / 116][Stage 51:===========================================>          (94 + 22) / 116][Stage 51:================================================>    (106 + 10) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.678041151 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432798167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:=============================>                        (61 + 52) / 113][Stage 52:======================================>               (80 + 33) / 113][Stage 52:===============================================>      (99 + 14) / 113][Stage 52:===================================================>  (108 + 5) / 113]                                                                                [Stage 53:============================>                         (61 + 53) / 114][Stage 53:====================================>                 (77 + 37) / 114][Stage 53:==========================================>           (90 + 24) / 114][Stage 53:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.140452949 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444014942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:>                                                       (0 + 0) / 113][Stage 54:===========================>                          (58 + 55) / 113][Stage 54:================================>                     (67 + 46) / 113][Stage 54:======================================>               (81 + 32) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:===================================>                  (75 + 39) / 114][Stage 55:============================================>         (93 + 21) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.298545854 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453565851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:==============================>                       (64 + 49) / 113][Stage 56:===================================>                  (75 + 38) / 113][Stage 56:============================================>         (93 + 20) / 113][Stage 56:==================================================>   (105 + 8) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===========================>                          (58 + 56) / 114][Stage 57:===============================>                      (66 + 48) / 114][Stage 57:======================================>               (81 + 33) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:===================================================>  (109 + 5) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.536623485 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367555827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=====================================>                (80 + 35) / 115][Stage 58:============================================>         (94 + 21) / 115][Stage 58:===============================================>     (102 + 13) / 115][Stage 58:====================================================> (111 + 4) / 115]                                                                                [Stage 59:========================================>             (86 + 30) / 116][Stage 59:============================================>         (95 + 21) / 116][Stage 59:================================================>    (106 + 10) / 116][Stage 59:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.092483023 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=178", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=178,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415854795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (74 + 44) / 118][Stage 60:========================================>             (88 + 30) / 118][Stage 60:===============================================>     (106 + 12) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:=====================================>                (82 + 37) / 119][Stage 61:============================================>        (100 + 19) / 119][Stage 61:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.007081101 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418738244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (71 + 42) / 113][Stage 62:=====================================>                (79 + 34) / 113][Stage 62:===========================================>          (92 + 21) / 113][Stage 62:================================================>    (103 + 10) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:====================================>                 (77 + 37) / 114][Stage 63:===========================================>          (91 + 23) / 114][Stage 63:==============================================>      (101 + 13) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.070825298 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364565838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:======================================>               (83 + 32) / 115][Stage 64:============================================>         (95 + 20) / 115][Stage 64:=================================================>    (106 + 9) / 115][Stage 64:===================================================>  (110 + 5) / 115]                                                                                [Stage 65:=======================================>              (85 + 31) / 116][Stage 65:===========================================>          (93 + 23) / 116][Stage 65:================================================>    (106 + 10) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.862988401 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400452108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (78 + 35) / 113][Stage 66:==========================================>           (89 + 24) / 113][Stage 66:============================================>         (93 + 20) / 113][Stage 66:==================================================>   (106 + 7) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:====================================>                 (76 + 38) / 114][Stage 67:=======================================>              (83 + 31) / 114][Stage 67:===========================================>          (92 + 22) / 114][Stage 67:===============================================>     (102 + 12) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.300028502 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423126358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (64 + 51) / 115][Stage 68:=================================>                    (72 + 43) / 115][Stage 68:=========================================>            (88 + 27) / 115][Stage 68:===============================================>     (103 + 12) / 115][Stage 68:=================================================>    (106 + 9) / 115][Stage 68:====================================================> (112 + 3) / 115]                                                                                [Stage 69:==================================>                   (75 + 41) / 116][Stage 69:=======================================>              (85 + 31) / 116][Stage 69:=============================================>        (97 + 19) / 116][Stage 69:=================================================>    (107 + 9) / 116][Stage 69:===================================================>  (111 + 5) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.068089938 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451754206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:=============================>                        (65 + 55) / 120][Stage 70:=====================================>                (84 + 36) / 120][Stage 70:================================================>    (110 + 10) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:=================================>                    (74 + 47) / 121][Stage 71:=======================================>              (88 + 33) / 121][Stage 71:================================================>    (110 + 11) / 121][Stage 71:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.102029555 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422730196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===============================>                      (66 + 47) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:================================================>    (103 + 10) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:============================>                         (61 + 53) / 114][Stage 73:==================================>                   (73 + 41) / 114][Stage 73:==========================================>           (89 + 25) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.322428492 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53132083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:============================>                         (63 + 57) / 120][Stage 74:===================================>                  (79 + 41) / 120][Stage 74:=============================================>       (104 + 16) / 120][Stage 74:====================================================> (116 + 4) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:==============================>                       (68 + 53) / 121][Stage 75:==================================>                   (77 + 44) / 121][Stage 75:============================================>         (99 + 22) / 121][Stage 75:====================================================> (117 + 4) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.191061009 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410105558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (72 + 41) / 113][Stage 76:=========================================>            (87 + 26) / 113][Stage 76:============================================>         (93 + 20) / 113][Stage 76:=================================================>    (104 + 9) / 113][Stage 76:====================================================> (110 + 3) / 113]                                                                                [Stage 77:====================================>                 (78 + 36) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:==============================================>       (98 + 16) / 114][Stage 77:=================================================>    (105 + 9) / 114][Stage 77:====================================================> (111 + 3) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.450784107 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407807912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (61 + 52) / 113][Stage 78:=======================================>              (83 + 30) / 113][Stage 78:==================================================>   (106 + 7) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:======================================>               (81 + 33) / 114][Stage 79:=================================================>    (105 + 9) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.035960754 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359965404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (83 + 32) / 115][Stage 80:=============================================>        (97 + 18) / 115][Stage 80:=================================================>    (106 + 9) / 115][Stage 80:====================================================> (112 + 3) / 115]                                                                                [Stage 81:======================================>               (83 + 33) / 116][Stage 81:============================================>         (96 + 20) / 116][Stage 81:================================================>    (106 + 10) / 116][Stage 81:====================================================> (112 + 4) / 116][Stage 81:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.283424914 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376388575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (81 + 32) / 113][Stage 82:===========================================>          (90 + 23) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:===================================>                  (75 + 39) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:=============================================>        (97 + 17) / 114][Stage 83:=================================================>    (105 + 9) / 114][Stage 83:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.942734509 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42364496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:===========================>                          (61 + 60) / 121][Stage 84:=================================>                    (75 + 46) / 121][Stage 84:=============================================>       (105 + 16) / 121][Stage 84:=====================================================>(120 + 1) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:=============================>                        (66 + 56) / 122][Stage 85:================================>                     (73 + 49) / 122][Stage 85:=========================================>            (94 + 28) / 122][Stage 85:==================================================>   (113 + 9) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.224876156 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423097298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (64 + 57) / 121][Stage 86:==================================>                   (77 + 44) / 121][Stage 86:==========================================>           (95 + 26) / 121][Stage 86:===================================================>  (116 + 5) / 121][Stage 86:=====================================================>(119 + 2) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:=============================>                        (67 + 55) / 122][Stage 87:=====================================>                (85 + 37) / 122][Stage 87:===========================================>          (99 + 23) / 122][Stage 87:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.583678317 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424907703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (61 + 60) / 121][Stage 88:===============================>                      (71 + 50) / 121][Stage 88:========================================>             (91 + 30) / 121][Stage 88:==================================================>   (114 + 7) / 121][Stage 88:=====================================================>(119 + 2) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:==============================>                       (68 + 54) / 122][Stage 89:===================================>                  (80 + 42) / 122][Stage 89:===========================================>         (100 + 22) / 122][Stage 89:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.116335084 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425642866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (66 + 54) / 120][Stage 90:==================================>                   (77 + 43) / 120][Stage 90:===========================================>          (96 + 24) / 120][Stage 90:===================================================>  (114 + 6) / 120]                                                                                [Stage 91:==============================>                       (69 + 52) / 121][Stage 91:==================================>                   (77 + 44) / 121][Stage 91:============================================>         (99 + 22) / 121][Stage 91:==================================================>   (113 + 8) / 121][Stage 91:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.298785124 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414359551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:=============================>                        (62 + 51) / 113][Stage 92:======================================>               (80 + 33) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:=============================>                        (63 + 51) / 114][Stage 93:====================================>                 (78 + 36) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.094557438 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508062979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (61 + 60) / 121][Stage 94:=================================>                    (74 + 47) / 121][Stage 94:========================================>             (91 + 30) / 121][Stage 94:===============================================>     (108 + 13) / 121][Stage 94:=====================================================>(120 + 1) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:============================>                         (65 + 57) / 122][Stage 95:===================================>                  (80 + 42) / 122][Stage 95:============================================>        (103 + 19) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.093632756 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42336784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:==============================>                       (69 + 52) / 121][Stage 96:=======================================>              (89 + 32) / 121][Stage 96:==============================================>      (107 + 14) / 121][Stage 96:=====================================================>(120 + 1) / 121]                                                                                [Stage 97:===========================>                          (61 + 61) / 122][Stage 97:===============================>                      (72 + 50) / 122][Stage 97:========================================>             (91 + 31) / 122][Stage 97:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.196764732 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426055328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (62 + 59) / 121][Stage 98:================================>                     (72 + 49) / 121][Stage 98:===========================================>          (97 + 24) / 121][Stage 98:==================================================>   (114 + 7) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:=============================>                        (67 + 55) / 122][Stage 99:======================================>               (86 + 36) / 122][Stage 99:==============================================>      (108 + 14) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.149936929 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380791369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:=====================================>               (83 + 35) / 118][Stage 100:============================================>       (102 + 16) / 118][Stage 100:===================================================> (115 + 3) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:======================================>              (86 + 33) / 119][Stage 101:===========================================>        (100 + 19) / 119][Stage 101:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 2.971863603 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435757437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:============================>                        (65 + 55) / 120][Stage 102:===================================>                 (80 + 40) / 120][Stage 102:===========================================>         (98 + 22) / 120][Stage 102:===================================================> (116 + 4) / 120]                                                                                [Stage 103:===========================>                         (63 + 58) / 121][Stage 103:===============================>                     (72 + 49) / 121][Stage 103:===========================================>         (99 + 22) / 121][Stage 103:==================================================>  (116 + 5) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.140734522 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416728919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 61) / 121][Stage 104:==============================>                      (70 + 51) / 121][Stage 104:======================================>              (88 + 33) / 121][Stage 104:==============================================>     (109 + 12) / 121]                                                                                [Stage 105:==========================>                          (62 + 60) / 122][Stage 105:=============================>                       (68 + 54) / 122][Stage 105:======================================>              (88 + 34) / 122][Stage 105:===============================================>    (111 + 11) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.106331057 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40726565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:==============================>                      (69 + 52) / 121][Stage 106:======================================>              (87 + 34) / 121][Stage 106:==============================================>     (108 + 13) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:================================>                    (74 + 48) / 122][Stage 107:======================================>              (88 + 34) / 122][Stage 107:==============================================>     (108 + 14) / 122][Stage 107:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.057111106 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416540839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (63 + 58) / 121][Stage 108:================================>                    (74 + 47) / 121][Stage 108:===========================================>         (99 + 22) / 121][Stage 108:====================================================>(119 + 2) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:============================>                        (66 + 56) / 122][Stage 109:==================================>                  (80 + 42) / 122][Stage 109:============================================>       (104 + 18) / 122][Stage 109:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.004311165 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360862568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:>                                                      (0 + 0) / 113][Stage 110:==================================>                  (73 + 40) / 113][Stage 110:========================================>            (86 + 27) / 113][Stage 110:==============================================>      (99 + 14) / 113][Stage 110:===================================================> (109 + 4) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:=======================================>             (85 + 29) / 114][Stage 111:===========================================>         (94 + 20) / 114][Stage 111:==============================================>     (101 + 13) / 114][Stage 111:===================================================> (110 + 4) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.164860538 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383621538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==============================>                      (67 + 48) / 115][Stage 112:=======================================>             (86 + 29) / 115][Stage 112:==============================================>     (103 + 12) / 115][Stage 112:===================================================> (112 + 3) / 115]                                                                                [Stage 113:==================================>                  (75 + 41) / 116][Stage 113:==========================================>          (92 + 24) / 116][Stage 113:==================================================>  (110 + 6) / 116][Stage 113:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.839039098 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402008454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:================================>                    (74 + 46) / 120][Stage 114:=========================================>           (93 + 27) / 120][Stage 114:===============================================>    (109 + 11) / 120][Stage 114:====================================================>(119 + 1) / 120]                                                                                [Stage 115:===========================>                         (63 + 58) / 121][Stage 115:================================>                    (75 + 46) / 121][Stage 115:==========================================>          (96 + 25) / 121][Stage 115:==================================================>  (116 + 5) / 121][Stage 115:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.236130418 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387839211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:===============================>                     (68 + 45) / 113][Stage 116:====================================>                (77 + 36) / 113][Stage 116:================================================>    (104 + 9) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:============================>                        (61 + 53) / 114][Stage 117:===============================>                     (68 + 46) / 114][Stage 117:=====================================>               (80 + 34) / 114][Stage 117:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.155624091 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412161765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:==========================>                          (61 + 59) / 120][Stage 118:===================================>                 (80 + 40) / 120][Stage 118:===========================================>        (101 + 19) / 120][Stage 118:====================================================>(118 + 2) / 120]                                                                                [Stage 119:==========================>                          (61 + 60) / 121][Stage 119:===============================>                     (71 + 50) / 121][Stage 119:======================================>              (87 + 34) / 121][Stage 119:=============================================>      (107 + 14) / 121][Stage 119:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.969738441 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347988648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:====================================>                (80 + 35) / 115][Stage 120:========================================>            (87 + 28) / 115][Stage 120:============================================>        (97 + 18) / 115][Stage 120:===============================================>    (105 + 10) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:=====================================>               (83 + 33) / 116][Stage 121:========================================>            (89 + 27) / 116][Stage 121:=============================================>       (99 + 17) / 116][Stage 121:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.953030629 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505600373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (61 + 59) / 120][Stage 122:================================>                    (74 + 46) / 120][Stage 122:===========================================>         (98 + 22) / 120][Stage 122:===================================================> (116 + 4) / 120]                                                                                [Stage 123:============================>                        (64 + 57) / 121][Stage 123:=================================>                   (76 + 45) / 121][Stage 123:==========================================>          (97 + 24) / 121][Stage 123:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.06033306 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342369632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (81 + 34) / 115][Stage 124:=========================================>           (90 + 25) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:=================================================>   (108 + 7) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (82 + 34) / 116][Stage 125:===========================================>         (95 + 21) / 116][Stage 125:===============================================>    (105 + 11) / 116][Stage 125:===================================================> (112 + 4) / 116][Stage 125:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.185824545 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343059114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:====================================>                (80 + 35) / 115][Stage 126:=========================================>           (89 + 26) / 115][Stage 126:=============================================>      (101 + 14) / 115][Stage 126:=================================================>   (108 + 7) / 115]                                                                                [Stage 127:======================================>              (85 + 31) / 116][Stage 127:=============================================>       (99 + 17) / 116][Stage 127:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.640823992 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402405637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 61) / 121][Stage 128:=============================>                       (68 + 53) / 121][Stage 128:=====================================>               (85 + 36) / 121][Stage 128:===============================================>    (111 + 10) / 121]                                                                                [Stage 129:============================>                        (65 + 57) / 122][Stage 129:=================================>                   (76 + 46) / 122][Stage 129:==========================================>         (100 + 22) / 122][Stage 129:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.004394609 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359153164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=================================>                   (72 + 41) / 113][Stage 130:=======================================>             (84 + 29) / 113][Stage 130:=============================================>       (97 + 16) / 113][Stage 130:==================================================>  (107 + 6) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:==================================>                  (75 + 39) / 114][Stage 131:=========================================>           (90 + 24) / 114][Stage 131:==============================================>     (102 + 12) / 114][Stage 131:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.836372194 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403916241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:===========================>                         (63 + 58) / 121][Stage 132:==================================>                  (79 + 42) / 121][Stage 132:============================================>       (104 + 17) / 121][Stage 132:====================================================>(119 + 2) / 121]                                                                                [Stage 133:==========================>                          (62 + 60) / 122][Stage 133:=============================>                       (68 + 54) / 122][Stage 133:===================================>                 (81 + 41) / 122][Stage 133:==========================================>         (100 + 22) / 122][Stage 133:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.064694515 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381374632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (61 + 52) / 113][Stage 134:==============================>                      (66 + 47) / 113][Stage 134:======================================>              (83 + 30) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:===============================>                     (68 + 46) / 114][Stage 135:===================================>                 (77 + 37) / 114][Stage 135:==============================================>     (102 + 12) / 114][Stage 135:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.181007113 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405648346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:==========================>                          (61 + 59) / 120][Stage 136:==================================>                  (79 + 41) / 120][Stage 136:===========================================>        (100 + 20) / 120][Stage 136:====================================================>(119 + 1) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:=============================>                       (67 + 54) / 121][Stage 137:======================================>              (87 + 34) / 121][Stage 137:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.888020974 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412843349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 61) / 121][Stage 138:============================>                        (65 + 56) / 121][Stage 138:===================================>                 (81 + 40) / 121][Stage 138:==============================================>     (109 + 12) / 121][Stage 138:====================================================>(120 + 1) / 121]                                                                                [Stage 139:==========================>                          (61 + 61) / 122][Stage 139:=============================>                       (67 + 55) / 122][Stage 139:===================================>                 (81 + 41) / 122][Stage 139:===========================================>        (103 + 19) / 122][Stage 139:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.963674726 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338282919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (82 + 33) / 115][Stage 140:=======================================>             (86 + 29) / 115][Stage 140:=============================================>      (100 + 15) / 115][Stage 140:==================================================>  (109 + 6) / 115][Stage 140:====================================================>(113 + 2) / 115]                                                                                [Stage 141:=====================================>               (83 + 33) / 116][Stage 141:==========================================>          (93 + 23) / 116][Stage 141:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.782069788 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338754441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:====================================>                (79 + 36) / 115][Stage 142:======================================>              (84 + 31) / 115][Stage 142:============================================>        (97 + 18) / 115][Stage 142:================================================>    (106 + 9) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=====================================>               (83 + 33) / 116][Stage 143:=========================================>           (91 + 25) / 116][Stage 143:===============================================>    (105 + 11) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.73363632 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383451958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:============================>                        (60 + 53) / 113][Stage 144:================================>                    (69 + 44) / 113][Stage 144:========================================>            (86 + 27) / 113][Stage 144:==============================================>     (102 + 11) / 113][Stage 144:===================================================> (110 + 3) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===========================>                         (59 + 55) / 114][Stage 145:==============================>                      (66 + 48) / 114][Stage 145:====================================>                (79 + 35) / 114][Stage 145:=============================================>       (98 + 16) / 114][Stage 145:=================================================>   (107 + 7) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.556147408 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347071487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=====================================>               (81 + 34) / 115][Stage 146:=======================================>             (86 + 29) / 115][Stage 146:=============================================>      (101 + 14) / 115][Stage 146:===================================================> (111 + 4) / 115]                                                                                [Stage 147:=====================================>               (83 + 33) / 116][Stage 147:==========================================>          (94 + 22) / 116][Stage 147:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.769344011 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364782501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (72 + 41) / 113][Stage 148:======================================>              (83 + 30) / 113][Stage 148:=========================================>           (89 + 24) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:==================================================>  (108 + 5) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:==================================>                  (75 + 39) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:==============================================>     (103 + 11) / 114][Stage 149:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.368201392 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36776629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=================================>                   (74 + 44) / 118][Stage 150:===================================>                 (80 + 38) / 118][Stage 150:========================================>            (91 + 27) / 118][Stage 150:==============================================>     (105 + 13) / 118][Stage 150:====================================================>(116 + 2) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:=================================>                   (75 + 44) / 119][Stage 151:=====================================>               (84 + 35) / 119][Stage 151:==========================================>          (96 + 23) / 119][Stage 151:================================================>    (110 + 9) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.304626877 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401550374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:==============================>                      (70 + 51) / 121][Stage 152:=========================================>           (94 + 27) / 121][Stage 152:==================================================>  (115 + 6) / 121]                                                                                [Stage 153:============================>                        (65 + 57) / 122][Stage 153:=================================>                   (77 + 45) / 122][Stage 153:=============================================>      (107 + 15) / 122][Stage 153:=====================================================(122 + 0) / 122]                                                                                Time elapsed: 2.894183876 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393500929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:===========================>                         (62 + 58) / 120][Stage 154:==================================>                  (77 + 43) / 120][Stage 154:===========================================>         (99 + 21) / 120][Stage 154:====================================================>(118 + 2) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:============================>                        (66 + 55) / 121][Stage 155:=======================================>             (91 + 30) / 121][Stage 155:=================================================>   (113 + 8) / 121][Stage 155:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.006826162 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341122848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=======================================>             (86 + 29) / 115][Stage 156:=========================================>           (90 + 25) / 115][Stage 156:===============================================>    (105 + 10) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:=====================================>               (83 + 33) / 116][Stage 157:=======================================>             (87 + 29) / 116][Stage 157:=============================================>      (101 + 15) / 116][Stage 157:===================================================> (112 + 4) / 116][Stage 157:====================================================>(114 + 2) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.281026685 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340511067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (81 + 34) / 115][Stage 158:=========================================>           (91 + 24) / 115][Stage 158:=================================================>   (107 + 8) / 115][Stage 158:====================================================>(113 + 2) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:=======================================>             (86 + 30) / 116][Stage 159:===========================================>         (96 + 20) / 116][Stage 159:=================================================>   (109 + 7) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.825761447 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37394445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==============================>                      (66 + 49) / 115][Stage 160:===================================>                 (77 + 38) / 115][Stage 160:==========================================>          (92 + 23) / 115][Stage 160:==================================================>  (110 + 5) / 115][Stage 160:====================================================>(113 + 2) / 115][Stage 160:====================================================>(114 + 1) / 115]                                                                                [Stage 161:================================>                    (71 + 45) / 116][Stage 161:=========================================>           (90 + 26) / 116][Stage 161:=============================================>      (102 + 14) / 116][Stage 161:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.210276009 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375555375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (74 + 44) / 118][Stage 162:====================================>                (81 + 37) / 118][Stage 162:=========================================>           (93 + 25) / 118][Stage 162:==============================================>     (106 + 12) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:=================================>                   (75 + 44) / 119][Stage 163:==================================>                  (77 + 42) / 119][Stage 163:===================================>                 (79 + 40) / 119][Stage 163:=========================================>           (94 + 25) / 119][Stage 163:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.628939037 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379947189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:==============================>                      (64 + 49) / 113][Stage 164:===================================>                 (76 + 37) / 113][Stage 164:============================================>        (95 + 18) / 113][Stage 164:===============================================>    (103 + 10) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:================================>                    (70 + 44) / 114][Stage 165:=====================================>               (81 + 33) / 114][Stage 165:=========================================>           (90 + 24) / 114][Stage 165:===============================================>    (104 + 10) / 114][Stage 165:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.401119957 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364918382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:=================================>                   (75 + 43) / 118][Stage 166:======================================>              (85 + 33) / 118][Stage 166:===========================================>         (96 + 22) / 118][Stage 166:=================================================>   (111 + 7) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:==================================>                  (77 + 42) / 119][Stage 167:====================================>                (83 + 36) / 119][Stage 167:=======================================>             (89 + 30) / 119][Stage 167:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.266786004 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348593532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:======================================>              (83 + 32) / 115][Stage 168:===========================================>         (95 + 20) / 115][Stage 168:===============================================>    (104 + 11) / 115]                                                                                [Stage 169:=====================================>               (83 + 33) / 116][Stage 169:=========================================>           (91 + 25) / 116][Stage 169:==============================================>     (103 + 13) / 116][Stage 169:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.607490077 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378790724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:===================================>                 (79 + 39) / 118][Stage 170:=========================================>           (92 + 26) / 118][Stage 170:==============================================>     (105 + 13) / 118][Stage 170:==================================================>  (113 + 5) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:====================================>                (81 + 38) / 119][Stage 171:=========================================>           (93 + 26) / 119][Stage 171:===============================================>    (109 + 10) / 119][Stage 171:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.068217415 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339665465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:======================================>              (84 + 31) / 115][Stage 172:=========================================>           (91 + 24) / 115][Stage 172:==================================================>  (110 + 5) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:=====================================>               (83 + 33) / 116][Stage 173:==========================================>          (93 + 23) / 116][Stage 173:=================================================>   (109 + 7) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.811163425 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46523937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=============================>                       (65 + 50) / 115][Stage 174:===================================>                 (78 + 37) / 115][Stage 174:============================================>        (96 + 19) / 115][Stage 174:=================================================>   (107 + 8) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:====================================>                (79 + 37) / 116][Stage 175:=============================================>       (99 + 17) / 116][Stage 175:==================================================>  (110 + 6) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.083731063 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392114626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 61) / 121][Stage 176:============================>                        (65 + 56) / 121][Stage 176:==================================>                  (79 + 42) / 121][Stage 176:==========================================>          (96 + 25) / 121][Stage 176:==================================================>  (116 + 5) / 121]                                                                                [Stage 177:==========================>                          (62 + 60) / 122][Stage 177:================================>                    (75 + 47) / 122][Stage 177:========================================>            (93 + 29) / 122][Stage 177:===============================================>    (111 + 11) / 122][Stage 177:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.222070709 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349036553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (71 + 42) / 113][Stage 178:=====================================>               (79 + 34) / 113][Stage 178:==========================================>          (90 + 23) / 113][Stage 178:================================================>    (104 + 9) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:=====================================>               (80 + 34) / 114][Stage 179:==========================================>          (91 + 23) / 114][Stage 179:==============================================>     (103 + 11) / 114][Stage 179:====================================================>(112 + 2) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.214298165 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393631891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:=================================>                   (77 + 44) / 121][Stage 180:========================================>            (93 + 28) / 121][Stage 180:=================================================>   (112 + 9) / 121]                                                                                [Stage 181:==========================>                          (62 + 60) / 122][Stage 181:=============================>                       (69 + 53) / 122][Stage 181:====================================>                (85 + 37) / 122][Stage 181:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.130073027 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432735471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (62 + 58) / 120][Stage 182:===============================>                     (72 + 48) / 120][Stage 182:=========================================>           (95 + 25) / 120][Stage 182:====================================================>(118 + 2) / 120]                                                                                [Stage 183:============================>                        (64 + 57) / 121][Stage 183:=================================>                   (76 + 45) / 121][Stage 183:==========================================>          (98 + 23) / 121][Stage 183:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.946346862 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide98"
dataSource: String = /nidan/orc/individualORC/slide98

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405828848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:=============================>                       (67 + 54) / 121][Stage 184:====================================>                (83 + 38) / 121][Stage 184:=============================================>      (107 + 14) / 121]                                                                                [Stage 185:===========================>                         (63 + 59) / 122][Stage 185:================================>                    (75 + 47) / 122][Stage 185:=========================================>           (95 + 27) / 122][Stage 185:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 2.908383186 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357334499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:=================================>                   (75 + 43) / 118][Stage 186:====================================>                (81 + 37) / 118][Stage 186:=======================================>             (87 + 31) / 118][Stage 186:============================================>       (102 + 16) / 118][Stage 186:==================================================>  (113 + 5) / 118]                                                                                [Stage 187:=================================>                   (76 + 43) / 119][Stage 187:====================================>                (81 + 38) / 119][Stage 187:========================================>            (91 + 28) / 119][Stage 187:================================================>    (110 + 9) / 119][Stage 187:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.431290055 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358059022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:>                                                      (0 + 0) / 113][Stage 188:===================================>                 (76 + 37) / 113][Stage 188:========================================>            (87 + 26) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:===================================================> (110 + 3) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=======================================>             (86 + 28) / 114][Stage 189:============================================>        (96 + 18) / 114][Stage 189:=================================================>   (106 + 8) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.294213994 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401706196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:==============================>                      (69 + 52) / 121][Stage 190:========================================>            (93 + 28) / 121][Stage 190:==============================================>     (109 + 12) / 121]                                                                                [Stage 191:==========================>                          (61 + 61) / 122][Stage 191:============================>                        (66 + 56) / 122][Stage 191:========================================>            (94 + 28) / 122][Stage 191:===============================================>    (112 + 10) / 122][Stage 191:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.070989128 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353704889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (77 + 36) / 113][Stage 192:========================================>            (86 + 27) / 113][Stage 192:============================================>        (95 + 18) / 113][Stage 192:===============================================>    (103 + 10) / 113][Stage 192:==================================================>  (108 + 5) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:==================================>                  (75 + 39) / 114][Stage 193:=========================================>           (90 + 24) / 114][Stage 193:============================================>        (95 + 19) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.307741617 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339897606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (83 + 32) / 115][Stage 194:===========================================>         (94 + 21) / 115][Stage 194:=================================================>   (107 + 8) / 115][Stage 194:===================================================> (112 + 3) / 115]                                                                                [Stage 195:=====================================>               (82 + 34) / 116][Stage 195:===========================================>         (96 + 20) / 116][Stage 195:===============================================>    (106 + 10) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.994617694 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366703328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (70 + 45) / 115][Stage 196:=====================================>               (81 + 34) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:==============================>                      (67 + 49) / 116][Stage 197:===================================>                 (77 + 39) / 116][Stage 197:============================================>        (98 + 18) / 116][Stage 197:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.701424352 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379465288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (79 + 34) / 113][Stage 198:=========================================>           (88 + 25) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:==================================================>  (107 + 6) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:==================================>                  (75 + 39) / 114][Stage 199:========================================>            (88 + 26) / 114][Stage 199:=============================================>      (100 + 14) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.336002365 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338275941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (82 + 33) / 115][Stage 200:========================================>            (87 + 28) / 115][Stage 200:===========================================>         (95 + 20) / 115][Stage 200:=================================================>   (107 + 8) / 115][Stage 200:====================================================>(114 + 1) / 115]                                                                                [Stage 201:======================================>              (85 + 31) / 116][Stage 201:=========================================>           (91 + 25) / 116][Stage 201:===============================================>    (105 + 11) / 116][Stage 201:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.955221054 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m54.823s
user	11m38.912s
sys	0m31.152s
