Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 11:41:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:42:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:42:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:42:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 11:42:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 11:42:17 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522114206-0454).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.358227434 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:======>                                               (13 + 102) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.537799474 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.872646575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============>                                       (33 + 88) / 121][Stage 2:=================>                                     (38 + 83) / 121][Stage 2:========================>                              (54 + 67) / 121][Stage 2:=========================>                             (57 + 64) / 121][Stage 2:============================>                          (63 + 58) / 121][Stage 2:===============================>                       (70 + 51) / 121][Stage 2:=====================================>                 (83 + 38) / 121][Stage 2:===========================================>           (95 + 26) / 121][Stage 2:==============================================>       (104 + 17) / 121][Stage 2:=====================================================> (117 + 4) / 121]                                                                                [Stage 3:==========================>                            (58 + 64) / 122][Stage 3:===========================>                           (61 + 61) / 122][Stage 3:============================>                          (63 + 59) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:===================================>                   (79 + 43) / 122][Stage 3:============================================>          (99 + 23) / 122][Stage 3:==================================================>    (113 + 9) / 122][Stage 3:=====================================================> (118 + 4) / 122][Stage 3:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.008886214 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.749576084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (53 + 67) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:============================>                          (62 + 58) / 120][Stage 4:==================================>                    (75 + 45) / 120][Stage 4:=======================================>               (86 + 34) / 120][Stage 4:==============================================>       (103 + 17) / 120][Stage 4:=====================================================> (117 + 3) / 120][Stage 4:======================================================>(118 + 2) / 120]                                                                                [Stage 5:===========================>                           (60 + 61) / 121][Stage 5:=============================>                         (65 + 56) / 121][Stage 5:======================================>                (84 + 37) / 121][Stage 5:==========================================>            (93 + 28) / 121][Stage 5:=============================================>        (103 + 18) / 121][Stage 5:===================================================>   (113 + 8) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.44881238 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.670410286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:================================>                      (71 + 50) / 121][Stage 6:=======================================>               (87 + 34) / 121][Stage 6:==============================================>       (105 + 16) / 121][Stage 6:======================================================>(120 + 1) / 121]                                                                                [Stage 7:===========================>                           (60 + 62) / 122][Stage 7:===========================>                           (62 + 60) / 122][Stage 7:================================>                      (73 + 49) / 122][Stage 7:=====================================>                 (84 + 38) / 122][Stage 7:==========================================>            (94 + 28) / 122][Stage 7:================================================>     (110 + 12) / 122][Stage 7:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.99813867 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562176077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=================================>                     (69 + 44) / 113][Stage 8:====================================>                  (75 + 38) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:======================================================>(111 + 2) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:=====================================>                 (77 + 37) / 114][Stage 9:==========================================>            (88 + 26) / 114][Stage 9:=============================================>         (94 + 20) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.310905392 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538130223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:==================================>                   (73 + 40) / 113][Stage 10:==========================================>           (88 + 25) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:==================================================>   (105 + 8) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.832518484 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.620809863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (58 + 63) / 121][Stage 12:===========================>                          (62 + 59) / 121][Stage 12:================================>                     (73 + 48) / 121][Stage 12:=========================================>            (92 + 29) / 121][Stage 12:===============================================>     (108 + 13) / 121][Stage 12:===================================================>  (116 + 5) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:=============================>                        (67 + 55) / 122][Stage 13:=================================>                    (76 + 46) / 122][Stage 13:=========================================>            (93 + 29) / 122][Stage 13:==============================================>      (107 + 15) / 122][Stage 13:===================================================>  (117 + 5) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.923121988 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492504793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===================================>                  (74 + 39) / 113][Stage 14:======================================>               (80 + 33) / 113][Stage 14:========================================>             (85 + 28) / 113][Stage 14:==============================================>       (98 + 15) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:==================================>                   (72 + 42) / 114][Stage 15:========================================>             (85 + 29) / 114][Stage 15:============================================>         (94 + 20) / 114][Stage 15:=================================================>    (105 + 9) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.598268002 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471090215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==================================>                   (74 + 41) / 115][Stage 16:=====================================>                (80 + 35) / 115][Stage 16:==========================================>           (91 + 24) / 115][Stage 16:===============================================>     (103 + 12) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (111 + 4) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:======================================>               (82 + 34) / 116][Stage 17:===========================================>          (93 + 23) / 116][Stage 17:===============================================>     (104 + 12) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.030203248 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543632625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:============================>                         (64 + 56) / 120][Stage 18:====================================>                 (80 + 40) / 120][Stage 18:========================================>             (89 + 31) / 120][Stage 18:==============================================>      (105 + 15) / 120][Stage 18:===================================================>  (114 + 6) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:===============================>                      (71 + 50) / 121][Stage 19:========================================>             (90 + 31) / 121][Stage 19:==============================================>      (107 + 14) / 121][Stage 19:=================================================>    (112 + 9) / 121][Stage 19:===================================================>  (115 + 6) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.891223618 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559684871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (58 + 62) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:===============================>                      (70 + 50) / 120][Stage 20:=======================================>              (87 + 33) / 120][Stage 20:===============================================>     (107 + 13) / 120][Stage 20:===================================================>  (114 + 6) / 120][Stage 20:=====================================================>(119 + 1) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:============================>                         (63 + 58) / 121][Stage 21:=================================>                    (75 + 46) / 121][Stage 21:========================================>             (90 + 31) / 121][Stage 21:==============================================>      (107 + 14) / 121][Stage 21:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.755854522 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530250002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:==================================>                   (78 + 43) / 121][Stage 22:==========================================>           (95 + 26) / 121][Stage 22:================================================>    (110 + 11) / 121][Stage 22:==================================================>   (114 + 7) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:==============================>                       (69 + 53) / 122][Stage 23:======================================>               (88 + 34) / 122][Stage 23:==============================================>      (108 + 14) / 122][Stage 23:==================================================>   (115 + 7) / 122][Stage 23:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.645890542 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488454004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:==============================>                       (63 + 50) / 113][Stage 24:====================================>                 (77 + 36) / 113][Stage 24:===============================================>      (99 + 14) / 113][Stage 24:===================================================>  (108 + 5) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:=============================>                        (62 + 52) / 114][Stage 25:====================================>                 (77 + 37) / 114][Stage 25:==============================================>       (98 + 16) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.567592809 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516928877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:============================>                         (63 + 58) / 121][Stage 26:=================================>                    (76 + 45) / 121][Stage 26:============================================>        (101 + 20) / 121][Stage 26:===================================================>  (115 + 6) / 121][Stage 26:=====================================================>(119 + 2) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:==============================>                       (68 + 54) / 122][Stage 27:=====================================>                (84 + 38) / 122][Stage 27:==============================================>      (107 + 15) / 122][Stage 27:===================================================>  (116 + 6) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.662765168 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443487751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:=================================>                    (74 + 44) / 118][Stage 28:=======================================>              (86 + 32) / 118][Stage 28:=============================================>        (99 + 19) / 118][Stage 28:====================================================> (115 + 3) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:==================================>                   (77 + 42) / 119][Stage 29:========================================>             (90 + 29) / 119][Stage 29:============================================>        (100 + 19) / 119][Stage 29:==================================================>   (111 + 8) / 119][Stage 29:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.457124117 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544842474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:================================>                     (73 + 47) / 120][Stage 30:===========================================>          (96 + 24) / 120][Stage 30:==================================================>   (112 + 8) / 120][Stage 30:===================================================>  (115 + 5) / 120][Stage 30:====================================================> (117 + 3) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:==============================>                       (69 + 52) / 121][Stage 31:=======================================>              (89 + 32) / 121][Stage 31:=============================================>       (103 + 18) / 121][Stage 31:===================================================>  (115 + 6) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.853151206 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478684579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:================================>                     (69 + 44) / 113][Stage 32:===========================================>          (91 + 22) / 113][Stage 32:=================================================>    (104 + 9) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:===============================>                      (66 + 48) / 114][Stage 33:=======================================>              (83 + 31) / 114][Stage 33:==============================================>       (99 + 15) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.09046503 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508774212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:====================================>                 (80 + 38) / 118][Stage 34:=========================================>            (91 + 27) / 118][Stage 34:==============================================>      (103 + 15) / 118][Stage 34:==================================================>   (111 + 7) / 118][Stage 34:=====================================================>(116 + 2) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:===================================>                  (79 + 40) / 119][Stage 35:=========================================>            (91 + 28) / 119][Stage 35:==============================================>      (104 + 15) / 119][Stage 35:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.33866136 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446607792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:====================================>                 (79 + 39) / 118][Stage 36:=========================================>            (90 + 28) / 118][Stage 36:================================================>    (108 + 10) / 118][Stage 36:====================================================> (114 + 4) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:==================================>                   (76 + 43) / 119][Stage 37:====================================>                 (81 + 38) / 119][Stage 37:=============================================>       (102 + 17) / 119][Stage 37:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.521312076 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521199603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:============================>                         (64 + 57) / 121][Stage 38:=====================================>                (83 + 38) / 121][Stage 38:================================================>    (111 + 10) / 121][Stage 38:=====================================================>(119 + 2) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:=============================>                        (66 + 56) / 122][Stage 39:======================================>               (86 + 36) / 122][Stage 39:==============================================>      (108 + 14) / 122]                                                                                Time elapsed: 2.990756751 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500179484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:===============================>                      (70 + 50) / 120][Stage 40:=======================================>              (88 + 32) / 120][Stage 40:=================================================>    (111 + 9) / 120][Stage 40:=====================================================>(119 + 1) / 120]                                                                                [Stage 41:=============================>                        (67 + 54) / 121][Stage 41:=================================>                    (76 + 45) / 121][Stage 41:=============================================>       (104 + 17) / 121][Stage 41:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.152779125 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436232026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (74 + 44) / 118][Stage 42:======================================>               (84 + 34) / 118][Stage 42:==============================================>      (104 + 14) / 118]                                                                                [Stage 43:=================================>                    (74 + 45) / 119][Stage 43:====================================>                 (81 + 38) / 119][Stage 43:============================================>         (99 + 20) / 119][Stage 43:===================================================>  (114 + 5) / 119][Stage 43:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.958456157 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389844892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:========================================>             (87 + 28) / 115][Stage 44:===============================================>     (103 + 12) / 115][Stage 44:====================================================> (112 + 3) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:======================================>               (83 + 33) / 116][Stage 45:========================================>             (87 + 29) / 116][Stage 45:===========================================>          (94 + 22) / 116][Stage 45:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.875974123 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456995629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:=============================>                        (66 + 54) / 120][Stage 46:==================================>                   (77 + 43) / 120][Stage 46:============================================>        (101 + 19) / 120][Stage 46:====================================================> (116 + 4) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:================================>                     (73 + 48) / 121][Stage 47:===========================================>          (97 + 24) / 121][Stage 47:==================================================>   (114 + 7) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.188352016 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452406774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=====================================>                (78 + 35) / 113][Stage 48:=========================================>            (86 + 27) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:===================================================>  (107 + 6) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:=============================================>        (95 + 19) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.508460345 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496992254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:=============================>                        (65 + 56) / 121][Stage 50:=======================================>              (88 + 33) / 121][Stage 50:=================================================>    (112 + 9) / 121][Stage 50:===================================================>  (116 + 5) / 121]                                                                                [Stage 51:===========================>                          (63 + 59) / 122][Stage 51:================================>                     (73 + 49) / 122][Stage 51:==========================================>           (95 + 27) / 122][Stage 51:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.099550217 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518855054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=================================>                    (71 + 42) / 113][Stage 52:=====================================>                (79 + 34) / 113][Stage 52:===========================================>          (91 + 22) / 113][Stage 52:==================================================>   (105 + 8) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:====================================>                 (76 + 38) / 114][Stage 53:========================================>             (86 + 28) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:==================================================>   (106 + 8) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.746593281 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460476031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:===============================>                      (71 + 49) / 120][Stage 54:============================================>        (101 + 19) / 120][Stage 54:====================================================> (117 + 3) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:===================================>                  (80 + 41) / 121][Stage 55:=============================================>       (103 + 18) / 121][Stage 55:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.96584228 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456806595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:==============================>                       (63 + 50) / 113][Stage 56:========================================>             (84 + 29) / 113][Stage 56:=================================================>    (104 + 9) / 113][Stage 56:==================================================>   (106 + 7) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:=============================>                        (62 + 52) / 114][Stage 57:===================================>                  (75 + 39) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.269022566 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460613533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===========================>                          (62 + 58) / 120][Stage 58:==================================>                   (77 + 43) / 120][Stage 58:==========================================>           (94 + 26) / 120][Stage 58:===================================================>  (114 + 6) / 120]                                                                                [Stage 59:============================>                         (63 + 58) / 121][Stage 59:================================>                     (73 + 48) / 121][Stage 59:=========================================>            (94 + 27) / 121][Stage 59:==================================================>   (113 + 8) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.154549121 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392942917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=====================================>                (80 + 35) / 115][Stage 60:=========================================>            (88 + 27) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:===================================================>  (109 + 6) / 115]                                                                                [Stage 61:=======================================>              (84 + 32) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:===================================================>  (111 + 5) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.714952534 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417632395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:===============================>                      (65 + 48) / 113][Stage 62:====================================>                 (77 + 36) / 113][Stage 62:=============================================>        (95 + 18) / 113][Stage 62:===================================================>  (107 + 6) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:================================>                     (68 + 46) / 114][Stage 63:======================================>               (82 + 32) / 114][Stage 63:==============================================>       (99 + 15) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.304418898 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362294307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=====================================>                (80 + 35) / 115][Stage 64:========================================>             (86 + 29) / 115][Stage 64:=============================================>        (96 + 19) / 115][Stage 64:===================================================>  (110 + 5) / 115][Stage 64:=====================================================>(113 + 2) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:======================================>               (82 + 34) / 116][Stage 65:========================================>             (88 + 28) / 116][Stage 65:============================================>         (96 + 20) / 116][Stage 65:===============================================>     (105 + 11) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.315121977 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458225101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:===========================>                          (62 + 58) / 120][Stage 66:=====================================>                (84 + 36) / 120][Stage 66:===============================================>     (108 + 12) / 120][Stage 66:======================================================(120 + 0) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:===============================>                      (71 + 50) / 121][Stage 67:========================================>             (90 + 31) / 121][Stage 67:===============================================>     (108 + 13) / 121][Stage 67:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.100904023 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395133719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=======================================>              (82 + 31) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:===============================================>      (99 + 14) / 113][Stage 68:================================================>    (103 + 10) / 113][Stage 68:====================================================> (109 + 4) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:======================================>               (82 + 32) / 114][Stage 69:============================================>         (94 + 20) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.603129772 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441080998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (69 + 46) / 115][Stage 70:======================================>               (82 + 33) / 115][Stage 70:==============================================>       (99 + 16) / 115][Stage 70:====================================================> (112 + 3) / 115]                                                                                [Stage 71:=====================================>                (81 + 35) / 116][Stage 71:==========================================>           (92 + 24) / 116][Stage 71:===============================================>     (105 + 11) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.919673784 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421718617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:============================>                         (60 + 53) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:==============================================>       (98 + 15) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:===============================>                      (67 + 47) / 114][Stage 73:====================================>                 (78 + 36) / 114][Stage 73:=============================================>        (95 + 19) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.247292934 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388166408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:=================================>                    (73 + 45) / 118][Stage 74:=====================================>                (82 + 36) / 118][Stage 74:===========================================>          (96 + 22) / 118][Stage 74:==================================================>   (111 + 7) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:===================================>                  (79 + 40) / 119][Stage 75:=======================================>              (86 + 33) / 119][Stage 75:===========================================>          (95 + 24) / 119][Stage 75:================================================>    (109 + 10) / 119][Stage 75:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.463070747 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435697586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:============================>                         (63 + 58) / 121][Stage 76:=================================>                    (75 + 46) / 121][Stage 76:==========================================>           (95 + 26) / 121][Stage 76:===================================================>  (115 + 6) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:=============================>                        (67 + 55) / 122][Stage 77:===================================>                  (81 + 41) / 122][Stage 77:===========================================>          (99 + 23) / 122][Stage 77:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.14878172 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412767948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===============================>                      (67 + 48) / 115][Stage 78:======================================>               (81 + 34) / 115][Stage 78:===========================================>          (92 + 23) / 115][Stage 78:===============================================>     (102 + 13) / 115][Stage 78:====================================================> (112 + 3) / 115]                                                                                [Stage 79:=====================================>                (80 + 36) / 116][Stage 79:=============================================>        (98 + 18) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:====================================================> (112 + 4) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.311169001 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424187579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:===============================>                      (71 + 50) / 121][Stage 80:========================================>             (91 + 30) / 121][Stage 80:=================================================>    (112 + 9) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:==============================>                       (70 + 52) / 122][Stage 81:========================================>             (92 + 30) / 122][Stage 81:====================================================> (119 + 3) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.145004179 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358778639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=======================================>              (85 + 30) / 115][Stage 82:==========================================>           (90 + 25) / 115][Stage 82:==============================================>       (99 + 16) / 115][Stage 82:==================================================>   (108 + 7) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:=======================================>              (84 + 32) / 116][Stage 83:===========================================>          (94 + 22) / 116][Stage 83:=============================================>        (97 + 19) / 116][Stage 83:=================================================>    (107 + 9) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.217116003 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415407949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (70 + 45) / 115][Stage 84:=======================================>              (85 + 30) / 115][Stage 84:==============================================>      (100 + 15) / 115][Stage 84:==================================================>   (108 + 7) / 115][Stage 84:====================================================> (112 + 3) / 115]                                                                                [Stage 85:===============================>                      (68 + 48) / 116][Stage 85:======================================>               (83 + 33) / 116][Stage 85:===========================================>          (94 + 22) / 116][Stage 85:===============================================>     (105 + 11) / 116][Stage 85:====================================================> (112 + 4) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.361560622 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391751611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (68 + 47) / 115][Stage 86:====================================>                 (78 + 37) / 115][Stage 86:==========================================>           (91 + 24) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:====================================>                 (79 + 37) / 116][Stage 87:==========================================>           (92 + 24) / 116][Stage 87:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.090545732 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385753858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:==================================>                   (75 + 43) / 118][Stage 88:=========================================>            (91 + 27) / 118][Stage 88:====================================================> (114 + 4) / 118][Stage 88:=====================================================>(117 + 1) / 118]                                                                                [Stage 89:=================================>                    (73 + 46) / 119][Stage 89:====================================>                 (80 + 39) / 119][Stage 89:=========================================>            (92 + 27) / 119][Stage 89:=================================================>    (110 + 9) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.005465294 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427073282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:>                                                       (0 + 0) / 113][Stage 90:============================>                         (59 + 54) / 113][Stage 90:===============================>                      (66 + 47) / 113][Stage 90:========================================>             (84 + 29) / 113][Stage 90:==================================================>   (105 + 8) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:================================>                     (68 + 46) / 114][Stage 91:======================================>               (82 + 32) / 114][Stage 91:==============================================>       (99 + 15) / 114][Stage 91:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.154366751 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404661242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (77 + 41) / 118][Stage 92:======================================>               (85 + 33) / 118][Stage 92:==============================================>      (104 + 14) / 118][Stage 92:=====================================================>(116 + 2) / 118]                                                                                [Stage 93:=================================>                    (74 + 45) / 119][Stage 93:=======================================>              (87 + 32) / 119][Stage 93:============================================>         (99 + 20) / 119][Stage 93:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.946634941 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407906201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (59 + 61) / 120][Stage 94:==============================>                       (68 + 52) / 120][Stage 94:======================================>               (85 + 35) / 120][Stage 94:==============================================>      (105 + 15) / 120][Stage 94:====================================================> (116 + 4) / 120]                                                                                [Stage 95:===========================>                          (62 + 59) / 121][Stage 95:================================>                     (73 + 48) / 121][Stage 95:=========================================>            (93 + 28) / 121][Stage 95:================================================>    (111 + 10) / 121][Stage 95:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.278753917 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389314578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (72 + 43) / 115][Stage 96:=======================================>              (84 + 31) / 115][Stage 96:============================================>         (95 + 20) / 115][Stage 96:=====================================================>(113 + 2) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:===============================>                      (68 + 48) / 116][Stage 97:======================================>               (82 + 34) / 116][Stage 97:=============================================>       (100 + 16) / 116][Stage 97:===================================================>  (111 + 5) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.984357743 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514964169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:====================================>                 (77 + 36) / 113][Stage 98:=======================================>              (83 + 30) / 113][Stage 98:==============================================>      (100 + 13) / 113][Stage 98:===================================================>  (108 + 5) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:=====================================>                (79 + 35) / 114][Stage 99:==========================================>           (89 + 25) / 114][Stage 99:==============================================>      (101 + 13) / 114][Stage 99:===================================================>  (108 + 6) / 114][Stage 99:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.229575436 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415892617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (62 + 58) / 120][Stage 100:==================================>                  (77 + 43) / 120][Stage 100:==========================================>          (97 + 23) / 120][Stage 100:==================================================>  (115 + 5) / 120]                                                                                [Stage 101:============================>                        (64 + 57) / 121][Stage 101:===============================>                     (72 + 49) / 121][Stage 101:========================================>            (92 + 29) / 121][Stage 101:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.082569331 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391256719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (77 + 38) / 115][Stage 102:===========================================>         (94 + 21) / 115][Stage 102:=================================================>   (108 + 7) / 115][Stage 102:====================================================>(113 + 2) / 115]                                                                                [Stage 103:===============================>                     (69 + 47) / 116][Stage 103:========================================>            (88 + 28) / 116][Stage 103:==============================================>     (104 + 12) / 116][Stage 103:====================================================>(114 + 2) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.826460822 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34619458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (82 + 33) / 115][Stage 104:==========================================>          (92 + 23) / 115][Stage 104:===============================================>    (105 + 10) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:======================================>              (85 + 31) / 116][Stage 105:==========================================>          (93 + 23) / 116][Stage 105:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.701646596 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374411576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:====================================>                (80 + 35) / 115][Stage 106:=========================================>           (90 + 25) / 115][Stage 106:=============================================>       (99 + 16) / 115][Stage 106:==================================================>  (110 + 5) / 115]                                                                                [Stage 107:=======================================>             (86 + 30) / 116][Stage 107:============================================>       (100 + 16) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.720861906 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361579807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 41) / 113][Stage 108:=====================================>               (80 + 33) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:=================================================>   (105 + 8) / 113][Stage 108:===================================================> (109 + 4) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:==================================>                  (75 + 39) / 114][Stage 109:========================================>            (87 + 27) / 114][Stage 109:==============================================>      (99 + 15) / 114][Stage 109:==================================================>  (108 + 6) / 114][Stage 109:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.238550126 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344789063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:====================================>                (80 + 35) / 115][Stage 110:======================================>              (84 + 31) / 115][Stage 110:===========================================>         (95 + 20) / 115][Stage 110:================================================>    (106 + 9) / 115][Stage 110:===================================================> (112 + 3) / 115]                                                                                [Stage 111:=====================================>               (82 + 34) / 116][Stage 111:=========================================>           (90 + 26) / 116][Stage 111:============================================>       (100 + 16) / 116][Stage 111:==================================================>  (111 + 5) / 116][Stage 111:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.97592722 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388769826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:================================>                    (69 + 44) / 113][Stage 112:=========================================>           (88 + 25) / 113][Stage 112:=================================================>   (105 + 8) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:============================>                        (62 + 52) / 114][Stage 113:==================================>                  (75 + 39) / 114][Stage 113:===========================================>         (93 + 21) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.264630959 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370501922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (73 + 45) / 118][Stage 114:=======================================>             (88 + 30) / 118][Stage 114:============================================>       (101 + 17) / 118][Stage 114:==================================================>  (113 + 5) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:====================================>                (82 + 37) / 119][Stage 115:==========================================>          (96 + 23) / 119][Stage 115:================================================>    (110 + 9) / 119][Stage 115:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.122330349 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495867716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:==============================>                      (64 + 49) / 113][Stage 116:=======================================>             (84 + 29) / 113][Stage 116:===========================================>         (92 + 21) / 113][Stage 116:=================================================>   (105 + 8) / 113]                                                                                [Stage 117:============================>                        (62 + 52) / 114][Stage 117:================================>                    (70 + 44) / 114][Stage 117:======================================>              (82 + 32) / 114][Stage 117:=============================================>       (98 + 16) / 114][Stage 117:====================================================>(112 + 2) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.394446885 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347694104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (80 + 35) / 115][Stage 118:======================================>              (84 + 31) / 115][Stage 118:============================================>        (96 + 19) / 115][Stage 118:==================================================>  (109 + 6) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:=====================================>               (82 + 34) / 116][Stage 119:=========================================>           (90 + 26) / 116][Stage 119:===============================================>    (106 + 10) / 116][Stage 119:===================================================> (113 + 3) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.134315714 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356327818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (70 + 43) / 113][Stage 120:=====================================>               (81 + 32) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:===============================================>    (103 + 10) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:=======================================>             (84 + 30) / 114][Stage 121:===========================================>         (93 + 21) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.107220725 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376572201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==============================>                      (67 + 48) / 115][Stage 122:===================================>                 (77 + 38) / 115][Stage 122:===========================================>         (95 + 20) / 115][Stage 122:================================================>    (106 + 9) / 115]                                                                                [Stage 123:================================>                    (71 + 45) / 116][Stage 123:========================================>            (88 + 28) / 116][Stage 123:===============================================>    (105 + 11) / 116][Stage 123:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.752349272 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400118662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:=============================>                       (67 + 54) / 121][Stage 124:====================================>                (83 + 38) / 121][Stage 124:==============================================>     (108 + 13) / 121][Stage 124:====================================================>(120 + 1) / 121]                                                                                [Stage 125:==========================>                          (61 + 61) / 122][Stage 125:==============================>                      (70 + 52) / 122][Stage 125:=======================================>             (90 + 32) / 122][Stage 125:==============================================>     (109 + 13) / 122][Stage 125:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.211222112 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399749863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:===============================>                     (67 + 46) / 113][Stage 126:=====================================>               (79 + 34) / 113][Stage 126:==============================================>     (102 + 11) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:==============================>                      (66 + 48) / 114][Stage 127:======================================>              (82 + 32) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.156721666 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432051297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 59) / 120][Stage 128:===============================>                     (71 + 49) / 120][Stage 128:========================================>            (92 + 28) / 120][Stage 128:==================================================>  (114 + 6) / 120][Stage 128:====================================================>(119 + 1) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:============================>                        (66 + 55) / 121][Stage 129:====================================>                (83 + 38) / 121][Stage 129:============================================>       (104 + 17) / 121][Stage 129:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.080558337 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408215078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (61 + 60) / 121][Stage 130:================================>                    (75 + 46) / 121][Stage 130:=========================================>           (94 + 27) / 121][Stage 130:==================================================>  (116 + 5) / 121]                                                                                [Stage 131:===========================>                         (64 + 58) / 122][Stage 131:=================================>                   (77 + 45) / 122][Stage 131:========================================>            (93 + 29) / 122][Stage 131:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.021377594 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364775535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:=================================>                   (74 + 44) / 118][Stage 132:====================================>                (82 + 36) / 118][Stage 132:===========================================>         (97 + 21) / 118][Stage 132:==================================================>  (113 + 5) / 118][Stage 132:====================================================>(117 + 1) / 118]                                                                                [Stage 133:=================================>                   (76 + 43) / 119][Stage 133:====================================>                (81 + 38) / 119][Stage 133:========================================>            (91 + 28) / 119][Stage 133:=============================================>      (104 + 15) / 119][Stage 133:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.470404387 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402413305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:============================>                        (64 + 57) / 121][Stage 134:===================================>                 (80 + 41) / 121][Stage 134:=============================================>      (105 + 16) / 121]                                                                                [Stage 135:==========================>                          (62 + 60) / 122][Stage 135:==============================>                      (71 + 51) / 122][Stage 135:=====================================>               (86 + 36) / 122][Stage 135:==============================================>     (109 + 13) / 122][Stage 135:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.146312324 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406037363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=============================>                       (66 + 54) / 120][Stage 136:===================================>                 (81 + 39) / 120][Stage 136:===========================================>        (100 + 20) / 120][Stage 136:==================================================>  (115 + 5) / 120]                                                                                [Stage 137:=============================>                       (68 + 53) / 121][Stage 137:====================================>                (84 + 37) / 121][Stage 137:========================================>            (93 + 28) / 121][Stage 137:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.133336583 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392196776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:============================>                        (64 + 56) / 120][Stage 138:==================================>                  (79 + 41) / 120][Stage 138:============================================>       (102 + 18) / 120][Stage 138:====================================================>(119 + 1) / 120]                                                                                [Stage 139:==========================>                          (61 + 60) / 121][Stage 139:=============================>                       (68 + 53) / 121][Stage 139:===================================>                 (81 + 40) / 121][Stage 139:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.852663382 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357488384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:>                                                      (0 + 0) / 113][Stage 140:==================================>                  (74 + 39) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:============================================>        (94 + 19) / 113][Stage 140:=================================================>   (105 + 8) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:======================================>              (83 + 31) / 114][Stage 141:=========================================>           (90 + 24) / 114][Stage 141:==============================================>     (102 + 12) / 114][Stage 141:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.125713283 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395075295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (63 + 57) / 120][Stage 142:=================================>                   (75 + 45) / 120][Stage 142:==========================================>          (97 + 23) / 120][Stage 142:=================================================>   (112 + 8) / 120]                                                                                [Stage 143:===========================>                         (62 + 59) / 121][Stage 143:===============================>                     (73 + 48) / 121][Stage 143:=======================================>             (90 + 31) / 121][Stage 143:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.016915321 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36479622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (73 + 45) / 118][Stage 144:===================================>                 (78 + 40) / 118][Stage 144:=======================================>             (88 + 30) / 118][Stage 144:============================================>        (99 + 19) / 118][Stage 144:==================================================>  (113 + 5) / 118]                                                                                [Stage 145:================================>                    (74 + 45) / 119][Stage 145:====================================>                (82 + 37) / 119][Stage 145:==========================================>          (95 + 24) / 119][Stage 145:=================================================>   (111 + 8) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.205473573 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415330101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 60) / 121][Stage 146:===============================>                     (72 + 49) / 121][Stage 146:=========================================>           (95 + 26) / 121][Stage 146:===============================================>    (110 + 11) / 121]                                                                                [Stage 147:===========================>                         (64 + 58) / 122][Stage 147:===============================>                     (73 + 49) / 122][Stage 147:===========================================>         (99 + 23) / 122][Stage 147:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.995231413 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390226741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:=============================>                       (62 + 51) / 113][Stage 148:=====================================>               (81 + 32) / 113][Stage 148:==============================================>     (100 + 13) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:===============================>                     (67 + 47) / 114][Stage 149:======================================>              (82 + 32) / 114][Stage 149:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 2.972732878 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345189799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (81 + 34) / 115][Stage 150:=======================================>             (86 + 29) / 115][Stage 150:============================================>        (96 + 19) / 115][Stage 150:===================================================> (112 + 3) / 115]                                                                                [Stage 151:======================================>              (84 + 32) / 116][Stage 151:============================================>        (97 + 19) / 116][Stage 151:=================================================>   (109 + 7) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.819770189 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368755881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (76 + 37) / 113][Stage 152:==========================================>          (90 + 23) / 113][Stage 152:==============================================>     (102 + 11) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:====================================>                (79 + 35) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:==============================================>     (103 + 11) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.829893667 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355246293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===================================>                 (75 + 38) / 113][Stage 154:========================================>            (87 + 26) / 113][Stage 154:============================================>        (95 + 18) / 113][Stage 154:==================================================>  (107 + 6) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=====================================>               (81 + 33) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.122984936 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373068299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (77 + 38) / 115][Stage 156:=========================================>           (91 + 24) / 115][Stage 156:=================================================>   (108 + 7) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:================================>                    (72 + 44) / 116][Stage 157:=======================================>             (87 + 29) / 116][Stage 157:============================================>        (98 + 18) / 116][Stage 157:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.723519285 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405389554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:==========================>                          (61 + 60) / 121][Stage 158:===================================>                 (82 + 39) / 121][Stage 158:===============================================>    (110 + 11) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:===========================>                         (64 + 58) / 122][Stage 159:======================================>              (89 + 33) / 122][Stage 159:==============================================>     (109 + 13) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.986817141 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363801848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:================================>                    (73 + 45) / 118][Stage 160:=======================================>             (88 + 30) / 118][Stage 160:============================================>        (98 + 20) / 118][Stage 160:===============================================>    (107 + 11) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:=======================================>             (89 + 30) / 119][Stage 161:==============================================>     (107 + 12) / 119][Stage 161:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.056865751 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375807799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:===================================>                 (78 + 40) / 118][Stage 162:=========================================>           (92 + 26) / 118][Stage 162:=============================================>      (103 + 15) / 118][Stage 162:===================================================> (114 + 4) / 118]                                                                                [Stage 163:=================================>                   (75 + 44) / 119][Stage 163:====================================>                (82 + 37) / 119][Stage 163:==========================================>          (95 + 24) / 119][Stage 163:===============================================>    (109 + 10) / 119][Stage 163:===================================================> (115 + 4) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.374719104 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332877834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (80 + 35) / 115][Stage 164:==========================================>          (93 + 22) / 115][Stage 164:=============================================>      (101 + 14) / 115][Stage 164:==================================================>  (109 + 6) / 115]                                                                                [Stage 165:=====================================>               (81 + 35) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:==============================================>     (103 + 13) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.521390592 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374048883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:=================================>                   (74 + 44) / 118][Stage 166:====================================>                (82 + 36) / 118][Stage 166:============================================>        (99 + 19) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:================================>                    (73 + 46) / 119][Stage 167:==================================>                  (77 + 42) / 119][Stage 167:===========================================>         (97 + 22) / 119][Stage 167:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.760557447 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395653046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (61 + 60) / 121][Stage 168:===============================>                     (72 + 49) / 121][Stage 168:========================================>            (92 + 29) / 121][Stage 168:=================================================>   (112 + 9) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:=============================>                       (69 + 53) / 122][Stage 169:====================================>                (83 + 39) / 122][Stage 169:============================================>       (105 + 17) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.103531822 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359537235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:=================================>                   (74 + 44) / 118][Stage 170:=======================================>             (87 + 31) / 118][Stage 170:===============================================>    (108 + 10) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:====================================>                (83 + 36) / 119][Stage 171:=============================================>      (103 + 16) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.762639358 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351686622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:======================================>              (84 + 31) / 115][Stage 172:============================================>        (97 + 18) / 115][Stage 172:===============================================>    (104 + 11) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:======================================>              (85 + 31) / 116][Stage 173:===========================================>         (96 + 20) / 116][Stage 173:===============================================>    (106 + 10) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.88233911 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339446013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:======================================>              (83 + 32) / 115][Stage 174:=========================================>           (89 + 26) / 115][Stage 174:=============================================>      (101 + 14) / 115][Stage 174:===================================================> (112 + 3) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:=====================================>               (83 + 33) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:==============================================>     (103 + 13) / 116][Stage 175:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.875041122 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353949542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===================================>                 (76 + 37) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:==========================================>          (91 + 22) / 113][Stage 176:==============================================>     (102 + 11) / 113][Stage 176:===================================================> (109 + 4) / 113]                                                                                [Stage 177:======================================>              (83 + 31) / 114][Stage 177:==========================================>          (91 + 23) / 114][Stage 177:==============================================>     (102 + 12) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.074722352 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356564222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:====================================>                (77 + 36) / 113][Stage 178:=======================================>             (85 + 28) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:===================================================> (110 + 3) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:==================================>                  (75 + 39) / 114][Stage 179:========================================>            (88 + 26) / 114][Stage 179:==============================================>      (99 + 15) / 114][Stage 179:=================================================>   (107 + 7) / 114][Stage 179:==================================================>  (109 + 5) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.616020817 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411853679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:>                                                      (0 + 0) / 121][Stage 180:==========================>                          (60 + 61) / 121][Stage 180:==============================>                      (69 + 52) / 121][Stage 180:=====================================>               (85 + 36) / 121][Stage 180:=================================================>   (112 + 9) / 121]                                                                                [Stage 181:===========================>                         (63 + 59) / 122][Stage 181:================================>                    (74 + 48) / 122][Stage 181:=======================================>             (92 + 30) / 122][Stage 181:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.970935388 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366075595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=====================================>               (82 + 33) / 115][Stage 182:========================================>            (88 + 27) / 115][Stage 182:===============================================>    (104 + 11) / 115]                                                                                [Stage 183:=====================================>               (83 + 33) / 116][Stage 183:==========================================>          (92 + 24) / 116][Stage 183:============================================>        (98 + 18) / 116][Stage 183:===================================================> (112 + 4) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.780084482 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341790975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=======================================>             (85 + 30) / 115][Stage 184:=============================================>       (99 + 16) / 115][Stage 184:==================================================>  (110 + 5) / 115][Stage 184:===================================================> (112 + 3) / 115]                                                                                [Stage 185:==========================================>          (94 + 22) / 116][Stage 185:==============================================>     (103 + 13) / 116][Stage 185:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.844486998 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369783315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===============================>                     (68 + 47) / 115][Stage 186:=====================================>               (82 + 33) / 115][Stage 186:=============================================>       (99 + 16) / 115][Stage 186:===================================================> (111 + 4) / 115]                                                                                [Stage 187:===============================>                     (69 + 47) / 116][Stage 187:===================================>                 (78 + 38) / 116][Stage 187:============================================>        (97 + 19) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.571883835 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361300502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (81 + 32) / 113][Stage 188:=========================================>           (89 + 24) / 113][Stage 188:=============================================>       (98 + 15) / 113][Stage 188:==================================================>  (108 + 5) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:====================================>                (78 + 36) / 114][Stage 189:==========================================>          (92 + 22) / 114][Stage 189:==============================================>     (101 + 13) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.010333023 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392038299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:================================>                    (69 + 44) / 113][Stage 190:========================================>            (86 + 27) / 113][Stage 190:================================================>    (104 + 9) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:==============================>                      (65 + 49) / 114][Stage 191:==========================================>          (91 + 23) / 114][Stage 191:===================================================> (110 + 4) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261032178 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393936918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (64 + 57) / 121][Stage 192:================================>                    (75 + 46) / 121][Stage 192:==========================================>          (96 + 25) / 121][Stage 192:==================================================>  (115 + 6) / 121]                                                                                [Stage 193:===========================>                         (63 + 59) / 122][Stage 193:===============================>                     (72 + 50) / 122][Stage 193:========================================>            (94 + 28) / 122][Stage 193:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.048608287 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347072995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (81 + 34) / 115][Stage 194:========================================>            (87 + 28) / 115][Stage 194:=============================================>      (100 + 15) / 115][Stage 194:====================================================>(113 + 2) / 115]                                                                                [Stage 195:=======================================>             (86 + 30) / 116][Stage 195:=============================================>      (101 + 15) / 116][Stage 195:===================================================> (112 + 4) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.742352349 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391937501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:==============================>                      (64 + 49) / 113][Stage 196:=====================================>               (80 + 33) / 113][Stage 196:==============================================>     (100 + 13) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:==============================>                      (66 + 48) / 114][Stage 197:=======================================>             (84 + 30) / 114][Stage 197:=================================================>   (106 + 8) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.067290087 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391624142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===============================>                     (69 + 46) / 115][Stage 198:======================================>              (84 + 31) / 115][Stage 198:=============================================>       (98 + 17) / 115][Stage 198:=================================================>   (107 + 8) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:================================>                    (71 + 45) / 116][Stage 199:=======================================>             (86 + 30) / 116][Stage 199:===========================================>         (96 + 20) / 116][Stage 199:=============================================>      (101 + 15) / 116][Stage 199:==================================================>  (111 + 5) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.477608684 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35697251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:==================================>                  (77 + 41) / 118][Stage 200:=========================================>           (92 + 26) / 118][Stage 200:==================================================>  (112 + 6) / 118][Stage 200:====================================================>(117 + 1) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:=================================>                   (75 + 44) / 119][Stage 201:==========================================>          (96 + 23) / 119][Stage 201:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.896323791 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m55.999s
user	11m38.868s
sys	0m28.788s
