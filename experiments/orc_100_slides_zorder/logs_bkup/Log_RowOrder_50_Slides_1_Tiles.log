Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 06:15:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:15:28 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:15:28 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:15:29 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 06:15:31 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:15:42 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522061531-0423).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.375344878 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==>                                                    (6 + 109) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.413061675 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.773991437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (45 + 68) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:===============================>                       (64 + 49) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:=============================================>         (94 + 19) / 113][Stage 2:==================================================>    (104 + 9) / 113][Stage 2:====================================================>  (107 + 6) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:===============================================>       (98 + 16) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.958885851 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.802281593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (59 + 61) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:================================>                      (71 + 49) / 120][Stage 4:======================================>                (85 + 35) / 120][Stage 4:=============================================>        (102 + 18) / 120][Stage 4:=================================================>    (110 + 10) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:==========================>                            (58 + 63) / 121][Stage 5:===========================>                           (61 + 60) / 121][Stage 5:===============================>                       (70 + 51) / 121][Stage 5:=======================================>               (87 + 34) / 121][Stage 5:============================================>          (98 + 23) / 121][Stage 5:=================================================>    (110 + 11) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.257452483 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.734347702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===============================>                       (65 + 50) / 115][Stage 6:==================================>                    (73 + 42) / 115][Stage 6:======================================>                (81 + 34) / 115][Stage 6:===========================================>           (91 + 24) / 115][Stage 6:==============================================>        (98 + 17) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:=============================>                         (63 + 53) / 116][Stage 7:===================================>                   (74 + 42) / 116][Stage 7:=====================================>                 (80 + 36) / 116][Stage 7:=========================================>             (88 + 28) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:===============================================>      (103 + 13) / 116][Stage 7:===================================================>   (109 + 7) / 116][Stage 7:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.41756977 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.614460733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:=============================>                         (65 + 56) / 121][Stage 8:===================================>                   (77 + 44) / 121][Stage 8:===========================================>           (95 + 26) / 121][Stage 8:=============================================>        (103 + 18) / 121][Stage 8:==================================================>    (112 + 9) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:==========================>                            (59 + 63) / 122][Stage 9:===========================>                           (61 + 61) / 122][Stage 9:================================>                      (73 + 49) / 122][Stage 9:=====================================>                 (84 + 38) / 122][Stage 9:===========================================>           (96 + 26) / 122][Stage 9:=================================================>    (111 + 11) / 122][Stage 9:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.086875545 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550535856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (71 + 47) / 118][Stage 10:================================>                     (72 + 46) / 118][Stage 10:===================================>                  (78 + 40) / 118][Stage 10:======================================>               (84 + 34) / 118][Stage 10:==========================================>           (93 + 25) / 118][Stage 10:=============================================>       (102 + 16) / 118][Stage 10:================================================>    (107 + 11) / 118][Stage 10:====================================================> (115 + 3) / 118]                                                                                [Stage 11:==================================>                   (75 + 44) / 119][Stage 11:====================================>                 (81 + 38) / 119][Stage 11:=======================================>              (88 + 31) / 119][Stage 11:===========================================>          (95 + 24) / 119][Stage 11:===============================================>     (106 + 13) / 119][Stage 11:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.46650196 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.594670386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:===========================>                          (61 + 60) / 121][Stage 12:===============================>                      (70 + 51) / 121][Stage 12:=======================================>              (88 + 33) / 121][Stage 12:==============================================>      (106 + 15) / 121][Stage 12:===================================================>  (116 + 5) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (64 + 58) / 122][Stage 13:=================================>                    (75 + 47) / 122][Stage 13:=========================================>            (94 + 28) / 122][Stage 13:===============================================>     (110 + 12) / 122][Stage 13:====================================================> (119 + 3) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.897761084 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505834504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (64 + 51) / 115][Stage 14:===================================>                  (75 + 40) / 115][Stage 14:==========================================>           (91 + 24) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:===============================>                      (67 + 49) / 116][Stage 15:====================================>                 (78 + 38) / 116][Stage 15:==========================================>           (91 + 25) / 116][Stage 15:=============================================>        (98 + 18) / 116][Stage 15:===============================================>     (104 + 12) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.602596919 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435578825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (80 + 35) / 115][Stage 16:=========================================>            (89 + 26) / 115][Stage 16:===============================================>     (103 + 12) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:=====================================>                (81 + 35) / 116][Stage 17:========================================>             (88 + 28) / 116][Stage 17:==============================================>       (99 + 17) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.168275179 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454507689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:======================================>               (83 + 32) / 115][Stage 18:===========================================>          (93 + 22) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:======================================>               (83 + 33) / 116][Stage 19:===========================================>          (94 + 22) / 116][Stage 19:===============================================>     (103 + 13) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.448394895 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526841736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:===============================>                      (65 + 48) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:===============================================>      (99 + 14) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:===============================>                      (66 + 48) / 114][Stage 21:======================================>               (81 + 33) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.672290919 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53094423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:=============================>                        (65 + 55) / 120][Stage 22:=====================================>                (84 + 36) / 120][Stage 22:==============================================>      (106 + 14) / 120][Stage 22:==================================================>   (113 + 7) / 120][Stage 22:====================================================> (117 + 3) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (65 + 56) / 121][Stage 23:===================================>                  (79 + 42) / 121][Stage 23:=============================================>       (105 + 16) / 121][Stage 23:==================================================>   (114 + 7) / 121][Stage 23:===================================================>  (116 + 5) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.651015607 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521608679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:===========================>                          (61 + 59) / 120][Stage 24:=================================>                    (75 + 45) / 120][Stage 24:=======================================>              (88 + 32) / 120][Stage 24:===============================================>     (108 + 12) / 120][Stage 24:===================================================>  (114 + 6) / 120][Stage 24:=====================================================>(118 + 2) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:============================>                         (64 + 57) / 121][Stage 25:=====================================>                (85 + 36) / 121][Stage 25:==============================================>      (106 + 15) / 121][Stage 25:================================================>    (111 + 10) / 121][Stage 25:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.9357127 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489211228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:=============================>                        (62 + 51) / 113][Stage 26:===================================>                  (75 + 38) / 113][Stage 26:==============================================>       (97 + 16) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===========================>                          (59 + 55) / 114][Stage 27:==============================>                       (64 + 50) / 114][Stage 27:=====================================>                (80 + 34) / 114][Stage 27:============================================>         (94 + 20) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.706001517 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40733595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (80 + 35) / 115][Stage 28:========================================>             (87 + 28) / 115][Stage 28:==============================================>      (100 + 15) / 115][Stage 28:==================================================>   (108 + 7) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=======================================>              (85 + 31) / 116][Stage 29:==============================================>       (99 + 17) / 116][Stage 29:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.957222025 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.660356592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:================================>                     (72 + 48) / 120][Stage 30:========================================>             (90 + 30) / 120][Stage 30:===================================================>  (114 + 6) / 120][Stage 30:=====================================================>(118 + 2) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:==============================>                       (69 + 52) / 121][Stage 31:======================================>               (87 + 34) / 121][Stage 31:=============================================>       (103 + 18) / 121][Stage 31:==============================================>      (107 + 14) / 121][Stage 31:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.541290558 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447257546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:==================================>                   (76 + 42) / 118][Stage 32:======================================>               (85 + 33) / 118][Stage 32:===========================================>          (96 + 22) / 118][Stage 32:==================================================>   (111 + 7) / 118][Stage 32:====================================================> (115 + 3) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:====================================>                 (80 + 39) / 119][Stage 33:==============================================>      (104 + 15) / 119][Stage 33:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.406857039 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481418682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:==============================>                       (63 + 50) / 113][Stage 34:======================================>               (80 + 33) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:=============================>                        (62 + 52) / 114][Stage 35:====================================>                 (78 + 36) / 114][Stage 35:==============================================>       (98 + 16) / 114][Stage 35:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.159727798 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500909448 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:===========================>                          (62 + 59) / 121][Stage 36:=================================>                    (76 + 45) / 121][Stage 36:===========================================>          (98 + 23) / 121][Stage 36:====================================================> (118 + 3) / 121]                                                                                [Stage 37:===========================>                          (63 + 59) / 122][Stage 37:=================================>                    (75 + 47) / 122][Stage 37:===========================================>          (99 + 23) / 122][Stage 37:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.125535922 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460439471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:===================================>                  (77 + 41) / 118][Stage 38:==========================================>           (92 + 26) / 118][Stage 38:================================================>    (107 + 11) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (77 + 42) / 119][Stage 39:============================================>         (97 + 22) / 119][Stage 39:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.965593757 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447639867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (64 + 51) / 115][Stage 40:=====================================>                (80 + 35) / 115][Stage 40:=============================================>        (97 + 18) / 115][Stage 40:=================================================>    (106 + 9) / 115][Stage 40:===================================================>  (110 + 5) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:===============================>                      (67 + 49) / 116][Stage 41:=====================================>                (80 + 36) / 116][Stage 41:=============================================>        (98 + 18) / 116][Stage 41:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 3.105913116 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492101559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (60 + 53) / 113][Stage 42:================================>                     (69 + 44) / 113][Stage 42:============================================>         (94 + 19) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:====================================================> (109 + 4) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:===============================>                      (67 + 47) / 114][Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==============================================>       (99 + 15) / 114]                                                                                Time elapsed: 3.459488023 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496758135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:=======================================>              (84 + 31) / 115][Stage 44:=============================================>        (97 + 18) / 115][Stage 44:================================================>    (105 + 10) / 115][Stage 44:===================================================>  (110 + 5) / 115][Stage 44:====================================================> (112 + 3) / 115][Stage 44:=====================================================>(113 + 2) / 115]                                                                                [Stage 45:=======================================>              (85 + 31) / 116][Stage 45:=============================================>        (97 + 19) / 116][Stage 45:==================================================>   (109 + 7) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.310351976 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441638287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (64 + 51) / 115][Stage 46:====================================>                 (77 + 38) / 115][Stage 46:==========================================>           (91 + 24) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:================================>                     (70 + 46) / 116][Stage 47:========================================>             (88 + 28) / 116][Stage 47:===============================================>     (105 + 11) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:====================================================> (112 + 4) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.063398893 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499033743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:==============================>                       (67 + 53) / 120][Stage 48:=====================================>                (84 + 36) / 120][Stage 48:==============================================>      (105 + 15) / 120][Stage 48:====================================================> (116 + 4) / 120]                                                                                [Stage 49:============================>                         (64 + 57) / 121][Stage 49:==================================>                   (77 + 44) / 121][Stage 49:=========================================>            (94 + 27) / 121][Stage 49:================================================>    (110 + 11) / 121][Stage 49:====================================================> (118 + 3) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.556870859 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476095365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:==============================>                       (64 + 49) / 113][Stage 50:=====================================>                (78 + 35) / 113][Stage 50:==============================================>       (98 + 15) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:============================================>         (94 + 20) / 114][Stage 51:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.189597626 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529454627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (70 + 45) / 115][Stage 52:======================================>               (83 + 32) / 115][Stage 52:==============================================>      (100 + 15) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===================================>                  (77 + 39) / 116][Stage 53:===========================================>          (94 + 22) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:====================================================> (113 + 3) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.69136514 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439893942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:=============================>                        (62 + 51) / 113][Stage 54:=====================================>                (79 + 34) / 113][Stage 54:===========================================>          (91 + 22) / 113][Stage 54:===============================================>     (102 + 11) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:=============================>                        (63 + 51) / 114][Stage 55:=======================================>              (83 + 31) / 114][Stage 55:==============================================>      (101 + 13) / 114][Stage 55:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.234047419 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372700112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (80 + 35) / 115][Stage 56:========================================>             (87 + 28) / 115][Stage 56:=============================================>        (97 + 18) / 115][Stage 56:===================================================>  (109 + 6) / 115][Stage 56:====================================================> (112 + 3) / 115]                                                                                [Stage 57:======================================>               (83 + 33) / 116][Stage 57:============================================>         (96 + 20) / 116][Stage 57:===================================================>  (110 + 6) / 116][Stage 57:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.956865594 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421261438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==============================>                       (64 + 51) / 115][Stage 58:===================================>                  (75 + 40) / 115][Stage 58:==========================================>           (91 + 24) / 115][Stage 58:==================================================>   (107 + 8) / 115][Stage 58:===================================================>  (110 + 5) / 115]                                                                                [Stage 59:================================>                     (70 + 46) / 116][Stage 59:========================================>             (88 + 28) / 116][Stage 59:==============================================>       (99 + 17) / 116][Stage 59:=================================================>    (107 + 9) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.211573824 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370769445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:======================================>               (82 + 33) / 115][Stage 60:=======================================>              (84 + 31) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:==================================================>   (107 + 8) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:=========================================>            (89 + 27) / 116][Stage 61:=============================================>        (97 + 19) / 116][Stage 61:====================================================> (112 + 4) / 116][Stage 61:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.346434185 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447455068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:=================================>                    (74 + 44) / 118][Stage 62:========================================>             (89 + 29) / 118][Stage 62:=============================================>       (102 + 16) / 118][Stage 62:================================================>    (107 + 11) / 118]                                                                                [Stage 63:==================================>                   (76 + 43) / 119][Stage 63:======================================>               (84 + 35) / 119][Stage 63:============================================>         (98 + 21) / 119][Stage 63:====================================================> (116 + 3) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.246210523 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403787798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (71 + 42) / 113][Stage 64:=====================================>                (78 + 35) / 113][Stage 64:============================================>         (93 + 20) / 113][Stage 64:===============================================>     (101 + 12) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:====================================>                 (76 + 38) / 114][Stage 65:========================================>             (85 + 29) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.852307759 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386389059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (79 + 36) / 115][Stage 66:========================================>             (87 + 28) / 115][Stage 66:===============================================>     (104 + 11) / 115][Stage 66:====================================================> (111 + 4) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:===========================================>          (93 + 23) / 116][Stage 67:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.817489361 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405078183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (73 + 42) / 115][Stage 68:========================================>             (87 + 28) / 115][Stage 68:===============================================>     (102 + 13) / 115][Stage 68:==================================================>   (108 + 7) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:==================================>                   (74 + 42) / 116][Stage 69:=========================================>            (90 + 26) / 116][Stage 69:===============================================>     (103 + 13) / 116][Stage 69:====================================================> (112 + 4) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.864132657 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393164003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=======================================>              (85 + 30) / 115][Stage 70:===========================================>          (92 + 23) / 115][Stage 70:==============================================>      (100 + 15) / 115][Stage 70:===================================================>  (110 + 5) / 115]                                                                                [Stage 71:======================================>               (83 + 33) / 116][Stage 71:==========================================>           (92 + 24) / 116][Stage 71:==============================================>       (99 + 17) / 116][Stage 71:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.947133465 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447440428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:===========================>                          (62 + 59) / 121][Stage 72:================================>                     (73 + 48) / 121][Stage 72:=======================================>              (89 + 32) / 121][Stage 72:=================================================>    (112 + 9) / 121][Stage 72:=====================================================>(120 + 1) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:=============================>                        (66 + 56) / 122][Stage 73:=====================================>                (85 + 37) / 122][Stage 73:=============================================>       (105 + 17) / 122][Stage 73:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.212915893 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435465487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:=============================>                        (65 + 55) / 120][Stage 74:====================================>                 (81 + 39) / 120][Stage 74:============================================>         (98 + 22) / 120][Stage 74:====================================================> (117 + 3) / 120]                                                                                [Stage 75:============================>                         (63 + 58) / 121][Stage 75:=================================>                    (74 + 47) / 121][Stage 75:===========================================>          (98 + 23) / 121][Stage 75:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.093878868 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453225088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:============================>                         (63 + 57) / 120][Stage 76:====================================>                 (81 + 39) / 120][Stage 76:=============================================>       (104 + 16) / 120][Stage 76:====================================================> (117 + 3) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:===============================>                      (71 + 50) / 121][Stage 77:==========================================>           (95 + 26) / 121][Stage 77:==================================================>   (113 + 8) / 121][Stage 77:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.324008475 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408118834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==============================>                       (66 + 49) / 115][Stage 78:=====================================>                (79 + 36) / 115][Stage 78:==========================================>           (90 + 25) / 115][Stage 78:==================================================>   (108 + 7) / 115]                                                                                [Stage 79:=====================================>                (81 + 35) / 116][Stage 79:========================================>             (87 + 29) / 116][Stage 79:=============================================>        (98 + 18) / 116][Stage 79:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.713279029 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378395392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:=================================>                    (74 + 44) / 118][Stage 80:======================================>               (84 + 34) / 118][Stage 80:==========================================>           (93 + 25) / 118][Stage 80:===================================================>  (112 + 6) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:==================================>                   (76 + 43) / 119][Stage 81:======================================>               (85 + 34) / 119][Stage 81:==============================================>      (105 + 14) / 119][Stage 81:===================================================>  (113 + 6) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.385079805 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374228178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=====================================>                (79 + 34) / 113][Stage 82:==========================================>           (88 + 25) / 113][Stage 82:=============================================>        (95 + 18) / 113][Stage 82:=================================================>    (104 + 9) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:====================================>                 (77 + 37) / 114][Stage 83:=========================================>            (88 + 26) / 114][Stage 83:==============================================>       (98 + 16) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.016396445 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394327787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (65 + 50) / 115][Stage 84:===================================>                  (76 + 39) / 115][Stage 84:============================================>         (94 + 21) / 115][Stage 84:==================================================>   (107 + 8) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:=================================>                    (72 + 44) / 116][Stage 85:=======================================>              (84 + 32) / 116][Stage 85:===============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.736397469 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419891955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (64 + 57) / 121][Stage 86:=================================>                    (75 + 46) / 121][Stage 86:================================================>    (110 + 11) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:==============================>                       (68 + 54) / 122][Stage 87:====================================>                 (82 + 40) / 122][Stage 87:============================================>        (103 + 19) / 122]                                                                                Time elapsed: 2.847975692 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38055902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:==================================>                   (76 + 42) / 118][Stage 88:========================================>             (88 + 30) / 118][Stage 88:==============================================>      (104 + 14) / 118][Stage 88:=====================================================>(117 + 1) / 118]                                                                                [Stage 89:==================================>                   (76 + 43) / 119][Stage 89:=======================================>              (88 + 31) / 119][Stage 89:==============================================>      (104 + 15) / 119][Stage 89:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.156031625 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358920386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=====================================>                (80 + 35) / 115][Stage 90:========================================>             (86 + 29) / 115][Stage 90:==============================================>       (99 + 16) / 115][Stage 90:==================================================>   (108 + 7) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:========================================>             (88 + 28) / 116][Stage 91:==============================================>      (101 + 15) / 116][Stage 91:===============================================>     (105 + 11) / 116][Stage 91:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.961955103 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424137649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:==============================>                       (68 + 53) / 121][Stage 92:==========================================>           (95 + 26) / 121][Stage 92:================================================>    (111 + 10) / 121]                                                                                [Stage 93:===========================>                          (62 + 60) / 122][Stage 93:=================================>                    (75 + 47) / 122][Stage 93:==========================================>           (95 + 27) / 122][Stage 93:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.942836538 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411832887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (61 + 59) / 120][Stage 94:===============================>                      (71 + 49) / 120][Stage 94:========================================>             (91 + 29) / 120][Stage 94:====================================================> (116 + 4) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:=============================>                        (67 + 54) / 121][Stage 95:=====================================>                (85 + 36) / 121][Stage 95:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 2.84974826 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38902359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (67 + 48) / 115][Stage 96:======================================>               (82 + 33) / 115][Stage 96:============================================>         (95 + 20) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:=====================================>                (80 + 36) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.798876867 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36570881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (83 + 30) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:===============================================>     (102 + 11) / 113][Stage 98:====================================================> (109 + 4) / 113]                                                                                [Stage 99:========================================>             (85 + 29) / 114][Stage 99:============================================>         (93 + 21) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.868699426 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381329944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:=================================>                   (74 + 44) / 118][Stage 100:===================================>                 (78 + 40) / 118][Stage 100:===========================================>         (96 + 22) / 118][Stage 100:===================================================> (114 + 4) / 118][Stage 100:====================================================>(116 + 2) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:==================================>                  (77 + 42) / 119][Stage 101:=====================================>               (85 + 34) / 119][Stage 101:============================================>        (99 + 20) / 119][Stage 101:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.281134256 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367051095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (72 + 41) / 113][Stage 102:=====================================>               (81 + 32) / 113][Stage 102:==========================================>          (90 + 23) / 113][Stage 102:==============================================>      (99 + 14) / 113][Stage 102:==================================================>  (108 + 5) / 113]                                                                                [Stage 103:======================================>              (82 + 32) / 114][Stage 103:=============================================>       (98 + 16) / 114][Stage 103:==============================================>     (103 + 11) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.154860425 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519141035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:===============================>                     (67 + 46) / 113][Stage 104:=====================================>               (80 + 33) / 113][Stage 104:=============================================>       (97 + 16) / 113][Stage 104:===================================================> (110 + 3) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:===============================>                     (68 + 46) / 114][Stage 105:====================================>                (79 + 35) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.411806425 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4269826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:=================================>                   (75 + 45) / 120][Stage 106:==========================================>          (96 + 24) / 120][Stage 106:==================================================>  (115 + 5) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:===============================>                     (72 + 49) / 121][Stage 107:=====================================>               (85 + 36) / 121][Stage 107:============================================>       (103 + 18) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.078951867 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44453982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:>                                                      (0 + 0) / 120][Stage 108:==========================>                          (60 + 60) / 120][Stage 108:=============================>                       (66 + 54) / 120][Stage 108:=======================================>             (90 + 30) / 120][Stage 108:=================================================>   (111 + 9) / 120][Stage 108:====================================================>(119 + 1) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:==============================>                      (69 + 52) / 121][Stage 109:======================================>              (89 + 32) / 121][Stage 109:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.984956627 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411680568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (63 + 58) / 121][Stage 110:==============================>                      (69 + 52) / 121][Stage 110:==========================================>         (100 + 21) / 121][Stage 110:===================================================> (118 + 3) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:===========================>                         (64 + 58) / 122][Stage 111:===================================>                 (82 + 40) / 122][Stage 111:===========================================>        (101 + 21) / 122][Stage 111:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.018185541 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530597415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:================================>                    (69 + 44) / 113][Stage 112:=======================================>             (85 + 28) / 113][Stage 112:=================================================>   (106 + 7) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:=================================>                   (72 + 42) / 114][Stage 113:=======================================>             (86 + 28) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.087304858 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402744858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 59) / 121][Stage 114:=================================>                   (77 + 44) / 121][Stage 114:=========================================>           (95 + 26) / 121][Stage 114:===============================================>    (111 + 10) / 121][Stage 114:====================================================>(119 + 2) / 121]                                                                                [Stage 115:===========================>                         (64 + 58) / 122][Stage 115:================================>                    (75 + 47) / 122][Stage 115:===========================================>         (99 + 23) / 122][Stage 115:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.184661212 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405317366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:==============================>                      (70 + 50) / 120][Stage 116:=======================================>             (89 + 31) / 120][Stage 116:=============================================>      (106 + 14) / 120][Stage 116:====================================================>(118 + 2) / 120]                                                                                [Stage 117:============================>                        (64 + 57) / 121][Stage 117:===================================>                 (81 + 40) / 121][Stage 117:============================================>       (104 + 17) / 121][Stage 117:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.129411363 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402346096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:=============================>                       (67 + 53) / 120][Stage 118:====================================>                (82 + 38) / 120][Stage 118:=============================================>      (106 + 14) / 120][Stage 118:===================================================> (117 + 3) / 120]                                                                                [Stage 119:============================>                        (65 + 56) / 121][Stage 119:===================================>                 (82 + 39) / 121][Stage 119:=============================================>      (105 + 16) / 121]                                                                                Time elapsed: 2.927514913 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346559726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:======================================>              (83 + 32) / 115][Stage 120:=========================================>           (91 + 24) / 115][Stage 120:=================================================>   (108 + 7) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:====================================>                (80 + 36) / 116][Stage 121:======================================>              (85 + 31) / 116][Stage 121:==========================================>          (92 + 24) / 116][Stage 121:================================================>    (107 + 9) / 116][Stage 121:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.851585415 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337158934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (82 + 33) / 115][Stage 122:============================================>        (96 + 19) / 115][Stage 122:=================================================>   (108 + 7) / 115][Stage 122:===================================================> (112 + 3) / 115]                                                                                [Stage 123:=======================================>             (86 + 30) / 116][Stage 123:===========================================>         (96 + 20) / 116][Stage 123:================================================>    (107 + 9) / 116][Stage 123:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.922920579 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386001401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (60 + 53) / 113][Stage 124:==============================>                      (64 + 49) / 113][Stage 124:======================================>              (83 + 30) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:===============================>                     (67 + 47) / 114][Stage 125:======================================>              (82 + 32) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.266886577 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396833978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (69 + 44) / 113][Stage 126:===========================================>         (92 + 21) / 113][Stage 126:=================================================>   (105 + 8) / 113]                                                                                [Stage 127:============================>                        (62 + 52) / 114][Stage 127:==================================>                  (74 + 40) / 114][Stage 127:=========================================>           (90 + 24) / 114][Stage 127:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.022173619 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402029755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:============================>                        (61 + 52) / 113][Stage 128:=====================================>               (79 + 34) / 113][Stage 128:=================================================>   (105 + 8) / 113][Stage 128:===================================================> (110 + 3) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:===============================>                     (68 + 46) / 114][Stage 129:=======================================>             (85 + 29) / 114][Stage 129:==============================================>     (101 + 13) / 114][Stage 129:===================================================> (111 + 3) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.393403871 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400950772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (61 + 59) / 120][Stage 130:=============================>                       (66 + 54) / 120][Stage 130:======================================>              (87 + 33) / 120][Stage 130:==============================================>     (107 + 13) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:==============================>                      (69 + 52) / 121][Stage 131:===================================>                 (81 + 40) / 121][Stage 131:==========================================>         (100 + 21) / 121][Stage 131:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.15925905 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385141138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:===================================>                 (78 + 40) / 118][Stage 132:=========================================>           (93 + 25) / 118][Stage 132:===============================================>    (107 + 11) / 118][Stage 132:====================================================>(116 + 2) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:==================================>                  (78 + 41) / 119][Stage 133:========================================>            (90 + 29) / 119][Stage 133:=============================================>      (104 + 15) / 119][Stage 133:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.01310759 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354778715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (78 + 35) / 113][Stage 134:========================================>            (86 + 27) / 113][Stage 134:==============================================>      (99 + 14) / 113][Stage 134:==================================================>  (107 + 6) / 113]                                                                                [Stage 135:=====================================>               (80 + 34) / 114][Stage 135:=========================================>           (90 + 24) / 114][Stage 135:==============================================>      (99 + 15) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.022130982 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394923632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (62 + 58) / 120][Stage 136:===============================>                     (72 + 48) / 120][Stage 136:======================================>              (87 + 33) / 120][Stage 136:==============================================>     (107 + 13) / 120]                                                                                [Stage 137:=============================>                       (67 + 54) / 121][Stage 137:==================================>                  (78 + 43) / 121][Stage 137:=======================================>             (91 + 30) / 121][Stage 137:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.990807735 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369222363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (70 + 45) / 115][Stage 138:=======================================>             (85 + 30) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:==================================================>  (110 + 5) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:================================>                    (72 + 44) / 116][Stage 139:========================================>            (88 + 28) / 116][Stage 139:=================================================>   (109 + 7) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.781689961 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40027529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (61 + 60) / 121][Stage 140:===============================>                     (72 + 49) / 121][Stage 140:=======================================>             (90 + 31) / 121][Stage 140:=================================================>   (112 + 9) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:==============================>                      (70 + 52) / 122][Stage 141:=======================================>             (90 + 32) / 122][Stage 141:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 2.968963762 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337533575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (82 + 33) / 115][Stage 142:===========================================>         (94 + 21) / 115][Stage 142:=============================================>      (101 + 14) / 115][Stage 142:==================================================>  (110 + 5) / 115]                                                                                [Stage 143:======================================>              (84 + 32) / 116][Stage 143:==========================================>          (92 + 24) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:================================================>    (107 + 9) / 116][Stage 143:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.292586091 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350807661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=================================>                   (71 + 42) / 113][Stage 144:========================================>            (86 + 27) / 113][Stage 144:=============================================>       (96 + 17) / 113][Stage 144:=================================================>   (105 + 8) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:======================================>              (83 + 31) / 114][Stage 145:===========================================>         (94 + 20) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.147956117 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37986902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (61 + 52) / 113][Stage 146:===================================>                 (75 + 38) / 113][Stage 146:=========================================>           (89 + 24) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:============================>                        (61 + 53) / 114][Stage 147:=================================>                   (73 + 41) / 114][Stage 147:============================================>        (95 + 19) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.114336901 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364196706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (74 + 44) / 118][Stage 148:=====================================>               (83 + 35) / 118][Stage 148:===========================================>         (97 + 21) / 118][Stage 148:=================================================>   (110 + 8) / 118][Stage 148:====================================================>(116 + 2) / 118]                                                                                [Stage 149:================================>                    (73 + 46) / 119][Stage 149:===================================>                 (79 + 40) / 119][Stage 149:======================================>              (86 + 33) / 119][Stage 149:==========================================>          (96 + 23) / 119][Stage 149:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.208077223 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3854787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:==============================>                      (65 + 48) / 113][Stage 150:===================================>                 (76 + 37) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:============================>                        (62 + 52) / 114][Stage 151:==================================>                  (74 + 40) / 114][Stage 151:========================================>            (87 + 27) / 114][Stage 151:===============================================>    (104 + 10) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.155503145 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 177 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39447573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:=============================>                       (63 + 50) / 113][Stage 152:===================================>                 (75 + 38) / 113][Stage 152:=============================================>       (98 + 15) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:================================>                    (69 + 45) / 114][Stage 153:============================================>        (95 + 19) / 114][Stage 153:==================================================>  (108 + 6) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.115105306 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365458311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:==================================>                  (77 + 41) / 118][Stage 154:===========================================>         (96 + 22) / 118][Stage 154:=================================================>   (111 + 7) / 118]                                                                                [Stage 155:==================================>                  (77 + 42) / 119][Stage 155:========================================>            (92 + 27) / 119][Stage 155:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.625878492 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383987014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:===============================>                     (68 + 45) / 113][Stage 156:=========================================>           (89 + 24) / 113][Stage 156:==================================================>  (107 + 6) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (69 + 45) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.041457856 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363291024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:================================>                    (73 + 45) / 118][Stage 158:====================================>                (82 + 36) / 118][Stage 158:======================================>              (86 + 32) / 118][Stage 158:============================================>       (102 + 16) / 118][Stage 158:====================================================>(116 + 2) / 118]                                                                                [Stage 159:================================>                    (73 + 46) / 119][Stage 159:==================================>                  (78 + 41) / 119][Stage 159:========================================>            (91 + 28) / 119][Stage 159:==============================================>     (106 + 13) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.403449936 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360883736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (73 + 45) / 118][Stage 160:=================================>                   (75 + 43) / 118][Stage 160:===================================>                 (80 + 38) / 118][Stage 160:======================================>              (86 + 32) / 118][Stage 160:=============================================>      (104 + 14) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:==================================>                  (77 + 42) / 119][Stage 161:======================================>              (87 + 32) / 119][Stage 161:==========================================>          (95 + 24) / 119][Stage 161:==================================================>  (113 + 6) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.766905681 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365909574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (75 + 43) / 118][Stage 162:====================================>                (82 + 36) / 118][Stage 162:=========================================>           (92 + 26) / 118][Stage 162:================================================>    (109 + 9) / 118][Stage 162:===================================================> (114 + 4) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (74 + 45) / 119][Stage 163:===================================>                 (79 + 40) / 119][Stage 163:=======================================>             (89 + 30) / 119][Stage 163:=============================================>      (104 + 15) / 119][Stage 163:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.697914706 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369287745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:==================================>                  (77 + 41) / 118][Stage 164:=========================================>           (92 + 26) / 118][Stage 164:===============================================>    (107 + 11) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:===================================>                 (79 + 40) / 119][Stage 165:=========================================>           (93 + 26) / 119][Stage 165:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.908437063 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394743032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:============================>                        (64 + 57) / 121][Stage 166:===================================>                 (82 + 39) / 121][Stage 166:============================================>       (103 + 18) / 121][Stage 166:====================================================>(119 + 2) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:=============================>                       (69 + 53) / 122][Stage 167:=====================================>               (87 + 35) / 122][Stage 167:==============================================>     (108 + 14) / 122][Stage 167:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.956568568 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364564569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (77 + 36) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:==============================================>      (99 + 14) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:===================================>                 (76 + 38) / 114][Stage 169:======================================>              (82 + 32) / 114][Stage 169:============================================>        (96 + 18) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.442481693 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345203223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (83 + 32) / 115][Stage 170:=========================================>           (89 + 26) / 115][Stage 170:===============================================>    (104 + 11) / 115][Stage 170:==================================================>  (110 + 5) / 115]                                                                                [Stage 171:========================================>            (88 + 28) / 116][Stage 171:============================================>        (98 + 18) / 116][Stage 171:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.696017836 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361696719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:====================================>                (82 + 36) / 118][Stage 172:===========================================>         (96 + 22) / 118][Stage 172:==================================================>  (112 + 6) / 118]                                                                                [Stage 173:================================>                    (74 + 45) / 119][Stage 173:====================================>                (82 + 37) / 119][Stage 173:==========================================>          (96 + 23) / 119][Stage 173:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.040896771 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40122867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:============================>                        (64 + 57) / 121][Stage 174:=====================================>               (85 + 36) / 121][Stage 174:=============================================>      (106 + 15) / 121][Stage 174:====================================================>(120 + 1) / 121]                                                                                [Stage 175:============================>                        (65 + 57) / 122][Stage 175:=================================>                   (77 + 45) / 122][Stage 175:========================================>            (94 + 28) / 122][Stage 175:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.108488903 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396827415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 61) / 121][Stage 176:============================>                        (66 + 55) / 121][Stage 176:=======================================>             (91 + 30) / 121][Stage 176:===============================================>    (111 + 10) / 121][Stage 176:====================================================>(120 + 1) / 121]                                                                                [Stage 177:==========================>                          (61 + 61) / 122][Stage 177:===========================>                         (63 + 59) / 122][Stage 177:=================================>                   (77 + 45) / 122][Stage 177:=========================================>           (95 + 27) / 122][Stage 177:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.200431124 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378317595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:===============================>                     (67 + 46) / 113][Stage 178:========================================>            (87 + 26) / 113][Stage 178:===================================================> (109 + 4) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:=================================>                   (72 + 42) / 114][Stage 179:=========================================>           (89 + 25) / 114][Stage 179:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.897410557 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380841883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:===================================>                 (78 + 40) / 118][Stage 180:========================================>            (90 + 28) / 118][Stage 180:===============================================>    (107 + 11) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:===================================>                 (80 + 39) / 119][Stage 181:========================================>            (92 + 27) / 119][Stage 181:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 2.915911258 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412334806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:==============================>                      (65 + 48) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:==============================================>      (99 + 14) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:==============================>                      (65 + 49) / 114][Stage 183:======================================>              (83 + 31) / 114][Stage 183:===================================================> (110 + 4) / 114][Stage 183:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.054939573 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393273284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (61 + 52) / 113][Stage 184:=================================>                   (71 + 42) / 113][Stage 184:===========================================>         (92 + 21) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:====================================>                (79 + 35) / 114][Stage 185:==============================================>     (101 + 13) / 114][Stage 185:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.925287711 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395742552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (61 + 59) / 120][Stage 186:===============================>                     (71 + 49) / 120][Stage 186:=========================================>           (93 + 27) / 120][Stage 186:=================================================>   (113 + 7) / 120]                                                                                [Stage 187:============================>                        (64 + 57) / 121][Stage 187:================================>                    (74 + 47) / 121][Stage 187:=========================================>           (95 + 26) / 121][Stage 187:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.077539089 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389828093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:============================>                        (65 + 55) / 120][Stage 188:=====================================>               (84 + 36) / 120][Stage 188:=============================================>      (106 + 14) / 120][Stage 188:====================================================>(118 + 2) / 120]                                                                                [Stage 189:============================>                        (64 + 57) / 121][Stage 189:=================================>                   (77 + 44) / 121][Stage 189:=========================================>           (95 + 26) / 121][Stage 189:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.946650043 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342171657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=====================================>               (81 + 34) / 115][Stage 190:==========================================>          (93 + 22) / 115][Stage 190:=================================================>   (107 + 8) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:=====================================>               (82 + 34) / 116][Stage 191:========================================>            (88 + 28) / 116][Stage 191:============================================>        (98 + 18) / 116][Stage 191:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.681592858 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362326263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (73 + 45) / 118][Stage 192:======================================>              (85 + 33) / 118][Stage 192:===============================================>    (108 + 10) / 118]                                                                                [Stage 193:=================================>                   (76 + 43) / 119][Stage 193:======================================>              (86 + 33) / 119][Stage 193:=============================================>      (104 + 15) / 119][Stage 193:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.768347363 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415131256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:==============================>                      (69 + 52) / 121][Stage 194:=========================================>           (95 + 26) / 121][Stage 194:===================================================> (117 + 4) / 121]                                                                                [Stage 195:==========================>                          (62 + 60) / 122][Stage 195:===============================>                     (73 + 49) / 122][Stage 195:=========================================>           (96 + 26) / 122][Stage 195:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.005626818 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394064608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===============================>                     (69 + 46) / 115][Stage 196:=====================================>               (82 + 33) / 115][Stage 196:============================================>        (97 + 18) / 115][Stage 196:=================================================>   (107 + 8) / 115]                                                                                [Stage 197:==================================>                  (76 + 40) / 116][Stage 197:=========================================>           (90 + 26) / 116][Stage 197:=============================================>      (102 + 14) / 116][Stage 197:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.965112968 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381010065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:=====================================>               (83 + 35) / 118][Stage 198:=============================================>      (104 + 14) / 118][Stage 198:==================================================>  (113 + 5) / 118][Stage 198:====================================================>(117 + 1) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:====================================>                (83 + 36) / 119][Stage 199:============================================>       (101 + 18) / 119][Stage 199:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.235608852 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350523345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (81 + 32) / 113][Stage 200:==========================================>          (91 + 22) / 113][Stage 200:==============================================>     (102 + 11) / 113][Stage 200:==================================================>  (107 + 6) / 113]                                                                                [Stage 201:====================================>                (79 + 35) / 114][Stage 201:===========================================>         (94 + 20) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.878442227 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m50.510s
user	11m18.504s
sys	0m28.848s
