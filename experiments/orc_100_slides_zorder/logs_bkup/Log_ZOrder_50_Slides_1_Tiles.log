Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 06:05:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:05:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:05:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:05:39 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 06:05:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 06:05:52 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522060541-0422).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.415444388 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (1 + 114) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=========================>                             (54 + 62) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.560532505 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.790280161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (49 + 71) / 120][Stage 2:=======================>                               (52 + 68) / 120][Stage 2:===========================>                           (59 + 61) / 120][Stage 2:===========================>                           (61 + 59) / 120][Stage 2:===============================>                       (69 + 51) / 120][Stage 2:======================================>                (83 + 37) / 120][Stage 2:=============================================>        (101 + 19) / 120][Stage 2:===============================================>      (106 + 14) / 120][Stage 2:=====================================================> (117 + 3) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:===========================>                           (61 + 60) / 121][Stage 3:==============================>                        (66 + 55) / 121][Stage 3:==================================>                    (75 + 46) / 121][Stage 3:======================================>                (85 + 36) / 121][Stage 3:===========================================>           (96 + 25) / 121][Stage 3:====================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.661086474 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.76204888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (58 + 62) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:==============================>                        (66 + 54) / 120][Stage 4:================================>                      (71 + 49) / 120][Stage 4:===================================>                   (78 + 42) / 120][Stage 4:==========================================>            (93 + 27) / 120][Stage 4:===================================================>   (112 + 8) / 120][Stage 4:======================================================>(118 + 2) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:=============================>                         (65 + 56) / 121][Stage 5:===================================>                   (78 + 43) / 121][Stage 5:========================================>              (89 + 32) / 121][Stage 5:==============================================>       (105 + 16) / 121][Stage 5:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.216615478 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.672775992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (63 + 52) / 115][Stage 6:================================>                      (67 + 48) / 115][Stage 6:==================================>                    (72 + 43) / 115][Stage 6:=====================================>                 (78 + 37) / 115][Stage 6:=========================================>             (87 + 28) / 115][Stage 6:==============================================>        (97 + 18) / 115][Stage 6:===================================================>   (107 + 8) / 115][Stage 6:=====================================================> (111 + 4) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:====================================>                  (76 + 40) / 116][Stage 7:======================================>                (81 + 35) / 116][Stage 7:==========================================>            (89 + 27) / 116][Stage 7:=============================================>         (95 + 21) / 116][Stage 7:================================================>     (105 + 11) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.655401844 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562283959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===================================>                   (72 + 41) / 113][Stage 8:========================================>              (84 + 29) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:===================================>                   (74 + 40) / 114][Stage 9:=========================================>             (85 + 29) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:=============================================>         (94 + 20) / 114][Stage 9:================================================>     (102 + 12) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.51747394 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480812024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===================================>                  (74 + 39) / 113][Stage 10:======================================>               (80 + 33) / 113][Stage 10:========================================>             (84 + 29) / 113][Stage 10:==========================================>           (88 + 25) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:====================================>                 (78 + 36) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:==========================================>           (90 + 24) / 114][Stage 11:============================================>         (94 + 20) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.419964792 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549521357 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (67 + 51) / 118][Stage 12:==================================>                   (75 + 43) / 118][Stage 12:=======================================>              (86 + 32) / 118][Stage 12:============================================>         (98 + 20) / 118][Stage 12:===============================================>     (105 + 13) / 118][Stage 12:===================================================>  (112 + 6) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:==================================>                   (76 + 43) / 119][Stage 13:==========================================>           (93 + 26) / 119][Stage 13:===============================================>     (106 + 13) / 119][Stage 13:==================================================>   (112 + 7) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.748325825 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543038415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=============================>                        (63 + 52) / 115][Stage 14:==================================>                   (73 + 42) / 115][Stage 14:=========================================>            (89 + 26) / 115][Stage 14:==============================================>       (99 + 16) / 115][Stage 14:===============================================>     (103 + 12) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:===================================>                  (77 + 39) / 116][Stage 15:=========================================>            (90 + 26) / 116][Stage 15:===============================================>     (103 + 13) / 116][Stage 15:================================================>    (106 + 10) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.175997331 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490677898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:====================================>                 (77 + 36) / 113][Stage 16:=========================================>            (86 + 27) / 113][Stage 16:===============================================>      (99 + 14) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:=======================================>              (83 + 31) / 114][Stage 17:===========================================>          (92 + 22) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.014715828 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52666192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (59 + 54) / 113][Stage 18:=============================>                        (62 + 51) / 113][Stage 18:===================================>                  (74 + 39) / 113][Stage 18:=========================================>            (86 + 27) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:===================================================>  (108 + 5) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:===============================>                      (67 + 47) / 114][Stage 19:======================================>               (81 + 33) / 114][Stage 19:==============================================>      (100 + 14) / 114]                                                                                Time elapsed: 3.604744123 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479113819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===================================>                  (74 + 39) / 113][Stage 20:========================================>             (85 + 28) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:==================================================>   (106 + 7) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (76 + 38) / 114][Stage 21:=======================================>              (84 + 30) / 114][Stage 21:=============================================>        (96 + 18) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.602402517 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501504655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:===============================>                      (66 + 47) / 113][Stage 22:=====================================>                (78 + 35) / 113][Stage 22:==============================================>       (98 + 15) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:============================>                         (60 + 54) / 114][Stage 23:====================================>                 (76 + 38) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.3900425 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430379554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=====================================>                (79 + 36) / 115][Stage 24:======================================>               (83 + 32) / 115][Stage 24:=============================================>        (97 + 18) / 115][Stage 24:===============================================>     (103 + 12) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:=========================================>            (90 + 26) / 116][Stage 25:=============================================>        (97 + 19) / 116][Stage 25:===============================================>     (105 + 11) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.148009043 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605530327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:==============================>                       (68 + 53) / 121][Stage 26:=======================================>              (88 + 33) / 121][Stage 26:==================================================>   (114 + 7) / 121][Stage 26:=====================================================>(120 + 1) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:=============================>                        (67 + 55) / 122][Stage 27:====================================>                 (82 + 40) / 122][Stage 27:==============================================>      (106 + 16) / 122][Stage 27:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.156838353 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488691212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:================================>                     (68 + 45) / 113][Stage 28:========================================>             (84 + 29) / 113][Stage 28:==============================================>       (97 + 16) / 113][Stage 28:===================================================>  (107 + 6) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:================================>                     (69 + 45) / 114][Stage 29:===========================================>          (92 + 22) / 114][Stage 29:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.414245045 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460118596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (81 + 32) / 113][Stage 30:============================================>         (94 + 19) / 113][Stage 30:==============================================>      (100 + 13) / 113][Stage 30:===================================================>  (107 + 6) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=====================================>                (80 + 34) / 114][Stage 31:============================================>         (94 + 20) / 114][Stage 31:===============================================>     (102 + 12) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.545009787 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424135914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:====================================>                 (76 + 37) / 113][Stage 32:========================================>             (84 + 29) / 113][Stage 32:============================================>         (93 + 20) / 113][Stage 32:===============================================>     (101 + 12) / 113][Stage 32:====================================================> (110 + 3) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:====================================>                 (78 + 36) / 114][Stage 33:==========================================>           (90 + 24) / 114][Stage 33:==============================================>      (100 + 14) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.427371491 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543060397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:============================>                         (64 + 56) / 120][Stage 34:====================================>                 (81 + 39) / 120][Stage 34:=============================================>       (104 + 16) / 120][Stage 34:====================================================> (117 + 3) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:===============================>                      (70 + 51) / 121][Stage 35:=====================================>                (84 + 37) / 121][Stage 35:==============================================>      (106 + 15) / 121][Stage 35:===================================================>  (116 + 5) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.483556982 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538973083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:=============================>                        (66 + 55) / 121][Stage 36:===================================>                  (80 + 41) / 121][Stage 36:=============================================>       (105 + 16) / 121][Stage 36:=====================================================>(120 + 1) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:==============================>                       (70 + 52) / 122][Stage 37:==========================================>           (97 + 25) / 122][Stage 37:===================================================>  (116 + 6) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.207096068 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483890977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:>                                                       (0 + 0) / 120][Stage 38:===========================>                          (60 + 60) / 120][Stage 38:=============================>                        (65 + 55) / 120][Stage 38:===================================>                  (79 + 41) / 120][Stage 38:===============================================>     (108 + 12) / 120][Stage 38:====================================================> (117 + 3) / 120]                                                                                [Stage 39:============================>                         (63 + 58) / 121][Stage 39:==================================>                   (78 + 43) / 121][Stage 39:============================================>         (99 + 22) / 121][Stage 39:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.182705646 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447589095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===================================>                  (75 + 38) / 113][Stage 40:=========================================>            (87 + 26) / 113][Stage 40:===============================================>      (99 + 14) / 113][Stage 40:===================================================>  (107 + 6) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:====================================>                 (76 + 38) / 114][Stage 41:=========================================>            (87 + 27) / 114][Stage 41:============================================>         (94 + 20) / 114][Stage 41:==============================================>      (100 + 14) / 114][Stage 41:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.347467464 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498948528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:================================>                     (69 + 44) / 113][Stage 42:==========================================>           (88 + 25) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (62 + 52) / 114][Stage 43:=====================================>                (80 + 34) / 114][Stage 43:===============================================>     (102 + 12) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.952931411 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406144074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (79 + 34) / 113][Stage 44:===========================================>          (90 + 23) / 113][Stage 44:===============================================>     (101 + 12) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:========================================>             (85 + 29) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:==================================================>   (106 + 8) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.963344706 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460305057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:===========================>                          (62 + 59) / 121][Stage 46:===================================>                  (79 + 42) / 121][Stage 46:=============================================>       (104 + 17) / 121][Stage 46:====================================================> (117 + 4) / 121]                                                                                [Stage 47:===========================>                          (61 + 61) / 122][Stage 47:==============================>                       (69 + 53) / 122][Stage 47:=====================================>                (85 + 37) / 122][Stage 47:==============================================>      (106 + 16) / 122][Stage 47:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.23607023 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479196721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:==============================>                       (69 + 52) / 121][Stage 48:========================================>             (90 + 31) / 121][Stage 48:=================================================>    (112 + 9) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:==============================>                       (70 + 52) / 122][Stage 49:========================================>             (91 + 31) / 122][Stage 49:==============================================>      (108 + 14) / 122]                                                                                Time elapsed: 3.089187774 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489155616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:====================================>                 (81 + 39) / 120][Stage 50:============================================>        (100 + 20) / 120][Stage 50:====================================================> (116 + 4) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=============================>                        (67 + 54) / 121][Stage 51:======================================>               (86 + 35) / 121][Stage 51:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 2.905704714 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401366478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===================================>                  (75 + 38) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:===========================================>          (92 + 21) / 113][Stage 52:==================================================>   (105 + 8) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:========================================>             (85 + 29) / 114][Stage 53:============================================>         (93 + 21) / 114][Stage 53:==============================================>      (101 + 13) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.284813678 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43134276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 40) / 115][Stage 54:==========================================>           (91 + 24) / 115][Stage 54:===============================================>     (104 + 11) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:=====================================>                (80 + 36) / 116][Stage 55:===============================================>     (103 + 13) / 116][Stage 55:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.738024488 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430214196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=============================>                        (61 + 52) / 113][Stage 56:================================>                     (69 + 44) / 113][Stage 56:=====================================>                (79 + 34) / 113][Stage 56:================================================>    (103 + 10) / 113]                                                                                [Stage 57:============================>                         (61 + 53) / 114][Stage 57:===================================>                  (75 + 39) / 114][Stage 57:==========================================>           (89 + 25) / 114][Stage 57:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.009579728 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443829963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:============================>                         (60 + 53) / 113][Stage 58:=====================================>                (78 + 35) / 113][Stage 58:==============================================>       (97 + 16) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (66 + 48) / 114][Stage 59:==========================================>           (90 + 24) / 114][Stage 59:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.885346188 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415914128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (73 + 45) / 118][Stage 60:=====================================>                (82 + 36) / 118][Stage 60:===========================================>          (94 + 24) / 118][Stage 60:===============================================>     (106 + 12) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:======================================>               (85 + 34) / 119][Stage 61:=============================================>       (103 + 16) / 119][Stage 61:=================================================>    (110 + 9) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.400107452 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391142905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:===========================================>          (93 + 22) / 115][Stage 62:===============================================>     (102 + 13) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:======================================>               (83 + 33) / 116][Stage 63:=========================================>            (89 + 27) / 116][Stage 63:=================================================>    (107 + 9) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.73175653 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412362416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (69 + 46) / 115][Stage 64:======================================>               (81 + 34) / 115][Stage 64:===========================================>          (93 + 22) / 115][Stage 64:==============================================>       (99 + 16) / 115][Stage 64:===================================================>  (110 + 5) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:====================================>                 (78 + 38) / 116][Stage 65:========================================>             (86 + 30) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.348605019 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41326994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:==================================>                   (75 + 43) / 118][Stage 66:=====================================>                (82 + 36) / 118][Stage 66:=============================================>        (99 + 19) / 118][Stage 66:================================================>    (107 + 11) / 118][Stage 66:====================================================> (114 + 4) / 118]                                                                                [Stage 67:==================================>                   (75 + 44) / 119][Stage 67:=======================================>              (87 + 32) / 119][Stage 67:============================================>         (97 + 22) / 119][Stage 67:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.360746121 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434990014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:============================>                         (63 + 57) / 120][Stage 68:=====================================>                (84 + 36) / 120][Stage 68:============================================>         (98 + 22) / 120][Stage 68:====================================================> (116 + 4) / 120]                                                                                [Stage 69:============================>                         (63 + 58) / 121][Stage 69:====================================>                 (81 + 40) / 121][Stage 69:=============================================>       (103 + 18) / 121][Stage 69:=================================================>    (112 + 9) / 121][Stage 69:====================================================> (118 + 3) / 121][Stage 69:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.581092029 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474188107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:=================================>                    (70 + 43) / 113][Stage 70:==========================================>           (88 + 25) / 113][Stage 70:==================================================>   (105 + 8) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:===============================>                      (66 + 48) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:===================================================>  (109 + 5) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.113565606 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440984254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:===========================>                          (62 + 59) / 121][Stage 72:==================================>                   (78 + 43) / 121][Stage 72:===========================================>          (98 + 23) / 121][Stage 72:==================================================>   (113 + 8) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:==============================>                       (69 + 53) / 122][Stage 73:=========================================>            (93 + 29) / 122][Stage 73:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.041479402 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416452091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:================================>                     (68 + 45) / 113][Stage 74:========================================>             (85 + 28) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:=================================>                    (70 + 44) / 114][Stage 75:========================================>             (86 + 28) / 114][Stage 75:==============================================>      (100 + 14) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.068964857 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416940733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:===================================>                  (75 + 38) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=================================>                    (71 + 43) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.196077528 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393301812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=====================================>                (78 + 35) / 113][Stage 78:==========================================>           (88 + 25) / 113][Stage 78:==============================================>      (100 + 13) / 113][Stage 78:===================================================>  (108 + 5) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:======================================>               (81 + 33) / 114][Stage 79:===========================================>          (92 + 22) / 114][Stage 79:==============================================>      (101 + 13) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.257763098 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355343104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=====================================>                (80 + 35) / 115][Stage 80:======================================>               (83 + 32) / 115][Stage 80:=============================================>        (97 + 18) / 115][Stage 80:=====================================================>(113 + 2) / 115]                                                                                [Stage 81:=======================================>              (84 + 32) / 116][Stage 81:=========================================>            (89 + 27) / 116][Stage 81:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.43779296 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527012906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:====================================>                 (80 + 38) / 118][Stage 82:============================================>         (98 + 20) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:==================================>                   (77 + 42) / 119][Stage 83:======================================>               (85 + 34) / 119][Stage 83:=============================================>       (103 + 16) / 119]                                                                                Time elapsed: 2.821068559 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362632849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=====================================>                (79 + 36) / 115][Stage 84:=========================================>            (88 + 27) / 115][Stage 84:=============================================>        (97 + 18) / 115][Stage 84:===================================================>  (110 + 5) / 115]                                                                                [Stage 85:======================================>               (83 + 33) / 116][Stage 85:========================================>             (88 + 28) / 116][Stage 85:===============================================>     (103 + 13) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.533409326 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43089004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:==============================>                       (68 + 53) / 121][Stage 86:=====================================>                (84 + 37) / 121][Stage 86:=============================================>       (105 + 16) / 121][Stage 86:=====================================================>(119 + 2) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:==============================>                       (68 + 54) / 122][Stage 87:=====================================>                (85 + 37) / 122][Stage 87:==============================================>      (106 + 16) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.174416739 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393549234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:====================================>                 (77 + 38) / 115][Stage 88:===========================================>          (93 + 22) / 115][Stage 88:================================================>    (105 + 10) / 115][Stage 88:=====================================================>(113 + 2) / 115]                                                                                [Stage 89:====================================>                 (78 + 38) / 116][Stage 89:=============================================>        (98 + 18) / 116][Stage 89:==================================================>   (109 + 7) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.821176462 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430009458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (61 + 60) / 121][Stage 90:===============================>                      (71 + 50) / 121][Stage 90:=====================================>                (84 + 37) / 121][Stage 90:==============================================>      (106 + 15) / 121][Stage 90:=====================================================>(120 + 1) / 121]                                                                                [Stage 91:============================>                         (65 + 57) / 122][Stage 91:==================================>                   (77 + 45) / 122][Stage 91:==============================================>      (107 + 15) / 122][Stage 91:===================================================>  (116 + 6) / 122][Stage 91:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.302182133 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374487289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:========================================>             (86 + 29) / 115][Stage 92:===========================================>          (92 + 23) / 115][Stage 92:===============================================>     (102 + 13) / 115][Stage 92:====================================================> (112 + 3) / 115][Stage 92:=====================================================>(114 + 1) / 115]                                                                                [Stage 93:======================================>               (83 + 33) / 116][Stage 93:=========================================>            (90 + 26) / 116][Stage 93:=============================================>       (100 + 16) / 116][Stage 93:================================================>    (106 + 10) / 116][Stage 93:====================================================> (112 + 4) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.38961131 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4306284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (62 + 58) / 120][Stage 94:==================================>                   (77 + 43) / 120][Stage 94:============================================>         (99 + 21) / 120][Stage 94:=====================================================>(118 + 2) / 120]                                                                                [Stage 95:============================>                         (64 + 57) / 121][Stage 95:================================>                     (73 + 48) / 121][Stage 95:=========================================>            (94 + 27) / 121][Stage 95:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.056464762 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36584594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===================================>                  (74 + 39) / 113][Stage 96:=========================================>            (87 + 26) / 113][Stage 96:==============================================>       (97 + 16) / 113][Stage 96:===================================================>  (107 + 6) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:====================================>                 (77 + 37) / 114][Stage 97:========================================>             (86 + 28) / 114][Stage 97:=============================================>        (96 + 18) / 114][Stage 97:================================================>    (104 + 10) / 114][Stage 97:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.080714125 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355861806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (83 + 32) / 115][Stage 98:=============================================>        (96 + 19) / 115][Stage 98:===============================================>     (103 + 12) / 115][Stage 98:==================================================>   (107 + 8) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:======================================>               (82 + 34) / 116][Stage 99:========================================>             (88 + 28) / 116][Stage 99:=============================================>        (98 + 18) / 116][Stage 99:=================================================>    (107 + 9) / 116][Stage 99:==================================================>   (108 + 8) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.638623178 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416201971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:=================================>                   (72 + 41) / 113][Stage 100:=====================================>               (80 + 33) / 113][Stage 100:==============================================>     (100 + 13) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:=================================>                   (73 + 41) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.137362439 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387458154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=============================>                       (65 + 50) / 115][Stage 102:===================================>                 (76 + 39) / 115][Stage 102:===========================================>         (95 + 20) / 115][Stage 102:=================================================>   (108 + 7) / 115]                                                                                [Stage 103:================================>                    (72 + 44) / 116][Stage 103:=======================================>             (86 + 30) / 116][Stage 103:==============================================>     (103 + 13) / 116][Stage 103:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.835270455 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351816093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=======================================>             (85 + 30) / 115][Stage 104:============================================>        (96 + 19) / 115][Stage 104:===============================================>    (104 + 11) / 115][Stage 104:====================================================>(113 + 2) / 115]                                                                                [Stage 105:=====================================>               (82 + 34) / 116][Stage 105:=========================================>           (91 + 25) / 116][Stage 105:===============================================>    (105 + 11) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.684377124 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409091747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=============================>                       (62 + 51) / 113][Stage 106:===============================>                     (67 + 46) / 113][Stage 106:======================================>              (83 + 30) / 113][Stage 106:================================================>    (104 + 9) / 113]                                                                                [Stage 107:============================>                        (62 + 52) / 114][Stage 107:=================================>                   (73 + 41) / 114][Stage 107:============================================>        (96 + 18) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.002132802 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396814046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===============================>                     (68 + 47) / 115][Stage 108:=======================================>             (86 + 29) / 115][Stage 108:=============================================>      (100 + 15) / 115][Stage 108:==================================================>  (110 + 5) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:===================================>                 (78 + 38) / 116][Stage 109:==========================================>          (92 + 24) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:===================================================> (113 + 3) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.342885459 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360252222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 41) / 113][Stage 110:======================================>              (83 + 30) / 113][Stage 110:=========================================>           (89 + 24) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:=======================================>             (85 + 29) / 114][Stage 111:===========================================>         (94 + 20) / 114][Stage 111:=================================================>   (106 + 8) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.863008192 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366958065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:=================================>                   (75 + 43) / 118][Stage 112:========================================>            (90 + 28) / 118][Stage 112:=================================================>   (111 + 7) / 118]                                                                                [Stage 113:================================>                    (74 + 45) / 119][Stage 113:====================================>                (81 + 38) / 119][Stage 113:===========================================>         (97 + 22) / 119][Stage 113:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.912641561 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344371869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (84 + 31) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:==================================================>  (109 + 6) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:========================================>            (88 + 28) / 116][Stage 115:=============================================>      (101 + 15) / 116][Stage 115:==================================================>  (110 + 6) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.828844057 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379702308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (70 + 45) / 115][Stage 116:=======================================>             (86 + 29) / 115][Stage 116:==============================================>     (103 + 12) / 115][Stage 116:===================================================> (111 + 4) / 115]                                                                                [Stage 117:==============================>                      (67 + 49) / 116][Stage 117:======================================>              (84 + 32) / 116][Stage 117:===========================================>         (95 + 21) / 116][Stage 117:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.735416601 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357437973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (79 + 34) / 113][Stage 118:==========================================>          (91 + 22) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:==================================================>  (107 + 6) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:===================================>                 (76 + 38) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:===========================================>         (94 + 20) / 114][Stage 119:==============================================>     (101 + 13) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.226679409 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354739964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==================================>                  (73 + 40) / 113][Stage 120:=====================================>               (81 + 32) / 113][Stage 120:===========================================>         (92 + 21) / 113][Stage 120:==============================================>     (102 + 11) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===================================>                 (77 + 37) / 114][Stage 121:========================================>            (88 + 26) / 114][Stage 121:==============================================>     (101 + 13) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.979567191 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399604516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (61 + 59) / 120][Stage 122:================================>                    (73 + 47) / 120][Stage 122:===========================================>        (101 + 19) / 120][Stage 122:===================================================> (116 + 4) / 120]                                                                                [Stage 123:===========================>                         (63 + 58) / 121][Stage 123:===============================>                     (71 + 50) / 121][Stage 123:===========================================>         (99 + 22) / 121][Stage 123:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.03537684 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40054554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:============================>                        (64 + 57) / 121][Stage 124:================================>                    (75 + 46) / 121][Stage 124:==========================================>          (98 + 23) / 121][Stage 124:==================================================>  (115 + 6) / 121]                                                                                [Stage 125:===========================>                         (63 + 59) / 122][Stage 125:================================>                    (75 + 47) / 122][Stage 125:========================================>            (93 + 29) / 122][Stage 125:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.010797778 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408711108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:============================>                        (64 + 57) / 121][Stage 126:==================================>                  (79 + 42) / 121][Stage 126:==========================================>          (98 + 23) / 121][Stage 126:===================================================> (118 + 3) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:=============================>                       (68 + 54) / 122][Stage 127:====================================>                (83 + 39) / 122][Stage 127:==========================================>         (100 + 22) / 122][Stage 127:==================================================>  (117 + 5) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.196947111 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389500122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:===================================>                 (80 + 38) / 118][Stage 128:========================================>            (91 + 27) / 118][Stage 128:=============================================>      (103 + 15) / 118][Stage 128:====================================================>(116 + 2) / 118]                                                                                [Stage 129:================================>                    (74 + 45) / 119][Stage 129:======================================>              (87 + 32) / 119][Stage 129:=============================================>      (103 + 16) / 119][Stage 129:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.190815891 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387891997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:=============================>                       (63 + 50) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:==============================================>     (102 + 11) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:==================================>                  (75 + 39) / 114][Stage 131:===========================================>         (93 + 21) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.932084093 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385411308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==============================>                      (66 + 49) / 115][Stage 132:================================>                    (71 + 44) / 115][Stage 132:=======================================>             (86 + 29) / 115][Stage 132:=============================================>       (99 + 16) / 115][Stage 132:==================================================>  (110 + 5) / 115]                                                                                [Stage 133:===================================>                 (78 + 38) / 116][Stage 133:===========================================>         (96 + 20) / 116][Stage 133:================================================>    (107 + 9) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.010964222 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393637816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 60) / 120][Stage 134:==============================>                      (69 + 51) / 120][Stage 134:========================================>            (91 + 29) / 120][Stage 134:===============================================>    (110 + 10) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:================================>                    (75 + 46) / 121][Stage 135:==========================================>          (96 + 25) / 121][Stage 135:==================================================>  (116 + 5) / 121][Stage 135:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.067917956 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353896921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==================================>                  (74 + 39) / 113][Stage 136:======================================>              (83 + 30) / 113][Stage 136:============================================>        (94 + 19) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:===================================================> (110 + 3) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:====================================>                (79 + 35) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:==============================================>     (101 + 13) / 114][Stage 137:===================================================> (111 + 3) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.09854594 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340295675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (81 + 34) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:=============================================>      (100 + 15) / 115][Stage 138:================================================>    (106 + 9) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:=====================================>               (83 + 33) / 116][Stage 139:============================================>        (97 + 19) / 116][Stage 139:=================================================>   (108 + 8) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.011946967 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350720491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==================================>                  (74 + 39) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:==================================================>  (107 + 6) / 113][Stage 140:===================================================> (110 + 3) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:===================================>                 (76 + 38) / 114][Stage 141:=======================================>             (86 + 28) / 114][Stage 141:===========================================>         (93 + 21) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:===================================================> (111 + 3) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.30998108 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350817412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===================================>                 (76 + 37) / 113][Stage 142:=========================================>           (88 + 25) / 113][Stage 142:============================================>        (95 + 18) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:===================================================> (110 + 3) / 113]                                                                                [Stage 143:=====================================>               (80 + 34) / 114][Stage 143:========================================>            (87 + 27) / 114][Stage 143:=============================================>      (100 + 14) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:===================================================> (110 + 4) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.470169225 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351640934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==================================>                  (73 + 40) / 113][Stage 144:=======================================>             (84 + 29) / 113][Stage 144:=============================================>       (97 + 16) / 113][Stage 144:===================================================> (109 + 4) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===================================>                 (76 + 38) / 114][Stage 145:=========================================>           (90 + 24) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.889784034 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41818502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:=============================>                       (67 + 54) / 121][Stage 146:======================================>              (89 + 32) / 121][Stage 146:=================================================>   (112 + 9) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:=============================>                       (67 + 55) / 122][Stage 147:====================================>                (83 + 39) / 122][Stage 147:==============================================>     (108 + 14) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.066573196 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362617212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:=================================>                   (74 + 44) / 118][Stage 148:==================================>                  (77 + 41) / 118][Stage 148:========================================>            (90 + 28) / 118][Stage 148:============================================>       (102 + 16) / 118][Stage 148:==================================================>  (113 + 5) / 118][Stage 148:====================================================>(117 + 1) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:==================================>                  (78 + 41) / 119][Stage 149:=====================================>               (84 + 35) / 119][Stage 149:============================================>       (102 + 17) / 119][Stage 149:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.535979671 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340429476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:========================================>            (87 + 28) / 115][Stage 150:==========================================>          (93 + 22) / 115][Stage 150:==============================================>     (103 + 12) / 115][Stage 150:===================================================> (112 + 3) / 115]                                                                                [Stage 151:======================================>              (85 + 31) / 116][Stage 151:============================================>        (97 + 19) / 116][Stage 151:==============================================>     (103 + 13) / 116][Stage 151:===================================================> (112 + 4) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.095030954 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352087137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (80 + 35) / 115][Stage 152:=========================================>           (90 + 25) / 115][Stage 152:==================================================>  (109 + 6) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:===================================================> (112 + 3) / 115]                                                                                [Stage 153:=======================================>             (86 + 30) / 116][Stage 153:=============================================>      (101 + 15) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.016368847 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386302113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:===========================>                         (59 + 54) / 113][Stage 154:==================================>                  (74 + 39) / 113][Stage 154:===========================================>         (93 + 20) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:================================>                    (69 + 45) / 114][Stage 155:=======================================>             (84 + 30) / 114][Stage 155:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 2.799769493 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451798555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (81 + 34) / 115][Stage 156:=======================================>             (86 + 29) / 115][Stage 156:============================================>        (96 + 19) / 115][Stage 156:===============================================>    (104 + 11) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:======================================>              (84 + 32) / 116][Stage 157:=========================================>           (90 + 26) / 116][Stage 157:==============================================>     (103 + 13) / 116][Stage 157:================================================>    (107 + 9) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.038693505 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371054061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 41) / 115][Stage 158:=====================================>               (82 + 33) / 115][Stage 158:============================================>        (96 + 19) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:===================================>                 (78 + 38) / 116][Stage 159:===========================================>         (95 + 21) / 116][Stage 159:=================================================>   (109 + 7) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.79878595 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342403944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=====================================>               (82 + 33) / 115][Stage 160:=========================================>           (90 + 25) / 115][Stage 160:==============================================>     (102 + 13) / 115][Stage 160:==================================================>  (109 + 6) / 115]                                                                                [Stage 161:=======================================>             (86 + 30) / 116][Stage 161:=============================================>      (102 + 14) / 116][Stage 161:===================================================> (113 + 3) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.004838991 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362034711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (78 + 35) / 113][Stage 162:=========================================>           (88 + 25) / 113][Stage 162:=============================================>       (97 + 16) / 113][Stage 162:=================================================>   (105 + 8) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:======================================>              (83 + 31) / 114][Stage 163:=========================================>           (89 + 25) / 114][Stage 163:=================================================>   (106 + 8) / 114][Stage 163:===================================================> (110 + 4) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.140360933 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369646516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:=================================>                   (75 + 43) / 118][Stage 164:====================================>                (82 + 36) / 118][Stage 164:==========================================>          (94 + 24) / 118][Stage 164:==================================================>  (112 + 6) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:==================================>                  (78 + 41) / 119][Stage 165:========================================>            (91 + 28) / 119][Stage 165:=============================================>      (103 + 16) / 119][Stage 165:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.319791963 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443855009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:======================================>              (83 + 32) / 115][Stage 166:==========================================>          (93 + 22) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:========================================>            (88 + 28) / 116][Stage 167:===========================================>         (96 + 20) / 116][Stage 167:=================================================>   (109 + 7) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.899664136 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395291884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==============================>                      (64 + 49) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:================================>                    (70 + 44) / 114][Stage 169:=====================================>               (80 + 34) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.167375627 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365718983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (78 + 35) / 113][Stage 170:===========================================>         (92 + 21) / 113][Stage 170:=================================================>   (106 + 7) / 113][Stage 170:====================================================>(111 + 2) / 113]                                                                                [Stage 171:=====================================>               (81 + 33) / 114][Stage 171:===========================================>         (94 + 20) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:====================================================>(112 + 2) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.107590724 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350068991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (75 + 38) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:=============================================>       (97 + 16) / 113][Stage 172:==================================================>  (108 + 5) / 113][Stage 172:====================================================>(111 + 2) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:====================================>                (79 + 35) / 114][Stage 173:========================================>            (88 + 26) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.075755117 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360596526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:=================================>                   (74 + 44) / 118][Stage 174:=====================================>               (84 + 34) / 118][Stage 174:===============================================>    (107 + 11) / 118]                                                                                [Stage 175:================================>                    (74 + 45) / 119][Stage 175:===================================>                 (80 + 39) / 119][Stage 175:============================================>       (101 + 18) / 119][Stage 175:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.949384068 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484155426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (73 + 45) / 118][Stage 176:======================================>              (86 + 32) / 118][Stage 176:============================================>       (101 + 17) / 118][Stage 176:==================================================>  (112 + 6) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:===================================>                 (79 + 40) / 119][Stage 177:============================================>        (99 + 20) / 119][Stage 177:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.994844263 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395063404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:===============================>                     (68 + 45) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:===============================================>    (103 + 10) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:=============================>                       (64 + 50) / 114][Stage 179:======================================>              (83 + 31) / 114][Stage 179:================================================>    (105 + 9) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.04674172 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406731263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:===============================>                     (73 + 48) / 121][Stage 180:==========================================>          (96 + 25) / 121][Stage 180:=================================================>   (114 + 7) / 121]                                                                                [Stage 181:==========================>                          (62 + 60) / 122][Stage 181:===============================>                     (72 + 50) / 122][Stage 181:=========================================>           (96 + 26) / 122][Stage 181:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.071354625 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401989887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (74 + 41) / 115][Stage 182:===========================================>         (95 + 20) / 115][Stage 182:==============================================>     (103 + 12) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:================================>                    (72 + 44) / 116][Stage 183:=======================================>             (87 + 29) / 116][Stage 183:===========================================>         (96 + 20) / 116][Stage 183:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.914869153 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381873919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:>                                                      (0 + 0) / 115][Stage 184:===============================>                     (69 + 46) / 115][Stage 184:======================================>              (84 + 31) / 115][Stage 184:=============================================>       (99 + 16) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:====================================>                (80 + 36) / 116][Stage 185:============================================>        (97 + 19) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.715141734 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393703459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (63 + 58) / 121][Stage 186:===============================>                     (72 + 49) / 121][Stage 186:==========================================>          (98 + 23) / 121][Stage 186:===================================================> (118 + 3) / 121]                                                                                [Stage 187:===========================>                         (63 + 59) / 122][Stage 187:==============================>                      (71 + 51) / 122][Stage 187:=========================================>           (96 + 26) / 122][Stage 187:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.023426843 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408903651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:===========================>                         (62 + 59) / 121][Stage 188:=====================================>               (85 + 36) / 121][Stage 188:============================================>       (104 + 17) / 121][Stage 188:====================================================>(119 + 2) / 121]                                                                                [Stage 189:===========================>                         (63 + 59) / 122][Stage 189:================================>                    (75 + 47) / 122][Stage 189:=========================================>           (96 + 26) / 122][Stage 189:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 2.977087566 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392294475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (62 + 58) / 120][Stage 190:================================>                    (74 + 46) / 120][Stage 190:==========================================>          (97 + 23) / 120][Stage 190:===================================================> (117 + 3) / 120][Stage 190:====================================================>(119 + 1) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:============================>                        (65 + 56) / 121][Stage 191:====================================>                (84 + 37) / 121][Stage 191:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.091093655 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391335472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:============================>                        (65 + 55) / 120][Stage 192:====================================>                (83 + 37) / 120][Stage 192:============================================>       (102 + 18) / 120][Stage 192:====================================================>(118 + 2) / 120]                                                                                [Stage 193:============================>                        (66 + 55) / 121][Stage 193:===================================>                 (81 + 40) / 121][Stage 193:==========================================>         (100 + 21) / 121][Stage 193:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.060994654 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355132288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===================================>                 (76 + 37) / 113][Stage 194:=========================================>           (89 + 24) / 113][Stage 194:=============================================>       (98 + 15) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:=================================>                   (72 + 42) / 114][Stage 195:====================================>                (79 + 35) / 114][Stage 195:=========================================>           (89 + 25) / 114][Stage 195:===============================================>    (104 + 10) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.247055548 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336819786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:========================================>            (87 + 28) / 115][Stage 196:=============================================>      (100 + 15) / 115][Stage 196:==================================================>  (109 + 6) / 115]                                                                                [Stage 197:=====================================>               (82 + 34) / 116][Stage 197:=========================================>           (91 + 25) / 116][Stage 197:===================================================> (112 + 4) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.965635791 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343346388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (81 + 34) / 115][Stage 198:=======================================>             (86 + 29) / 115][Stage 198:==============================================>     (103 + 12) / 115][Stage 198:===================================================> (111 + 4) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:======================================>              (85 + 31) / 116][Stage 199:=========================================>           (90 + 26) / 116][Stage 199:==============================================>     (103 + 13) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.732722219 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346540399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (72 + 41) / 113][Stage 200:=======================================>             (84 + 29) / 113][Stage 200:=============================================>       (97 + 16) / 113][Stage 200:==================================================>  (108 + 5) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:===================================>                 (77 + 37) / 114][Stage 201:========================================>            (87 + 27) / 114][Stage 201:==============================================>      (99 + 15) / 114][Stage 201:==================================================>  (109 + 5) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.218782193 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/22 06:15:11 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:40854) dropped. RpcEnv already stopped.
17/05/22 06:15:11 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:40854) dropped. RpcEnv already stopped.

real	9m49.577s
user	11m28.980s
sys	0m27.556s
