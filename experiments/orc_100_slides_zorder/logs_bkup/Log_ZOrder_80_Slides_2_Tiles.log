Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 10:37:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:37:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:37:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:37:34 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 10:37:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 10:37:47 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522103736-0448).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.378450091 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (49 + 66) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.672753113 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.643262595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================================>                      (67 + 48) / 115][Stage 2:===================================>                   (75 + 40) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:=============================================>         (95 + 20) / 115][Stage 2:===============================================>       (99 + 16) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:====================================>                  (77 + 39) / 116][Stage 3:======================================>                (82 + 34) / 116][Stage 3:========================================>              (85 + 31) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:=============================================>         (95 + 21) / 116][Stage 3:================================================>     (104 + 12) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.939178422 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.718619823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:======================>                                (48 + 72) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:============================>                          (63 + 57) / 120][Stage 4:=================================>                     (74 + 46) / 120][Stage 4:========================================>              (88 + 32) / 120][Stage 4:==============================================>       (103 + 17) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:=============================>                         (65 + 56) / 121][Stage 5:==============================>                        (66 + 55) / 121][Stage 5:==================================>                    (76 + 45) / 121][Stage 5:=============================================>        (101 + 20) / 121][Stage 5:====================================================>  (116 + 5) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.384325244 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524169024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:====================================>                  (76 + 39) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:=========================================>             (87 + 28) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:================================================>     (103 + 12) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:======================================================>(113 + 2) / 115]                                                                                [Stage 7:=====================================>                 (80 + 36) / 116][Stage 7:========================================>              (86 + 30) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:==============================================>        (99 + 17) / 116][Stage 7:================================================>     (105 + 11) / 116][Stage 7:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.872530168 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.631443494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=========================>                             (56 + 64) / 120][Stage 8:============================>                          (62 + 58) / 120][Stage 8:===============================>                       (69 + 51) / 120][Stage 8:===================================>                   (77 + 43) / 120][Stage 8:=======================================>               (87 + 33) / 120][Stage 8:===============================================>      (106 + 14) / 120][Stage 8:====================================================>  (115 + 5) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:==============================>                        (67 + 54) / 121][Stage 9:=====================================>                 (82 + 39) / 121][Stage 9:===============================================>      (106 + 15) / 121][Stage 9:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.862813713 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508030394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:==================================>                   (73 + 40) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:===========================================>          (91 + 22) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:====================================>                 (78 + 36) / 114][Stage 11:==========================================>           (89 + 25) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.138848297 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.595905666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:==============================>                       (63 + 50) / 113][Stage 12:================================>                     (69 + 44) / 113][Stage 12:=======================================>              (83 + 30) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:===================================================>  (108 + 5) / 113]                                                                                [Stage 13:==========================>                           (56 + 58) / 114][Stage 13:==============================>                       (65 + 49) / 114][Stage 13:======================================>               (82 + 32) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.012648374 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493978768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:===================================>                  (77 + 41) / 118][Stage 14:=========================================>            (90 + 28) / 118][Stage 14:=============================================>       (102 + 16) / 118][Stage 14:==================================================>   (110 + 8) / 118][Stage 14:=====================================================>(116 + 2) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:==================================>                   (77 + 42) / 119][Stage 15:==========================================>           (94 + 25) / 119][Stage 15:==============================================>      (105 + 14) / 119][Stage 15:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.679205664 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.563291583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (59 + 61) / 120][Stage 16:=============================>                        (65 + 55) / 120][Stage 16:=======================================>              (87 + 33) / 120][Stage 16:==============================================>      (106 + 14) / 120][Stage 16:====================================================> (116 + 4) / 120][Stage 16:=====================================================>(118 + 2) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (67 + 54) / 121][Stage 17:=====================================>                (84 + 37) / 121][Stage 17:=============================================>       (105 + 16) / 121][Stage 17:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.7260089 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496709254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (69 + 46) / 115][Stage 18:======================================>               (82 + 33) / 115][Stage 18:==========================================>           (90 + 25) / 115][Stage 18:===============================================>     (104 + 11) / 115][Stage 18:====================================================> (112 + 3) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:================================>                     (69 + 47) / 116][Stage 19:===================================>                  (76 + 40) / 116][Stage 19:=============================================>        (98 + 18) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.565157167 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52576147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=============================>                        (63 + 52) / 115][Stage 20:================================>                     (70 + 45) / 115][Stage 20:========================================>             (86 + 29) / 115][Stage 20:==============================================>      (101 + 14) / 115][Stage 20:===============================================>     (103 + 12) / 115][Stage 20:==================================================>   (107 + 8) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:================================>                     (70 + 46) / 116][Stage 21:======================================>               (83 + 33) / 116][Stage 21:=============================================>        (97 + 19) / 116][Stage 21:==============================================>      (102 + 14) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.097821596 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.581147519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (75 + 43) / 118][Stage 22:=====================================>                (82 + 36) / 118][Stage 22:===============================================>     (105 + 13) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (74 + 45) / 119][Stage 23:=======================================>              (86 + 33) / 119][Stage 23:============================================>         (97 + 22) / 119][Stage 23:=================================================>    (110 + 9) / 119][Stage 23:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.252814202 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427303898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (83 + 32) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:==============================================>       (99 + 16) / 115][Stage 24:==================================================>   (107 + 8) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:=======================================>              (85 + 31) / 116][Stage 25:============================================>         (96 + 20) / 116][Stage 25:=================================================>    (107 + 9) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:====================================================> (112 + 4) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.387373548 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464022851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (78 + 35) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:=============================================>        (96 + 17) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:==================================>                   (72 + 42) / 114][Stage 27:=======================================>              (83 + 31) / 114][Stage 27:=============================================>        (96 + 18) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.935511083 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462897069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==============================>                       (66 + 49) / 115][Stage 28:====================================>                 (77 + 38) / 115][Stage 28:===========================================>          (93 + 22) / 115][Stage 28:===============================================>     (102 + 13) / 115][Stage 28:==================================================>   (108 + 7) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:================================>                     (70 + 46) / 116][Stage 29:=========================================>            (89 + 27) / 116][Stage 29:===============================================>     (103 + 13) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.28372973 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448366101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (70 + 43) / 113][Stage 30:=======================================>              (82 + 31) / 113][Stage 30:==========================================>           (89 + 24) / 113][Stage 30:===============================================>      (99 + 14) / 113][Stage 30:==================================================>   (106 + 7) / 113][Stage 30:===================================================>  (108 + 5) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:======================================>               (81 + 33) / 114][Stage 31:===========================================>          (91 + 23) / 114][Stage 31:=============================================>        (97 + 17) / 114][Stage 31:==============================================>      (100 + 14) / 114][Stage 31:=================================================>    (105 + 9) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.953579789 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469000962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (59 + 54) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:===========================================>          (91 + 22) / 113][Stage 32:===============================================>     (101 + 12) / 113][Stage 32:====================================================> (109 + 4) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (58 + 56) / 114][Stage 33:==============================>                       (65 + 49) / 114][Stage 33:======================================>               (82 + 32) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(112 + 2) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.896643781 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45287101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:>                                                       (0 + 0) / 118][Stage 34:================================>                     (72 + 46) / 118][Stage 34:==================================>                   (75 + 43) / 118][Stage 34:=======================================>              (87 + 31) / 118][Stage 34:==============================================>      (104 + 14) / 118][Stage 34:===================================================>  (113 + 5) / 118]                                                                                [Stage 35:=================================>                    (74 + 45) / 119][Stage 35:====================================>                 (81 + 38) / 119][Stage 35:===========================================>          (95 + 24) / 119][Stage 35:================================================>    (108 + 11) / 119][Stage 35:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.414588775 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519914043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (66 + 54) / 120][Stage 36:===================================>                  (79 + 41) / 120][Stage 36:================================================>    (110 + 10) / 120][Stage 36:=====================================================>(118 + 2) / 120]                                                                                [Stage 37:============================>                         (64 + 57) / 121][Stage 37:=====================================>                (84 + 37) / 121][Stage 37:=============================================>       (104 + 17) / 121][Stage 37:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.158441334 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405183477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (83 + 32) / 115][Stage 38:==========================================>           (90 + 25) / 115][Stage 38:===============================================>     (104 + 11) / 115][Stage 38:====================================================> (111 + 4) / 115][Stage 38:=====================================================>(113 + 2) / 115]                                                                                [Stage 39:=======================================>              (85 + 31) / 116][Stage 39:============================================>         (96 + 20) / 116][Stage 39:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.941105909 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=19,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.60959038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:=============================>                        (66 + 55) / 121][Stage 40:===================================>                  (79 + 42) / 121][Stage 40:===========================================>          (97 + 24) / 121][Stage 40:=====================================================>(119 + 2) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:============================>                         (65 + 57) / 122][Stage 41:==================================>                   (79 + 43) / 122][Stage 41:===============================================>     (110 + 12) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.08307581 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521004206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:=============================>                        (65 + 55) / 120][Stage 42:==================================>                   (76 + 44) / 120][Stage 42:=======================================>              (88 + 32) / 120][Stage 42:=================================================>    (111 + 9) / 120][Stage 42:=====================================================>(118 + 2) / 120][Stage 42:=====================================================>(119 + 1) / 120]                                                                                [Stage 43:============================>                         (64 + 57) / 121][Stage 43:=================================>                    (76 + 45) / 121][Stage 43:=========================================>            (93 + 28) / 121][Stage 43:================================================>    (110 + 11) / 121][Stage 43:==================================================>   (114 + 7) / 121][Stage 43:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.912770307 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440308148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (74 + 44) / 118][Stage 44:======================================>               (84 + 34) / 118][Stage 44:==============================================>      (104 + 14) / 118][Stage 44:====================================================> (115 + 3) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:======================================>               (85 + 34) / 119][Stage 45:==============================================>      (105 + 14) / 119][Stage 45:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 2.964148581 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471307849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:============================>                         (63 + 57) / 120][Stage 46:===================================>                  (78 + 42) / 120][Stage 46:==============================================>      (106 + 14) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:=============================>                        (67 + 54) / 121][Stage 47:====================================>                 (82 + 39) / 121][Stage 47:=============================================>       (104 + 17) / 121][Stage 47:===================================================>  (115 + 6) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.207424303 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453017333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:=================================>                    (71 + 42) / 113][Stage 48:===========================================>          (91 + 22) / 113][Stage 48:==================================================>   (105 + 8) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:=================================>                    (71 + 43) / 114][Stage 49:============================================>         (94 + 20) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.286307121 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576351677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:================================>                     (69 + 44) / 113][Stage 50:===========================================>          (91 + 22) / 113][Stage 50:==================================================>   (106 + 7) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:==========================================>           (89 + 25) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.215777145 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370252351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (82 + 33) / 115][Stage 52:===========================================>          (92 + 23) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:=====================================================>(113 + 2) / 115]                                                                                [Stage 53:=======================================>              (85 + 31) / 116][Stage 53:============================================>         (96 + 20) / 116][Stage 53:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.962825407 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474259416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:==============================>                       (68 + 53) / 121][Stage 54:======================================>               (86 + 35) / 121][Stage 54:================================================>    (111 + 10) / 121][Stage 54:====================================================> (118 + 3) / 121]                                                                                [Stage 55:============================>                         (64 + 58) / 122][Stage 55:===============================>                      (72 + 50) / 122][Stage 55:=========================================>            (93 + 29) / 122][Stage 55:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.167739754 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.56179007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (61 + 59) / 120][Stage 56:===============================>                      (71 + 49) / 120][Stage 56:=========================================>            (93 + 27) / 120][Stage 56:===================================================>  (114 + 6) / 120]                                                                                [Stage 57:============================>                         (64 + 57) / 121][Stage 57:=================================>                    (74 + 47) / 121][Stage 57:=======================================>              (89 + 32) / 121][Stage 57:==============================================>      (107 + 14) / 121][Stage 57:====================================================> (117 + 4) / 121][Stage 57:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.401879119 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43015425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:>                                                       (0 + 0) / 113][Stage 58:============================>                         (59 + 54) / 113][Stage 58:===============================>                      (65 + 48) / 113][Stage 58:====================================>                 (76 + 37) / 113][Stage 58:=============================================>        (96 + 17) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:==============================>                       (65 + 49) / 114][Stage 59:======================================>               (82 + 32) / 114][Stage 59:===============================================>     (103 + 11) / 114][Stage 59:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.109702405 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431875274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (63 + 50) / 113][Stage 60:====================================>                 (76 + 37) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:===================================================>  (108 + 5) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:============================>                         (61 + 53) / 114][Stage 61:==================================>                   (72 + 42) / 114][Stage 61:==========================================>           (90 + 24) / 114][Stage 61:===============================================>     (103 + 11) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.50611537 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467288824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==========================>                           (60 + 61) / 121][Stage 62:==============================>                       (69 + 52) / 121][Stage 62:====================================>                 (81 + 40) / 121][Stage 62:==============================================>      (107 + 14) / 121][Stage 62:=====================================================>(119 + 2) / 121]                                                                                [Stage 63:=============================>                        (66 + 56) / 122][Stage 63:====================================>                 (83 + 39) / 122][Stage 63:=============================================>       (104 + 18) / 122][Stage 63:===================================================>  (116 + 6) / 122][Stage 63:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.415571894 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398560229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (73 + 45) / 118][Stage 64:==================================>                   (76 + 42) / 118][Stage 64:======================================>               (84 + 34) / 118][Stage 64:===========================================>          (96 + 22) / 118][Stage 64:=================================================>    (109 + 9) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:==================================>                   (77 + 42) / 119][Stage 65:=======================================>              (87 + 32) / 119][Stage 65:=============================================>       (102 + 17) / 119][Stage 65:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.334234676 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489713369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:============================================>         (95 + 20) / 115][Stage 66:================================================>    (105 + 10) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:=======================================>              (84 + 32) / 116][Stage 67:===========================================>          (94 + 22) / 116][Stage 67:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.720731564 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416799705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:=============================>                        (62 + 51) / 113][Stage 68:===================================>                  (74 + 39) / 113][Stage 68:============================================>         (93 + 20) / 113][Stage 68:===================================================>  (108 + 5) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:==============================>                       (65 + 49) / 114][Stage 69:=====================================>                (80 + 34) / 114][Stage 69:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.113190523 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438326008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:=====================================>                (81 + 37) / 118][Stage 70:============================================>         (97 + 21) / 118][Stage 70:================================================>    (108 + 10) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:===================================>                  (78 + 41) / 119][Stage 71:===========================================>          (96 + 23) / 119][Stage 71:===================================================>  (114 + 5) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.317995831 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433039797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:==============================>                       (64 + 49) / 113][Stage 72:=====================================>                (79 + 34) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:==============================>                       (64 + 50) / 114][Stage 73:====================================>                 (77 + 37) / 114][Stage 73:============================================>         (93 + 21) / 114][Stage 73:================================================>    (104 + 10) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.691334173 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361492996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (83 + 32) / 115][Stage 74:===========================================>          (92 + 23) / 115][Stage 74:===============================================>     (104 + 11) / 115][Stage 74:===================================================>  (110 + 5) / 115]                                                                                [Stage 75:=====================================>                (80 + 36) / 116][Stage 75:========================================>             (86 + 30) / 116][Stage 75:============================================>         (96 + 20) / 116][Stage 75:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.692769957 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412262497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (66 + 49) / 115][Stage 76:======================================>               (83 + 32) / 115][Stage 76:=============================================>        (96 + 19) / 115][Stage 76:===================================================>  (110 + 5) / 115]                                                                                [Stage 77:=================================>                    (73 + 43) / 116][Stage 77:======================================>               (82 + 34) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.733405999 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38815633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (70 + 43) / 113][Stage 78:====================================>                 (77 + 36) / 113][Stage 78:===========================================>          (90 + 23) / 113][Stage 78:==============================================>       (98 + 15) / 113][Stage 78:====================================================> (109 + 4) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:=====================================>                (79 + 35) / 114][Stage 79:=========================================>            (88 + 26) / 114][Stage 79:=============================================>        (97 + 17) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.699091116 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434242362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:================================>                     (72 + 48) / 120][Stage 80:===========================================>          (96 + 24) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:=============================>                        (66 + 55) / 121][Stage 81:===================================>                  (80 + 41) / 121][Stage 81:==============================================>      (106 + 15) / 121]                                                                                Time elapsed: 2.919287272 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398976611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (69 + 46) / 115][Stage 82:=======================================>              (84 + 31) / 115][Stage 82:==============================================>       (98 + 17) / 115][Stage 82:==================================================>   (107 + 8) / 115]                                                                                [Stage 83:==================================>                   (74 + 42) / 116][Stage 83:==========================================>           (91 + 25) / 116][Stage 83:==================================================>   (109 + 7) / 116][Stage 83:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.836171649 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459056691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (71 + 42) / 113][Stage 84:=====================================>                (79 + 34) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:===============================================>     (102 + 11) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:========================================>             (85 + 29) / 114][Stage 85:=============================================>        (96 + 18) / 114][Stage 85:==================================================>   (107 + 7) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.904664507 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396038026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (72 + 43) / 115][Stage 86:=========================================>            (89 + 26) / 115][Stage 86:================================================>    (105 + 10) / 115]                                                                                [Stage 87:==================================>                   (75 + 41) / 116][Stage 87:=========================================>            (90 + 26) / 116][Stage 87:==============================================>       (99 + 17) / 116][Stage 87:==================================================>   (109 + 7) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.651560232 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525792324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=============================>                        (62 + 51) / 113][Stage 88:==================================>                   (72 + 41) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:==============================>                       (65 + 49) / 114][Stage 89:========================================>             (85 + 29) / 114][Stage 89:==============================================>       (99 + 15) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.115005009 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409437514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:================================>                     (67 + 46) / 113][Stage 90:=========================================>            (86 + 27) / 113][Stage 90:==============================================>      (100 + 13) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:================================>                     (68 + 46) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.093866889 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380187836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (77 + 41) / 118][Stage 92:===========================================>          (95 + 23) / 118][Stage 92:================================================>    (107 + 11) / 118][Stage 92:=====================================================>(116 + 2) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:===================================>                  (79 + 40) / 119][Stage 93:=========================================>            (92 + 27) / 119][Stage 93:================================================>    (108 + 11) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.062502448 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440564097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (61 + 59) / 120][Stage 94:=================================>                    (75 + 45) / 120][Stage 94:===========================================>          (96 + 24) / 120][Stage 94:===================================================>  (114 + 6) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:=================================>                    (74 + 47) / 121][Stage 95:=========================================>            (94 + 27) / 121][Stage 95:==================================================>   (113 + 8) / 121][Stage 95:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.353113589 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373286683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (78 + 40) / 118][Stage 96:============================================>        (100 + 18) / 118][Stage 96:====================================================> (114 + 4) / 118][Stage 96:=====================================================>(117 + 1) / 118]                                                                                [Stage 97:==================================>                   (76 + 43) / 119][Stage 97:======================================>               (85 + 34) / 119][Stage 97:=============================================>       (102 + 17) / 119][Stage 97:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.206437539 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396153668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:============================>                         (59 + 54) / 113][Stage 98:==================================>                   (72 + 41) / 113][Stage 98:============================================>         (93 + 20) / 113][Stage 98:===================================================>  (107 + 6) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:==================================>                   (72 + 42) / 114][Stage 99:=============================================>        (96 + 18) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.357813883 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38676241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==================================>                  (74 + 41) / 115][Stage 100:=======================================>             (86 + 29) / 115][Stage 100:===============================================>    (104 + 11) / 115][Stage 100:===================================================> (112 + 3) / 115][Stage 100:====================================================>(114 + 1) / 115]                                                                                [Stage 101:================================>                    (71 + 45) / 116][Stage 101:======================================>              (85 + 31) / 116][Stage 101:=============================================>      (101 + 15) / 116][Stage 101:==================================================>  (111 + 5) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.023062019 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428279573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (62 + 59) / 121][Stage 102:================================>                    (74 + 47) / 121][Stage 102:=====================================>               (86 + 35) / 121][Stage 102:===============================================>    (110 + 11) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:===========================>                         (63 + 59) / 122][Stage 103:================================>                    (75 + 47) / 122][Stage 103:==========================================>         (100 + 22) / 122][Stage 103:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.085186245 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418823774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (62 + 58) / 120][Stage 104:==============================>                      (70 + 50) / 120][Stage 104:=======================================>             (89 + 31) / 120][Stage 104:=================================================>   (113 + 7) / 120]                                                                                [Stage 105:============================>                        (65 + 56) / 121][Stage 105:==================================>                  (79 + 42) / 121][Stage 105:==========================================>         (100 + 21) / 121][Stage 105:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.003663544 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425816188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:===========================>                         (63 + 57) / 120][Stage 106:===============================>                     (71 + 49) / 120][Stage 106:======================================>              (88 + 32) / 120][Stage 106:===========================================>        (100 + 20) / 120][Stage 106:=================================================>   (113 + 7) / 120]                                                                                [Stage 107:===========================>                         (62 + 59) / 121][Stage 107:===============================>                     (71 + 50) / 121][Stage 107:======================================>              (89 + 32) / 121][Stage 107:=============================================>      (107 + 14) / 121][Stage 107:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.434071765 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402363502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=============================>                       (65 + 50) / 115][Stage 108:==================================>                  (75 + 40) / 115][Stage 108:=======================================>             (86 + 29) / 115][Stage 108:==============================================>     (102 + 13) / 115][Stage 108:==================================================>  (110 + 5) / 115]                                                                                [Stage 109:===================================>                 (77 + 39) / 116][Stage 109:=======================================>             (87 + 29) / 116][Stage 109:=============================================>      (102 + 14) / 116][Stage 109:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.097238735 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392687863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (61 + 52) / 113][Stage 110:====================================>                (77 + 36) / 113][Stage 110:==========================================>          (90 + 23) / 113][Stage 110:===============================================>    (103 + 10) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:=================================>                   (72 + 42) / 114][Stage 111:===========================================>         (94 + 20) / 114][Stage 111:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.266270494 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424124366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:==============================>                      (70 + 51) / 121][Stage 112:=======================================>             (90 + 31) / 121][Stage 112:=================================================>   (114 + 7) / 121]                                                                                [Stage 113:==========================>                          (62 + 60) / 122][Stage 113:=============================>                       (68 + 54) / 122][Stage 113:=======================================>             (91 + 31) / 122][Stage 113:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 2.973833674 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391287881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:==============================>                      (66 + 47) / 113][Stage 114:====================================>                (78 + 35) / 113][Stage 114:===============================================>    (103 + 10) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:==================================>                  (75 + 39) / 114][Stage 115:============================================>        (95 + 19) / 114][Stage 115:==================================================>  (109 + 5) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.230995729 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376711992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (71 + 44) / 115][Stage 116:=======================================>             (86 + 29) / 115][Stage 116:=================================================>   (107 + 8) / 115][Stage 116:===================================================> (112 + 3) / 115]                                                                                [Stage 117:===============================>                     (68 + 48) / 116][Stage 117:=====================================>               (83 + 33) / 116][Stage 117:============================================>        (97 + 19) / 116][Stage 117:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.702937956 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352864565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (77 + 36) / 113][Stage 118:========================================>            (87 + 26) / 113][Stage 118:================================================>    (104 + 9) / 113]                                                                                [Stage 119:===================================>                 (77 + 37) / 114][Stage 119:=======================================>             (85 + 29) / 114][Stage 119:=============================================>      (100 + 14) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:====================================================>(112 + 2) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.297504666 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363123446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:===================================>                 (78 + 40) / 118][Stage 120:=======================================>             (89 + 29) / 118][Stage 120:============================================>       (100 + 18) / 118][Stage 120:=================================================>   (110 + 8) / 118]                                                                                [Stage 121:================================>                    (74 + 45) / 119][Stage 121:====================================>                (82 + 37) / 119][Stage 121:=========================================>           (94 + 25) / 119][Stage 121:==============================================>     (107 + 12) / 119][Stage 121:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.367227827 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379042497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (63 + 50) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:==================================================>  (107 + 6) / 113]                                                                                [Stage 123:============================>                        (62 + 52) / 114][Stage 123:====================================>                (79 + 35) / 114][Stage 123:===========================================>         (93 + 21) / 114][Stage 123:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.957969672 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347674515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (78 + 35) / 113][Stage 124:=========================================>           (89 + 24) / 113][Stage 124:==============================================>     (101 + 12) / 113][Stage 124:===================================================> (110 + 3) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:=================================>                   (72 + 42) / 114][Stage 125:======================================>              (83 + 31) / 114][Stage 125:===========================================>         (94 + 20) / 114][Stage 125:=================================================>   (106 + 8) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.314832507 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37497571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (73 + 45) / 118][Stage 126:===================================>                 (80 + 38) / 118][Stage 126:========================================>            (91 + 27) / 118][Stage 126:===============================================>    (108 + 10) / 118][Stage 126:===================================================> (115 + 3) / 118][Stage 126:====================================================>(117 + 1) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:=================================>                   (76 + 43) / 119][Stage 127:=====================================>               (85 + 34) / 119][Stage 127:===========================================>         (97 + 22) / 119][Stage 127:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.46521851 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428375077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 60) / 121][Stage 128:==============================>                      (70 + 51) / 121][Stage 128:=====================================>               (86 + 35) / 121][Stage 128:=================================================>   (112 + 9) / 121][Stage 128:====================================================>(119 + 2) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:=============================>                       (69 + 53) / 122][Stage 129:======================================>              (89 + 33) / 122][Stage 129:=================================================>   (113 + 9) / 122][Stage 129:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.177452117 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393520368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:===========================>                         (63 + 57) / 120][Stage 130:==================================>                  (78 + 42) / 120][Stage 130:===========================================>         (99 + 21) / 120][Stage 130:==================================================>  (115 + 5) / 120]                                                                                [Stage 131:===========================>                         (62 + 59) / 121][Stage 131:===============================>                     (71 + 50) / 121][Stage 131:========================================>            (92 + 29) / 121][Stage 131:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.185805736 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363577628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:=================================>                   (74 + 44) / 118][Stage 132:=====================================>               (84 + 34) / 118][Stage 132:============================================>        (98 + 20) / 118][Stage 132:================================================>    (109 + 9) / 118]                                                                                [Stage 133:=================================>                   (75 + 44) / 119][Stage 133:====================================>                (83 + 36) / 119][Stage 133:==========================================>          (95 + 24) / 119][Stage 133:===============================================>    (109 + 10) / 119][Stage 133:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.375976959 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36905922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==================================>                  (74 + 41) / 115][Stage 134:======================================>              (83 + 32) / 115][Stage 134:=============================================>      (100 + 15) / 115][Stage 134:=================================================>   (107 + 8) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:===================================>                 (77 + 39) / 116][Stage 135:======================================>              (85 + 31) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:==================================================>  (110 + 6) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.307040403 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383604048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (61 + 52) / 113][Stage 136:===================================>                 (76 + 37) / 113][Stage 136:=============================================>       (97 + 16) / 113][Stage 136:=================================================>   (106 + 7) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:==============================>                      (65 + 49) / 114][Stage 137:=====================================>               (81 + 33) / 114][Stage 137:=============================================>       (98 + 16) / 114][Stage 137:=================================================>   (106 + 8) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.515892124 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391691105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (62 + 58) / 120][Stage 138:=================================>                   (76 + 44) / 120][Stage 138:===========================================>        (100 + 20) / 120][Stage 138:===================================================> (116 + 4) / 120]                                                                                [Stage 139:===========================>                         (63 + 58) / 121][Stage 139:================================>                    (74 + 47) / 121][Stage 139:==========================================>          (98 + 23) / 121][Stage 139:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.016256345 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377944978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==============================>                      (66 + 49) / 115][Stage 140:=====================================>               (81 + 34) / 115][Stage 140:==========================================>          (93 + 22) / 115][Stage 140:================================================>    (106 + 9) / 115]                                                                                [Stage 141:================================>                    (71 + 45) / 116][Stage 141:========================================>            (89 + 27) / 116][Stage 141:===============================================>    (105 + 11) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.84809259 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337861538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (84 + 31) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:==================================================>  (109 + 6) / 115]                                                                                [Stage 143:======================================>              (85 + 31) / 116][Stage 143:==========================================>          (93 + 23) / 116][Stage 143:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.538457891 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379384721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:==============================>                      (65 + 48) / 113][Stage 144:=======================================>             (85 + 28) / 113][Stage 144:================================================>    (104 + 9) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:=============================>                       (63 + 51) / 114][Stage 145:=================================>                   (71 + 43) / 114][Stage 145:============================================>        (95 + 19) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.338494397 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358498239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:===================================>                 (79 + 39) / 118][Stage 146:========================================>            (91 + 27) / 118][Stage 146:===============================================>    (108 + 10) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:==================================>                  (77 + 42) / 119][Stage 147:======================================>              (86 + 33) / 119][Stage 147:=========================================>           (94 + 25) / 119][Stage 147:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.279638581 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407092257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:==============================>                      (70 + 51) / 121][Stage 148:======================================>              (89 + 32) / 121][Stage 148:==============================================>     (109 + 12) / 121]                                                                                [Stage 149:==========================>                          (62 + 60) / 122][Stage 149:================================>                    (75 + 47) / 122][Stage 149:=======================================>             (92 + 30) / 122][Stage 149:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.095730874 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338229679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (82 + 33) / 115][Stage 150:========================================>            (87 + 28) / 115][Stage 150:=============================================>       (99 + 16) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:======================================>              (84 + 32) / 116][Stage 151:===========================================>         (96 + 20) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:====================================================>(114 + 2) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.185327197 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372565449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (78 + 37) / 115][Stage 152:==========================================>          (92 + 23) / 115][Stage 152:===============================================>    (104 + 11) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:=================================>                   (73 + 43) / 116][Stage 153:=======================================>             (87 + 29) / 116][Stage 153:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.777414399 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332414248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:======================================>              (83 + 32) / 115][Stage 154:=========================================>           (89 + 26) / 115][Stage 154:==============================================>     (103 + 12) / 115][Stage 154:====================================================>(113 + 2) / 115]                                                                                [Stage 155:=======================================>             (86 + 30) / 116][Stage 155:===========================================>         (96 + 20) / 116][Stage 155:=================================================>   (108 + 8) / 116][Stage 155:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.891799311 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365618635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:====================================>                (82 + 36) / 118][Stage 156:============================================>       (101 + 17) / 118][Stage 156:===================================================> (114 + 4) / 118]                                                                                [Stage 157:=================================>                   (76 + 43) / 119][Stage 157:========================================>            (91 + 28) / 119][Stage 157:=============================================>      (105 + 14) / 119]                                                                                Time elapsed: 2.939688169 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335858356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:======================================>              (83 + 32) / 115][Stage 158:===========================================>         (95 + 20) / 115][Stage 158:===============================================>    (104 + 11) / 115][Stage 158:===================================================> (112 + 3) / 115]                                                                                [Stage 159:======================================>              (85 + 31) / 116][Stage 159:===========================================>         (96 + 20) / 116][Stage 159:===============================================>    (105 + 11) / 116][Stage 159:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.89469662 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377506579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (78 + 37) / 115][Stage 160:============================================>        (96 + 19) / 115][Stage 160:==============================================>     (102 + 13) / 115]                                                                                [Stage 161:==================================>                  (76 + 40) / 116][Stage 161:==========================================>          (92 + 24) / 116][Stage 161:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.604124498 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406359558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:===========================>                         (63 + 58) / 121][Stage 162:=================================>                   (77 + 44) / 121][Stage 162:===========================================>        (102 + 19) / 121][Stage 162:===================================================> (117 + 4) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:============================>                        (66 + 56) / 122][Stage 163:===================================>                 (81 + 41) / 122][Stage 163:============================================>       (104 + 18) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.084790286 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374910655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==============================>                      (67 + 48) / 115][Stage 164:=====================================>               (81 + 34) / 115][Stage 164:============================================>        (97 + 18) / 115][Stage 164:===================================================> (112 + 3) / 115]                                                                                [Stage 165:=====================================>               (82 + 34) / 116][Stage 165:============================================>        (97 + 19) / 116][Stage 165:===================================================> (113 + 3) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.770786336 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376661638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=============================>                       (62 + 51) / 113][Stage 166:=================================>                   (72 + 41) / 113][Stage 166:===========================================>         (93 + 20) / 113][Stage 166:===================================================> (109 + 4) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:===============================>                     (67 + 47) / 114][Stage 167:============================================>        (95 + 19) / 114][Stage 167:================================================>    (105 + 9) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.364804194 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397887061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==============================>                      (64 + 49) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:==============================================>     (100 + 13) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:============================>                        (61 + 53) / 114][Stage 169:===================================>                 (76 + 38) / 114][Stage 169:=========================================>           (90 + 24) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.27223185 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376412738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===============================>                     (69 + 46) / 115][Stage 170:=====================================>               (82 + 33) / 115][Stage 170:=============================================>      (101 + 14) / 115][Stage 170:===================================================> (111 + 4) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:================================>                    (72 + 44) / 116][Stage 171:=======================================>             (86 + 30) / 116][Stage 171:=============================================>      (101 + 15) / 116][Stage 171:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.9488841 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359243384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:>                                                      (0 + 0) / 118][Stage 172:================================>                    (72 + 46) / 118][Stage 172:===================================>                 (78 + 40) / 118][Stage 172:=========================================>           (93 + 25) / 118][Stage 172:==================================================>  (112 + 6) / 118]                                                                                [Stage 173:=================================>                   (76 + 43) / 119][Stage 173:========================================>            (91 + 28) / 119][Stage 173:===============================================>    (108 + 11) / 119][Stage 173:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.017891302 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376682499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:==============================>                      (66 + 47) / 113][Stage 174:=====================================>               (81 + 32) / 113][Stage 174:==============================================>      (99 + 14) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:=================================>                   (72 + 42) / 114][Stage 175:=========================================>           (90 + 24) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.451810818 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378279262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:===============================>                     (67 + 46) / 113][Stage 176:=========================================>           (89 + 24) / 113][Stage 176:=================================================>   (106 + 7) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:===============================>                     (68 + 46) / 114][Stage 177:==================================>                  (74 + 40) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:===================================================> (110 + 4) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.361440698 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474446437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (63 + 58) / 121][Stage 178:================================>                    (75 + 46) / 121][Stage 178:=========================================>           (95 + 26) / 121][Stage 178:==================================================>  (115 + 6) / 121]                                                                                [Stage 179:============================>                        (65 + 57) / 122][Stage 179:=================================>                   (77 + 45) / 122][Stage 179:=========================================>           (96 + 26) / 122][Stage 179:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.186507507 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351267108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (72 + 41) / 113][Stage 180:========================================>            (87 + 26) / 113][Stage 180:=============================================>       (97 + 16) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=====================================>               (80 + 34) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.286660052 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378359923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (74 + 39) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:============================================>        (94 + 19) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:===================================================> (110 + 3) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:=====================================>               (81 + 33) / 114][Stage 183:==========================================>          (92 + 22) / 114][Stage 183:==============================================>     (102 + 12) / 114][Stage 183:===================================================> (111 + 3) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.524613215 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378202743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=============================>                       (65 + 50) / 115][Stage 184:===================================>                 (76 + 39) / 115][Stage 184:========================================>            (88 + 27) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:====================================>                (79 + 37) / 116][Stage 185:===========================================>         (96 + 20) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.877795571 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394355376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:=============================>                       (66 + 54) / 120][Stage 186:====================================>                (83 + 37) / 120][Stage 186:===============================================>    (109 + 11) / 120][Stage 186:====================================================>(119 + 1) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:============================>                        (66 + 55) / 121][Stage 187:====================================>                (84 + 37) / 121][Stage 187:=============================================>      (106 + 15) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.387771723 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393867136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:==============================>                      (69 + 51) / 120][Stage 188:=========================================>           (94 + 26) / 120][Stage 188:===============================================>    (109 + 11) / 120]                                                                                [Stage 189:===========================>                         (62 + 59) / 121][Stage 189:===============================>                     (73 + 48) / 121][Stage 189:==========================================>         (100 + 21) / 121][Stage 189:====================================================>(119 + 2) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.178243102 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369577447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===============================>                     (68 + 47) / 115][Stage 190:=====================================>               (81 + 34) / 115][Stage 190:========================================>            (88 + 27) / 115][Stage 190:================================================>    (106 + 9) / 115][Stage 190:====================================================>(114 + 1) / 115]                                                                                [Stage 191:================================>                    (71 + 45) / 116][Stage 191:=======================================>             (87 + 29) / 116][Stage 191:==============================================>     (104 + 12) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.138222262 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380273868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:==============================>                      (65 + 48) / 113][Stage 192:==================================>                  (74 + 39) / 113][Stage 192:===========================================>         (92 + 21) / 113][Stage 192:==================================================>  (107 + 6) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=================================>                   (72 + 42) / 114][Stage 193:===========================================>         (94 + 20) / 114][Stage 193:================================================>    (105 + 9) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.454273244 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389418187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:===================================>                 (75 + 38) / 113][Stage 194:=========================================>           (89 + 24) / 113][Stage 194:=================================================>   (106 + 7) / 113]                                                                                [Stage 195:============================>                        (62 + 52) / 114][Stage 195:==================================>                  (74 + 40) / 114][Stage 195:==========================================>          (91 + 23) / 114][Stage 195:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.981917191 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35550954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=================================>                   (75 + 43) / 118][Stage 196:===================================>                 (80 + 38) / 118][Stage 196:==========================================>          (95 + 23) / 118][Stage 196:================================================>    (109 + 9) / 118]                                                                                [Stage 197:================================>                    (73 + 46) / 119][Stage 197:===================================>                 (80 + 39) / 119][Stage 197:=========================================>           (94 + 25) / 119][Stage 197:==============================================>     (106 + 13) / 119][Stage 197:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.22816427 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381218192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:==================================>                  (77 + 41) / 118][Stage 198:======================================>              (86 + 32) / 118][Stage 198:=============================================>      (104 + 14) / 118][Stage 198:====================================================>(116 + 2) / 118]                                                                                [Stage 199:=================================>                   (75 + 44) / 119][Stage 199:=====================================>               (85 + 34) / 119][Stage 199:===========================================>        (100 + 19) / 119][Stage 199:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 2.981318554 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422105654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (62 + 59) / 121][Stage 200:===============================>                     (73 + 48) / 121][Stage 200:=========================================>           (94 + 27) / 121][Stage 200:===============================================>    (111 + 10) / 121]                                                                                [Stage 201:==========================>                          (62 + 60) / 122][Stage 201:==============================>                      (71 + 51) / 122][Stage 201:=======================================>             (92 + 30) / 122][Stage 201:=================================================>   (113 + 9) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.232626385 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m0.128s
user	11m34.664s
sys	0m36.380s
