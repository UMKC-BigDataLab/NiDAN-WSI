Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/22 03:55:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:55:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:55:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:55:48 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/22 03:55:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/22 03:56:01 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170522035550-0410).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.369765445 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===============>                                       (33 + 82) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.638836946 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.794550059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================>                                      (35 + 83) / 118][Stage 2:=========================>                             (55 + 63) / 118][Stage 2:=============================>                         (64 + 54) / 118][Stage 2:====================================>                  (78 + 40) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:=========================================>             (88 + 30) / 118][Stage 2:===========================================>           (94 + 24) / 118][Stage 2:===============================================>      (103 + 15) / 118][Stage 2:====================================================>  (112 + 6) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:======================================>                (84 + 35) / 119][Stage 3:===========================================>           (95 + 24) / 119][Stage 3:=============================================>        (101 + 18) / 119][Stage 3:=====================================================> (116 + 3) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.079126005 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.743753716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (56 + 57) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:===============================>                       (65 + 48) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:===========================================>           (90 + 23) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:===============================>                       (66 + 48) / 114][Stage 5:===================================>                   (73 + 41) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.864752822 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637895554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (61 + 54) / 115][Stage 6:=================================>                     (69 + 46) / 115][Stage 6:======================================>                (81 + 34) / 115][Stage 6:==========================================>            (88 + 27) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:====================================================>  (110 + 5) / 115][Stage 6:======================================================>(113 + 2) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:====================================>                  (76 + 40) / 116][Stage 7:======================================>                (82 + 34) / 116][Stage 7:=========================================>             (88 + 28) / 116][Stage 7:===============================================>      (103 + 13) / 116][Stage 7:====================================================>  (110 + 6) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.017922833 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547113898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:================================>                      (67 + 46) / 113][Stage 8:=====================================>                 (77 + 36) / 113][Stage 8:========================================>              (83 + 30) / 113][Stage 8:===========================================>           (89 + 24) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:====================================================>  (107 + 6) / 113]                                                                                [Stage 9:===================================>                   (73 + 41) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:======================================================>(112 + 2) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.223379194 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611043675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (59 + 61) / 120][Stage 10:===============================>                      (71 + 49) / 120][Stage 10:====================================>                 (82 + 38) / 120][Stage 10:=======================================>              (87 + 33) / 120][Stage 10:============================================>         (99 + 21) / 120][Stage 10:==================================================>   (113 + 7) / 120][Stage 10:====================================================> (116 + 4) / 120]                                                                                [Stage 11:=========================>                            (57 + 64) / 121][Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=================================>                    (76 + 45) / 121][Stage 11:============================================>         (99 + 22) / 121][Stage 11:================================================>    (111 + 10) / 121][Stage 11:====================================================> (117 + 4) / 121][Stage 11:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.527795929 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=84,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.620697656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===============================>                      (70 + 50) / 120][Stage 12:========================================>             (89 + 31) / 120][Stage 12:============================================>        (101 + 19) / 120][Stage 12:=================================================>    (111 + 9) / 120][Stage 12:=====================================================>(119 + 1) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (65 + 56) / 121][Stage 13:==================================>                   (78 + 43) / 121][Stage 13:==============================================>      (106 + 15) / 121][Stage 13:====================================================> (117 + 4) / 121][Stage 13:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.945198291 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493636323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:==================================>                   (76 + 42) / 118][Stage 14:========================================>             (89 + 29) / 118][Stage 14:===============================================>     (106 + 12) / 118][Stage 14:====================================================> (115 + 3) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:====================================>                 (81 + 38) / 119][Stage 15:===========================================>          (95 + 24) / 119][Stage 15:===============================================>     (106 + 13) / 119][Stage 15:====================================================> (115 + 4) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.701432787 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534290899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (69 + 46) / 115][Stage 16:=====================================>                (80 + 35) / 115][Stage 16:===========================================>          (92 + 23) / 115][Stage 16:===============================================>     (103 + 12) / 115][Stage 16:==================================================>   (107 + 8) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:==============================>                       (66 + 50) / 116][Stage 17:=====================================>                (80 + 36) / 116][Stage 17:===========================================>          (93 + 23) / 116][Stage 17:===============================================>     (105 + 11) / 116][Stage 17:==================================================>   (109 + 7) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:====================================================> (113 + 3) / 116][Stage 17:=====================================================>(114 + 2) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.349424471 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5255947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:==========================================>           (89 + 24) / 113][Stage 18:==================================================>   (106 + 7) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:================================>                     (68 + 46) / 114][Stage 19:========================================>             (85 + 29) / 114][Stage 19:==============================================>      (100 + 14) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.422014122 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.535648983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:=========================================>            (86 + 27) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:======================================>               (81 + 33) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.693414354 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478744676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:======================================>               (80 + 33) / 113][Stage 22:===========================================>          (91 + 22) / 113][Stage 22:===============================================>      (99 + 14) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:====================================>                 (77 + 37) / 114][Stage 23:======================================>               (82 + 32) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:===============================================>     (102 + 12) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.688584369 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525445318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (61 + 60) / 121][Stage 24:===============================>                      (71 + 50) / 121][Stage 24:=======================================>              (89 + 32) / 121][Stage 24:==================================================>   (113 + 8) / 121]                                                                                [Stage 25:===========================>                          (62 + 60) / 122][Stage 25:==============================>                       (69 + 53) / 122][Stage 25:===================================>                  (80 + 42) / 122][Stage 25:============================================>        (103 + 19) / 122][Stage 25:===============================================>     (109 + 13) / 122][Stage 25:====================================================> (119 + 3) / 122][Stage 25:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.700672535 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457600343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=================================>                    (73 + 45) / 118][Stage 26:=====================================>                (83 + 35) / 118][Stage 26:===========================================>          (95 + 23) / 118][Stage 26:===============================================>     (106 + 12) / 118][Stage 26:==================================================>   (111 + 7) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (77 + 42) / 119][Stage 27:=======================================>              (87 + 32) / 119][Stage 27:============================================>        (101 + 18) / 119][Stage 27:=================================================>    (110 + 9) / 119][Stage 27:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.214442056 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500032566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (61 + 59) / 120][Stage 28:===============================>                      (70 + 50) / 120][Stage 28:=========================================>            (93 + 27) / 120][Stage 28:==============================================>      (106 + 14) / 120][Stage 28:===================================================>  (114 + 6) / 120][Stage 28:=====================================================>(118 + 2) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:===============================>                      (70 + 51) / 121][Stage 29:========================================>             (90 + 31) / 121][Stage 29:===============================================>     (108 + 13) / 121][Stage 29:==================================================>   (114 + 7) / 121][Stage 29:=====================================================>(119 + 2) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.927489367 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417062325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=======================================>              (85 + 30) / 115][Stage 30:============================================>         (95 + 20) / 115][Stage 30:===============================================>     (103 + 12) / 115][Stage 30:===================================================>  (110 + 5) / 115]                                                                                [Stage 31:======================================>               (83 + 33) / 116][Stage 31:=======================================>              (84 + 32) / 116][Stage 31:============================================>         (96 + 20) / 116][Stage 31:==============================================>      (101 + 15) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(114 + 2) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.258994836 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503083037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:==============================>                       (68 + 52) / 120][Stage 32:====================================>                 (80 + 40) / 120][Stage 32:==========================================>           (94 + 26) / 120][Stage 32:==================================================>   (112 + 8) / 120][Stage 32:=====================================================>(119 + 1) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:===============================>                      (71 + 50) / 121][Stage 33:=====================================>                (84 + 37) / 121][Stage 33:===========================================>          (97 + 24) / 121][Stage 33:===================================================>  (116 + 5) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.893149006 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503104677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==============================>                       (65 + 50) / 115][Stage 34:===================================>                  (76 + 39) / 115][Stage 34:============================================>         (95 + 20) / 115][Stage 34:==================================================>   (108 + 7) / 115][Stage 34:=====================================================>(114 + 1) / 115]                                                                                [Stage 35:================================>                     (70 + 46) / 116][Stage 35:=====================================>                (80 + 36) / 116][Stage 35:============================================>         (96 + 20) / 116][Stage 35:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.885551283 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511790674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:================================>                     (67 + 46) / 113][Stage 36:==========================================>           (89 + 24) / 113][Stage 36:================================================>    (103 + 10) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:================================>                     (68 + 46) / 114][Stage 37:==========================================>           (89 + 25) / 114][Stage 37:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.232869301 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437583072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==================================>                   (73 + 40) / 113][Stage 38:=========================================>            (86 + 27) / 113][Stage 38:=============================================>        (95 + 18) / 113][Stage 38:================================================>    (103 + 10) / 113][Stage 38:===================================================>  (108 + 5) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=================================>                    (71 + 43) / 114][Stage 39:========================================>             (85 + 29) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.533072474 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497763571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (62 + 58) / 120][Stage 40:================================>                     (73 + 47) / 120][Stage 40:=============================================>       (102 + 18) / 120][Stage 40:===================================================>  (114 + 6) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:=============================>                        (65 + 56) / 121][Stage 41:===================================>                  (80 + 41) / 121][Stage 41:===========================================>          (98 + 23) / 121][Stage 41:================================================>    (111 + 10) / 121][Stage 41:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.43834358 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49526158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:============================>                         (64 + 56) / 120][Stage 42:=====================================>                (83 + 37) / 120][Stage 42:===============================================>     (108 + 12) / 120][Stage 42:====================================================> (116 + 4) / 120][Stage 42:=====================================================>(119 + 1) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:===========================>                          (62 + 59) / 121][Stage 43:=================================>                    (75 + 46) / 121][Stage 43:============================================>        (101 + 20) / 121][Stage 43:=================================================>    (112 + 9) / 121][Stage 43:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.763936423 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400110389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===================================>                  (75 + 38) / 113][Stage 44:==========================================>           (88 + 25) / 113][Stage 44:===============================================>      (99 + 14) / 113][Stage 44:===================================================>  (108 + 5) / 113][Stage 44:=====================================================>(111 + 2) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:======================================>               (82 + 32) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:==============================================>       (99 + 15) / 114][Stage 45:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.311114662 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.570017442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:===============================>                      (71 + 50) / 121][Stage 46:======================================>               (87 + 34) / 121][Stage 46:================================================>    (110 + 11) / 121][Stage 46:=====================================================>(119 + 2) / 121]                                                                                [Stage 47:===========================>                          (63 + 59) / 122][Stage 47:==============================>                       (69 + 53) / 122][Stage 47:=======================================>              (89 + 33) / 122][Stage 47:============================================>        (103 + 19) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.589173999 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477352841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:==============================>                       (68 + 53) / 121][Stage 48:==========================================>           (95 + 26) / 121][Stage 48:==================================================>   (113 + 8) / 121]                                                                                [Stage 49:============================>                         (64 + 58) / 122][Stage 49:================================>                     (74 + 48) / 122][Stage 49:========================================>             (92 + 30) / 122][Stage 49:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.226241527 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429409874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (65 + 50) / 115][Stage 50:====================================>                 (78 + 37) / 115][Stage 50:==============================================>       (98 + 17) / 115][Stage 50:==================================================>   (108 + 7) / 115][Stage 50:===================================================>  (110 + 5) / 115]                                                                                [Stage 51:==================================>                   (75 + 41) / 116][Stage 51:========================================>             (87 + 29) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.968487551 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446304146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (69 + 52) / 121][Stage 52:======================================>               (87 + 34) / 121][Stage 52:================================================>    (110 + 11) / 121][Stage 52:=====================================================>(120 + 1) / 121]                                                                                [Stage 53:==========================>                           (60 + 62) / 122][Stage 53:=============================>                        (67 + 55) / 122][Stage 53:===================================>                  (81 + 41) / 122][Stage 53:==========================================>           (95 + 27) / 122][Stage 53:===================================================>  (117 + 5) / 122][Stage 53:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.813479653 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448304934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:=============================>                        (65 + 55) / 120][Stage 54:======================================>               (86 + 34) / 120][Stage 54:==================================================>   (112 + 8) / 120][Stage 54:=====================================================>(118 + 2) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:=============================>                        (66 + 55) / 121][Stage 55:=====================================>                (85 + 36) / 121][Stage 55:=============================================>       (105 + 16) / 121][Stage 55:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.465697367 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458541417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:===============================>                      (71 + 49) / 120][Stage 56:========================================>             (91 + 29) / 120][Stage 56:================================================>    (109 + 11) / 120][Stage 56:=====================================================>(118 + 2) / 120]                                                                                [Stage 57:============================>                         (63 + 58) / 121][Stage 57:===============================>                      (71 + 50) / 121][Stage 57:=====================================>                (85 + 36) / 121][Stage 57:=================================================>    (112 + 9) / 121][Stage 57:=====================================================>(119 + 2) / 121][Stage 57:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.959339971 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430111974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (57 + 56) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:=====================================>                (79 + 34) / 113][Stage 58:==============================================>       (98 + 15) / 113][Stage 58:===================================================>  (108 + 5) / 113][Stage 58:====================================================> (110 + 3) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:================================>                     (69 + 45) / 114][Stage 59:===========================================>          (91 + 23) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.568985103 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50116208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:================================>                     (73 + 48) / 121][Stage 60:==========================================>           (95 + 26) / 121][Stage 60:====================================================> (117 + 4) / 121][Stage 60:=====================================================>(120 + 1) / 121]                                                                                [Stage 61:============================>                         (64 + 58) / 122][Stage 61:===================================>                  (80 + 42) / 122][Stage 61:===========================================>          (98 + 24) / 122][Stage 61:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.420043337 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.558570506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (61 + 59) / 120][Stage 62:==============================>                       (68 + 52) / 120][Stage 62:====================================>                 (81 + 39) / 120][Stage 62:===============================================>     (107 + 13) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:==============================>                       (68 + 53) / 121][Stage 63:======================================>               (87 + 34) / 121][Stage 63:=============================================>       (105 + 16) / 121][Stage 63:===================================================>  (116 + 5) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.471792995 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433063205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:=============================>                        (65 + 56) / 121][Stage 64:=================================>                    (76 + 45) / 121][Stage 64:===========================================>          (98 + 23) / 121][Stage 64:===================================================>  (116 + 5) / 121]                                                                                [Stage 65:===========================>                          (62 + 60) / 122][Stage 65:==============================>                       (68 + 54) / 122][Stage 65:===================================>                  (81 + 41) / 122][Stage 65:=============================================>       (104 + 18) / 122][Stage 65:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.619876089 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414252424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (73 + 45) / 118][Stage 66:=====================================>                (82 + 36) / 118][Stage 66:=========================================>            (91 + 27) / 118][Stage 66:=============================================>       (101 + 17) / 118][Stage 66:===================================================>  (113 + 5) / 118]                                                                                [Stage 67:==================================>                   (75 + 44) / 119][Stage 67:=====================================>                (83 + 36) / 119][Stage 67:============================================>         (97 + 22) / 119][Stage 67:================================================>    (108 + 11) / 119][Stage 67:====================================================> (115 + 4) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.617385373 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469959303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:=================================>                    (71 + 42) / 113][Stage 68:==========================================>           (88 + 25) / 113][Stage 68:=================================================>    (104 + 9) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:==============================>                       (64 + 50) / 114][Stage 69:=====================================>                (79 + 35) / 114][Stage 69:==============================================>      (100 + 14) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.468041946 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382741487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:====================================>                 (77 + 36) / 113][Stage 70:===========================================>          (90 + 23) / 113][Stage 70:===============================================>      (99 + 14) / 113][Stage 70:===================================================>  (108 + 5) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:==================================>                   (73 + 41) / 114][Stage 71:========================================>             (86 + 28) / 114][Stage 71:==============================================>       (98 + 16) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:====================================================> (111 + 3) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.011412299 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414476623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (71 + 44) / 115][Stage 72:======================================>               (82 + 33) / 115][Stage 72:=============================================>        (96 + 19) / 115][Stage 72:================================================>    (105 + 10) / 115][Stage 72:====================================================> (112 + 3) / 115]                                                                                [Stage 73:==================================>                   (74 + 42) / 116][Stage 73:=======================================>              (84 + 32) / 116][Stage 73:=============================================>       (100 + 16) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.410856171 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414677403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===============================>                      (67 + 48) / 115][Stage 74:===================================>                  (76 + 39) / 115][Stage 74:============================================>         (95 + 20) / 115][Stage 74:===================================================>  (110 + 5) / 115]                                                                                [Stage 75:=================================>                    (72 + 44) / 116][Stage 75:========================================>             (86 + 30) / 116][Stage 75:==============================================>       (99 + 17) / 116][Stage 75:==================================================>   (109 + 7) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.953879619 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366015874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=====================================>                (79 + 36) / 115][Stage 76:=======================================>              (84 + 31) / 115][Stage 76:==============================================>       (98 + 17) / 115][Stage 76:==================================================>   (108 + 7) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:======================================>               (82 + 34) / 116][Stage 77:========================================>             (88 + 28) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (113 + 3) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.915885253 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374187568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=====================================>                (80 + 35) / 115][Stage 78:========================================>             (87 + 28) / 115][Stage 78:=============================================>        (97 + 18) / 115][Stage 78:===================================================>  (110 + 5) / 115][Stage 78:=====================================================>(113 + 2) / 115]                                                                                [Stage 79:======================================>               (82 + 34) / 116][Stage 79:==========================================>           (91 + 25) / 116][Stage 79:==============================================>      (101 + 15) / 116][Stage 79:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.338464885 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390681739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (69 + 46) / 115][Stage 80:=====================================>                (79 + 36) / 115][Stage 80:=============================================>        (97 + 18) / 115][Stage 80:=================================================>    (106 + 9) / 115][Stage 80:====================================================> (111 + 4) / 115]                                                                                [Stage 81:==================================>                   (74 + 42) / 116][Stage 81:======================================>               (83 + 33) / 116][Stage 81:=============================================>        (97 + 19) / 116][Stage 81:===================================================>  (110 + 6) / 116][Stage 81:===================================================>  (111 + 5) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.918364512 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397669848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:=================================>                    (74 + 44) / 118][Stage 82:======================================>               (84 + 34) / 118][Stage 82:============================================>        (100 + 18) / 118][Stage 82:===================================================>  (113 + 5) / 118]                                                                                [Stage 83:==================================>                   (75 + 44) / 119][Stage 83:====================================>                 (80 + 39) / 119][Stage 83:============================================>         (98 + 21) / 119][Stage 83:===============================================>     (107 + 12) / 119][Stage 83:====================================================> (115 + 4) / 119][Stage 83:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.533517374 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383980029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:====================================>                 (76 + 37) / 113][Stage 84:==========================================>           (89 + 24) / 113][Stage 84:===============================================>      (99 + 14) / 113][Stage 84:===================================================>  (107 + 6) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:===================================>                  (74 + 40) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:==============================================>      (100 + 14) / 114][Stage 85:===============================================>     (103 + 11) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.058504791 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375574852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (79 + 39) / 118][Stage 86:=========================================>            (90 + 28) / 118][Stage 86:===============================================>     (105 + 13) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:=====================================>                (83 + 36) / 119][Stage 87:============================================>        (101 + 18) / 119][Stage 87:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.169727385 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401033301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:==============================>                       (64 + 49) / 113][Stage 88:======================================>               (81 + 32) / 113][Stage 88:==============================================>      (100 + 13) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:====================================>                 (77 + 37) / 114][Stage 89:===========================================>          (91 + 23) / 114][Stage 89:==================================================>   (107 + 7) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.438921856 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393347428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:==================================>                   (75 + 43) / 118][Stage 90:==========================================>           (92 + 26) / 118][Stage 90:================================================>    (108 + 10) / 118][Stage 90:=====================================================>(117 + 1) / 118]                                                                                [Stage 91:==================================>                   (75 + 44) / 119][Stage 91:=======================================>              (86 + 33) / 119][Stage 91:============================================>         (99 + 20) / 119][Stage 91:==================================================>   (111 + 8) / 119][Stage 91:=====================================================>(117 + 2) / 119][Stage 91:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.61337558 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420206082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:===============================>                      (66 + 47) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:=================================================>    (104 + 9) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:===========================>                          (59 + 55) / 114][Stage 93:===================================>                  (74 + 40) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.275316566 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425216003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:=============================>                        (66 + 55) / 121][Stage 94:====================================>                 (81 + 40) / 121][Stage 94:=============================================>       (103 + 18) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (63 + 59) / 122][Stage 95:==================================>                   (77 + 45) / 122][Stage 95:==========================================>           (96 + 26) / 122][Stage 95:===================================================>  (116 + 6) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.594201329 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415351341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:==============================>                       (68 + 52) / 120][Stage 96:=======================================>              (87 + 33) / 120][Stage 96:================================================>    (110 + 10) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:===============================>                      (70 + 51) / 121][Stage 97:=====================================>                (84 + 37) / 121][Stage 97:=============================================>       (105 + 16) / 121][Stage 97:=====================================================>(119 + 2) / 121][Stage 97:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.701271024 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379345726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:==================================>                   (76 + 42) / 118][Stage 98:==========================================>           (92 + 26) / 118][Stage 98:===============================================>     (105 + 13) / 118][Stage 98:====================================================> (115 + 3) / 118]                                                                                [Stage 99:==================================>                   (75 + 44) / 119][Stage 99:=======================================>              (87 + 32) / 119][Stage 99:============================================>        (100 + 19) / 119][Stage 99:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.365761322 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360236263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (72 + 41) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:=============================================>       (98 + 15) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:==================================>                  (75 + 39) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:================================================>    (105 + 9) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.128510022 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383309862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (73 + 45) / 118][Stage 102:===================================>                 (80 + 38) / 118][Stage 102:=========================================>           (92 + 26) / 118][Stage 102:=================================================>   (110 + 8) / 118][Stage 102:====================================================>(116 + 2) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:=================================>                   (75 + 44) / 119][Stage 103:=======================================>             (88 + 31) / 119][Stage 103:=============================================>      (104 + 15) / 119][Stage 103:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.256775607 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426127604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (61 + 59) / 120][Stage 104:==============================>                      (70 + 50) / 120][Stage 104:==========================================>          (97 + 23) / 120][Stage 104:===============================================>    (110 + 10) / 120][Stage 104:====================================================>(118 + 2) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:==============================>                      (69 + 52) / 121][Stage 105:=====================================>               (85 + 36) / 121][Stage 105:===============================================>    (111 + 10) / 121][Stage 105:===================================================> (118 + 3) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.434522225 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363781177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (80 + 33) / 113][Stage 106:==========================================>          (90 + 23) / 113][Stage 106:=============================================>       (97 + 16) / 113][Stage 106:===================================================> (109 + 4) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:===================================>                 (77 + 37) / 114][Stage 107:=======================================>             (86 + 28) / 114][Stage 107:==============================================>      (99 + 15) / 114][Stage 107:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.919709397 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39502561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:===============================>                     (67 + 46) / 113][Stage 108:======================================>              (83 + 30) / 113][Stage 108:=================================================>   (105 + 8) / 113]                                                                                [Stage 109:============================>                        (61 + 53) / 114][Stage 109:=================================>                   (73 + 41) / 114][Stage 109:===========================================>         (93 + 21) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.002663789 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36691253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:================================>                    (73 + 45) / 118][Stage 110:======================================>              (85 + 33) / 118][Stage 110:============================================>       (102 + 16) / 118][Stage 110:==================================================>  (113 + 5) / 118]                                                                                [Stage 111:=================================>                   (75 + 44) / 119][Stage 111:======================================>              (86 + 33) / 119][Stage 111:===========================================>         (98 + 21) / 119][Stage 111:=================================================>   (112 + 7) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.312618911 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462159277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===================================>                 (76 + 39) / 115][Stage 112:=======================================>             (86 + 29) / 115][Stage 112:===============================================>    (104 + 11) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:===============================>                     (69 + 47) / 116][Stage 113:======================================>              (85 + 31) / 116][Stage 113:============================================>        (97 + 19) / 116][Stage 113:==============================================>     (103 + 13) / 116][Stage 113:==================================================>  (111 + 5) / 116][Stage 113:====================================================>(114 + 2) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.700744328 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385949351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (72 + 43) / 115][Stage 114:=======================================>             (85 + 30) / 115][Stage 114:=============================================>      (100 + 15) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=================================>                   (73 + 43) / 116][Stage 115:======================================>              (84 + 32) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.654649651 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377444593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (73 + 42) / 115][Stage 116:=========================================>           (90 + 25) / 115][Stage 116:==============================================>     (102 + 13) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:================================>                    (72 + 44) / 116][Stage 117:======================================>              (84 + 32) / 116][Stage 117:==============================================>     (104 + 12) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.794111623 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341791952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (81 + 34) / 115][Stage 118:========================================>            (88 + 27) / 115][Stage 118:=============================================>      (101 + 14) / 115][Stage 118:===================================================> (112 + 3) / 115]                                                                                [Stage 119:=======================================>             (86 + 30) / 116][Stage 119:============================================>        (97 + 19) / 116][Stage 119:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.644512248 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408036996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (61 + 59) / 120][Stage 120:=============================>                       (67 + 53) / 120][Stage 120:====================================>                (83 + 37) / 120][Stage 120:=============================================>      (106 + 14) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:=================================>                   (77 + 44) / 121][Stage 121:======================================>              (89 + 32) / 121][Stage 121:============================================>       (103 + 18) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.179890129 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389206856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (62 + 51) / 113][Stage 122:=================================>                   (72 + 41) / 113][Stage 122:=========================================>           (89 + 24) / 113][Stage 122:=================================================>   (106 + 7) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:==============================>                      (66 + 48) / 114][Stage 123:=====================================>               (80 + 34) / 114][Stage 123:=============================================>       (98 + 16) / 114][Stage 123:==================================================>  (109 + 5) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.514051844 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416967514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:==============================>                      (70 + 51) / 121][Stage 124:==========================================>          (98 + 23) / 121][Stage 124:==================================================>  (116 + 5) / 121]                                                                                [Stage 125:==========================>                          (62 + 60) / 122][Stage 125:==============================>                      (71 + 51) / 122][Stage 125:====================================>                (84 + 38) / 122][Stage 125:=============================================>      (107 + 15) / 122][Stage 125:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.386741072 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378838109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (73 + 40) / 113][Stage 126:=======================================>             (85 + 28) / 113][Stage 126:============================================>        (94 + 19) / 113][Stage 126:================================================>    (104 + 9) / 113][Stage 126:===================================================> (109 + 4) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:======================================>              (83 + 31) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.234388572 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484541824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:============================>                        (61 + 52) / 113][Stage 128:====================================>                (78 + 35) / 113][Stage 128:=============================================>       (96 + 17) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:===============================>                     (67 + 47) / 114][Stage 129:=========================================>           (89 + 25) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.480422887 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339781241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (82 + 33) / 115][Stage 130:============================================>        (96 + 19) / 115][Stage 130:===============================================>    (105 + 10) / 115][Stage 130:===================================================> (112 + 3) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:======================================>              (84 + 32) / 116][Stage 131:=========================================>           (91 + 25) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.785180473 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389304854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:============================>                        (61 + 52) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:============================================>        (95 + 18) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:=================================>                   (72 + 42) / 114][Stage 133:=========================================>           (89 + 25) / 114][Stage 133:===============================================>    (104 + 10) / 114][Stage 133:===================================================> (111 + 3) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.554128356 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351151849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 32) / 113][Stage 134:===========================================>         (93 + 20) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:===================================================> (110 + 3) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:=====================================>               (80 + 34) / 114][Stage 135:=========================================>           (89 + 25) / 114][Stage 135:==============================================>      (99 + 15) / 114][Stage 135:=================================================>   (107 + 7) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.413251886 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371586897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:>                                                      (0 + 0) / 115][Stage 136:===============================>                     (69 + 46) / 115][Stage 136:=====================================>               (82 + 33) / 115][Stage 136:==============================================>     (103 + 12) / 115][Stage 136:====================================================>(113 + 2) / 115]                                                                                [Stage 137:===============================>                     (68 + 48) / 116][Stage 137:=================================>                   (74 + 42) / 116][Stage 137:=======================================>             (87 + 29) / 116][Stage 137:==============================================>     (104 + 12) / 116][Stage 137:===================================================> (113 + 3) / 116][Stage 137:====================================================>(114 + 2) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.640429772 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379844611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==================================>                  (74 + 41) / 115][Stage 138:==========================================>          (92 + 23) / 115][Stage 138:===============================================>    (105 + 10) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:====================================>                (79 + 37) / 116][Stage 139:========================================>            (88 + 28) / 116][Stage 139:=============================================>      (101 + 15) / 116][Stage 139:===================================================> (113 + 3) / 116][Stage 139:====================================================>(114 + 2) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.757703615 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404155455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:==============================>                      (69 + 52) / 121][Stage 140:====================================>                (83 + 38) / 121][Stage 140:=============================================>      (107 + 14) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:==============================>                      (70 + 52) / 122][Stage 141:====================================>                (84 + 38) / 122][Stage 141:==============================================>     (109 + 13) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.46635456 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379421588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=================================>                   (72 + 43) / 115][Stage 142:=======================================>             (85 + 30) / 115][Stage 142:===============================================>    (104 + 11) / 115][Stage 142:===================================================> (112 + 3) / 115]                                                                                [Stage 143:==================================>                  (76 + 40) / 116][Stage 143:=========================================>           (90 + 26) / 116][Stage 143:==================================================>  (110 + 6) / 116][Stage 143:====================================================>(114 + 2) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.548872181 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353680817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (81 + 32) / 113][Stage 144:==========================================>          (90 + 23) / 113][Stage 144:==============================================>     (100 + 13) / 113][Stage 144:==================================================>  (107 + 6) / 113]                                                                                [Stage 145:======================================>              (83 + 31) / 114][Stage 145:===========================================>         (93 + 21) / 114][Stage 145:=============================================>      (100 + 14) / 114][Stage 145:=================================================>   (107 + 7) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.416378265 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340767101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:======================================>              (83 + 32) / 115][Stage 146:============================================>        (96 + 19) / 115][Stage 146:================================================>    (106 + 9) / 115][Stage 146:====================================================>(113 + 2) / 115]                                                                                [Stage 147:=====================================>               (82 + 34) / 116][Stage 147:=========================================>           (90 + 26) / 116][Stage 147:=============================================>      (101 + 15) / 116][Stage 147:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.643273796 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367376295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:================================>                    (73 + 45) / 118][Stage 148:=======================================>             (87 + 31) / 118][Stage 148:============================================>       (102 + 16) / 118][Stage 148:=================================================>   (110 + 8) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:====================================>                (83 + 36) / 119][Stage 149:=========================================>           (94 + 25) / 119][Stage 149:=============================================>      (105 + 14) / 119][Stage 149:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.328054469 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361889831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:===================================>                 (79 + 39) / 118][Stage 150:========================================>            (90 + 28) / 118][Stage 150:============================================>        (99 + 19) / 118][Stage 150:================================================>    (109 + 9) / 118][Stage 150:====================================================>(116 + 2) / 118]                                                                                [Stage 151:================================>                    (74 + 45) / 119][Stage 151:===================================>                 (80 + 39) / 119][Stage 151:=======================================>             (89 + 30) / 119][Stage 151:=============================================>      (105 + 14) / 119][Stage 151:====================================================>(117 + 2) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.944530288 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382229898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:================================>                    (70 + 43) / 113][Stage 152:========================================>            (86 + 27) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:==============================>                      (65 + 49) / 114][Stage 153:=====================================>               (81 + 33) / 114][Stage 153:=============================================>      (100 + 14) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.149857898 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381408334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (67 + 48) / 115][Stage 154:=====================================>               (81 + 34) / 115][Stage 154:=============================================>      (100 + 15) / 115][Stage 154:===================================================> (111 + 4) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:===============================>                     (69 + 47) / 116][Stage 155:=======================================>             (87 + 29) / 116][Stage 155:============================================>        (98 + 18) / 116][Stage 155:==================================================>  (110 + 6) / 116][Stage 155:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.044709304 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378443441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:=================================>                   (72 + 41) / 113][Stage 156:=========================================>           (88 + 25) / 113][Stage 156:===================================================> (109 + 4) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:==============================>                      (66 + 48) / 114][Stage 157:====================================>                (78 + 36) / 114][Stage 157:==============================================>     (102 + 12) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.571837198 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37109095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (71 + 44) / 115][Stage 158:=======================================>             (85 + 30) / 115][Stage 158:=============================================>       (98 + 17) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:=================================>                   (74 + 42) / 116][Stage 159:=========================================>           (90 + 26) / 116][Stage 159:==============================================>     (104 + 12) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:===================================================> (112 + 4) / 116][Stage 159:====================================================>(114 + 2) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.155210313 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397472422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:============================>                        (65 + 55) / 120][Stage 160:==================================>                  (79 + 41) / 120][Stage 160:=========================================>           (94 + 26) / 120][Stage 160:==================================================>  (114 + 6) / 120]                                                                                [Stage 161:===========================>                         (63 + 58) / 121][Stage 161:=================================>                   (76 + 45) / 121][Stage 161:==========================================>         (100 + 21) / 121][Stage 161:====================================================>(119 + 2) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.50918256 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401560778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:===========================>                         (63 + 58) / 121][Stage 162:===================================>                 (81 + 40) / 121][Stage 162:==============================================>     (108 + 13) / 121]                                                                                [Stage 163:============================>                        (65 + 57) / 122][Stage 163:====================================>                (84 + 38) / 122][Stage 163:===========================================>        (103 + 19) / 122][Stage 163:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.968150861 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378488319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (61 + 52) / 113][Stage 164:=================================>                   (71 + 42) / 113][Stage 164:========================================>            (87 + 26) / 113][Stage 164:================================================>    (104 + 9) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:==============================>                      (65 + 49) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:============================================>        (95 + 19) / 114][Stage 165:=================================================>   (107 + 7) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.434904834 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398025863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===========================>                         (63 + 58) / 121][Stage 166:===================================>                 (81 + 40) / 121][Stage 166:============================================>       (104 + 17) / 121][Stage 166:===================================================> (117 + 4) / 121][Stage 166:====================================================>(120 + 1) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:=============================>                       (69 + 53) / 122][Stage 167:=================================>                   (78 + 44) / 122][Stage 167:===========================================>        (102 + 20) / 122][Stage 167:==================================================>  (117 + 5) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.830669003 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405865056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:=============================>                       (67 + 53) / 120][Stage 168:====================================>                (83 + 37) / 120][Stage 168:============================================>       (103 + 17) / 120][Stage 168:==================================================>  (114 + 6) / 120]                                                                                [Stage 169:===========================>                         (62 + 59) / 121][Stage 169:==============================>                      (69 + 52) / 121][Stage 169:===================================>                 (81 + 40) / 121][Stage 169:============================================>       (104 + 17) / 121][Stage 169:=================================================>   (113 + 8) / 121][Stage 169:====================================================>(119 + 2) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.136051083 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411787341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (66 + 55) / 121][Stage 170:=====================================>               (85 + 36) / 121][Stage 170:=============================================>      (106 + 15) / 121][Stage 170:====================================================>(119 + 2) / 121]                                                                                [Stage 171:==========================>                          (61 + 61) / 122][Stage 171:=============================>                       (68 + 54) / 122][Stage 171:====================================>                (83 + 39) / 122][Stage 171:=============================================>      (106 + 16) / 122][Stage 171:===================================================> (119 + 3) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.355217381 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33234416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (81 + 34) / 115][Stage 172:========================================>            (87 + 28) / 115][Stage 172:=============================================>       (98 + 17) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:=====================================>               (83 + 33) / 116][Stage 173:========================================>            (88 + 28) / 116][Stage 173:===============================================>    (105 + 11) / 116][Stage 173:====================================================>(114 + 2) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.736708775 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394546486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:==========================>                          (61 + 60) / 121][Stage 174:=================================>                   (77 + 44) / 121][Stage 174:===========================================>         (99 + 22) / 121][Stage 174:====================================================>(120 + 1) / 121]                                                                                [Stage 175:==========================>                          (62 + 60) / 122][Stage 175:==================================>                  (79 + 43) / 122][Stage 175:============================================>       (105 + 17) / 122][Stage 175:==================================================>  (116 + 6) / 122][Stage 175:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.745787103 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37685555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:============================>                        (61 + 52) / 113][Stage 176:=================================>                   (72 + 41) / 113][Stage 176:=============================================>       (96 + 17) / 113][Stage 176:==================================================>  (107 + 6) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:=============================>                       (63 + 51) / 114][Stage 177:=======================================>             (84 + 30) / 114][Stage 177:==============================================>     (103 + 11) / 114][Stage 177:===================================================> (111 + 3) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.386850785 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330387711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (81 + 34) / 115][Stage 178:=======================================>             (86 + 29) / 115][Stage 178:=============================================>      (101 + 14) / 115][Stage 178:==================================================>  (109 + 6) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:=====================================>               (82 + 34) / 116][Stage 179:=========================================>           (90 + 26) / 116][Stage 179:===============================================>    (105 + 11) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.717094642 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37944532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:================================>                    (70 + 43) / 113][Stage 180:==============================================>      (99 + 14) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:==================================>                  (75 + 39) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:==================================================>  (108 + 6) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.730253824 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413612346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===============================>                     (68 + 47) / 115][Stage 182:=======================================>             (85 + 30) / 115][Stage 182:=================================================>   (108 + 7) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:================================>                    (71 + 45) / 116][Stage 183:===================================>                 (77 + 39) / 116][Stage 183:===========================================>         (95 + 21) / 116][Stage 183:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.611008443 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390934528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:==================================>                  (73 + 40) / 113][Stage 184:=============================================>       (97 + 16) / 113][Stage 184:===================================================> (109 + 4) / 113]                                                                                [Stage 185:=============================>                       (64 + 50) / 114][Stage 185:====================================>                (78 + 36) / 114][Stage 185:=============================================>       (98 + 16) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.064990697 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444620676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (72 + 41) / 113][Stage 186:=====================================>               (79 + 34) / 113][Stage 186:===========================================>         (93 + 20) / 113][Stage 186:===============================================>    (103 + 10) / 113][Stage 186:====================================================>(111 + 2) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:======================================>              (82 + 32) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:==================================================>  (109 + 5) / 114][Stage 187:====================================================>(112 + 2) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.067078977 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379529839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:============================>                        (61 + 52) / 113][Stage 188:====================================>                (78 + 35) / 113][Stage 188:=============================================>       (98 + 15) / 113][Stage 188:=================================================>   (106 + 7) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:============================>                        (62 + 52) / 114][Stage 189:====================================>                (79 + 35) / 114][Stage 189:==============================================>      (99 + 15) / 114][Stage 189:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.43349566 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378400553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:================================>                    (69 + 44) / 113][Stage 190:==========================================>          (90 + 23) / 113][Stage 190:=================================================>   (106 + 7) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:=============================>                       (63 + 51) / 114][Stage 191:=================================>                   (71 + 43) / 114][Stage 191:========================================>            (88 + 26) / 114][Stage 191:==================================================>  (109 + 5) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.420062338 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331494513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (83 + 32) / 115][Stage 192:=========================================>           (91 + 24) / 115][Stage 192:===============================================>    (105 + 10) / 115][Stage 192:==================================================>  (110 + 5) / 115][Stage 192:====================================================>(113 + 2) / 115]                                                                                [Stage 193:======================================>              (85 + 31) / 116][Stage 193:============================================>        (98 + 18) / 116][Stage 193:=================================================>   (108 + 8) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.300689127 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387808673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (73 + 42) / 115][Stage 194:=========================================>           (90 + 25) / 115][Stage 194:=================================================>   (107 + 8) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:=================================>                   (73 + 43) / 116][Stage 195:======================================>              (84 + 32) / 116][Stage 195:=============================================>       (99 + 17) / 116][Stage 195:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.740369115 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394132999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=============================>                       (62 + 51) / 113][Stage 196:===================================>                 (76 + 37) / 113][Stage 196:==========================================>          (90 + 23) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:====================================>                (78 + 36) / 114][Stage 197:==============================================>     (103 + 11) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.114763807 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480080125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==================================>                  (74 + 39) / 113][Stage 198:=======================================>             (85 + 28) / 113][Stage 198:===========================================>         (93 + 20) / 113][Stage 198:==============================================>     (102 + 11) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:=====================================>               (80 + 34) / 114][Stage 199:==========================================>          (92 + 22) / 114][Stage 199:==============================================>     (101 + 13) / 114][Stage 199:===================================================> (110 + 4) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.122351796 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396244387 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, in dex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==============================>                      (69 + 52) / 121][Stage 200:======================================>              (87 + 34) / 121][Stage 200:=============================================>      (106 + 15) / 121][Stage 200:===================================================> (118 + 3) / 121]                                                                                [Stage 201:============================>                        (66 + 56) / 122][Stage 201:===================================>                 (82 + 40) / 122][Stage 201:===========================================>         (99 + 23) / 122][Stage 201:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.309537809 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m39.087s
user	11m47.320s
sys	0m57.700s
